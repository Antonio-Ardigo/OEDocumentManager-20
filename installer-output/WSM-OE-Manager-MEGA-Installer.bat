@echo off
:: WSM OE Manager - Mega Single-File Installer v2.0.0
:: Contains 97 embedded files (2556KB total)

setlocal EnableDelayedExpansion

:: ==========================================
:: INSTALLER CONFIGURATION
:: ==========================================
set "APP_NAME=WSM OE Manager"
set "APP_VERSION=2.0.0"
set "INSTALL_DIR=%ProgramFiles%\WSM OE Manager"
set "USER_DATA=%USERPROFILE%\.wsm-oe-manager"
set "TEMP_EXTRACT=%TEMP%\wsm-oe-mega-%RANDOM%"
set "TOTAL_FILES=97"

:: Skip to installer start, jumping over embedded data
goto :INSTALLER_START

:: ==========================================
:: EMBEDDED APPLICATION FILES
:: ==========================================

:FILE_0_PATH
client/index.html
:FILE_0_DATA
PCFET0NUWVBFIGh0bWw+CjxodG1sIGxhbmc9ImVuIj4KICA8aGVhZD4KICAgIDxtZXRhIGNoYXJzZXQ9IlVURi04IiAvPgogICAgPG1ldGEgbmFtZT0idmlld3BvcnQiIGNvbnRlbnQ9IndpZHRoPWRldmljZS13aWR0aCwgaW5pdGlhbC1zY2FsZT0xLjAsIG1heGltdW0tc2NhbGU9MSIgLz4KICAgIDxsaW5rIHJlbD0icHJlY29ubmVjdCIgaHJlZj0iaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbSI+CiAgICA8bGluayByZWw9InByZWNvbm5lY3QiIGhyZWY9Imh0dHBzOi8vZm9udHMuZ3N0YXRpYy5jb20iIGNyb3Nzb3JpZ2luPgogICAgPGxpbmsgaHJlZj0iaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3MyP2ZhbWlseT1BcmNoaXRlY3RzK0RhdWdodGVyJmZhbWlseT1ETStTYW5zOml0YWwsb3Bzeix3Z2h0QDAsOS4uNDAsMTAwLi4xMDAwOzEsOS4uNDAsMTAwLi4xMDAwJmZhbWlseT1GaXJhK0NvZGU6d2dodEAzMDAuLjcwMCZmYW1pbHk9R2Vpc3QrTW9ubzp3Z2h0QDEwMC4uOTAwJmZhbWlseT1HZWlzdDp3Z2h0QDEwMC4uOTAwJmZhbWlseT1JQk0rUGxleCtNb25vOml0YWwsd2dodEAwLDEwMDswLDIwMDswLDMwMDswLDQwMDswLDUwMDswLDYwMDswLDcwMDsxLDEwMDsxLDIwMDsxLDMwMDsxLDQwMDsxLDUwMDsxLDYwMDsxLDcwMCZmYW1pbHk9SUJNK1BsZXgrU2FuczppdGFsLHdnaHRAMCwxMDAuLjcwMDsxLDEwMC4uNzAwJmZhbWlseT1JbnRlcjppdGFsLG9wc3osd2dodEAwLDE0Li4zMiwxMDAuLjkwMDsxLDE0Li4zMiwxMDAuLjkwMCZmYW1pbHk9SmV0QnJhaW5zK01vbm86aXRhbCx3Z2h0QDAsMTAwLi44MDA7MSwxMDAuLjgwMCZmYW1pbHk9TGlicmUrQmFza2VydmlsbGU6aXRhbCx3Z2h0QDAsNDAwOzAsNzAwOzEsNDAwJmZhbWlseT1Mb3JhOml0YWwsd2dodEAwLDQwMC4uNzAwOzEsNDAwLi43MDAmZmFtaWx5PU1lcnJpd2VhdGhlcjppdGFsLG9wc3osd2dodEAwLDE4Li4xNDQsMzAwLi45MDA7MSwxOC4uMTQ0LDMwMC4uOTAwJmZhbWlseT1Nb250c2VycmF0Oml0YWwsd2dodEAwLDEwMC4uOTAwOzEsMTAwLi45MDAmZmFtaWx5PU9wZW4rU2FuczppdGFsLHdnaHRAMCwzMDAuLjgwMDsxLDMwMC4uODAwJmZhbWlseT1PdXRmaXQ6d2dodEAxMDAuLjkwMCZmYW1pbHk9T3hhbml1bTp3Z2h0QDIwMC4uODAwJmZhbWlseT1QbGF5ZmFpcitEaXNwbGF5Oml0YWwsd2dodEAwLDQwMC4uOTAwOzEsNDAwLi45MDAmZmFtaWx5PVBsdXMrSmFrYXJ0YStTYW5zOml0YWwsd2dodEAwLDIwMC4uODAwOzEsMjAwLi44MDAmZmFtaWx5PVBvcHBpbnM6aXRhbCx3Z2h0QDAsMTAwOzAsMjAwOzAsMzAwOzAsNDAwOzAsNTAwOzAsNjAwOzAsNzAwOzAsODAwOzAsOTAwOzEsMTAwOzEsMjAwOzEsMzAwOzEsNDAwOzEsNTAwOzEsNjAwOzEsNzAwOzEsODAwOzEsOTAwJmZhbWlseT1Sb2JvdG8rTW9ubzppdGFsLHdnaHRAMCwxMDAuLjcwMDsxLDEwMC4uNzAwJmZhbWlseT1Sb2JvdG86aXRhbCx3Z2h0QDAsMTAwLi45MDA7MSwxMDAuLjkwMCZmYW1pbHk9U291cmNlK0NvZGUrUHJvOml0YWwsd2dodEAwLDIwMC4uOTAwOzEsMjAwLi45MDAmZmFtaWx5PVNvdXJjZStTZXJpZis0Oml0YWwsb3Bzeix3Z2h0QDAsOC4uNjAsMjAwLi45MDA7MSw4Li42MCwyMDAuLjkwMCZmYW1pbHk9U3BhY2UrR3JvdGVzazp3Z2h0QDMwMC4uNzAwJmZhbWlseT1TcGFjZStNb25vOml0YWwsd2dodEAwLDQwMDswLDcwMDsxLDQwMDsxLDcwMCZkaXNwbGF5PXN3YXAiIHJlbD0ic3R5bGVzaGVldCI+CiAgPC9oZWFkPgogIDxib2R5PgogICAgPGRpdiBpZD0icm9vdCI+PC9kaXY+CiAgICA8c2NyaXB0IHR5cGU9Im1vZHVsZSIgc3JjPSIvc3JjL21haW4udHN4Ij48L3NjcmlwdD4KICAgIDwhLS0gVGhpcyBpcyBhIHJlcGxpdCBzY3JpcHQgd2hpY2ggYWRkcyBhIGJhbm5lciBvbiB0aGUgdG9wIG9mIHRoZSBwYWdlIHdoZW4gb3BlbmVkIGluIGRldmVsb3BtZW50IG1vZGUgb3V0c2lkZSB0aGUgcmVwbGl0IGVudmlyb25tZW50IC0tPgogICAgPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiIHNyYz0iaHR0cHM6Ly9yZXBsaXQuY29tL3B1YmxpYy9qcy9yZXBsaXQtZGV2LWJhbm5lci5qcyI+PC9zY3JpcHQ+CiAgPC9ib2R5Pgo8L2h0bWw+
:FILE_0_END

:FILE_1_PATH
client/src/App.tsx
:FILE_1_DATA
aW1wb3J0IHsgU3dpdGNoLCBSb3V0ZSB9IGZyb20gIndvdXRlciI7CmltcG9ydCB7IHF1ZXJ5Q2xpZW50IH0gZnJvbSAiLi9saWIvcXVlcnlDbGllbnQiOwppbXBvcnQgeyBRdWVyeUNsaWVudFByb3ZpZGVyIH0gZnJvbSAiQHRhbnN0YWNrL3JlYWN0LXF1ZXJ5IjsKaW1wb3J0IHsgVG9hc3RlciB9IGZyb20gIkAvY29tcG9uZW50cy91aS90b2FzdGVyIjsKaW1wb3J0IHsgVG9vbHRpcFByb3ZpZGVyIH0gZnJvbSAiQC9jb21wb25lbnRzL3VpL3Rvb2x0aXAiOwppbXBvcnQgeyB1c2VBdXRoIH0gZnJvbSAiQC9ob29rcy91c2VBdXRoIjsKaW1wb3J0IExhbmRpbmcgZnJvbSAiQC9wYWdlcy9sYW5kaW5nIjsKaW1wb3J0IERhc2hib2FyZCBmcm9tICJAL3BhZ2VzL2Rhc2hib2FyZCI7CmltcG9ydCBBbGxQcm9jZXNzZXMgZnJvbSAiQC9wYWdlcy9hbGwtcHJvY2Vzc2VzIjsKaW1wb3J0IE1pbmRNYXAgZnJvbSAiQC9wYWdlcy9taW5kLW1hcCI7CmltcG9ydCBCYWxhbmNlZFNjb3JlY2FyZCBmcm9tICJAL3BhZ2VzL2JhbGFuY2VkLXNjb3JlY2FyZCI7CmltcG9ydCBSaXNrTWFuYWdlbWVudCBmcm9tICJAL3BhZ2VzL3Jpc2stbWFuYWdlbWVudCI7CmltcG9ydCBFbGVtZW50RGV0YWlsIGZyb20gIkAvcGFnZXMvZWxlbWVudC1kZXRhaWwiOwppbXBvcnQgUHJvY2Vzc0RldGFpbCBmcm9tICJAL3BhZ2VzL3Byb2Nlc3MtZGV0YWlsIjsKaW1wb3J0IFByb2Nlc3NFZGl0b3IgZnJvbSAiQC9wYWdlcy9wcm9jZXNzLWVkaXRvciI7CmltcG9ydCBFbGVtZW50RWRpdG9yIGZyb20gIkAvcGFnZXMvZWxlbWVudC1lZGl0b3IiOwppbXBvcnQgTm90Rm91bmQgZnJvbSAiQC9wYWdlcy9ub3QtZm91bmQiOwoKZnVuY3Rpb24gUm91dGVyKCkgewogIGNvbnN0IHsgaXNBdXRoZW50aWNhdGVkLCBpc0xvYWRpbmcgfSA9IHVzZUF1dGgoKTsKCiAgcmV0dXJuICgKICAgIDxTd2l0Y2g+CiAgICAgIHtpc0xvYWRpbmcgfHwgIWlzQXV0aGVudGljYXRlZCA/ICgKICAgICAgICA8Um91dGUgcGF0aD0iLyIgY29tcG9uZW50PXtMYW5kaW5nfSAvPgogICAgICApIDogKAogICAgICAgIDw+CiAgICAgICAgICA8Um91dGUgcGF0aD0iLyIgY29tcG9uZW50PXtEYXNoYm9hcmR9IC8+CiAgICAgICAgICA8Um91dGUgcGF0aD0iL3Byb2Nlc3NlcyIgY29tcG9uZW50PXtBbGxQcm9jZXNzZXN9IC8+CiAgICAgICAgICA8Um91dGUgcGF0aD0iL21pbmRtYXAiIGNvbXBvbmVudD17TWluZE1hcH0gLz4KICAgICAgICAgIDxSb3V0ZSBwYXRoPSIvc2NvcmVjYXJkIiBjb21wb25lbnQ9e0JhbGFuY2VkU2NvcmVjYXJkfSAvPgogICAgICAgICAgPFJvdXRlIHBhdGg9Ii9yaXNrLW1hbmFnZW1lbnQiIGNvbXBvbmVudD17Umlza01hbmFnZW1lbnR9IC8+CiAgICAgICAgICA8Um91dGUgcGF0aD0iL2VsZW1lbnQvOmlkIiBjb21wb25lbnQ9e0VsZW1lbnREZXRhaWx9IC8+CiAgICAgICAgICA8Um91dGUgcGF0aD0iL3Byb2Nlc3MvOmlkIiBjb21wb25lbnQ9e1Byb2Nlc3NEZXRhaWx9IC8+CiAgICAgICAgICA8Um91dGUgcGF0aD0iL3Byb2Nlc3MvOmlkL2VkaXQiIGNvbXBvbmVudD17UHJvY2Vzc0VkaXRvcn0gLz4KICAgICAgICAgIDxSb3V0ZSBwYXRoPSIvY3JlYXRlLXByb2Nlc3MiIGNvbXBvbmVudD17UHJvY2Vzc0VkaXRvcn0gLz4KICAgICAgICAgIDxSb3V0ZSBwYXRoPSIvY3JlYXRlLWVsZW1lbnQiIGNvbXBvbmVudD17RWxlbWVudEVkaXRvcn0gLz4KICAgICAgICAgIDxSb3V0ZSBwYXRoPSIvZWxlbWVudC86aWQvZWRpdCIgY29tcG9uZW50PXtFbGVtZW50RWRpdG9yfSAvPgogICAgICAgIDwvPgogICAgICApfQogICAgICA8Um91dGUgY29tcG9uZW50PXtOb3RGb3VuZH0gLz4KICAgIDwvU3dpdGNoPgogICk7Cn0KCmZ1bmN0aW9uIEFwcCgpIHsKICByZXR1cm4gKAogICAgPFF1ZXJ5Q2xpZW50UHJvdmlkZXIgY2xpZW50PXtxdWVyeUNsaWVudH0+CiAgICAgIDxUb29sdGlwUHJvdmlkZXI+CiAgICAgICAgPFRvYXN0ZXIgLz4KICAgICAgICA8Um91dGVyIC8+CiAgICAgIDwvVG9vbHRpcFByb3ZpZGVyPgogICAgPC9RdWVyeUNsaWVudFByb3ZpZGVyPgogICk7Cn0KCmV4cG9ydCBkZWZhdWx0IEFwcDsK
:FILE_1_END

:FILE_2_PATH
client/src/components/goals-processes-mindmap.tsx
:FILE_2_DATA
aW1wb3J0IFJlYWN0LCB7IHVzZVN0YXRlLCBmb3J3YXJkUmVmLCB1c2VJbXBlcmF0aXZlSGFuZGxlIH0gZnJvbSAicmVhY3QiOwppbXBvcnQgeyBDYXJkLCBDYXJkQ29udGVudCB9IGZyb20gIkAvY29tcG9uZW50cy91aS9jYXJkIjsKaW1wb3J0IHsgQmFkZ2UgfSBmcm9tICJAL2NvbXBvbmVudHMvdWkvYmFkZ2UiOwppbXBvcnQgeyBCdXR0b24gfSBmcm9tICJAL2NvbXBvbmVudHMvdWkvYnV0dG9uIjsKaW1wb3J0IHsgVGFyZ2V0LCBDaGV2cm9uUmlnaHQsIENoZXZyb25Eb3duLCBBY3Rpdml0eSwgQ2lyY2xlLCBCYXJDaGFydDMgfSBmcm9tICJsdWNpZGUtcmVhY3QiOwoKaW50ZXJmYWNlIFByb2Nlc3NXaXRoTWVhc3VyZXMgewogIGlkOiBzdHJpbmc7CiAgbmFtZTogc3RyaW5nOwogIHByb2Nlc3NOdW1iZXI6IHN0cmluZzsKICBkZXNjcmlwdGlvbj86IHN0cmluZzsKICBzdGF0dXM6IHN0cmluZzsKICBtZWFzdXJlcz86IHsKICAgIGlkOiBzdHJpbmc7CiAgICBuYW1lOiBzdHJpbmc7CiAgICBmb3JtdWxhPzogc3RyaW5nOwogICAgdGFyZ2V0Pzogc3RyaW5nOwogICAgZnJlcXVlbmN5Pzogc3RyaW5nOwogICAgc291cmNlPzogc3RyaW5nOwogICAgc2NvcmVjYXJkQ2F0ZWdvcnk/OiBzdHJpbmc7CiAgfVtdOwp9CgppbnRlcmZhY2UgR29hbFdpdGhQcm9jZXNzZXMgewogIGlkOiBzdHJpbmc7CiAgdGl0bGU6IHN0cmluZzsKICBkZXNjcmlwdGlvbj86IHN0cmluZzsKICBjYXRlZ29yeTogc3RyaW5nOyAvLyBTY29yZWNhcmQgZmxhZyAoRmluYW5jaWFsLCBDdXN0b21lciwgSW50ZXJuYWwgUHJvY2VzcywgTGVhcm5pbmcgJiBHcm93dGgpCiAgcHJpb3JpdHk6IHN0cmluZzsKICB0YXJnZXRWYWx1ZTogbnVtYmVyOwogIGN1cnJlbnRWYWx1ZTogbnVtYmVyOwogIHVuaXQ/OiBzdHJpbmc7CiAgZWxlbWVudD86IHsKICAgIGlkOiBzdHJpbmc7CiAgICB0aXRsZTogc3RyaW5nOwogICAgZWxlbWVudE51bWJlcjogbnVtYmVyOwogIH07CiAgcHJvY2Vzc2VzOiBQcm9jZXNzV2l0aE1lYXN1cmVzW107Cn0KCmludGVyZmFjZSBHb2Fsc1Byb2Nlc3Nlc01pbmRNYXBQcm9wcyB7CiAgZ29hbHM6IEdvYWxXaXRoUHJvY2Vzc2VzW107Cn0KCi8vIFNjb3JlY2FyZCBjYXRlZ29yeSBjb2xvcnMgYW5kIGljb25zCmNvbnN0IGdldFNjb3JlY2FyZFN0eWxlID0gKGNhdGVnb3J5OiBzdHJpbmcpID0+IHsKICBzd2l0Y2ggKGNhdGVnb3J5Py50b0xvd2VyQ2FzZSgpKSB7CiAgICBjYXNlICdmaW5hbmNpYWwnOgogICAgICByZXR1cm4gewogICAgICAgIGJnOiAnYmctZ3JlZW4tNTAgZGFyazpiZy1ncmVlbi05NTAvMjAnLAogICAgICAgIGJvcmRlcjogJ2JvcmRlci1ncmVlbi0yMDAgZGFyazpib3JkZXItZ3JlZW4tODAwJywKICAgICAgICB0ZXh0OiAndGV4dC1ncmVlbi05MDAgZGFyazp0ZXh0LWdyZWVuLTEwMCcsCiAgICAgICAgYWNjZW50OiAnYmctZ3JlZW4tNTAwJywKICAgICAgICBmbGFnOiAn8J+SsCcKICAgICAgfTsKICAgIGNhc2UgJ2N1c3RvbWVyJzoKICAgICAgcmV0dXJuIHsKICAgICAgICBiZzogJ2JnLWJsdWUtNTAgZGFyazpiZy1ibHVlLTk1MC8yMCcsCiAgICAgICAgYm9yZGVyOiAnYm9yZGVyLWJsdWUtMjAwIGRhcms6Ym9yZGVyLWJsdWUtODAwJywKICAgICAgICB0ZXh0OiAndGV4dC1ibHVlLTkwMCBkYXJrOnRleHQtYmx1ZS0xMDAnLAogICAgICAgIGFjY2VudDogJ2JnLWJsdWUtNTAwJywKICAgICAgICBmbGFnOiAn8J+RpScKICAgICAgfTsKICAgIGNhc2UgJ2ludGVybmFsIHByb2Nlc3MnOgogICAgICByZXR1cm4gewogICAgICAgIGJnOiAnYmctcHVycGxlLTUwIGRhcms6YmctcHVycGxlLTk1MC8yMCcsCiAgICAgICAgYm9yZGVyOiAnYm9yZGVyLXB1cnBsZS0yMDAgZGFyazpib3JkZXItcHVycGxlLTgwMCcsCiAgICAgICAgdGV4dDogJ3RleHQtcHVycGxlLTkwMCBkYXJrOnRleHQtcHVycGxlLTEwMCcsCiAgICAgICAgYWNjZW50OiAnYmctcHVycGxlLTUwMCcsCiAgICAgICAgZmxhZzogJ+Kame+4jycKICAgICAgfTsKICAgIGNhc2UgJ2xlYXJuaW5nICYgZ3Jvd3RoJzoKICAgICAgcmV0dXJuIHsKICAgICAgICBiZzogJ2JnLW9yYW5nZS01MCBkYXJrOmJnLW9yYW5nZS05NTAvMjAnLAogICAgICAgIGJvcmRlcjogJ2JvcmRlci1vcmFuZ2UtMjAwIGRhcms6Ym9yZGVyLW9yYW5nZS04MDAnLAogICAgICAgIHRleHQ6ICd0ZXh0LW9yYW5nZS05MDAgZGFyazp0ZXh0LW9yYW5nZS0xMDAnLAogICAgICAgIGFjY2VudDogJ2JnLW9yYW5nZS01MDAnLAogICAgICAgIGZsYWc6ICfwn5OaJwogICAgICB9OwogICAgZGVmYXVsdDoKICAgICAgcmV0dXJuIHsKICAgICAgICBiZzogJ2JnLWdyYXktNTAgZGFyazpiZy1ncmF5LTk1MC8yMCcsCiAgICAgICAgYm9yZGVyOiAnYm9yZGVyLWdyYXktMjAwIGRhcms6Ym9yZGVyLWdyYXktODAwJywKICAgICAgICB0ZXh0OiAndGV4dC1ncmF5LTkwMCBkYXJrOnRleHQtZ3JheS0xMDAnLAogICAgICAgIGFjY2VudDogJ2JnLWdyYXktNTAwJywKICAgICAgICBmbGFnOiAn8J+TiicKICAgICAgfTsKICB9Cn07CgpleHBvcnQgY29uc3QgR29hbHNQcm9jZXNzZXNNaW5kTWFwID0gZm9yd2FyZFJlZjxhbnksIEdvYWxzUHJvY2Vzc2VzTWluZE1hcFByb3BzPigoeyBnb2FscyB9LCByZWYpID0+IHsKICAvLyBJbml0aWFsaXplIHdpdGggYWxsIGdvYWxzIGV4cGFuZGVkIGJ5IGRlZmF1bHQKICBjb25zdCBbZXhwYW5kZWRHb2Fscywgc2V0RXhwYW5kZWRHb2Fsc10gPSB1c2VTdGF0ZTxTZXQ8c3RyaW5nPj4oKCkgPT4gewogICAgcmV0dXJuIG5ldyBTZXQoZ29hbHM/Lm1hcChnb2FsID0+IGdvYWwuaWQpIHx8IFtdKTsKICB9KTsKICBjb25zdCBbZXhwYW5kZWRQcm9jZXNzZXMsIHNldEV4cGFuZGVkUHJvY2Vzc2VzXSA9IHVzZVN0YXRlPFNldDxzdHJpbmc+PihuZXcgU2V0KCkpOwoKICBjb25zdCB0b2dnbGVHb2FsID0gKGdvYWxJZDogc3RyaW5nKSA9PiB7CiAgICBzZXRFeHBhbmRlZEdvYWxzKHByZXYgPT4gewogICAgICBjb25zdCBuZXdTZXQgPSBuZXcgU2V0KHByZXYpOwogICAgICBpZiAobmV3U2V0Lmhhcyhnb2FsSWQpKSB7CiAgICAgICAgbmV3U2V0LmRlbGV0ZShnb2FsSWQpOwogICAgICB9IGVsc2UgewogICAgICAgIG5ld1NldC5hZGQoZ29hbElkKTsKICAgICAgfQogICAgICByZXR1cm4gbmV3U2V0OwogICAgfSk7CiAgfTsKCiAgY29uc3QgdG9nZ2xlUHJvY2VzcyA9IChwcm9jZXNzSWQ6IHN0cmluZykgPT4gewogICAgc2V0RXhwYW5kZWRQcm9jZXNzZXMocHJldiA9PiB7CiAgICAgIGNvbnN0IG5ld1NldCA9IG5ldyBTZXQocHJldik7CiAgICAgIGlmIChuZXdTZXQuaGFzKHByb2Nlc3NJZCkpIHsKICAgICAgICBuZXdTZXQuZGVsZXRlKHByb2Nlc3NJZCk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgbmV3U2V0LmFkZChwcm9jZXNzSWQpOwogICAgICB9CiAgICAgIHJldHVybiBuZXdTZXQ7CiAgICB9KTsKICB9OwoKICAvLyBFeHBvc2UgZXhwYW5kL2NvbGxhcHNlIG1ldGhvZHMgdmlhIHJlZgogIHVzZUltcGVyYXRpdmVIYW5kbGUocmVmLCAoKSA9PiAoewogICAgZXhwYW5kQWxsOiAoKSA9PiB7CiAgICAgIC8vIEV4cGFuZCBhbGwgZ29hbHMKICAgICAgY29uc3QgYWxsR29hbElkcyA9IG5ldyBTZXQoZ29hbHM/Lm1hcChnb2FsID0+IGdvYWwuaWQpIHx8IFtdKTsKICAgICAgc2V0RXhwYW5kZWRHb2FscyhhbGxHb2FsSWRzKTsKICAgICAgCiAgICAgIC8vIEV4cGFuZCBhbGwgcHJvY2Vzc2VzCiAgICAgIGNvbnN0IGFsbFByb2Nlc3NJZHMgPSBuZXcgU2V0PHN0cmluZz4oKTsKICAgICAgZ29hbHM/LmZvckVhY2goZ29hbCA9PiB7CiAgICAgICAgZ29hbC5wcm9jZXNzZXM/LmZvckVhY2gocHJvY2VzcyA9PiB7CiAgICAgICAgICBhbGxQcm9jZXNzSWRzLmFkZChwcm9jZXNzLmlkKTsKICAgICAgICB9KTsKICAgICAgfSk7CiAgICAgIHNldEV4cGFuZGVkUHJvY2Vzc2VzKGFsbFByb2Nlc3NJZHMpOwogICAgfSwKICAgIGNvbGxhcHNlQWxsOiAoKSA9PiB7CiAgICAgIC8vIEhpZGUgYWxsIHByb2Nlc3NlcyBieSBjb2xsYXBzaW5nIGdvYWxzIGNvbXBsZXRlbHkKICAgICAgc2V0RXhwYW5kZWRHb2FscyhuZXcgU2V0KCkpOwogICAgICBzZXRFeHBhbmRlZFByb2Nlc3NlcyhuZXcgU2V0KCkpOwogICAgfQogIH0pLCBbZ29hbHNdKTsKCiAgaWYgKCFnb2FscyB8fCBnb2Fscy5sZW5ndGggPT09IDApIHsKICAgIHJldHVybiAoCiAgICAgIDxkaXYgY2xhc3NOYW1lPSJ0ZXh0LWNlbnRlciBweS04IHRleHQtbXV0ZWQtZm9yZWdyb3VuZCI+CiAgICAgICAgPFRhcmdldCBjbGFzc05hbWU9InctMTIgaC0xMiBteC1hdXRvIG1iLTQgb3BhY2l0eS01MCIgLz4KICAgICAgICA8cD5ObyBzdHJhdGVnaWMgZ29hbHMgd2l0aCBsaW5rZWQgcHJvY2Vzc2VzIHRvIGRpc3BsYXk8L3A+CiAgICAgIDwvZGl2PgogICAgKTsKICB9CgogIHJldHVybiAoCiAgICA8ZGl2IGNsYXNzTmFtZT0idy1mdWxsIHNwYWNlLXktNiIgZGF0YS1taW5kbWFwLWNvbnRlbnQ9ImdvYWxzLXByb2Nlc3NlcyI+CiAgICAgIHtnb2Fscy5tYXAoKGdvYWwpID0+IHsKICAgICAgICBjb25zdCBnb2FsU3R5bGUgPSBnZXRTY29yZWNhcmRTdHlsZShnb2FsLmNhdGVnb3J5KTsKICAgICAgICAKICAgICAgICByZXR1cm4gKAogICAgICAgICAgPGRpdiBrZXk9e2dvYWwuaWR9IGNsYXNzTmFtZT0icmVsYXRpdmUiPgogICAgICAgICAgICB7LyogR29hbCBDYXJkIC0gUm9vdCBOb2RlICovfQogICAgICAgICAgICA8Q2FyZCBjbGFzc05hbWU9e2Ake2dvYWxTdHlsZS5iZ30gJHtnb2FsU3R5bGUuYm9yZGVyfSBzaGFkb3ctbGcgYm9yZGVyLTJgfT4KICAgICAgICAgICAgICA8Q2FyZENvbnRlbnQgY2xhc3NOYW1lPSJwLTQiPgogICAgICAgICAgICAgICAgey8qIEdvYWwgSGVhZGVyICovfQogICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9ImZsZXggaXRlbXMtY2VudGVyIHNwYWNlLXgtMyI+CiAgICAgICAgICAgICAgICAgIHsvKiBFeHBhbmQvQ29sbGFwc2UgQnV0dG9uICovfQogICAgICAgICAgICAgICAgICB7Z29hbC5wcm9jZXNzZXMgJiYgZ29hbC5wcm9jZXNzZXMubGVuZ3RoID4gMCAmJiAoCiAgICAgICAgICAgICAgICAgICAgPEJ1dHRvbgogICAgICAgICAgICAgICAgICAgICAgdmFyaWFudD0iZ2hvc3QiCiAgICAgICAgICAgICAgICAgICAgICBzaXplPSJzbSIKICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT0idy04IGgtOCBwLTAgcm91bmRlZC1mdWxsIGhvdmVyOmJnLWdyYXktMjAwIGRhcms6aG92ZXI6YmctZ3JheS03MDAiCiAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXsoZSkgPT4gewogICAgICAgICAgICAgICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7CiAgICAgICAgICAgICAgICAgICAgICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7CiAgICAgICAgICAgICAgICAgICAgICAgIHRvZ2dsZUdvYWwoZ29hbC5pZCk7CiAgICAgICAgICAgICAgICAgICAgICB9fQogICAgICAgICAgICAgICAgICAgICAgZGF0YS10ZXN0aWQ9e2B0b2dnbGUtZ29hbC0ke2dvYWwuaWR9YH0KICAgICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgICAgICB7ZXhwYW5kZWRHb2Fscy5oYXMoZ29hbC5pZCkgPyAoCiAgICAgICAgICAgICAgICAgICAgICAgIDxDaGV2cm9uRG93biBjbGFzc05hbWU9InctNCBoLTQiIC8+CiAgICAgICAgICAgICAgICAgICAgICApIDogKAogICAgICAgICAgICAgICAgICAgICAgICA8Q2hldnJvblJpZ2h0IGNsYXNzTmFtZT0idy00IGgtNCIgLz4KICAgICAgICAgICAgICAgICAgICAgICl9CiAgICAgICAgICAgICAgICAgICAgPC9CdXR0b24+CiAgICAgICAgICAgICAgICAgICl9CiAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17YHctMTIgaC0xMiAke2dvYWxTdHlsZS5hY2NlbnR9IHJvdW5kZWQtbGcgZmxleCBpdGVtcy1jZW50ZXIganVzdGlmeS1jZW50ZXIgZmxleC1zaHJpbmstMCB0ZXh0LXhsYH0+CiAgICAgICAgICAgICAgICAgICAge2dvYWxTdHlsZS5mbGFnfQogICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9ImZsZXgtMSBtaW4tdy0wIj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0iZmxleCBpdGVtcy1jZW50ZXIgc3BhY2UteC0yIj4KICAgICAgICAgICAgICAgICAgICAgIDxoMiBjbGFzc05hbWU9e2B0ZXh0LWxnIGZvbnQtYm9sZCAke2dvYWxTdHlsZS50ZXh0fWB9PgogICAgICAgICAgICAgICAgICAgICAgICB7Z29hbC50aXRsZX0KICAgICAgICAgICAgICAgICAgICAgIDwvaDI+CiAgICAgICAgICAgICAgICAgICAgICA8QmFkZ2UgdmFyaWFudD0ib3V0bGluZSIgY2xhc3NOYW1lPSJ0ZXh0LXhzIj4KICAgICAgICAgICAgICAgICAgICAgICAge2dvYWwuY2F0ZWdvcnl9CiAgICAgICAgICAgICAgICAgICAgICA8L0JhZGdlPgogICAgICAgICAgICAgICAgICAgICAgPEJhZGdlIHZhcmlhbnQ9InNlY29uZGFyeSIgY2xhc3NOYW1lPSJ0ZXh0LXhzIj4KICAgICAgICAgICAgICAgICAgICAgICAge2dvYWwucHJpb3JpdHl9CiAgICAgICAgICAgICAgICAgICAgICA8L0JhZGdlPgogICAgICAgICAgICAgICAgICAgICAge2dvYWwucHJvY2Vzc2VzICYmICgKICAgICAgICAgICAgICAgICAgICAgICAgPEJhZGdlIHZhcmlhbnQ9Im91dGxpbmUiIGNsYXNzTmFtZT0idGV4dC14cyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAge2dvYWwucHJvY2Vzc2VzLmxlbmd0aH0gcHJvY2Vzc2VzCiAgICAgICAgICAgICAgICAgICAgICAgIDwvQmFkZ2U+CiAgICAgICAgICAgICAgICAgICAgICApfQogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgIDwvQ2FyZENvbnRlbnQ+CiAgICAgICAgICAgIDwvQ2FyZD4KCiAgICAgICAgICAgIHsvKiBDb25uZWN0ZWQgUHJvY2Vzc2VzICovfQogICAgICAgICAgICB7Z29hbC5wcm9jZXNzZXMgJiYgZ29hbC5wcm9jZXNzZXMubGVuZ3RoID4gMCAmJiBleHBhbmRlZEdvYWxzLmhhcyhnb2FsLmlkKSAmJiAoCiAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9Im1sLTggbXQtNCBzcGFjZS15LTQiPgogICAgICAgICAgICAgICAgey8qIENvbm5lY3Rpb24gTGluZSAqL30KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSJmbGV4IGl0ZW1zLWNlbnRlciBzcGFjZS14LTIgdGV4dC1tdXRlZC1mb3JlZ3JvdW5kIj4KICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9InctOCBoLTAuNSBiZy1ib3JkZXIiPjwvZGl2PgogICAgICAgICAgICAgICAgICA8Q2hldnJvblJpZ2h0IGNsYXNzTmFtZT0idy00IGgtNCIgLz4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPSJ0ZXh0LXNtIGZvbnQtbWVkaXVtIj5MaW5rZWQgUHJvY2Vzc2VzICh7Z29hbC5wcm9jZXNzZXMubGVuZ3RofSk8L3NwYW4+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9ImdyaWQgZ3JpZC1jb2xzLTEgbGc6Z3JpZC1jb2xzLTIgZ2FwLTQiPgogICAgICAgICAgICAgICAgICB7Z29hbC5wcm9jZXNzZXMubWFwKChwcm9jZXNzKSA9PiB7CiAgICAgICAgICAgICAgICAgICAgY29uc3QgcHJvY2Vzc1N0eWxlID0gZ2V0U2NvcmVjYXJkU3R5bGUoZ29hbC5jYXRlZ29yeSk7CiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuICgKICAgICAgICAgICAgICAgICAgICAgIDxDYXJkIGtleT17cHJvY2Vzcy5pZH0gY2xhc3NOYW1lPSJiZy13aGl0ZSBkYXJrOmJnLWdyYXktODAwIGJvcmRlciBib3JkZXItZ3JheS0yMDAgc2hhZG93LXNtIj4KICAgICAgICAgICAgICAgICAgICAgICAgPENhcmRDb250ZW50IGNsYXNzTmFtZT0icC0zIj4KICAgICAgICAgICAgICAgICAgICAgICAgICB7LyogQ29tcGFjdCBQcm9jZXNzIEhlYWRlciAqL30KICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0iZmxleCBpdGVtcy1jZW50ZXIgc3BhY2UteC0yIG1iLTIiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgey8qIFByb2Nlc3MgRXhwYW5kL0NvbGxhcHNlICovfQogICAgICAgICAgICAgICAgICAgICAgICAgICAge3Byb2Nlc3MubWVhc3VyZXMgJiYgcHJvY2Vzcy5tZWFzdXJlcy5sZW5ndGggPiAwICYmICgKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPEJ1dHRvbgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhcmlhbnQ9Imdob3N0IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNpemU9InNtIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT0idy02IGgtNiBwLTAgcm91bmRlZC1mdWxsIGhvdmVyOmJnLWJsdWUtMTAwIGRhcms6aG92ZXI6YmctYmx1ZS05MDAiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DbGljaz17KGUpID0+IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0b2dnbGVQcm9jZXNzKHByb2Nlc3MuaWQpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH19CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS10ZXN0aWQ9e2B0b2dnbGUtcHJvY2Vzcy0ke3Byb2Nlc3MuaWR9YH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtleHBhbmRlZFByb2Nlc3Nlcy5oYXMocHJvY2Vzcy5pZCkgPyAoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Q2hldnJvbkRvd24gY2xhc3NOYW1lPSJ3LTMgaC0zIiAvPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICkgOiAoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Q2hldnJvblJpZ2h0IGNsYXNzTmFtZT0idy0zIGgtMyIgLz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L0J1dHRvbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICl9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtgdy04IGgtOCAke3Byb2Nlc3NTdHlsZS5hY2NlbnR9IHJvdW5kZWQgZmxleCBpdGVtcy1jZW50ZXIganVzdGlmeS1jZW50ZXIgZmxleC1zaHJpbmstMGB9PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8QWN0aXZpdHkgY2xhc3NOYW1lPSJ3LTQgaC00IHRleHQtd2hpdGUiIC8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSJmbGV4LTEgbWluLXctMCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSJmbGV4IGl0ZW1zLWNlbnRlciBzcGFjZS14LTIiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT0iZm9udC1zZW1pYm9sZCB0ZXh0LXNtIj57cHJvY2Vzcy5wcm9jZXNzTnVtYmVyfTwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8QmFkZ2UgdmFyaWFudD0ib3V0bGluZSIgY2xhc3NOYW1lPSJ0ZXh0LXhzIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtwcm9jZXNzU3R5bGUuZmxhZ30KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L0JhZGdlPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxCYWRnZSB2YXJpYW50PSJzZWNvbmRhcnkiIGNsYXNzTmFtZT0idGV4dC14cyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7cHJvY2Vzcy5tZWFzdXJlcz8ubGVuZ3RoIHx8IDB9IEtQSXMKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L0JhZGdlPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGg0IGNsYXNzTmFtZT0iZm9udC1tZWRpdW0gdGV4dC14cyB0ZXh0LWdyYXktOTAwIGRhcms6dGV4dC1ncmF5LTEwMCB0cnVuY2F0ZSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3Byb2Nlc3MubmFtZX0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9oND4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgICAgICAgICAgICB7LyogRW5oYW5jZWQgUGVyZm9ybWFuY2UgTWVhc3VyZXMgRGlzcGxheSAqL30KICAgICAgICAgICAgICAgICAgICAgICAgICB7cHJvY2Vzcy5tZWFzdXJlcyAmJiBwcm9jZXNzLm1lYXN1cmVzLmxlbmd0aCA+IDAgJiYgZXhwYW5kZWRQcm9jZXNzZXMuaGFzKHByb2Nlc3MuaWQpICYmICgKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSJiZy1ibHVlLTUwIGRhcms6YmctYmx1ZS05NTAvMjAgcm91bmRlZC1sZyBwLTIgc3BhY2UteS0yIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9ImZsZXggaXRlbXMtY2VudGVyIHNwYWNlLXgtMiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPEJhckNoYXJ0MyBjbGFzc05hbWU9InctNCBoLTQgdGV4dC1ibHVlLTYwMCIgLz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9InRleHQtc20gZm9udC1zZW1pYm9sZCB0ZXh0LWJsdWUtNzAwIGRhcms6dGV4dC1ibHVlLTMwMCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7cHJvY2Vzcy5tZWFzdXJlcy5sZW5ndGh9IFBlcmZvcm1hbmNlIE1lYXN1cmVzCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9ImdyaWQgZ3JpZC1jb2xzLTEgZ2FwLTIiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtwcm9jZXNzLm1lYXN1cmVzLm1hcCgobWVhc3VyZSkgPT4gKAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBrZXk9e21lYXN1cmUuaWR9IGNsYXNzTmFtZT0iYmctd2hpdGUgZGFyazpiZy1ncmF5LTgwMCByb3VuZGVkIHAtMiBib3JkZXIgYm9yZGVyLWJsdWUtMjAwIGRhcms6Ym9yZGVyLWJsdWUtODAwIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9ImZsZXggaXRlbXMtc3RhcnQgc3BhY2UteC0yIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Q2lyY2xlIGNsYXNzTmFtZT0idy0yIGgtMiBiZy1ibHVlLTUwMCByb3VuZGVkLWZ1bGwgZmxleC1zaHJpbmstMCBtdC0xIiAvPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSJmbGV4LTEiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPSJ0ZXh0LXhzIGZvbnQtbWVkaXVtIHRleHQtZ3JheS05MDAgZGFyazp0ZXh0LWdyYXktMTAwIGJsb2NrIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge21lYXN1cmUubmFtZX0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSJmbGV4IGZsZXgtd3JhcCBnYXAtMSBtdC0xIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge21lYXN1cmUuc2NvcmVjYXJkQ2F0ZWdvcnkgJiYgKAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxCYWRnZSB2YXJpYW50PSJvdXRsaW5lIiBjbGFzc05hbWU9InRleHQteHMgYmctYmx1ZS01MCB0ZXh0LWJsdWUtNzAwIGJvcmRlci1ibHVlLTIwMCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7Z2V0U2NvcmVjYXJkU3R5bGUobWVhc3VyZS5zY29yZWNhcmRDYXRlZ29yeSkuZmxhZ30ge21lYXN1cmUuc2NvcmVjYXJkQ2F0ZWdvcnl9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9CYWRnZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKX0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge21lYXN1cmUuZm9ybXVsYSAmJiAoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPEJhZGdlIHZhcmlhbnQ9Im91dGxpbmUiIGNsYXNzTmFtZT0idGV4dC14cyBiZy15ZWxsb3ctNTAgdGV4dC15ZWxsb3ctNzAwIGJvcmRlci15ZWxsb3ctMjAwIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEZvcm11bGE6IHttZWFzdXJlLmZvcm11bGF9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9CYWRnZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKX0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge21lYXN1cmUudGFyZ2V0ICYmICgKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8QmFkZ2UgdmFyaWFudD0ib3V0bGluZSIgY2xhc3NOYW1lPSJ0ZXh0LXhzIGJnLWdyZWVuLTUwIHRleHQtZ3JlZW4tNzAwIGJvcmRlci1ncmVlbi0yMDAiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgVGFyZ2V0OiB7bWVhc3VyZS50YXJnZXR9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9CYWRnZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKX0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge21lYXN1cmUuZnJlcXVlbmN5ICYmICgKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8QmFkZ2UgdmFyaWFudD0ib3V0bGluZSIgY2xhc3NOYW1lPSJ0ZXh0LXhzIGJnLXB1cnBsZS01MCB0ZXh0LXB1cnBsZS03MDAgYm9yZGVyLXB1cnBsZS0yMDAiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge21lYXN1cmUuZnJlcXVlbmN5fQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvQmFkZ2U+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICl9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHttZWFzdXJlLnNvdXJjZSAmJiAoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPEJhZGdlIHZhcmlhbnQ9Im91dGxpbmUiIGNsYXNzTmFtZT0idGV4dC14cyBiZy1vcmFuZ2UtNTAgdGV4dC1vcmFuZ2UtNzAwIGJvcmRlci1vcmFuZ2UtMjAwIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHttZWFzdXJlLnNvdXJjZX0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L0JhZGdlPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKSl9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgKX0KCiAgICAgICAgICAgICAgICAgICAgICAgICAgey8qIENvbGxhcHNlZCBLUEkgU3VtbWFyeSAqL30KICAgICAgICAgICAgICAgICAgICAgICAgICB7cHJvY2Vzcy5tZWFzdXJlcyAmJiBwcm9jZXNzLm1lYXN1cmVzLmxlbmd0aCA+IDAgJiYgIWV4cGFuZGVkUHJvY2Vzc2VzLmhhcyhwcm9jZXNzLmlkKSAmJiAoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9ImJnLWJsdWUtNTAgZGFyazpiZy1ibHVlLTk1MC8yMCByb3VuZGVkIHAtMiBjdXJzb3ItcG9pbnRlciBob3ZlcjpiZy1ibHVlLTEwMCBkYXJrOmhvdmVyOmJnLWJsdWUtOTAwLzMwIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXsoZSkgPT4gewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlLnN0b3BQcm9wYWdhdGlvbigpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvZ2dsZVByb2Nlc3MocHJvY2Vzcy5pZCk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH19CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSJmbGV4IGl0ZW1zLWNlbnRlciBzcGFjZS14LTIgdGV4dC1ibHVlLTcwMCBkYXJrOnRleHQtYmx1ZS0zMDAiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxCYXJDaGFydDMgY2xhc3NOYW1lPSJ3LTMgaC0zIiAvPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT0idGV4dC14cyBmb250LW1lZGl1bSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7cHJvY2Vzcy5tZWFzdXJlcy5sZW5ndGh9IEtQSXMgLSBDbGljayB0byBleHBhbmQKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPENoZXZyb25SaWdodCBjbGFzc05hbWU9InctMyBoLTMgbWwtYXV0byIgLz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICApfQoKICAgICAgICAgICAgICAgICAgICAgICAgICB7LyogTm8gbWVhc3VyZXMgaW5kaWNhdG9yICovfQogICAgICAgICAgICAgICAgICAgICAgICAgIHsoIXByb2Nlc3MubWVhc3VyZXMgfHwgcHJvY2Vzcy5tZWFzdXJlcy5sZW5ndGggPT09IDApICYmICgKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSJiZy1ncmF5LTUwIGRhcms6YmctZ3JheS04MDAgcm91bmRlZC1sZyBwLTIgdGV4dC1jZW50ZXIiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0iZmxleCBpdGVtcy1jZW50ZXIganVzdGlmeS1jZW50ZXIgc3BhY2UteC0yIHRleHQtZ3JheS01MDAiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxDaXJjbGUgY2xhc3NOYW1lPSJ3LTQgaC00IG9wYWNpdHktNTAiIC8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPSJ0ZXh0LXNtIGZvbnQtbWVkaXVtIj5ObyBQZXJmb3JtYW5jZSBNZWFzdXJlczwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICApfQogICAgICAgICAgICAgICAgICAgICAgICA8L0NhcmRDb250ZW50PgogICAgICAgICAgICAgICAgICAgICAgPC9DYXJkPgogICAgICAgICAgICAgICAgICAgICk7CiAgICAgICAgICAgICAgICAgIH0pfQogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICl9CgogICAgICAgICAgICB7LyogTm8gcHJvY2Vzc2VzIGxpbmtlZCBpbmRpY2F0b3IgKi99CiAgICAgICAgICAgIHsoIWdvYWwucHJvY2Vzc2VzIHx8IGdvYWwucHJvY2Vzc2VzLmxlbmd0aCA9PT0gMCkgJiYgKAogICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSJtbC04IG10LTQiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9ImZsZXggaXRlbXMtY2VudGVyIHNwYWNlLXgtMiB0ZXh0LW11dGVkLWZvcmVncm91bmQiPgogICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0idy04IGgtMC41IGJnLWJvcmRlciI+PC9kaXY+CiAgICAgICAgICAgICAgICAgIDxDaGV2cm9uUmlnaHQgY2xhc3NOYW1lPSJ3LTQgaC00IiAvPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9InRleHQtc20iPk5vIHByb2Nlc3NlcyBsaW5rZWQgdG8gdGhpcyBnb2FsPC9zcGFuPgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICl9CiAgICAgICAgICA8L2Rpdj4KICAgICAgICApOwogICAgICB9KX0KICAgIDwvZGl2PgogICk7Cn0pOw==
:FILE_2_END

:FILE_3_PATH
client/src/components/header.tsx
:FILE_3_DATA
aW1wb3J0IHsgdXNlU3RhdGUgfSBmcm9tICJyZWFjdCI7CmltcG9ydCB7IEJ1dHRvbiB9IGZyb20gIkAvY29tcG9uZW50cy91aS9idXR0b24iOwppbXBvcnQgeyBJbnB1dCB9IGZyb20gIkAvY29tcG9uZW50cy91aS9pbnB1dCI7CmltcG9ydCB7IEJhZGdlIH0gZnJvbSAiQC9jb21wb25lbnRzL3VpL2JhZGdlIjsKaW1wb3J0IHsgTWVudSwgU2VhcmNoLCBCZWxsLCBDaGV2cm9uUmlnaHQgfSBmcm9tICJsdWNpZGUtcmVhY3QiOwoKaW50ZXJmYWNlIEhlYWRlclByb3BzIHsKICB0aXRsZT86IHN0cmluZzsKICBicmVhZGNydW1icz86IEFycmF5PHsgbGFiZWw6IHN0cmluZzsgaHJlZj86IHN0cmluZyB9PjsKfQoKZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gSGVhZGVyKHsgCiAgdGl0bGUsCiAgYnJlYWRjcnVtYnMKfTogSGVhZGVyUHJvcHMpIHsKICBjb25zdCBbc2VhcmNoUXVlcnksIHNldFNlYXJjaFF1ZXJ5XSA9IHVzZVN0YXRlKCIiKTsKCiAgcmV0dXJuICgKICAgIDxoZWFkZXIgY2xhc3NOYW1lPSJiZy1jYXJkIGJvcmRlci1iIGJvcmRlci1ib3JkZXIgcHgtNiBweS00Ij4KICAgICAgPGRpdiBjbGFzc05hbWU9ImZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktYmV0d2VlbiI+CiAgICAgICAgPGRpdiBjbGFzc05hbWU9ImZsZXggaXRlbXMtY2VudGVyIHNwYWNlLXgtNCI+CiAgICAgICAgICA8QnV0dG9uIAogICAgICAgICAgICB2YXJpYW50PSJnaG9zdCIgCiAgICAgICAgICAgIHNpemU9InNtIiAKICAgICAgICAgICAgY2xhc3NOYW1lPSJsZzpoaWRkZW4iIAogICAgICAgICAgICBkYXRhLXRlc3RpZD0iYnV0dG9uLXRvZ2dsZS1zaWRlYmFyIgogICAgICAgICAgPgogICAgICAgICAgICA8TWVudSBjbGFzc05hbWU9ImgtNSB3LTUiIC8+CiAgICAgICAgICA8L0J1dHRvbj4KICAgICAgICAgIAogICAgICAgICAgeyh0aXRsZSB8fCBicmVhZGNydW1icykgJiYgKAogICAgICAgICAgICA8ZGl2PgogICAgICAgICAgICAgIHt0aXRsZSAmJiA8aDEgY2xhc3NOYW1lPSJ0ZXh0LTJ4bCBmb250LWJvbGQiIGRhdGEtdGVzdGlkPSJoZWFkZXItdGl0bGUiPnt0aXRsZX08L2gxPn0KICAgICAgICAgICAgICB7YnJlYWRjcnVtYnMgJiYgYnJlYWRjcnVtYnMubGVuZ3RoID4gMCAmJiAoCiAgICAgICAgICAgICAgICA8bmF2IGNsYXNzTmFtZT0iZmxleCBpdGVtcy1jZW50ZXIgc3BhY2UteC0yIHRleHQtc20gdGV4dC1tdXRlZC1mb3JlZ3JvdW5kIG10LTEiPgogICAgICAgICAgICAgICAgICB7YnJlYWRjcnVtYnMubWFwKChjcnVtYiwgaW5kZXgpID0+ICgKICAgICAgICAgICAgICAgICAgICA8ZGl2IGtleT17aW5kZXh9IGNsYXNzTmFtZT0iZmxleCBpdGVtcy1jZW50ZXIgc3BhY2UteC0yIj4KICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT17aW5kZXggPT09IGJyZWFkY3J1bWJzLmxlbmd0aCAtIDEgPyAidGV4dC1mb3JlZ3JvdW5kIiA6ICIifT4KICAgICAgICAgICAgICAgICAgICAgICAge2NydW1iLmxhYmVsfQogICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAge2luZGV4IDwgYnJlYWRjcnVtYnMubGVuZ3RoIC0gMSAmJiAoCiAgICAgICAgICAgICAgICAgICAgICAgIDxDaGV2cm9uUmlnaHQgY2xhc3NOYW1lPSJoLTMgdy0zIiAvPgogICAgICAgICAgICAgICAgICAgICAgKX0KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgKSl9CiAgICAgICAgICAgICAgICA8L25hdj4KICAgICAgICAgICAgICApfQogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICl9CiAgICAgICAgPC9kaXY+CiAgICAgICAgCiAgICAgICAgPGRpdiBjbGFzc05hbWU9ImZsZXggaXRlbXMtY2VudGVyIHNwYWNlLXgtNCI+CiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0icmVsYXRpdmUiPgogICAgICAgICAgICA8U2VhcmNoIGNsYXNzTmFtZT0iYWJzb2x1dGUgbGVmdC0zIHRvcC0xLzIgdHJhbnNmb3JtIC10cmFuc2xhdGUteS0xLzIgdGV4dC1tdXRlZC1mb3JlZ3JvdW5kIGgtNCB3LTQiIC8+CiAgICAgICAgICAgIDxJbnB1dAogICAgICAgICAgICAgIHR5cGU9InRleHQiCiAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9IlNlYXJjaCBwcm9jZXNzZXMuLi4iCiAgICAgICAgICAgICAgdmFsdWU9e3NlYXJjaFF1ZXJ5fQogICAgICAgICAgICAgIG9uQ2hhbmdlPXsoZSkgPT4gc2V0U2VhcmNoUXVlcnkoZS50YXJnZXQudmFsdWUpfQogICAgICAgICAgICAgIGNsYXNzTmFtZT0idy02NCBwbC0xMCIKICAgICAgICAgICAgICBkYXRhLXRlc3RpZD0iaW5wdXQtc2VhcmNoIgogICAgICAgICAgICAvPgogICAgICAgICAgPC9kaXY+CiAgICAgICAgICAKICAgICAgICAgIDxCdXR0b24gCiAgICAgICAgICAgIHZhcmlhbnQ9Imdob3N0IiAKICAgICAgICAgICAgc2l6ZT0ic20iIAogICAgICAgICAgICBjbGFzc05hbWU9InJlbGF0aXZlIgogICAgICAgICAgICBkYXRhLXRlc3RpZD0iYnV0dG9uLW5vdGlmaWNhdGlvbnMiCiAgICAgICAgICA+CiAgICAgICAgICAgIDxCZWxsIGNsYXNzTmFtZT0iaC01IHctNSIgLz4KICAgICAgICAgICAgPEJhZGdlIAogICAgICAgICAgICAgIHZhcmlhbnQ9ImRlc3RydWN0aXZlIiAKICAgICAgICAgICAgICBjbGFzc05hbWU9ImFic29sdXRlIC10b3AtMSAtcmlnaHQtMSBoLTUgdy01IGZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktY2VudGVyIHAtMCB0ZXh0LXhzIgogICAgICAgICAgICA+CiAgICAgICAgICAgICAgMwogICAgICAgICAgICA8L0JhZGdlPgogICAgICAgICAgPC9CdXR0b24+CiAgICAgICAgPC9kaXY+CiAgICAgIDwvZGl2PgogICAgPC9oZWFkZXI+CiAgKTsKfQo=
:FILE_3_END

:FILE_4_PATH
client/src/components/mind-map-tree.tsx
:FILE_4_DATA
aW1wb3J0IFJlYWN0IGZyb20gInJlYWN0IjsKaW1wb3J0IHsgQ2FyZCwgQ2FyZENvbnRlbnQgfSBmcm9tICJAL2NvbXBvbmVudHMvdWkvY2FyZCI7CmltcG9ydCB7IEFjdGl2aXR5LCBDaGV2cm9uUmlnaHQsIEZpbGVUZXh0LCBDaXJjbGUgfSBmcm9tICJsdWNpZGUtcmVhY3QiOwoKaW50ZXJmYWNlIFByb2Nlc3NTdGVwIHsKICBpZDogc3RyaW5nOwogIHN0ZXBOdW1iZXI6IG51bWJlcjsKICBzdGVwTmFtZTogc3RyaW5nOwogIHN0ZXBEZXRhaWxzPzogc3RyaW5nOwp9CgppbnRlcmZhY2UgUHJvY2VzcyB7CiAgaWQ6IHN0cmluZzsKICBwcm9jZXNzTnVtYmVyOiBzdHJpbmc7CiAgbmFtZTogc3RyaW5nOwogIHN0ZXBzPzogUHJvY2Vzc1N0ZXBbXTsKfQoKaW50ZXJmYWNlIE1pbmRNYXBUcmVlUHJvcHMgewogIHByb2Nlc3NlczogUHJvY2Vzc1tdOwogIGVsZW1lbnRUaXRsZTogc3RyaW5nOwp9CgpleHBvcnQgZnVuY3Rpb24gTWluZE1hcFRyZWUoeyBwcm9jZXNzZXMsIGVsZW1lbnRUaXRsZSB9OiBNaW5kTWFwVHJlZVByb3BzKSB7CiAgaWYgKCFwcm9jZXNzZXMgfHwgcHJvY2Vzc2VzLmxlbmd0aCA9PT0gMCkgewogICAgcmV0dXJuICgKICAgICAgPGRpdiBjbGFzc05hbWU9InRleHQtY2VudGVyIHB5LTggdGV4dC1tdXRlZC1mb3JlZ3JvdW5kIj4KICAgICAgICA8RmlsZVRleHQgY2xhc3NOYW1lPSJ3LTEyIGgtMTIgbXgtYXV0byBtYi00IG9wYWNpdHktNTAiIC8+CiAgICAgICAgPHA+Tm8gcHJvY2Vzc2VzIGF2YWlsYWJsZSB0byBkaXNwbGF5IGluIG1pbmQgbWFwPC9wPgogICAgICA8L2Rpdj4KICAgICk7CiAgfQoKICByZXR1cm4gKAogICAgPGRpdiBjbGFzc05hbWU9InctZnVsbCI+CiAgICAgIHsvKiBSb290IEVsZW1lbnQgLSBMZWZ0IEFsaWduZWQgKi99CiAgICAgIDxkaXYgY2xhc3NOYW1lPSJtYi02Ij4KICAgICAgICA8Q2FyZCBjbGFzc05hbWU9ImJnLXByaW1hcnkvMTAgYm9yZGVyLXByaW1hcnkvMjAgc2hhZG93LWxnIj4KICAgICAgICAgIDxDYXJkQ29udGVudCBjbGFzc05hbWU9InAtNiI+CiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSJmbGV4IGl0ZW1zLWNlbnRlciBzcGFjZS14LTQiPgogICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSJ3LTEyIGgtMTIgYmctcHJpbWFyeSByb3VuZGVkLWxnIGZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktY2VudGVyIj4KICAgICAgICAgICAgICAgIDxBY3Rpdml0eSBjbGFzc05hbWU9InctNiBoLTYgdGV4dC1wcmltYXJ5LWZvcmVncm91bmQiIC8+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPGRpdj4KICAgICAgICAgICAgICAgIDxoMyBjbGFzc05hbWU9InRleHQteGwgZm9udC1ib2xkIHRleHQtcHJpbWFyeSI+e2VsZW1lbnRUaXRsZX08L2gzPgogICAgICAgICAgICAgICAgPHAgY2xhc3NOYW1lPSJ0ZXh0LXNtIHRleHQtbXV0ZWQtZm9yZWdyb3VuZCI+e3Byb2Nlc3Nlcy5sZW5ndGh9IFByb2Nlc3N7cHJvY2Vzc2VzLmxlbmd0aCAhPT0gMSA/ICdlcycgOiAnJ308L3A+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC9DYXJkQ29udGVudD4KICAgICAgICA8L0NhcmQ+CiAgICAgIDwvZGl2PgoKICAgICAgey8qIFRyZWUgU3RydWN0dXJlIC0gUGFyYWxsZWwgUHJvY2Vzc2VzICovfQogICAgICA8ZGl2IGNsYXNzTmFtZT0icmVsYXRpdmUiPgogICAgICAgIHsvKiBNYWluIHZlcnRpY2FsIGxpbmUgZnJvbSByb290ICovfQogICAgICAgIDxkaXYgY2xhc3NOYW1lPSJhYnNvbHV0ZSBsZWZ0LTYgdG9wLTAgdy0wLjUgaC0xMiBiZy1ib3JkZXIvNDAiPjwvZGl2PgogICAgICAgIAogICAgICAgIHsvKiBIb3Jpem9udGFsIGxpbmUgZm9yIHByb2Nlc3NlcyAqL30KICAgICAgICB7cHJvY2Vzc2VzLmxlbmd0aCA+IDEgJiYgKAogICAgICAgICAgPGRpdiBjbGFzc05hbWU9ImFic29sdXRlIGxlZnQtNiB0b3AtMTIgdy1mdWxsIGgtMC41IGJnLWJvcmRlci80MCI+PC9kaXY+CiAgICAgICAgKX0KICAgICAgICAKICAgICAgICA8ZGl2IGNsYXNzTmFtZT0iZ3JpZCBncmlkLWNvbHMtMSBtZDpncmlkLWNvbHMtMiBsZzpncmlkLWNvbHMtMyBnYXAtNiBwdC0xMiI+CiAgICAgICAgICB7cHJvY2Vzc2VzLm1hcCgocHJvY2VzcywgcHJvY2Vzc0luZGV4KSA9PiAoCiAgICAgICAgICAgIDxkaXYga2V5PXtwcm9jZXNzLmlkfSBjbGFzc05hbWU9InJlbGF0aXZlIj4KICAgICAgICAgICAgICB7LyogVmVydGljYWwgbGluZSBkb3duIHRvIHByb2Nlc3MgKi99CiAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9ImFic29sdXRlIGxlZnQtMS8yIC10b3AtMTIgdy0wLjUgaC0xMiBiZy1ib3JkZXIvNDAgdHJhbnNmb3JtIC10cmFuc2xhdGUteC0xLzIiPjwvZGl2PgogICAgICAgICAgICAgIAogICAgICAgICAgICAgIHsvKiBQcm9jZXNzIENhcmQgKi99CiAgICAgICAgICAgICAgPENhcmQgY2xhc3NOYW1lPSJiZy1ibHVlLTUwIGRhcms6YmctYmx1ZS05NTAvMjAgYm9yZGVyLWJsdWUtMjAwIGRhcms6Ym9yZGVyLWJsdWUtODAwIHNoYWRvdy1tZCI+CiAgICAgICAgICAgICAgICA8Q2FyZENvbnRlbnQgY2xhc3NOYW1lPSJwLTQiPgogICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0iZmxleCBpdGVtcy1jZW50ZXIgc3BhY2UteC0zIG1iLTQiPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSJ3LTggaC04IGJnLWJsdWUtNTAwIHJvdW5kZWQtbGcgZmxleCBpdGVtcy1jZW50ZXIganVzdGlmeS1jZW50ZXIiPgogICAgICAgICAgICAgICAgICAgICAgPEFjdGl2aXR5IGNsYXNzTmFtZT0idy00IGgtNCB0ZXh0LXdoaXRlIiAvPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSJmbGV4LTEiPgogICAgICAgICAgICAgICAgICAgICAgPGg0IGNsYXNzTmFtZT0iZm9udC1zZW1pYm9sZCB0ZXh0LWJsdWUtNzAwIGRhcms6dGV4dC1ibHVlLTMwMCB0ZXh0LWJhc2UiPgogICAgICAgICAgICAgICAgICAgICAgICB7cHJvY2Vzcy5wcm9jZXNzTnVtYmVyfQogICAgICAgICAgICAgICAgICAgICAgPC9oND4KICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzTmFtZT0idGV4dC1zbSB0ZXh0LWJsdWUtNjAwIGRhcms6dGV4dC1ibHVlLTQwMCBmb250LW1lZGl1bSI+CiAgICAgICAgICAgICAgICAgICAgICAgIHtwcm9jZXNzLm5hbWV9CiAgICAgICAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgICAgey8qIFNlcXVlbnRpYWwgUHJvY2VzcyBTdGVwcyBhcyBHcmVlbiBCdWxsZXQgUG9pbnRzICovfQogICAgICAgICAgICAgICAgICB7cHJvY2Vzcy5zdGVwcyAmJiBwcm9jZXNzLnN0ZXBzLmxlbmd0aCA+IDAgJiYgKAogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSJzcGFjZS15LTIgcGwtMiI+CiAgICAgICAgICAgICAgICAgICAgICA8aDUgY2xhc3NOYW1lPSJ0ZXh0LXhzIGZvbnQtc2VtaWJvbGQgdGV4dC1ibHVlLTcwMCBkYXJrOnRleHQtYmx1ZS0zMDAgbWItMiBib3JkZXItYiBib3JkZXItYmx1ZS0yMDAgZGFyazpib3JkZXItYmx1ZS04MDAgcGItMSI+CiAgICAgICAgICAgICAgICAgICAgICAgIFNlcXVlbnRpYWwgU3RlcHM6CiAgICAgICAgICAgICAgICAgICAgICA8L2g1PgogICAgICAgICAgICAgICAgICAgICAge3Byb2Nlc3Muc3RlcHMubWFwKChzdGVwLCBzdGVwSW5kZXgpID0+ICgKICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBrZXk9e3N0ZXAuaWR9IGNsYXNzTmFtZT0iZmxleCBpdGVtcy1zdGFydCBzcGFjZS14LTIgdGV4dC14cyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9ImZsZXggaXRlbXMtY2VudGVyIHNwYWNlLXgtMSBmbGV4LXNocmluay0wIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxDaXJjbGUgY2xhc3NOYW1lPSJ3LTEuNSBoLTEuNSBmaWxsLWdyZWVuLTUwMCB0ZXh0LWdyZWVuLTUwMCBtdC0xIiAvPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPSJ3LTQgaC00IGJnLWdyZWVuLTUwMCByb3VuZGVkLWZ1bGwgZmxleCBpdGVtcy1jZW50ZXIganVzdGlmeS1jZW50ZXIgdGV4dC13aGl0ZSB0ZXh0LXhzIGZvbnQtYm9sZCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtzdGVwLnN0ZXBOdW1iZXJ9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9Im1pbi13LTAiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3NOYW1lPSJmb250LW1lZGl1bSB0ZXh0LWdyZWVuLTcwMCBkYXJrOnRleHQtZ3JlZW4tMzAwIGxlYWRpbmctdGlnaHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7c3RlcC5zdGVwTmFtZX0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICApKX0KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgKX0KICAgICAgICAgICAgICAgIDwvQ2FyZENvbnRlbnQ+CiAgICAgICAgICAgICAgPC9DYXJkPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICkpfQogICAgICAgIDwvZGl2PgogICAgICA8L2Rpdj4KCiAgICAgIHsvKiBMZWdlbmQgKi99CiAgICAgIDxkaXYgY2xhc3NOYW1lPSJtdC04IHB0LTYgYm9yZGVyLXQiPgogICAgICAgIDxkaXYgY2xhc3NOYW1lPSJmbGV4IGZsZXgtd3JhcCBpdGVtcy1jZW50ZXIgZ2FwLTYgdGV4dC1zbSB0ZXh0LW11dGVkLWZvcmVncm91bmQiPgogICAgICAgICAgPGRpdiBjbGFzc05hbWU9ImZsZXggaXRlbXMtY2VudGVyIHNwYWNlLXgtMiI+CiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSJ3LTQgaC00IGJnLXByaW1hcnkvMjAgYm9yZGVyLXByaW1hcnkvNDAgYm9yZGVyIHJvdW5kZWQiPjwvZGl2PgogICAgICAgICAgICA8c3Bhbj5PRSBFbGVtZW50PC9zcGFuPgogICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0iZmxleCBpdGVtcy1jZW50ZXIgc3BhY2UteC0yIj4KICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9InctNCBoLTQgYmctYmx1ZS0xMDAgZGFyazpiZy1ibHVlLTk1MC80MCBib3JkZXItYmx1ZS0zMDAgZGFyazpib3JkZXItYmx1ZS03MDAgYm9yZGVyIHJvdW5kZWQiPjwvZGl2PgogICAgICAgICAgICA8c3Bhbj5Qcm9jZXNzPC9zcGFuPgogICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0iZmxleCBpdGVtcy1jZW50ZXIgc3BhY2UteC0yIj4KICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9InctNCBoLTQgYmctZ3JlZW4tMTAwIGRhcms6YmctZ3JlZW4tOTUwLzQwIGJvcmRlci1ncmVlbi0zMDAgZGFyazpib3JkZXItZ3JlZW4tNzAwIGJvcmRlciByb3VuZGVkIj48L2Rpdj4KICAgICAgICAgICAgPHNwYW4+UHJvY2VzcyBTdGVwPC9zcGFuPgogICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0iZmxleCBpdGVtcy1jZW50ZXIgc3BhY2UteC0yIj4KICAgICAgICAgICAgPENpcmNsZSBjbGFzc05hbWU9InctMiBoLTIgZmlsbC1jdXJyZW50IHRleHQtbXV0ZWQtZm9yZWdyb3VuZCIgLz4KICAgICAgICAgICAgPHNwYW4+QnVsbGV0IFBvaW50PC9zcGFuPgogICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgIDwvZGl2PgogICAgPC9kaXY+CiAgKTsKfQ==
:FILE_4_END

:FILE_5_PATH
client/src/components/mini-process-flow.tsx
:FILE_5_DATA
aW1wb3J0IHsgQ2hldnJvblJpZ2h0LCBBcnJvd0Rvd24gfSBmcm9tICJsdWNpZGUtcmVhY3QiOwppbXBvcnQgdHlwZSB7IFByb2Nlc3NTdGVwIH0gZnJvbSAiQHNoYXJlZC9zY2hlbWEiOwoKaW50ZXJmYWNlIE1pbmlQcm9jZXNzRmxvd1Byb3BzIHsKICBwcm9jZXNzTnVtYmVyOiBzdHJpbmc7CiAgc3RlcHM6IFByb2Nlc3NTdGVwW107CiAgY29tcGFjdD86IGJvb2xlYW47Cn0KCmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1pbmlQcm9jZXNzRmxvdyh7IHByb2Nlc3NOdW1iZXIsIHN0ZXBzLCBjb21wYWN0ID0gZmFsc2UgfTogTWluaVByb2Nlc3NGbG93UHJvcHMpIHsKICBpZiAoIXN0ZXBzIHx8IHN0ZXBzLmxlbmd0aCA9PT0gMCkgewogICAgcmV0dXJuICgKICAgICAgPGRpdiBjbGFzc05hbWU9ImZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktY2VudGVyIHB5LTIgdGV4dC14cyB0ZXh0LW11dGVkLWZvcmVncm91bmQiPgogICAgICAgIE5vIHN0ZXBzIGRlZmluZWQKICAgICAgPC9kaXY+CiAgICApOwogIH0KCiAgLy8gR2V0IHByb2Nlc3Mtc3BlY2lmaWMgc3R5bGluZwogIGNvbnN0IGdldFByb2Nlc3NTdHlsZXMgPSAocHJvY2Vzc051bWJlcjogc3RyaW5nKSA9PiB7CiAgICBzd2l0Y2ggKHByb2Nlc3NOdW1iZXIpIHsKICAgICAgY2FzZSAnT0UtNC4xJzoKICAgICAgICByZXR1cm4gewogICAgICAgICAgcHJpbWFyeTogJ2JnLWJsdWUtNTAwJywKICAgICAgICAgIHNlY29uZGFyeTogJ2JnLWJsdWUtNTAnLAogICAgICAgICAgYWNjZW50OiAndGV4dC1ibHVlLTYwMCcsCiAgICAgICAgICBib3JkZXI6ICdib3JkZXItYmx1ZS0yMDAnCiAgICAgICAgfTsKICAgICAgY2FzZSAnT0UtNC4yJzoKICAgICAgICByZXR1cm4gewogICAgICAgICAgcHJpbWFyeTogJ2JnLWdyZWVuLTUwMCcsCiAgICAgICAgICBzZWNvbmRhcnk6ICdiZy1ncmVlbi01MCcsCiAgICAgICAgICBhY2NlbnQ6ICd0ZXh0LWdyZWVuLTYwMCcsCiAgICAgICAgICBib3JkZXI6ICdib3JkZXItZ3JlZW4tMjAwJwogICAgICAgIH07CiAgICAgIGRlZmF1bHQ6CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgIHByaW1hcnk6ICdiZy1wdXJwbGUtNTAwJywKICAgICAgICAgIHNlY29uZGFyeTogJ2JnLXB1cnBsZS01MCcsCiAgICAgICAgICBhY2NlbnQ6ICd0ZXh0LXB1cnBsZS02MDAnLAogICAgICAgICAgYm9yZGVyOiAnYm9yZGVyLXB1cnBsZS0yMDAnCiAgICAgICAgfTsKICAgIH0KICB9OwoKICBjb25zdCBzdHlsZXMgPSBnZXRQcm9jZXNzU3R5bGVzKHByb2Nlc3NOdW1iZXIpOwogIGNvbnN0IGRpc3BsYXlTdGVwcyA9IGNvbXBhY3QgPyBzdGVwcy5zbGljZSgwLCA0KSA6IHN0ZXBzOwogIGNvbnN0IGhhc01vcmVTdGVwcyA9IGNvbXBhY3QgJiYgc3RlcHMubGVuZ3RoID4gNDsKCiAgcmV0dXJuICgKICAgIDxkaXYgY2xhc3NOYW1lPSJ3LWZ1bGwiPgogICAgICA8ZGl2IGNsYXNzTmFtZT0iZmxleCBpdGVtcy1jZW50ZXIgc3BhY2UteC0xIG92ZXJmbG93LXgtYXV0byBwYi0yIj4KICAgICAgICB7ZGlzcGxheVN0ZXBzLm1hcCgoc3RlcCwgaW5kZXgpID0+ICgKICAgICAgICAgIDxkaXYga2V5PXtzdGVwLmlkfSBjbGFzc05hbWU9ImZsZXggaXRlbXMtY2VudGVyIGZsZXgtc2hyaW5rLTAiPgogICAgICAgICAgICB7LyogU3RlcCBCb3ggKi99CiAgICAgICAgICAgIDxkaXYgCiAgICAgICAgICAgICAgY2xhc3NOYW1lPXtgJHtzdHlsZXMuc2Vjb25kYXJ5fSAke3N0eWxlcy5ib3JkZXJ9IHJvdW5kZWQgcHgtMiBweS0xIGJvcmRlciB0cmFuc2l0aW9uLWFsbCBkdXJhdGlvbi0yMDAgaG92ZXI6c2hhZG93LXNtYH0KICAgICAgICAgICAgICB0aXRsZT17YCR7c3RlcC5zdGVwTmFtZX0ke3N0ZXAuc3RlcERldGFpbHMgPyAnOiAnICsgc3RlcC5zdGVwRGV0YWlscyA6ICcnfWB9CiAgICAgICAgICAgID4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0iZmxleCBpdGVtcy1jZW50ZXIgc3BhY2UteC0xIj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtgdy00IGgtNCAke3N0eWxlcy5wcmltYXJ5fSByb3VuZGVkLWZ1bGwgZmxleCBpdGVtcy1jZW50ZXIganVzdGlmeS1jZW50ZXIgdGV4dC13aGl0ZSB0ZXh0LXhzIGZvbnQtYm9sZGB9PgogICAgICAgICAgICAgICAgICB7c3RlcC5zdGVwTnVtYmVyfQogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9e2B0ZXh0LXhzIGZvbnQtbWVkaXVtICR7c3R5bGVzLmFjY2VudH0gdHJ1bmNhdGUgbWF4LXctMTZgfT4KICAgICAgICAgICAgICAgICAge3N0ZXAuc3RlcE5hbWUuc3BsaXQoJyAnKVswXX0KICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICB7LyogQXJyb3cgY29ubmVjdG9yIChleGNlcHQgZm9yIGxhc3Qgc3RlcCkgKi99CiAgICAgICAgICAgIHtpbmRleCA8IGRpc3BsYXlTdGVwcy5sZW5ndGggLSAxICYmICgKICAgICAgICAgICAgICA8Q2hldnJvblJpZ2h0IGNsYXNzTmFtZT17YHctMyBoLTMgJHtzdHlsZXMuYWNjZW50fSBteC0xYH0gLz4KICAgICAgICAgICAgKX0KICAgICAgICAgIDwvZGl2PgogICAgICAgICkpfQoKICAgICAgICB7LyogTW9yZSBzdGVwcyBpbmRpY2F0b3IgKi99CiAgICAgICAge2hhc01vcmVTdGVwcyAmJiAoCiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0iZmxleCBpdGVtcy1jZW50ZXIgc3BhY2UteC0xIj4KICAgICAgICAgICAgPENoZXZyb25SaWdodCBjbGFzc05hbWU9e2B3LTMgaC0zICR7c3R5bGVzLmFjY2VudH1gfSAvPgogICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17YCR7c3R5bGVzLnNlY29uZGFyeX0gJHtzdHlsZXMuYm9yZGVyfSByb3VuZGVkIHB4LTIgcHktMSBib3JkZXJgfT4KICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9e2B0ZXh0LXhzICR7c3R5bGVzLmFjY2VudH0gZm9udC1tZWRpdW1gfT4KICAgICAgICAgICAgICAgICt7c3RlcHMubGVuZ3RoIC0gNH0gbW9yZQogICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICApfQogICAgICA8L2Rpdj4KCiAgICAgIHsvKiBQcm9jZXNzIGZsb3cgc3VtbWFyeSAqL30KICAgICAgeyFjb21wYWN0ICYmICgKICAgICAgICA8ZGl2IGNsYXNzTmFtZT0ibXQtMiB0ZXh0LXhzIHRleHQtbXV0ZWQtZm9yZWdyb3VuZCI+CiAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9ImZvbnQtbWVkaXVtIj57c3RlcHMubGVuZ3RofSBzdGVwczo8L3NwYW4+CiAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9Im1sLTEiPgogICAgICAgICAgICB7cHJvY2Vzc051bWJlciA9PT0gJ09FLTQuMScgJiYgJ0Rlc2lnbiDihpIgUHJvY3VyZSDihpIgQ29uc3RydWN0IOKGkiBDb21taXNzaW9uJ30KICAgICAgICAgICAge3Byb2Nlc3NOdW1iZXIgPT09ICdPRS00LjInICYmICdTdHJhdGVneSDihpIgT3BlcmF0ZSDihpIgTW9uaXRvciDihpIgSW1wcm92ZSd9CiAgICAgICAgICAgIHshWydPRS00LjEnLCAnT0UtNC4yJ10uaW5jbHVkZXMocHJvY2Vzc051bWJlcikgJiYgJ1NlcXVlbnRpYWwgUHJvY2VzcyBGbG93J30KICAgICAgICAgIDwvc3Bhbj4KICAgICAgICA8L2Rpdj4KICAgICAgKX0KICAgIDwvZGl2PgogICk7Cn0=
:FILE_5_END

:FILE_6_PATH
client/src/components/process-card.tsx
:FILE_6_DATA

:FILE_6_END

:FILE_7_PATH
client/src/components/process-content-sections.tsx
:FILE_7_DATA

:FILE_7_END

:FILE_8_PATH
client/src/components/process-flow-diagram.tsx
:FILE_8_DATA
aW1wb3J0IHsgQ2FyZCwgQ2FyZENvbnRlbnQsIENhcmRIZWFkZXIsIENhcmRUaXRsZSB9IGZyb20gIkAvY29tcG9uZW50cy91aS9jYXJkIjsKaW1wb3J0IHsgQmFkZ2UgfSBmcm9tICJAL2NvbXBvbmVudHMvdWkvYmFkZ2UiOwppbXBvcnQgeyBCdXR0b24gfSBmcm9tICJAL2NvbXBvbmVudHMvdWkvYnV0dG9uIjsKaW1wb3J0IHsgQ2hldnJvblJpZ2h0LCBBcnJvd0Rvd24sIEZpbGVUZXh0IH0gZnJvbSAibHVjaWRlLXJlYWN0IjsKaW1wb3J0IHR5cGUgeyBQcm9jZXNzU3RlcCB9IGZyb20gIkBzaGFyZWQvc2NoZW1hIjsKCmludGVyZmFjZSBQcm9jZXNzRmxvd0RpYWdyYW1Qcm9wcyB7CiAgcHJvY2Vzc05hbWU6IHN0cmluZzsKICBwcm9jZXNzTnVtYmVyOiBzdHJpbmc7CiAgc3RlcHM6IFByb2Nlc3NTdGVwW107Cn0KCmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIFByb2Nlc3NGbG93RGlhZ3JhbSh7IHByb2Nlc3NOYW1lLCBwcm9jZXNzTnVtYmVyLCBzdGVwcyB9OiBQcm9jZXNzRmxvd0RpYWdyYW1Qcm9wcykgewogIGlmICghc3RlcHMgfHwgc3RlcHMubGVuZ3RoID09PSAwKSB7CiAgICByZXR1cm4gbnVsbDsKICB9CgogIC8vIENyZWF0ZSB2aXN1YWwgc3R5bGVzIGJhc2VkIG9uIHByb2Nlc3MgdHlwZSAoYWxsIGhvcml6b250YWwgbm93KQogIGNvbnN0IGdldFByb2Nlc3NTdHlsZXMgPSAocHJvY2Vzc051bWJlcjogc3RyaW5nKSA9PiB7CiAgICBzd2l0Y2ggKHByb2Nlc3NOdW1iZXIpIHsKICAgICAgY2FzZSAnT0UtNC4xJzoKICAgICAgICByZXR1cm4gewogICAgICAgICAgcHJpbWFyeTogJ2JnLWJsdWUtNTAwJywKICAgICAgICAgIHNlY29uZGFyeTogJ2JnLWJsdWUtNTAnLAogICAgICAgICAgYWNjZW50OiAndGV4dC1ibHVlLTcwMCcsCiAgICAgICAgICBib3JkZXI6ICdib3JkZXItYmx1ZS0yMDAnCiAgICAgICAgfTsKICAgICAgY2FzZSAnT0UtNC4yJzoKICAgICAgICByZXR1cm4gewogICAgICAgICAgcHJpbWFyeTogJ2JnLWdyZWVuLTUwMCcsCiAgICAgICAgICBzZWNvbmRhcnk6ICdiZy1ncmVlbi01MCcsCiAgICAgICAgICBhY2NlbnQ6ICd0ZXh0LWdyZWVuLTcwMCcsCiAgICAgICAgICBib3JkZXI6ICdib3JkZXItZ3JlZW4tMjAwJwogICAgICAgIH07CiAgICAgIGRlZmF1bHQ6CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgIHByaW1hcnk6ICdiZy1wdXJwbGUtNTAwJywKICAgICAgICAgIHNlY29uZGFyeTogJ2JnLXB1cnBsZS01MCcsCiAgICAgICAgICBhY2NlbnQ6ICd0ZXh0LXB1cnBsZS03MDAnLAogICAgICAgICAgYm9yZGVyOiAnYm9yZGVyLXB1cnBsZS0yMDAnCiAgICAgICAgfTsKICAgIH0KICB9OwoKICBjb25zdCBzdHlsZXMgPSBnZXRQcm9jZXNzU3R5bGVzKHByb2Nlc3NOdW1iZXIpOwogIAogIC8vIEdldCBlbmFibGluZyBlbGVtZW50cyBmb3IgcHJvY2VzcwogIGNvbnN0IGdldEVuYWJsaW5nRWxlbWVudHMgPSAocHJvY2Vzc051bWJlcjogc3RyaW5nKSA9PiB7CiAgICBzd2l0Y2ggKHByb2Nlc3NOdW1iZXIpIHsKICAgICAgY2FzZSAnT0UtNC4xJzoKICAgICAgICByZXR1cm4gWydSaXNrIE1hbmFnZW1lbnQnLCAnRG9jdW1lbnQgQ29udHJvbCcsICdDaGFuZ2UgTWFuYWdlbWVudCcsICdRdWFsaXR5IEFzc3VyYW5jZSddOwogICAgICBjYXNlICdPRS00LjInOgogICAgICAgIHJldHVybiBbJ1BlcmZvcm1hbmNlIE1vbml0b3JpbmcnLCAnTWFpbnRlbmFuY2UgUGxhbm5pbmcnLCAnSW5zcGVjdGlvbiBQcm9ncmFtcycsICdBc3NldCBJbnRlZ3JpdHknXTsKICAgICAgZGVmYXVsdDoKICAgICAgICByZXR1cm4gWydRdWFsaXR5IE1hbmFnZW1lbnQnLCAnUmlzayBBc3Nlc3NtZW50JywgJ0RvY3VtZW50YXRpb24nLCAnVHJhaW5pbmcnXTsKICAgIH0KICB9OwoKICBjb25zdCBlbmFibGluZ0VsZW1lbnRzID0gZ2V0RW5hYmxpbmdFbGVtZW50cyhwcm9jZXNzTnVtYmVyKTsKICAKICAvLyBHZXQgcHJvY2VzcyBkZXNjcmlwdGlvbgogIGNvbnN0IGdldFByb2Nlc3NEZXNjcmlwdGlvbiA9IChwcm9jZXNzTnVtYmVyOiBzdHJpbmcpID0+IHsKICAgIHN3aXRjaCAocHJvY2Vzc051bWJlcikgewogICAgICBjYXNlICdPRS00LjEnOgogICAgICAgIHJldHVybiB7CiAgICAgICAgICBwdXJwb3NlOiAiVGhpcyBwcm9jZXNzIGVuc3VyZXMgZWZmZWN0aXZlIG1hbmFnZW1lbnQgb2YgcGh5c2ljYWwgYXNzZXRzIHRocm91Z2hvdXQgdGhlaXIgZW50aXJlIGxpZmVjeWNsZSBmcm9tIGRlc2lnbiBhbmQgcHJvY3VyZW1lbnQgdGhyb3VnaCBjb25zdHJ1Y3Rpb24sIGNvbW1pc3Npb25pbmcsIGFuZCBoYW5kb3ZlciB0byBvcGVyYXRpb25zLiIsCiAgICAgICAgICBzY29wZTogIkFwcGxpZXMgdG8gYWxsIG1ham9yIGNhcGl0YWwgcHJvamVjdHMsIGVxdWlwbWVudCBwcm9jdXJlbWVudCwgYW5kIGluZnJhc3RydWN0dXJlIGRldmVsb3BtZW50IHdpdGhpbiBXU00gb3BlcmF0aW9ucy4iLAogICAgICAgICAgZXhwZWN0ZWRPdXRjb21lczogWyJPcHRpbWl6ZWQgYXNzZXQgcGVyZm9ybWFuY2UiLCAiQ29zdC1lZmZlY3RpdmUgcHJvY3VyZW1lbnQiLCAiUXVhbGl0eSBjb25zdHJ1Y3Rpb24gZGVsaXZlcnkiLCAiU21vb3RoIG9wZXJhdGlvbmFsIGhhbmRvdmVyIl0KICAgICAgICB9OwogICAgICBjYXNlICdPRS00LjInOgogICAgICAgIHJldHVybiB7CiAgICAgICAgICBwdXJwb3NlOiAiVGhpcyBwcm9jZXNzIGVzdGFibGlzaGVzIHN5c3RlbWF0aWMgYXBwcm9hY2hlcyBmb3IgbWFpbnRhaW5pbmcgYXNzZXQgaW50ZWdyaXR5LCBvcHRpbWl6aW5nIHBlcmZvcm1hbmNlLCBhbmQgZW5zdXJpbmcgc2FmZSBhbmQgcmVsaWFibGUgb3BlcmF0aW9ucyB0aHJvdWdob3V0IHRoZSBhc3NldCBsaWZlY3ljbGUuIiwKICAgICAgICAgIHNjb3BlOiAiQ292ZXJzIGFsbCBvcGVyYXRpb25hbCBhc3NldHMgaW5jbHVkaW5nIGZhY2lsaXRpZXMsIGVxdWlwbWVudCwgYW5kIGluZnJhc3RydWN0dXJlIHN5c3RlbXMgdW5kZXIgV1NNIG1hbmFnZW1lbnQuIiwKICAgICAgICAgIGV4cGVjdGVkT3V0Y29tZXM6IFsiTWF4aW11bSBhc3NldCB1cHRpbWUiLCAiUHJlZGljdGl2ZSBtYWludGVuYW5jZSIsICJDb3N0IG9wdGltaXphdGlvbiIsICJTYWZldHkgY29tcGxpYW5jZSJdCiAgICAgICAgfTsKICAgICAgZGVmYXVsdDoKICAgICAgICByZXR1cm4gewogICAgICAgICAgcHVycG9zZTogIlRoaXMgcHJvY2VzcyBkZWZpbmVzIHN5c3RlbWF0aWMgYXBwcm9hY2hlcyBmb3IgbWFuYWdpbmcgb3BlcmF0aW9uYWwgZXhjZWxsZW5jZSBhY3Rpdml0aWVzIHdpdGhpbiB0aGUgb3JnYW5pemF0aW9uLiIsCiAgICAgICAgICBzY29wZTogIkFwcGxpZXMgdG8gYWxsIHJlbGV2YW50IG9yZ2FuaXphdGlvbmFsIGFjdGl2aXRpZXMgYW5kIHN0YWtlaG9sZGVycy4iLAogICAgICAgICAgZXhwZWN0ZWRPdXRjb21lczogWyJJbXByb3ZlZCBlZmZpY2llbmN5IiwgIkVuaGFuY2VkIHF1YWxpdHkiLCAiUmlzayBtaXRpZ2F0aW9uIiwgIkNvbnRpbnVvdXMgaW1wcm92ZW1lbnQiXQogICAgICAgIH07CiAgICB9CiAgfTsKCiAgY29uc3QgcHJvY2Vzc0Rlc2MgPSBnZXRQcm9jZXNzRGVzY3JpcHRpb24ocHJvY2Vzc051bWJlcik7CgoKICByZXR1cm4gKAogICAgPENhcmQgY2xhc3NOYW1lPSJtYi02Ij4KICAgICAgPENhcmRIZWFkZXI+CiAgICAgICAgPENhcmRUaXRsZSBjbGFzc05hbWU9ImZsZXggaXRlbXMtY2VudGVyIHNwYWNlLXgtMiI+CiAgICAgICAgICA8ZGl2IAogICAgICAgICAgICBjbGFzc05hbWU9e2B3LTYgaC02ICR7c3R5bGVzLnByaW1hcnl9IHJvdW5kZWQtbGcgZmxleCBpdGVtcy1jZW50ZXIganVzdGlmeS1jZW50ZXIgdGV4dC13aGl0ZSB0ZXh0LXhzIGZvbnQtYm9sZGB9CiAgICAgICAgICA+CiAgICAgICAgICAgIHtzdGVwcy5sZW5ndGh9CiAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDxzcGFuPlByb2Nlc3MgRmxvdyBPdmVydmlldzwvc3Bhbj4KICAgICAgICAgIDxCYWRnZSB2YXJpYW50PSJvdXRsaW5lIiBjbGFzc05hbWU9e3N0eWxlcy5hY2NlbnR9PgogICAgICAgICAgICB7cHJvY2Vzc051bWJlcn0KICAgICAgICAgIDwvQmFkZ2U+CiAgICAgICAgPC9DYXJkVGl0bGU+CiAgICAgIDwvQ2FyZEhlYWRlcj4KICAgICAgPENhcmRDb250ZW50PgogICAgICAgIDxkaXYgY2xhc3NOYW1lPSJzcGFjZS15LTYiPgogICAgICAgICAgey8qIFByb2Nlc3MgVGl0bGUgKi99CiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0idGV4dC1jZW50ZXIiPgogICAgICAgICAgICA8aDMgY2xhc3NOYW1lPSJ0ZXh0LWxnIGZvbnQtc2VtaWJvbGQgbWItMiI+e3Byb2Nlc3NOYW1lfTwvaDM+CiAgICAgICAgICAgIDxwIGNsYXNzTmFtZT0idGV4dC1zbSB0ZXh0LW11dGVkLWZvcmVncm91bmQiPgogICAgICAgICAgICAgIHtzdGVwcy5sZW5ndGh9IHN0ZXB7c3RlcHMubGVuZ3RoICE9PSAxID8gJ3MnIDogJyd9IGluIHRoaXMgcHJvY2VzcwogICAgICAgICAgICA8L3A+CiAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICB7LyogRmxvdyBEaWFncmFtICovfQogICAgICAgICAgPGRpdiBjbGFzc05hbWU9ImZsZXggZmxleC1yb3cgaXRlbXMtY2VudGVyIGp1c3RpZnktc3RhcnQgc3BhY2UteC0zIG92ZXJmbG93LXgtYXV0byBwYi00Ij4KICAgICAgICAgICAge3N0ZXBzLm1hcCgoc3RlcCwgaW5kZXgpID0+ICgKICAgICAgICAgICAgICA8ZGl2IGtleT17c3RlcC5pZH0gY2xhc3NOYW1lPSJmbGV4IGl0ZW1zLWNlbnRlciBmbGV4LXNocmluay0wIj4KICAgICAgICAgICAgICAgIHsvKiBTdGVwIEJveCAqL30KICAgICAgICAgICAgICAgIDxkaXYgCiAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT17YG1pbi13LTMyIG1heC13LTQ4ICR7c3R5bGVzLnNlY29uZGFyeX0gJHtzdHlsZXMuYm9yZGVyfSByb3VuZGVkLWxnIHAtMyBib3JkZXIgaG92ZXI6c2hhZG93LXNtIHRyYW5zaXRpb24tYWxsIGR1cmF0aW9uLTIwMCBjdXJzb3ItcG9pbnRlciBncm91cGB9CiAgICAgICAgICAgICAgICAgIGRhdGEtdGVzdGlkPXtgZmxvdy1zdGVwLSR7aW5kZXh9YH0KICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9ImZsZXggaXRlbXMtY2VudGVyIHNwYWNlLXgtMiBtYi0yIj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17YHctNiBoLTYgJHtzdHlsZXMucHJpbWFyeX0gcm91bmRlZC1mdWxsIGZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktY2VudGVyIHRleHQtd2hpdGUgZm9udC1ib2xkIHRleHQteHNgfT4KICAgICAgICAgICAgICAgICAgICAgIHtzdGVwLnN0ZXBOdW1iZXJ9CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9ImZsZXgtMSI+CiAgICAgICAgICAgICAgICAgICAgICA8aDQgY2xhc3NOYW1lPXtgZm9udC1tZWRpdW0gdGV4dC14cyAke3N0eWxlcy5hY2NlbnR9IGdyb3VwLWhvdmVyOnRleHQtcHJpbWFyeSBsZWFkaW5nLXRpZ2h0YH0+CiAgICAgICAgICAgICAgICAgICAgICAgIHtzdGVwLnN0ZXBOYW1lfQogICAgICAgICAgICAgICAgICAgICAgPC9oND4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICB7c3RlcC5zdGVwRGV0YWlscyAmJiAoCiAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3NOYW1lPSJ0ZXh0LXhzIHRleHQtbXV0ZWQtZm9yZWdyb3VuZCBsZWFkaW5nLXJlbGF4ZWQiPgogICAgICAgICAgICAgICAgICAgICAge3N0ZXAuc3RlcERldGFpbHN9CiAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgICApfQogICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAge3N0ZXAucmVzcG9uc2liaWxpdGllcyAmJiAoCiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9Im10LTIgcHQtMiBib3JkZXItdCBib3JkZXItYm9yZGVyLzUwIj4KICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzTmFtZT0idGV4dC14cyBmb250LW1lZGl1bSB0ZXh0LW11dGVkLWZvcmVncm91bmQiPgogICAgICAgICAgICAgICAgICAgICAgICB7c3RlcC5yZXNwb25zaWJpbGl0aWVzfQogICAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICApfQogICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgICAgey8qIEFycm93IGNvbm5lY3RvciAoZXhjZXB0IGZvciBsYXN0IHN0ZXApICovfQogICAgICAgICAgICAgICAge2luZGV4IDwgc3RlcHMubGVuZ3RoIC0gMSAmJiAoCiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSJmbGV4IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWNlbnRlciBteC0yIj4KICAgICAgICAgICAgICAgICAgICA8Q2hldnJvblJpZ2h0IAogICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPXtgdy00IGgtNCAke3N0eWxlcy5hY2NlbnR9YH0KICAgICAgICAgICAgICAgICAgICAvPgogICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICl9CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICkpfQogICAgICAgICAgPC9kaXY+CgogICAgICAgICAgey8qIFByb2Nlc3MgRGVzY3JpcHRpb24gKi99CiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0iZ3JpZCBncmlkLWNvbHMtMSBtZDpncmlkLWNvbHMtMiBnYXAtNiI+CiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSJzcGFjZS15LTQiPgogICAgICAgICAgICAgIDxkaXY+CiAgICAgICAgICAgICAgICA8aDQgY2xhc3NOYW1lPSJmb250LXNlbWlib2xkIHRleHQtc20gbWItMiBmbGV4IGl0ZW1zLWNlbnRlciI+CiAgICAgICAgICAgICAgICAgIDxGaWxlVGV4dCBjbGFzc05hbWU9InctNCBoLTQgbXItMiIgLz4KICAgICAgICAgICAgICAgICAgUHVycG9zZQogICAgICAgICAgICAgICAgPC9oND4KICAgICAgICAgICAgICAgIDxwIGNsYXNzTmFtZT0idGV4dC1zbSB0ZXh0LW11dGVkLWZvcmVncm91bmQiPntwcm9jZXNzRGVzYy5wdXJwb3NlfTwvcD4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAKICAgICAgICAgICAgICA8ZGl2PgogICAgICAgICAgICAgICAgPGg0IGNsYXNzTmFtZT0iZm9udC1zZW1pYm9sZCB0ZXh0LXNtIG1iLTIiPlNjb3BlPC9oND4KICAgICAgICAgICAgICAgIDxwIGNsYXNzTmFtZT0idGV4dC1zbSB0ZXh0LW11dGVkLWZvcmVncm91bmQiPntwcm9jZXNzRGVzYy5zY29wZX08L3A+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAKICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9InNwYWNlLXktNCI+CiAgICAgICAgICAgICAgPGRpdj4KICAgICAgICAgICAgICAgIDxoNCBjbGFzc05hbWU9ImZvbnQtc2VtaWJvbGQgdGV4dC1zbSBtYi0yIj5FeHBlY3RlZCBPdXRjb21lczwvaDQ+CiAgICAgICAgICAgICAgICA8dWwgY2xhc3NOYW1lPSJ0ZXh0LXNtIHRleHQtbXV0ZWQtZm9yZWdyb3VuZCBzcGFjZS15LTEiPgogICAgICAgICAgICAgICAgICB7cHJvY2Vzc0Rlc2MuZXhwZWN0ZWRPdXRjb21lcy5tYXAoKG91dGNvbWUsIGluZGV4KSA9PiAoCiAgICAgICAgICAgICAgICAgICAgPGxpIGtleT17aW5kZXh9IGNsYXNzTmFtZT0iZmxleCBpdGVtcy1jZW50ZXIiPgogICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e2B3LTIgaC0yICR7c3R5bGVzLnByaW1hcnl9IHJvdW5kZWQtZnVsbCBtci0yYH0+PC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICB7b3V0Y29tZX0KICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICApKX0KICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC9kaXY+CgogICAgICAgICAgey8qIEVuYWJsaW5nIEVsZW1lbnRzICovfQogICAgICAgICAgPGRpdiBjbGFzc05hbWU9e2Ake3N0eWxlcy5zZWNvbmRhcnl9ICR7c3R5bGVzLmJvcmRlcn0gcm91bmRlZC1sZyBwLTQgYm9yZGVyYH0+CiAgICAgICAgICAgIDxoNCBjbGFzc05hbWU9ImZvbnQtc2VtaWJvbGQgdGV4dC1zbSBtYi0zIj5FbmFibGluZyBPRSBFbGVtZW50czwvaDQ+CiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSJncmlkIGdyaWQtY29scy0yIG1kOmdyaWQtY29scy00IGdhcC0yIj4KICAgICAgICAgICAgICB7ZW5hYmxpbmdFbGVtZW50cy5tYXAoKGVsZW1lbnQsIGluZGV4KSA9PiAoCiAgICAgICAgICAgICAgICA8ZGl2IGtleT17aW5kZXh9IGNsYXNzTmFtZT17YGJnLXdoaXRlIHJvdW5kZWQgcHgtMyBweS0yIHRleHQtY2VudGVyIGJvcmRlciAke3N0eWxlcy5ib3JkZXJ9YH0+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT17YHRleHQteHMgZm9udC1tZWRpdW0gJHtzdHlsZXMuYWNjZW50fWB9PntlbGVtZW50fTwvc3Bhbj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICkpfQogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgIHsvKiBQcm9jZXNzIFN1bW1hcnkgKi99CiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17YCR7c3R5bGVzLnNlY29uZGFyeX0gcm91bmRlZC1sZyBwLTQgYm9yZGVyIGJvcmRlci1ib3JkZXIvNTBgfT4KICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9ImZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktYmV0d2VlbiB0ZXh0LXNtIj4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0iZmxleCBpdGVtcy1jZW50ZXIgc3BhY2UteC00Ij4KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT0iZm9udC1tZWRpdW0iPlByb2Nlc3MgU3VtbWFyeTo8L3NwYW4+CiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9InRleHQtbXV0ZWQtZm9yZWdyb3VuZCI+CiAgICAgICAgICAgICAgICAgIHtwcm9jZXNzTnVtYmVyID09PSAnT0UtNC4xJyAmJiAnRGVzaWduIOKGkiBQcm9jdXJlIOKGkiBDb25zdHJ1Y3Qg4oaSIENvbW1pc3Npb24nfQogICAgICAgICAgICAgICAgICB7cHJvY2Vzc051bWJlciA9PT0gJ09FLTQuMicgJiYgJ1N0cmF0ZWd5IOKGkiBPcGVyYXRlIOKGkiBNb25pdG9yIOKGkiBJbXByb3ZlJ30KICAgICAgICAgICAgICAgICAgeyFbJ09FLTQuMScsICdPRS00LjInXS5pbmNsdWRlcyhwcm9jZXNzTnVtYmVyKSAmJiAnU2VxdWVudGlhbCBQcm9jZXNzIEZsb3cnfQogICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgIDxCYWRnZSB2YXJpYW50PSJzZWNvbmRhcnkiIGNsYXNzTmFtZT0idGV4dC14cyI+CiAgICAgICAgICAgICAgICBIb3Jpem9udGFsIEZsb3cKICAgICAgICAgICAgICA8L0JhZGdlPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgICA8L0NhcmRDb250ZW50PgogICAgPC9DYXJkPgogICk7Cn0=
:FILE_8_END

:FILE_9_PATH
client/src/components/process-form.tsx
:FILE_9_DATA

:FILE_9_END

:FILE_10_PATH
client/src/components/sidebar.tsx
:FILE_10_DATA
aW1wb3J0IHsgTGluaywgdXNlTG9jYXRpb24gfSBmcm9tICJ3b3V0ZXIiOwppbXBvcnQgeyB1c2VBdXRoIH0gZnJvbSAiQC9ob29rcy91c2VBdXRoIjsKaW1wb3J0IHsgQnV0dG9uIH0gZnJvbSAiQC9jb21wb25lbnRzL3VpL2J1dHRvbiI7CmltcG9ydCB7IFNlcGFyYXRvciB9IGZyb20gIkAvY29tcG9uZW50cy91aS9zZXBhcmF0b3IiOwppbXBvcnQgeyAKICBIb21lLCAKICBGb2xkZXIsIAogIENvZywKICBMb2dPdXQsCiAgTmV0d29yaywKICBCYXJDaGFydDMsCiAgU2hpZWxkCn0gZnJvbSAibHVjaWRlLXJlYWN0IjsKCmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIFNpZGViYXIoKSB7CiAgY29uc3QgW2xvY2F0aW9uXSA9IHVzZUxvY2F0aW9uKCk7CiAgY29uc3QgeyB1c2VyIH0gPSB1c2VBdXRoKCk7CgogIGNvbnN0IG5hdmlnYXRpb24gPSBbCiAgICB7IG5hbWU6ICJIb21lIiwgaHJlZjogIi8iLCBpY29uOiBIb21lIH0sCiAgICB7IG5hbWU6ICJBbGwgUHJvY2Vzc2VzIiwgaHJlZjogIi9wcm9jZXNzZXMiLCBpY29uOiBGb2xkZXIgfSwKICAgIHsgbmFtZTogIk1pbmQgTWFwIiwgaHJlZjogIi9taW5kbWFwIiwgaWNvbjogTmV0d29yayB9LAogICAgeyBuYW1lOiAiQmFsYW5jZWQgU2NvcmVjYXJkIiwgaHJlZjogIi9zY29yZWNhcmQiLCBpY29uOiBCYXJDaGFydDMgfSwKICAgIHsgbmFtZTogIlJpc2sgTWFuYWdlbWVudCIsIGhyZWY6ICIvcmlzay1tYW5hZ2VtZW50IiwgaWNvbjogU2hpZWxkIH0sCiAgXTsKCiAgY29uc3QgaXNBY3RpdmUgPSAoaHJlZjogc3RyaW5nKSA9PiB7CiAgICBpZiAoaHJlZiA9PT0gIi8iKSB7CiAgICAgIHJldHVybiBsb2NhdGlvbiA9PT0gaHJlZjsKICAgIH0KICAgIHJldHVybiBsb2NhdGlvbi5zdGFydHNXaXRoKGhyZWYpOwogIH07CgogIHJldHVybiAoCiAgICA8YXNpZGUgY2xhc3NOYW1lPSJ3LTY0IGJnLXNpZGViYXIgYm9yZGVyLXIgYm9yZGVyLXNpZGViYXItYm9yZGVyIHNpZGViYXItc2hhZG93IGhpZGRlbiBsZzpibG9jayI+CiAgICAgIDxkaXYgY2xhc3NOYW1lPSJwLTYiPgogICAgICAgIHsvKiBMb2dvICovfQogICAgICAgIDxkaXYgY2xhc3NOYW1lPSJmbGV4IGl0ZW1zLWNlbnRlciBzcGFjZS14LTMgbWItOCI+CiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0idy0xMCBoLTEwIGJnLXNpZGViYXItcHJpbWFyeSByb3VuZGVkLWxnIGZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktY2VudGVyIj4KICAgICAgICAgICAgPENvZyBjbGFzc05hbWU9InRleHQtc2lkZWJhci1wcmltYXJ5LWZvcmVncm91bmQgdGV4dC1sZyIgLz4KICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPGRpdj4KICAgICAgICAgICAgPGgxIGNsYXNzTmFtZT0idGV4dC1sZyBmb250LXNlbWlib2xkIHRleHQtc2lkZWJhci1mb3JlZ3JvdW5kIj5PRSBNYW5hZ2VyPC9oMT4KICAgICAgICAgICAgPHAgY2xhc3NOYW1lPSJ0ZXh0LXNtIHRleHQtbXV0ZWQtZm9yZWdyb3VuZCI+UHJvY2VzcyBDb250cm9sPC9wPgogICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgICAgCiAgICAgICAgey8qIE5hdmlnYXRpb24gKi99CiAgICAgICAgPG5hdiBjbGFzc05hbWU9InNwYWNlLXktMiI+CiAgICAgICAgICB7bmF2aWdhdGlvbi5tYXAoKGl0ZW0pID0+IHsKICAgICAgICAgICAgY29uc3QgSWNvbiA9IGl0ZW0uaWNvbjsKICAgICAgICAgICAgcmV0dXJuICgKICAgICAgICAgICAgICA8TGluayBrZXk9e2l0ZW0ubmFtZX0gaHJlZj17aXRlbS5ocmVmfT4KICAgICAgICAgICAgICAgIDxCdXR0b24KICAgICAgICAgICAgICAgICAgdmFyaWFudD17aXNBY3RpdmUoaXRlbS5ocmVmKSA/ICJkZWZhdWx0IiA6ICJnaG9zdCJ9CiAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT17YHctZnVsbCBqdXN0aWZ5LXN0YXJ0ICR7CiAgICAgICAgICAgICAgICAgICAgaXNBY3RpdmUoaXRlbS5ocmVmKSAKICAgICAgICAgICAgICAgICAgICAgID8gImJnLXNpZGViYXItcHJpbWFyeSB0ZXh0LXNpZGViYXItcHJpbWFyeS1mb3JlZ3JvdW5kIiAKICAgICAgICAgICAgICAgICAgICAgIDogInRleHQtc2lkZWJhci1mb3JlZ3JvdW5kIGhvdmVyOmJnLXNpZGViYXItYWNjZW50IGhvdmVyOnRleHQtc2lkZWJhci1hY2NlbnQtZm9yZWdyb3VuZCIKICAgICAgICAgICAgICAgICAgfWB9CiAgICAgICAgICAgICAgICAgIGRhdGEtdGVzdGlkPXtgbmF2LSR7aXRlbS5uYW1lLnRvTG93ZXJDYXNlKCkucmVwbGFjZSgvXHMrL2csICctJyl9YH0KICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgPEljb24gY2xhc3NOYW1lPSJ3LTUgaC01IG1yLTMiIC8+CiAgICAgICAgICAgICAgICAgIHtpdGVtLm5hbWV9CiAgICAgICAgICAgICAgICA8L0J1dHRvbj4KICAgICAgICAgICAgICA8L0xpbms+CiAgICAgICAgICAgICk7CiAgICAgICAgICB9KX0KICAgICAgICA8L25hdj4KICAgICAgPC9kaXY+CiAgICAgIAogICAgICB7LyogVXNlciBQcm9maWxlICovfQogICAgICA8ZGl2IGNsYXNzTmFtZT0ibXQtYXV0byBwLTYgYm9yZGVyLXQgYm9yZGVyLXNpZGViYXItYm9yZGVyIj4KICAgICAgICA8ZGl2IGNsYXNzTmFtZT0iZmxleCBpdGVtcy1jZW50ZXIgc3BhY2UteC0zIG1iLTQiPgogICAgICAgICAge3VzZXI/LnByb2ZpbGVJbWFnZVVybCA/ICgKICAgICAgICAgICAgPGltZyAKICAgICAgICAgICAgICBzcmM9e3VzZXIucHJvZmlsZUltYWdlVXJsfSAKICAgICAgICAgICAgICBhbHQ9IlVzZXIgQXZhdGFyIiAKICAgICAgICAgICAgICBjbGFzc05hbWU9InctMTAgaC0xMCByb3VuZGVkLWZ1bGwgb2JqZWN0LWNvdmVyIgogICAgICAgICAgICAgIGRhdGEtdGVzdGlkPSJ1c2VyLWF2YXRhciIKICAgICAgICAgICAgLz4KICAgICAgICAgICkgOiAoCiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSJ3LTEwIGgtMTAgYmctc2lkZWJhci1hY2NlbnQgcm91bmRlZC1mdWxsIGZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktY2VudGVyIj4KICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9InRleHQtc2lkZWJhci1hY2NlbnQtZm9yZWdyb3VuZCBmb250LW1lZGl1bSI+CiAgICAgICAgICAgICAgICB7dXNlcj8uZmlyc3ROYW1lPy5bMF0gfHwgdXNlcj8uZW1haWw/LlswXSB8fCAnPyd9CiAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICl9CiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0iZmxleC0xIG1pbi13LTAiPgogICAgICAgICAgICA8cCBjbGFzc05hbWU9InRleHQtc20gZm9udC1tZWRpdW0gdGV4dC1zaWRlYmFyLWZvcmVncm91bmQgdHJ1bmNhdGUiIGRhdGEtdGVzdGlkPSJ1c2VyLW5hbWUiPgogICAgICAgICAgICAgIHt1c2VyPy5maXJzdE5hbWUgJiYgdXNlcj8ubGFzdE5hbWUgCiAgICAgICAgICAgICAgICA/IGAke3VzZXIuZmlyc3ROYW1lfSAke3VzZXIubGFzdE5hbWV9YCAKICAgICAgICAgICAgICAgIDogdXNlcj8uZW1haWwgfHwgJ1VzZXInCiAgICAgICAgICAgICAgfQogICAgICAgICAgICA8L3A+CiAgICAgICAgICAgIDxwIGNsYXNzTmFtZT0idGV4dC14cyB0ZXh0LW11dGVkLWZvcmVncm91bmQgdHJ1bmNhdGUiPlByb2Nlc3MgTWFuYWdlcjwvcD4KICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgICAgIAogICAgICAgIDxTZXBhcmF0b3IgY2xhc3NOYW1lPSJtYi00IiAvPgogICAgICAgIAogICAgICAgIDxCdXR0b24KICAgICAgICAgIHZhcmlhbnQ9Imdob3N0IgogICAgICAgICAgc2l6ZT0ic20iCiAgICAgICAgICBjbGFzc05hbWU9InctZnVsbCBqdXN0aWZ5LXN0YXJ0IHRleHQtc2lkZWJhci1mb3JlZ3JvdW5kIGhvdmVyOmJnLXNpZGViYXItYWNjZW50IGhvdmVyOnRleHQtc2lkZWJhci1hY2NlbnQtZm9yZWdyb3VuZCIKICAgICAgICAgIG9uQ2xpY2s9eygpID0+IHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gJy9hcGkvbG9nb3V0J30KICAgICAgICAgIGRhdGEtdGVzdGlkPSJidXR0b24tbG9nb3V0IgogICAgICAgID4KICAgICAgICAgIDxMb2dPdXQgY2xhc3NOYW1lPSJ3LTQgaC00IG1yLTIiIC8+CiAgICAgICAgICBMb2dvdXQKICAgICAgICA8L0J1dHRvbj4KICAgICAgPC9kaXY+CiAgICA8L2FzaWRlPgogICk7Cn0K
:FILE_10_END

:FILE_11_PATH
client/src/components/ui/accordion.tsx
:FILE_11_DATA
aW1wb3J0ICogYXMgUmVhY3QgZnJvbSAicmVhY3QiCmltcG9ydCAqIGFzIEFjY29yZGlvblByaW1pdGl2ZSBmcm9tICJAcmFkaXgtdWkvcmVhY3QtYWNjb3JkaW9uIgppbXBvcnQgeyBDaGV2cm9uRG93biB9IGZyb20gImx1Y2lkZS1yZWFjdCIKCmltcG9ydCB7IGNuIH0gZnJvbSAiQC9saWIvdXRpbHMiCgpjb25zdCBBY2NvcmRpb24gPSBBY2NvcmRpb25QcmltaXRpdmUuUm9vdAoKY29uc3QgQWNjb3JkaW9uSXRlbSA9IFJlYWN0LmZvcndhcmRSZWY8CiAgUmVhY3QuRWxlbWVudFJlZjx0eXBlb2YgQWNjb3JkaW9uUHJpbWl0aXZlLkl0ZW0+LAogIFJlYWN0LkNvbXBvbmVudFByb3BzV2l0aG91dFJlZjx0eXBlb2YgQWNjb3JkaW9uUHJpbWl0aXZlLkl0ZW0+Cj4oKHsgY2xhc3NOYW1lLCAuLi5wcm9wcyB9LCByZWYpID0+ICgKICA8QWNjb3JkaW9uUHJpbWl0aXZlLkl0ZW0KICAgIHJlZj17cmVmfQogICAgY2xhc3NOYW1lPXtjbigiYm9yZGVyLWIiLCBjbGFzc05hbWUpfQogICAgey4uLnByb3BzfQogIC8+CikpCkFjY29yZGlvbkl0ZW0uZGlzcGxheU5hbWUgPSAiQWNjb3JkaW9uSXRlbSIKCmNvbnN0IEFjY29yZGlvblRyaWdnZXIgPSBSZWFjdC5mb3J3YXJkUmVmPAogIFJlYWN0LkVsZW1lbnRSZWY8dHlwZW9mIEFjY29yZGlvblByaW1pdGl2ZS5UcmlnZ2VyPiwKICBSZWFjdC5Db21wb25lbnRQcm9wc1dpdGhvdXRSZWY8dHlwZW9mIEFjY29yZGlvblByaW1pdGl2ZS5UcmlnZ2VyPgo+KCh7IGNsYXNzTmFtZSwgY2hpbGRyZW4sIC4uLnByb3BzIH0sIHJlZikgPT4gKAogIDxBY2NvcmRpb25QcmltaXRpdmUuSGVhZGVyIGNsYXNzTmFtZT0iZmxleCI+CiAgICA8QWNjb3JkaW9uUHJpbWl0aXZlLlRyaWdnZXIKICAgICAgcmVmPXtyZWZ9CiAgICAgIGNsYXNzTmFtZT17Y24oCiAgICAgICAgImZsZXggZmxleC0xIGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWJldHdlZW4gcHktNCBmb250LW1lZGl1bSB0cmFuc2l0aW9uLWFsbCBob3Zlcjp1bmRlcmxpbmUgWyZbZGF0YS1zdGF0ZT1vcGVuXT5zdmddOnJvdGF0ZS0xODAiLAogICAgICAgIGNsYXNzTmFtZQogICAgICApfQogICAgICB7Li4ucHJvcHN9CiAgICA+CiAgICAgIHtjaGlsZHJlbn0KICAgICAgPENoZXZyb25Eb3duIGNsYXNzTmFtZT0iaC00IHctNCBzaHJpbmstMCB0cmFuc2l0aW9uLXRyYW5zZm9ybSBkdXJhdGlvbi0yMDAiIC8+CiAgICA8L0FjY29yZGlvblByaW1pdGl2ZS5UcmlnZ2VyPgogIDwvQWNjb3JkaW9uUHJpbWl0aXZlLkhlYWRlcj4KKSkKQWNjb3JkaW9uVHJpZ2dlci5kaXNwbGF5TmFtZSA9IEFjY29yZGlvblByaW1pdGl2ZS5UcmlnZ2VyLmRpc3BsYXlOYW1lCgpjb25zdCBBY2NvcmRpb25Db250ZW50ID0gUmVhY3QuZm9yd2FyZFJlZjwKICBSZWFjdC5FbGVtZW50UmVmPHR5cGVvZiBBY2NvcmRpb25QcmltaXRpdmUuQ29udGVudD4sCiAgUmVhY3QuQ29tcG9uZW50UHJvcHNXaXRob3V0UmVmPHR5cGVvZiBBY2NvcmRpb25QcmltaXRpdmUuQ29udGVudD4KPigoeyBjbGFzc05hbWUsIGNoaWxkcmVuLCAuLi5wcm9wcyB9LCByZWYpID0+ICgKICA8QWNjb3JkaW9uUHJpbWl0aXZlLkNvbnRlbnQKICAgIHJlZj17cmVmfQogICAgY2xhc3NOYW1lPSJvdmVyZmxvdy1oaWRkZW4gdGV4dC1zbSB0cmFuc2l0aW9uLWFsbCBkYXRhLVtzdGF0ZT1jbG9zZWRdOmFuaW1hdGUtYWNjb3JkaW9uLXVwIGRhdGEtW3N0YXRlPW9wZW5dOmFuaW1hdGUtYWNjb3JkaW9uLWRvd24iCiAgICB7Li4ucHJvcHN9CiAgPgogICAgPGRpdiBjbGFzc05hbWU9e2NuKCJwYi00IHB0LTAiLCBjbGFzc05hbWUpfT57Y2hpbGRyZW59PC9kaXY+CiAgPC9BY2NvcmRpb25QcmltaXRpdmUuQ29udGVudD4KKSkKCkFjY29yZGlvbkNvbnRlbnQuZGlzcGxheU5hbWUgPSBBY2NvcmRpb25QcmltaXRpdmUuQ29udGVudC5kaXNwbGF5TmFtZQoKZXhwb3J0IHsgQWNjb3JkaW9uLCBBY2NvcmRpb25JdGVtLCBBY2NvcmRpb25UcmlnZ2VyLCBBY2NvcmRpb25Db250ZW50IH0K
:FILE_11_END

:FILE_12_PATH
client/src/components/ui/alert-dialog.tsx
:FILE_12_DATA
aW1wb3J0ICogYXMgUmVhY3QgZnJvbSAicmVhY3QiCmltcG9ydCAqIGFzIEFsZXJ0RGlhbG9nUHJpbWl0aXZlIGZyb20gIkByYWRpeC11aS9yZWFjdC1hbGVydC1kaWFsb2ciCgppbXBvcnQgeyBjbiB9IGZyb20gIkAvbGliL3V0aWxzIgppbXBvcnQgeyBidXR0b25WYXJpYW50cyB9IGZyb20gIkAvY29tcG9uZW50cy91aS9idXR0b24iCgpjb25zdCBBbGVydERpYWxvZyA9IEFsZXJ0RGlhbG9nUHJpbWl0aXZlLlJvb3QKCmNvbnN0IEFsZXJ0RGlhbG9nVHJpZ2dlciA9IEFsZXJ0RGlhbG9nUHJpbWl0aXZlLlRyaWdnZXIKCmNvbnN0IEFsZXJ0RGlhbG9nUG9ydGFsID0gQWxlcnREaWFsb2dQcmltaXRpdmUuUG9ydGFsCgpjb25zdCBBbGVydERpYWxvZ092ZXJsYXkgPSBSZWFjdC5mb3J3YXJkUmVmPAogIFJlYWN0LkVsZW1lbnRSZWY8dHlwZW9mIEFsZXJ0RGlhbG9nUHJpbWl0aXZlLk92ZXJsYXk+LAogIFJlYWN0LkNvbXBvbmVudFByb3BzV2l0aG91dFJlZjx0eXBlb2YgQWxlcnREaWFsb2dQcmltaXRpdmUuT3ZlcmxheT4KPigoeyBjbGFzc05hbWUsIC4uLnByb3BzIH0sIHJlZikgPT4gKAogIDxBbGVydERpYWxvZ1ByaW1pdGl2ZS5PdmVybGF5CiAgICBjbGFzc05hbWU9e2NuKAogICAgICAiZml4ZWQgaW5zZXQtMCB6LTUwIGJnLWJsYWNrLzgwICBkYXRhLVtzdGF0ZT1vcGVuXTphbmltYXRlLWluIGRhdGEtW3N0YXRlPWNsb3NlZF06YW5pbWF0ZS1vdXQgZGF0YS1bc3RhdGU9Y2xvc2VkXTpmYWRlLW91dC0wIGRhdGEtW3N0YXRlPW9wZW5dOmZhZGUtaW4tMCIsCiAgICAgIGNsYXNzTmFtZQogICAgKX0KICAgIHsuLi5wcm9wc30KICAgIHJlZj17cmVmfQogIC8+CikpCkFsZXJ0RGlhbG9nT3ZlcmxheS5kaXNwbGF5TmFtZSA9IEFsZXJ0RGlhbG9nUHJpbWl0aXZlLk92ZXJsYXkuZGlzcGxheU5hbWUKCmNvbnN0IEFsZXJ0RGlhbG9nQ29udGVudCA9IFJlYWN0LmZvcndhcmRSZWY8CiAgUmVhY3QuRWxlbWVudFJlZjx0eXBlb2YgQWxlcnREaWFsb2dQcmltaXRpdmUuQ29udGVudD4sCiAgUmVhY3QuQ29tcG9uZW50UHJvcHNXaXRob3V0UmVmPHR5cGVvZiBBbGVydERpYWxvZ1ByaW1pdGl2ZS5Db250ZW50Pgo+KCh7IGNsYXNzTmFtZSwgLi4ucHJvcHMgfSwgcmVmKSA9PiAoCiAgPEFsZXJ0RGlhbG9nUG9ydGFsPgogICAgPEFsZXJ0RGlhbG9nT3ZlcmxheSAvPgogICAgPEFsZXJ0RGlhbG9nUHJpbWl0aXZlLkNvbnRlbnQKICAgICAgcmVmPXtyZWZ9CiAgICAgIGNsYXNzTmFtZT17Y24oCiAgICAgICAgImZpeGVkIGxlZnQtWzUwJV0gdG9wLVs1MCVdIHotNTAgZ3JpZCB3LWZ1bGwgbWF4LXctbGcgdHJhbnNsYXRlLXgtWy01MCVdIHRyYW5zbGF0ZS15LVstNTAlXSBnYXAtNCBib3JkZXIgYmctYmFja2dyb3VuZCBwLTYgc2hhZG93LWxnIGR1cmF0aW9uLTIwMCBkYXRhLVtzdGF0ZT1vcGVuXTphbmltYXRlLWluIGRhdGEtW3N0YXRlPWNsb3NlZF06YW5pbWF0ZS1vdXQgZGF0YS1bc3RhdGU9Y2xvc2VkXTpmYWRlLW91dC0wIGRhdGEtW3N0YXRlPW9wZW5dOmZhZGUtaW4tMCBkYXRhLVtzdGF0ZT1jbG9zZWRdOnpvb20tb3V0LTk1IGRhdGEtW3N0YXRlPW9wZW5dOnpvb20taW4tOTUgZGF0YS1bc3RhdGU9Y2xvc2VkXTpzbGlkZS1vdXQtdG8tbGVmdC0xLzIgZGF0YS1bc3RhdGU9Y2xvc2VkXTpzbGlkZS1vdXQtdG8tdG9wLVs0OCVdIGRhdGEtW3N0YXRlPW9wZW5dOnNsaWRlLWluLWZyb20tbGVmdC0xLzIgZGF0YS1bc3RhdGU9b3Blbl06c2xpZGUtaW4tZnJvbS10b3AtWzQ4JV0gc206cm91bmRlZC1sZyIsCiAgICAgICAgY2xhc3NOYW1lCiAgICAgICl9CiAgICAgIHsuLi5wcm9wc30KICAgIC8+CiAgPC9BbGVydERpYWxvZ1BvcnRhbD4KKSkKQWxlcnREaWFsb2dDb250ZW50LmRpc3BsYXlOYW1lID0gQWxlcnREaWFsb2dQcmltaXRpdmUuQ29udGVudC5kaXNwbGF5TmFtZQoKY29uc3QgQWxlcnREaWFsb2dIZWFkZXIgPSAoewogIGNsYXNzTmFtZSwKICAuLi5wcm9wcwp9OiBSZWFjdC5IVE1MQXR0cmlidXRlczxIVE1MRGl2RWxlbWVudD4pID0+ICgKICA8ZGl2CiAgICBjbGFzc05hbWU9e2NuKAogICAgICAiZmxleCBmbGV4LWNvbCBzcGFjZS15LTIgdGV4dC1jZW50ZXIgc206dGV4dC1sZWZ0IiwKICAgICAgY2xhc3NOYW1lCiAgICApfQogICAgey4uLnByb3BzfQogIC8+CikKQWxlcnREaWFsb2dIZWFkZXIuZGlzcGxheU5hbWUgPSAiQWxlcnREaWFsb2dIZWFkZXIiCgpjb25zdCBBbGVydERpYWxvZ0Zvb3RlciA9ICh7CiAgY2xhc3NOYW1lLAogIC4uLnByb3BzCn06IFJlYWN0LkhUTUxBdHRyaWJ1dGVzPEhUTUxEaXZFbGVtZW50PikgPT4gKAogIDxkaXYKICAgIGNsYXNzTmFtZT17Y24oCiAgICAgICJmbGV4IGZsZXgtY29sLXJldmVyc2Ugc206ZmxleC1yb3cgc206anVzdGlmeS1lbmQgc206c3BhY2UteC0yIiwKICAgICAgY2xhc3NOYW1lCiAgICApfQogICAgey4uLnByb3BzfQogIC8+CikKQWxlcnREaWFsb2dGb290ZXIuZGlzcGxheU5hbWUgPSAiQWxlcnREaWFsb2dGb290ZXIiCgpjb25zdCBBbGVydERpYWxvZ1RpdGxlID0gUmVhY3QuZm9yd2FyZFJlZjwKICBSZWFjdC5FbGVtZW50UmVmPHR5cGVvZiBBbGVydERpYWxvZ1ByaW1pdGl2ZS5UaXRsZT4sCiAgUmVhY3QuQ29tcG9uZW50UHJvcHNXaXRob3V0UmVmPHR5cGVvZiBBbGVydERpYWxvZ1ByaW1pdGl2ZS5UaXRsZT4KPigoeyBjbGFzc05hbWUsIC4uLnByb3BzIH0sIHJlZikgPT4gKAogIDxBbGVydERpYWxvZ1ByaW1pdGl2ZS5UaXRsZQogICAgcmVmPXtyZWZ9CiAgICBjbGFzc05hbWU9e2NuKCJ0ZXh0LWxnIGZvbnQtc2VtaWJvbGQiLCBjbGFzc05hbWUpfQogICAgey4uLnByb3BzfQogIC8+CikpCkFsZXJ0RGlhbG9nVGl0bGUuZGlzcGxheU5hbWUgPSBBbGVydERpYWxvZ1ByaW1pdGl2ZS5UaXRsZS5kaXNwbGF5TmFtZQoKY29uc3QgQWxlcnREaWFsb2dEZXNjcmlwdGlvbiA9IFJlYWN0LmZvcndhcmRSZWY8CiAgUmVhY3QuRWxlbWVudFJlZjx0eXBlb2YgQWxlcnREaWFsb2dQcmltaXRpdmUuRGVzY3JpcHRpb24+LAogIFJlYWN0LkNvbXBvbmVudFByb3BzV2l0aG91dFJlZjx0eXBlb2YgQWxlcnREaWFsb2dQcmltaXRpdmUuRGVzY3JpcHRpb24+Cj4oKHsgY2xhc3NOYW1lLCAuLi5wcm9wcyB9LCByZWYpID0+ICgKICA8QWxlcnREaWFsb2dQcmltaXRpdmUuRGVzY3JpcHRpb24KICAgIHJlZj17cmVmfQogICAgY2xhc3NOYW1lPXtjbigidGV4dC1zbSB0ZXh0LW11dGVkLWZvcmVncm91bmQiLCBjbGFzc05hbWUpfQogICAgey4uLnByb3BzfQogIC8+CikpCkFsZXJ0RGlhbG9nRGVzY3JpcHRpb24uZGlzcGxheU5hbWUgPQogIEFsZXJ0RGlhbG9nUHJpbWl0aXZlLkRlc2NyaXB0aW9uLmRpc3BsYXlOYW1lCgpjb25zdCBBbGVydERpYWxvZ0FjdGlvbiA9IFJlYWN0LmZvcndhcmRSZWY8CiAgUmVhY3QuRWxlbWVudFJlZjx0eXBlb2YgQWxlcnREaWFsb2dQcmltaXRpdmUuQWN0aW9uPiwKICBSZWFjdC5Db21wb25lbnRQcm9wc1dpdGhvdXRSZWY8dHlwZW9mIEFsZXJ0RGlhbG9nUHJpbWl0aXZlLkFjdGlvbj4KPigoeyBjbGFzc05hbWUsIC4uLnByb3BzIH0sIHJlZikgPT4gKAogIDxBbGVydERpYWxvZ1ByaW1pdGl2ZS5BY3Rpb24KICAgIHJlZj17cmVmfQogICAgY2xhc3NOYW1lPXtjbihidXR0b25WYXJpYW50cygpLCBjbGFzc05hbWUpfQogICAgey4uLnByb3BzfQogIC8+CikpCkFsZXJ0RGlhbG9nQWN0aW9uLmRpc3BsYXlOYW1lID0gQWxlcnREaWFsb2dQcmltaXRpdmUuQWN0aW9uLmRpc3BsYXlOYW1lCgpjb25zdCBBbGVydERpYWxvZ0NhbmNlbCA9IFJlYWN0LmZvcndhcmRSZWY8CiAgUmVhY3QuRWxlbWVudFJlZjx0eXBlb2YgQWxlcnREaWFsb2dQcmltaXRpdmUuQ2FuY2VsPiwKICBSZWFjdC5Db21wb25lbnRQcm9wc1dpdGhvdXRSZWY8dHlwZW9mIEFsZXJ0RGlhbG9nUHJpbWl0aXZlLkNhbmNlbD4KPigoeyBjbGFzc05hbWUsIC4uLnByb3BzIH0sIHJlZikgPT4gKAogIDxBbGVydERpYWxvZ1ByaW1pdGl2ZS5DYW5jZWwKICAgIHJlZj17cmVmfQogICAgY2xhc3NOYW1lPXtjbigKICAgICAgYnV0dG9uVmFyaWFudHMoeyB2YXJpYW50OiAib3V0bGluZSIgfSksCiAgICAgICJtdC0yIHNtOm10LTAiLAogICAgICBjbGFzc05hbWUKICAgICl9CiAgICB7Li4ucHJvcHN9CiAgLz4KKSkKQWxlcnREaWFsb2dDYW5jZWwuZGlzcGxheU5hbWUgPSBBbGVydERpYWxvZ1ByaW1pdGl2ZS5DYW5jZWwuZGlzcGxheU5hbWUKCmV4cG9ydCB7CiAgQWxlcnREaWFsb2csCiAgQWxlcnREaWFsb2dQb3J0YWwsCiAgQWxlcnREaWFsb2dPdmVybGF5LAogIEFsZXJ0RGlhbG9nVHJpZ2dlciwKICBBbGVydERpYWxvZ0NvbnRlbnQsCiAgQWxlcnREaWFsb2dIZWFkZXIsCiAgQWxlcnREaWFsb2dGb290ZXIsCiAgQWxlcnREaWFsb2dUaXRsZSwKICBBbGVydERpYWxvZ0Rlc2NyaXB0aW9uLAogIEFsZXJ0RGlhbG9nQWN0aW9uLAogIEFsZXJ0RGlhbG9nQ2FuY2VsLAp9Cg==
:FILE_12_END

:FILE_13_PATH
client/src/components/ui/alert.tsx
:FILE_13_DATA
aW1wb3J0ICogYXMgUmVhY3QgZnJvbSAicmVhY3QiCmltcG9ydCB7IGN2YSwgdHlwZSBWYXJpYW50UHJvcHMgfSBmcm9tICJjbGFzcy12YXJpYW5jZS1hdXRob3JpdHkiCgppbXBvcnQgeyBjbiB9IGZyb20gIkAvbGliL3V0aWxzIgoKY29uc3QgYWxlcnRWYXJpYW50cyA9IGN2YSgKICAicmVsYXRpdmUgdy1mdWxsIHJvdW5kZWQtbGcgYm9yZGVyIHAtNCBbJj5zdmd+Kl06cGwtNyBbJj5zdmcrZGl2XTp0cmFuc2xhdGUteS1bLTNweF0gWyY+c3ZnXTphYnNvbHV0ZSBbJj5zdmddOmxlZnQtNCBbJj5zdmddOnRvcC00IFsmPnN2Z106dGV4dC1mb3JlZ3JvdW5kIiwKICB7CiAgICB2YXJpYW50czogewogICAgICB2YXJpYW50OiB7CiAgICAgICAgZGVmYXVsdDogImJnLWJhY2tncm91bmQgdGV4dC1mb3JlZ3JvdW5kIiwKICAgICAgICBkZXN0cnVjdGl2ZToKICAgICAgICAgICJib3JkZXItZGVzdHJ1Y3RpdmUvNTAgdGV4dC1kZXN0cnVjdGl2ZSBkYXJrOmJvcmRlci1kZXN0cnVjdGl2ZSBbJj5zdmddOnRleHQtZGVzdHJ1Y3RpdmUiLAogICAgICB9LAogICAgfSwKICAgIGRlZmF1bHRWYXJpYW50czogewogICAgICB2YXJpYW50OiAiZGVmYXVsdCIsCiAgICB9LAogIH0KKQoKY29uc3QgQWxlcnQgPSBSZWFjdC5mb3J3YXJkUmVmPAogIEhUTUxEaXZFbGVtZW50LAogIFJlYWN0LkhUTUxBdHRyaWJ1dGVzPEhUTUxEaXZFbGVtZW50PiAmIFZhcmlhbnRQcm9wczx0eXBlb2YgYWxlcnRWYXJpYW50cz4KPigoeyBjbGFzc05hbWUsIHZhcmlhbnQsIC4uLnByb3BzIH0sIHJlZikgPT4gKAogIDxkaXYKICAgIHJlZj17cmVmfQogICAgcm9sZT0iYWxlcnQiCiAgICBjbGFzc05hbWU9e2NuKGFsZXJ0VmFyaWFudHMoeyB2YXJpYW50IH0pLCBjbGFzc05hbWUpfQogICAgey4uLnByb3BzfQogIC8+CikpCkFsZXJ0LmRpc3BsYXlOYW1lID0gIkFsZXJ0IgoKY29uc3QgQWxlcnRUaXRsZSA9IFJlYWN0LmZvcndhcmRSZWY8CiAgSFRNTFBhcmFncmFwaEVsZW1lbnQsCiAgUmVhY3QuSFRNTEF0dHJpYnV0ZXM8SFRNTEhlYWRpbmdFbGVtZW50Pgo+KCh7IGNsYXNzTmFtZSwgLi4ucHJvcHMgfSwgcmVmKSA9PiAoCiAgPGg1CiAgICByZWY9e3JlZn0KICAgIGNsYXNzTmFtZT17Y24oIm1iLTEgZm9udC1tZWRpdW0gbGVhZGluZy1ub25lIHRyYWNraW5nLXRpZ2h0IiwgY2xhc3NOYW1lKX0KICAgIHsuLi5wcm9wc30KICAvPgopKQpBbGVydFRpdGxlLmRpc3BsYXlOYW1lID0gIkFsZXJ0VGl0bGUiCgpjb25zdCBBbGVydERlc2NyaXB0aW9uID0gUmVhY3QuZm9yd2FyZFJlZjwKICBIVE1MUGFyYWdyYXBoRWxlbWVudCwKICBSZWFjdC5IVE1MQXR0cmlidXRlczxIVE1MUGFyYWdyYXBoRWxlbWVudD4KPigoeyBjbGFzc05hbWUsIC4uLnByb3BzIH0sIHJlZikgPT4gKAogIDxkaXYKICAgIHJlZj17cmVmfQogICAgY2xhc3NOYW1lPXtjbigidGV4dC1zbSBbJl9wXTpsZWFkaW5nLXJlbGF4ZWQiLCBjbGFzc05hbWUpfQogICAgey4uLnByb3BzfQogIC8+CikpCkFsZXJ0RGVzY3JpcHRpb24uZGlzcGxheU5hbWUgPSAiQWxlcnREZXNjcmlwdGlvbiIKCmV4cG9ydCB7IEFsZXJ0LCBBbGVydFRpdGxlLCBBbGVydERlc2NyaXB0aW9uIH0K
:FILE_13_END

:FILE_14_PATH
client/src/components/ui/aspect-ratio.tsx
:FILE_14_DATA
aW1wb3J0ICogYXMgQXNwZWN0UmF0aW9QcmltaXRpdmUgZnJvbSAiQHJhZGl4LXVpL3JlYWN0LWFzcGVjdC1yYXRpbyIKCmNvbnN0IEFzcGVjdFJhdGlvID0gQXNwZWN0UmF0aW9QcmltaXRpdmUuUm9vdAoKZXhwb3J0IHsgQXNwZWN0UmF0aW8gfQo=
:FILE_14_END

:FILE_15_PATH
client/src/components/ui/avatar.tsx
:FILE_15_DATA
InVzZSBjbGllbnQiCgppbXBvcnQgKiBhcyBSZWFjdCBmcm9tICJyZWFjdCIKaW1wb3J0ICogYXMgQXZhdGFyUHJpbWl0aXZlIGZyb20gIkByYWRpeC11aS9yZWFjdC1hdmF0YXIiCgppbXBvcnQgeyBjbiB9IGZyb20gIkAvbGliL3V0aWxzIgoKY29uc3QgQXZhdGFyID0gUmVhY3QuZm9yd2FyZFJlZjwKICBSZWFjdC5FbGVtZW50UmVmPHR5cGVvZiBBdmF0YXJQcmltaXRpdmUuUm9vdD4sCiAgUmVhY3QuQ29tcG9uZW50UHJvcHNXaXRob3V0UmVmPHR5cGVvZiBBdmF0YXJQcmltaXRpdmUuUm9vdD4KPigoeyBjbGFzc05hbWUsIC4uLnByb3BzIH0sIHJlZikgPT4gKAogIDxBdmF0YXJQcmltaXRpdmUuUm9vdAogICAgcmVmPXtyZWZ9CiAgICBjbGFzc05hbWU9e2NuKAogICAgICAicmVsYXRpdmUgZmxleCBoLTEwIHctMTAgc2hyaW5rLTAgb3ZlcmZsb3ctaGlkZGVuIHJvdW5kZWQtZnVsbCIsCiAgICAgIGNsYXNzTmFtZQogICAgKX0KICAgIHsuLi5wcm9wc30KICAvPgopKQpBdmF0YXIuZGlzcGxheU5hbWUgPSBBdmF0YXJQcmltaXRpdmUuUm9vdC5kaXNwbGF5TmFtZQoKY29uc3QgQXZhdGFySW1hZ2UgPSBSZWFjdC5mb3J3YXJkUmVmPAogIFJlYWN0LkVsZW1lbnRSZWY8dHlwZW9mIEF2YXRhclByaW1pdGl2ZS5JbWFnZT4sCiAgUmVhY3QuQ29tcG9uZW50UHJvcHNXaXRob3V0UmVmPHR5cGVvZiBBdmF0YXJQcmltaXRpdmUuSW1hZ2U+Cj4oKHsgY2xhc3NOYW1lLCAuLi5wcm9wcyB9LCByZWYpID0+ICgKICA8QXZhdGFyUHJpbWl0aXZlLkltYWdlCiAgICByZWY9e3JlZn0KICAgIGNsYXNzTmFtZT17Y24oImFzcGVjdC1zcXVhcmUgaC1mdWxsIHctZnVsbCIsIGNsYXNzTmFtZSl9CiAgICB7Li4ucHJvcHN9CiAgLz4KKSkKQXZhdGFySW1hZ2UuZGlzcGxheU5hbWUgPSBBdmF0YXJQcmltaXRpdmUuSW1hZ2UuZGlzcGxheU5hbWUKCmNvbnN0IEF2YXRhckZhbGxiYWNrID0gUmVhY3QuZm9yd2FyZFJlZjwKICBSZWFjdC5FbGVtZW50UmVmPHR5cGVvZiBBdmF0YXJQcmltaXRpdmUuRmFsbGJhY2s+LAogIFJlYWN0LkNvbXBvbmVudFByb3BzV2l0aG91dFJlZjx0eXBlb2YgQXZhdGFyUHJpbWl0aXZlLkZhbGxiYWNrPgo+KCh7IGNsYXNzTmFtZSwgLi4ucHJvcHMgfSwgcmVmKSA9PiAoCiAgPEF2YXRhclByaW1pdGl2ZS5GYWxsYmFjawogICAgcmVmPXtyZWZ9CiAgICBjbGFzc05hbWU9e2NuKAogICAgICAiZmxleCBoLWZ1bGwgdy1mdWxsIGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWNlbnRlciByb3VuZGVkLWZ1bGwgYmctbXV0ZWQiLAogICAgICBjbGFzc05hbWUKICAgICl9CiAgICB7Li4ucHJvcHN9CiAgLz4KKSkKQXZhdGFyRmFsbGJhY2suZGlzcGxheU5hbWUgPSBBdmF0YXJQcmltaXRpdmUuRmFsbGJhY2suZGlzcGxheU5hbWUKCmV4cG9ydCB7IEF2YXRhciwgQXZhdGFySW1hZ2UsIEF2YXRhckZhbGxiYWNrIH0K
:FILE_15_END

:FILE_16_PATH
client/src/components/ui/badge.tsx
:FILE_16_DATA
aW1wb3J0ICogYXMgUmVhY3QgZnJvbSAicmVhY3QiCmltcG9ydCB7IGN2YSwgdHlwZSBWYXJpYW50UHJvcHMgfSBmcm9tICJjbGFzcy12YXJpYW5jZS1hdXRob3JpdHkiCgppbXBvcnQgeyBjbiB9IGZyb20gIkAvbGliL3V0aWxzIgoKY29uc3QgYmFkZ2VWYXJpYW50cyA9IGN2YSgKICAiaW5saW5lLWZsZXggaXRlbXMtY2VudGVyIHJvdW5kZWQtZnVsbCBib3JkZXIgcHgtMi41IHB5LTAuNSB0ZXh0LXhzIGZvbnQtc2VtaWJvbGQgdHJhbnNpdGlvbi1jb2xvcnMgZm9jdXM6b3V0bGluZS1ub25lIGZvY3VzOnJpbmctMiBmb2N1czpyaW5nLXJpbmcgZm9jdXM6cmluZy1vZmZzZXQtMiIsCiAgewogICAgdmFyaWFudHM6IHsKICAgICAgdmFyaWFudDogewogICAgICAgIGRlZmF1bHQ6CiAgICAgICAgICAiYm9yZGVyLXRyYW5zcGFyZW50IGJnLXByaW1hcnkgdGV4dC1wcmltYXJ5LWZvcmVncm91bmQgaG92ZXI6YmctcHJpbWFyeS84MCIsCiAgICAgICAgc2Vjb25kYXJ5OgogICAgICAgICAgImJvcmRlci10cmFuc3BhcmVudCBiZy1zZWNvbmRhcnkgdGV4dC1zZWNvbmRhcnktZm9yZWdyb3VuZCBob3ZlcjpiZy1zZWNvbmRhcnkvODAiLAogICAgICAgIGRlc3RydWN0aXZlOgogICAgICAgICAgImJvcmRlci10cmFuc3BhcmVudCBiZy1kZXN0cnVjdGl2ZSB0ZXh0LWRlc3RydWN0aXZlLWZvcmVncm91bmQgaG92ZXI6YmctZGVzdHJ1Y3RpdmUvODAiLAogICAgICAgIG91dGxpbmU6ICJ0ZXh0LWZvcmVncm91bmQiLAogICAgICB9LAogICAgfSwKICAgIGRlZmF1bHRWYXJpYW50czogewogICAgICB2YXJpYW50OiAiZGVmYXVsdCIsCiAgICB9LAogIH0KKQoKZXhwb3J0IGludGVyZmFjZSBCYWRnZVByb3BzCiAgZXh0ZW5kcyBSZWFjdC5IVE1MQXR0cmlidXRlczxIVE1MRGl2RWxlbWVudD4sCiAgICBWYXJpYW50UHJvcHM8dHlwZW9mIGJhZGdlVmFyaWFudHM+IHt9CgpmdW5jdGlvbiBCYWRnZSh7IGNsYXNzTmFtZSwgdmFyaWFudCwgLi4ucHJvcHMgfTogQmFkZ2VQcm9wcykgewogIHJldHVybiAoCiAgICA8ZGl2IGNsYXNzTmFtZT17Y24oYmFkZ2VWYXJpYW50cyh7IHZhcmlhbnQgfSksIGNsYXNzTmFtZSl9IHsuLi5wcm9wc30gLz4KICApCn0KCmV4cG9ydCB7IEJhZGdlLCBiYWRnZVZhcmlhbnRzIH0K
:FILE_16_END

:FILE_17_PATH
client/src/components/ui/breadcrumb.tsx
:FILE_17_DATA
aW1wb3J0ICogYXMgUmVhY3QgZnJvbSAicmVhY3QiCmltcG9ydCB7IFNsb3QgfSBmcm9tICJAcmFkaXgtdWkvcmVhY3Qtc2xvdCIKaW1wb3J0IHsgQ2hldnJvblJpZ2h0LCBNb3JlSG9yaXpvbnRhbCB9IGZyb20gImx1Y2lkZS1yZWFjdCIKCmltcG9ydCB7IGNuIH0gZnJvbSAiQC9saWIvdXRpbHMiCgpjb25zdCBCcmVhZGNydW1iID0gUmVhY3QuZm9yd2FyZFJlZjwKICBIVE1MRWxlbWVudCwKICBSZWFjdC5Db21wb25lbnRQcm9wc1dpdGhvdXRSZWY8Im5hdiI+ICYgewogICAgc2VwYXJhdG9yPzogUmVhY3QuUmVhY3ROb2RlCiAgfQo+KCh7IC4uLnByb3BzIH0sIHJlZikgPT4gPG5hdiByZWY9e3JlZn0gYXJpYS1sYWJlbD0iYnJlYWRjcnVtYiIgey4uLnByb3BzfSAvPikKQnJlYWRjcnVtYi5kaXNwbGF5TmFtZSA9ICJCcmVhZGNydW1iIgoKY29uc3QgQnJlYWRjcnVtYkxpc3QgPSBSZWFjdC5mb3J3YXJkUmVmPAogIEhUTUxPTGlzdEVsZW1lbnQsCiAgUmVhY3QuQ29tcG9uZW50UHJvcHNXaXRob3V0UmVmPCJvbCI+Cj4oKHsgY2xhc3NOYW1lLCAuLi5wcm9wcyB9LCByZWYpID0+ICgKICA8b2wKICAgIHJlZj17cmVmfQogICAgY2xhc3NOYW1lPXtjbigKICAgICAgImZsZXggZmxleC13cmFwIGl0ZW1zLWNlbnRlciBnYXAtMS41IGJyZWFrLXdvcmRzIHRleHQtc20gdGV4dC1tdXRlZC1mb3JlZ3JvdW5kIHNtOmdhcC0yLjUiLAogICAgICBjbGFzc05hbWUKICAgICl9CiAgICB7Li4ucHJvcHN9CiAgLz4KKSkKQnJlYWRjcnVtYkxpc3QuZGlzcGxheU5hbWUgPSAiQnJlYWRjcnVtYkxpc3QiCgpjb25zdCBCcmVhZGNydW1iSXRlbSA9IFJlYWN0LmZvcndhcmRSZWY8CiAgSFRNTExJRWxlbWVudCwKICBSZWFjdC5Db21wb25lbnRQcm9wc1dpdGhvdXRSZWY8ImxpIj4KPigoeyBjbGFzc05hbWUsIC4uLnByb3BzIH0sIHJlZikgPT4gKAogIDxsaQogICAgcmVmPXtyZWZ9CiAgICBjbGFzc05hbWU9e2NuKCJpbmxpbmUtZmxleCBpdGVtcy1jZW50ZXIgZ2FwLTEuNSIsIGNsYXNzTmFtZSl9CiAgICB7Li4ucHJvcHN9CiAgLz4KKSkKQnJlYWRjcnVtYkl0ZW0uZGlzcGxheU5hbWUgPSAiQnJlYWRjcnVtYkl0ZW0iCgpjb25zdCBCcmVhZGNydW1iTGluayA9IFJlYWN0LmZvcndhcmRSZWY8CiAgSFRNTEFuY2hvckVsZW1lbnQsCiAgUmVhY3QuQ29tcG9uZW50UHJvcHNXaXRob3V0UmVmPCJhIj4gJiB7CiAgICBhc0NoaWxkPzogYm9vbGVhbgogIH0KPigoeyBhc0NoaWxkLCBjbGFzc05hbWUsIC4uLnByb3BzIH0sIHJlZikgPT4gewogIGNvbnN0IENvbXAgPSBhc0NoaWxkID8gU2xvdCA6ICJhIgoKICByZXR1cm4gKAogICAgPENvbXAKICAgICAgcmVmPXtyZWZ9CiAgICAgIGNsYXNzTmFtZT17Y24oInRyYW5zaXRpb24tY29sb3JzIGhvdmVyOnRleHQtZm9yZWdyb3VuZCIsIGNsYXNzTmFtZSl9CiAgICAgIHsuLi5wcm9wc30KICAgIC8+CiAgKQp9KQpCcmVhZGNydW1iTGluay5kaXNwbGF5TmFtZSA9ICJCcmVhZGNydW1iTGluayIKCmNvbnN0IEJyZWFkY3J1bWJQYWdlID0gUmVhY3QuZm9yd2FyZFJlZjwKICBIVE1MU3BhbkVsZW1lbnQsCiAgUmVhY3QuQ29tcG9uZW50UHJvcHNXaXRob3V0UmVmPCJzcGFuIj4KPigoeyBjbGFzc05hbWUsIC4uLnByb3BzIH0sIHJlZikgPT4gKAogIDxzcGFuCiAgICByZWY9e3JlZn0KICAgIHJvbGU9ImxpbmsiCiAgICBhcmlhLWRpc2FibGVkPSJ0cnVlIgogICAgYXJpYS1jdXJyZW50PSJwYWdlIgogICAgY2xhc3NOYW1lPXtjbigiZm9udC1ub3JtYWwgdGV4dC1mb3JlZ3JvdW5kIiwgY2xhc3NOYW1lKX0KICAgIHsuLi5wcm9wc30KICAvPgopKQpCcmVhZGNydW1iUGFnZS5kaXNwbGF5TmFtZSA9ICJCcmVhZGNydW1iUGFnZSIKCmNvbnN0IEJyZWFkY3J1bWJTZXBhcmF0b3IgPSAoewogIGNoaWxkcmVuLAogIGNsYXNzTmFtZSwKICAuLi5wcm9wcwp9OiBSZWFjdC5Db21wb25lbnRQcm9wczwibGkiPikgPT4gKAogIDxsaQogICAgcm9sZT0icHJlc2VudGF0aW9uIgogICAgYXJpYS1oaWRkZW49InRydWUiCiAgICBjbGFzc05hbWU9e2NuKCJbJj5zdmddOnctMy41IFsmPnN2Z106aC0zLjUiLCBjbGFzc05hbWUpfQogICAgey4uLnByb3BzfQogID4KICAgIHtjaGlsZHJlbiA/PyA8Q2hldnJvblJpZ2h0IC8+fQogIDwvbGk+CikKQnJlYWRjcnVtYlNlcGFyYXRvci5kaXNwbGF5TmFtZSA9ICJCcmVhZGNydW1iU2VwYXJhdG9yIgoKY29uc3QgQnJlYWRjcnVtYkVsbGlwc2lzID0gKHsKICBjbGFzc05hbWUsCiAgLi4ucHJvcHMKfTogUmVhY3QuQ29tcG9uZW50UHJvcHM8InNwYW4iPikgPT4gKAogIDxzcGFuCiAgICByb2xlPSJwcmVzZW50YXRpb24iCiAgICBhcmlhLWhpZGRlbj0idHJ1ZSIKICAgIGNsYXNzTmFtZT17Y24oImZsZXggaC05IHctOSBpdGVtcy1jZW50ZXIganVzdGlmeS1jZW50ZXIiLCBjbGFzc05hbWUpfQogICAgey4uLnByb3BzfQogID4KICAgIDxNb3JlSG9yaXpvbnRhbCBjbGFzc05hbWU9ImgtNCB3LTQiIC8+CiAgICA8c3BhbiBjbGFzc05hbWU9InNyLW9ubHkiPk1vcmU8L3NwYW4+CiAgPC9zcGFuPgopCkJyZWFkY3J1bWJFbGxpcHNpcy5kaXNwbGF5TmFtZSA9ICJCcmVhZGNydW1iRWxpcHNzaXMiCgpleHBvcnQgewogIEJyZWFkY3J1bWIsCiAgQnJlYWRjcnVtYkxpc3QsCiAgQnJlYWRjcnVtYkl0ZW0sCiAgQnJlYWRjcnVtYkxpbmssCiAgQnJlYWRjcnVtYlBhZ2UsCiAgQnJlYWRjcnVtYlNlcGFyYXRvciwKICBCcmVhZGNydW1iRWxsaXBzaXMsCn0K
:FILE_17_END

:FILE_18_PATH
client/src/components/ui/button.tsx
:FILE_18_DATA
aW1wb3J0ICogYXMgUmVhY3QgZnJvbSAicmVhY3QiCmltcG9ydCB7IFNsb3QgfSBmcm9tICJAcmFkaXgtdWkvcmVhY3Qtc2xvdCIKaW1wb3J0IHsgY3ZhLCB0eXBlIFZhcmlhbnRQcm9wcyB9IGZyb20gImNsYXNzLXZhcmlhbmNlLWF1dGhvcml0eSIKCmltcG9ydCB7IGNuIH0gZnJvbSAiQC9saWIvdXRpbHMiCgpjb25zdCBidXR0b25WYXJpYW50cyA9IGN2YSgKICAiaW5saW5lLWZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktY2VudGVyIGdhcC0yIHdoaXRlc3BhY2Utbm93cmFwIHJvdW5kZWQtbWQgdGV4dC1zbSBmb250LW1lZGl1bSByaW5nLW9mZnNldC1iYWNrZ3JvdW5kIHRyYW5zaXRpb24tY29sb3JzIGZvY3VzLXZpc2libGU6b3V0bGluZS1ub25lIGZvY3VzLXZpc2libGU6cmluZy0yIGZvY3VzLXZpc2libGU6cmluZy1yaW5nIGZvY3VzLXZpc2libGU6cmluZy1vZmZzZXQtMiBkaXNhYmxlZDpwb2ludGVyLWV2ZW50cy1ub25lIGRpc2FibGVkOm9wYWNpdHktNTAgWyZfc3ZnXTpwb2ludGVyLWV2ZW50cy1ub25lIFsmX3N2Z106c2l6ZS00IFsmX3N2Z106c2hyaW5rLTAiLAogIHsKICAgIHZhcmlhbnRzOiB7CiAgICAgIHZhcmlhbnQ6IHsKICAgICAgICBkZWZhdWx0OiAiYmctcHJpbWFyeSB0ZXh0LXByaW1hcnktZm9yZWdyb3VuZCBob3ZlcjpiZy1wcmltYXJ5LzkwIiwKICAgICAgICBkZXN0cnVjdGl2ZToKICAgICAgICAgICJiZy1kZXN0cnVjdGl2ZSB0ZXh0LWRlc3RydWN0aXZlLWZvcmVncm91bmQgaG92ZXI6YmctZGVzdHJ1Y3RpdmUvOTAiLAogICAgICAgIG91dGxpbmU6CiAgICAgICAgICAiYm9yZGVyIGJvcmRlci1pbnB1dCBiZy1iYWNrZ3JvdW5kIGhvdmVyOmJnLWFjY2VudCBob3Zlcjp0ZXh0LWFjY2VudC1mb3JlZ3JvdW5kIiwKICAgICAgICBzZWNvbmRhcnk6CiAgICAgICAgICAiYmctc2Vjb25kYXJ5IHRleHQtc2Vjb25kYXJ5LWZvcmVncm91bmQgaG92ZXI6Ymctc2Vjb25kYXJ5LzgwIiwKICAgICAgICBnaG9zdDogImhvdmVyOmJnLWFjY2VudCBob3Zlcjp0ZXh0LWFjY2VudC1mb3JlZ3JvdW5kIiwKICAgICAgICBsaW5rOiAidGV4dC1wcmltYXJ5IHVuZGVybGluZS1vZmZzZXQtNCBob3Zlcjp1bmRlcmxpbmUiLAogICAgICB9LAogICAgICBzaXplOiB7CiAgICAgICAgZGVmYXVsdDogImgtMTAgcHgtNCBweS0yIiwKICAgICAgICBzbTogImgtOSByb3VuZGVkLW1kIHB4LTMiLAogICAgICAgIGxnOiAiaC0xMSByb3VuZGVkLW1kIHB4LTgiLAogICAgICAgIGljb246ICJoLTEwIHctMTAiLAogICAgICB9LAogICAgfSwKICAgIGRlZmF1bHRWYXJpYW50czogewogICAgICB2YXJpYW50OiAiZGVmYXVsdCIsCiAgICAgIHNpemU6ICJkZWZhdWx0IiwKICAgIH0sCiAgfQopCgpleHBvcnQgaW50ZXJmYWNlIEJ1dHRvblByb3BzCiAgZXh0ZW5kcyBSZWFjdC5CdXR0b25IVE1MQXR0cmlidXRlczxIVE1MQnV0dG9uRWxlbWVudD4sCiAgICBWYXJpYW50UHJvcHM8dHlwZW9mIGJ1dHRvblZhcmlhbnRzPiB7CiAgYXNDaGlsZD86IGJvb2xlYW4KfQoKY29uc3QgQnV0dG9uID0gUmVhY3QuZm9yd2FyZFJlZjxIVE1MQnV0dG9uRWxlbWVudCwgQnV0dG9uUHJvcHM+KAogICh7IGNsYXNzTmFtZSwgdmFyaWFudCwgc2l6ZSwgYXNDaGlsZCA9IGZhbHNlLCAuLi5wcm9wcyB9LCByZWYpID0+IHsKICAgIGNvbnN0IENvbXAgPSBhc0NoaWxkID8gU2xvdCA6ICJidXR0b24iCiAgICByZXR1cm4gKAogICAgICA8Q29tcAogICAgICAgIGNsYXNzTmFtZT17Y24oYnV0dG9uVmFyaWFudHMoeyB2YXJpYW50LCBzaXplLCBjbGFzc05hbWUgfSkpfQogICAgICAgIHJlZj17cmVmfQogICAgICAgIHsuLi5wcm9wc30KICAgICAgLz4KICAgICkKICB9CikKQnV0dG9uLmRpc3BsYXlOYW1lID0gIkJ1dHRvbiIKCmV4cG9ydCB7IEJ1dHRvbiwgYnV0dG9uVmFyaWFudHMgfQo=
:FILE_18_END

:FILE_19_PATH
client/src/components/ui/calendar.tsx
:FILE_19_DATA
aW1wb3J0ICogYXMgUmVhY3QgZnJvbSAicmVhY3QiCmltcG9ydCB7IENoZXZyb25MZWZ0LCBDaGV2cm9uUmlnaHQgfSBmcm9tICJsdWNpZGUtcmVhY3QiCmltcG9ydCB7IERheVBpY2tlciB9IGZyb20gInJlYWN0LWRheS1waWNrZXIiCgppbXBvcnQgeyBjbiB9IGZyb20gIkAvbGliL3V0aWxzIgppbXBvcnQgeyBidXR0b25WYXJpYW50cyB9IGZyb20gIkAvY29tcG9uZW50cy91aS9idXR0b24iCgpleHBvcnQgdHlwZSBDYWxlbmRhclByb3BzID0gUmVhY3QuQ29tcG9uZW50UHJvcHM8dHlwZW9mIERheVBpY2tlcj4KCmZ1bmN0aW9uIENhbGVuZGFyKHsKICBjbGFzc05hbWUsCiAgY2xhc3NOYW1lcywKICBzaG93T3V0c2lkZURheXMgPSB0cnVlLAogIC4uLnByb3BzCn06IENhbGVuZGFyUHJvcHMpIHsKICByZXR1cm4gKAogICAgPERheVBpY2tlcgogICAgICBzaG93T3V0c2lkZURheXM9e3Nob3dPdXRzaWRlRGF5c30KICAgICAgY2xhc3NOYW1lPXtjbigicC0zIiwgY2xhc3NOYW1lKX0KICAgICAgY2xhc3NOYW1lcz17ewogICAgICAgIG1vbnRoczogImZsZXggZmxleC1jb2wgc206ZmxleC1yb3cgc3BhY2UteS00IHNtOnNwYWNlLXgtNCBzbTpzcGFjZS15LTAiLAogICAgICAgIG1vbnRoOiAic3BhY2UteS00IiwKICAgICAgICBjYXB0aW9uOiAiZmxleCBqdXN0aWZ5LWNlbnRlciBwdC0xIHJlbGF0aXZlIGl0ZW1zLWNlbnRlciIsCiAgICAgICAgY2FwdGlvbl9sYWJlbDogInRleHQtc20gZm9udC1tZWRpdW0iLAogICAgICAgIG5hdjogInNwYWNlLXgtMSBmbGV4IGl0ZW1zLWNlbnRlciIsCiAgICAgICAgbmF2X2J1dHRvbjogY24oCiAgICAgICAgICBidXR0b25WYXJpYW50cyh7IHZhcmlhbnQ6ICJvdXRsaW5lIiB9KSwKICAgICAgICAgICJoLTcgdy03IGJnLXRyYW5zcGFyZW50IHAtMCBvcGFjaXR5LTUwIGhvdmVyOm9wYWNpdHktMTAwIgogICAgICAgICksCiAgICAgICAgbmF2X2J1dHRvbl9wcmV2aW91czogImFic29sdXRlIGxlZnQtMSIsCiAgICAgICAgbmF2X2J1dHRvbl9uZXh0OiAiYWJzb2x1dGUgcmlnaHQtMSIsCiAgICAgICAgdGFibGU6ICJ3LWZ1bGwgYm9yZGVyLWNvbGxhcHNlIHNwYWNlLXktMSIsCiAgICAgICAgaGVhZF9yb3c6ICJmbGV4IiwKICAgICAgICBoZWFkX2NlbGw6CiAgICAgICAgICAidGV4dC1tdXRlZC1mb3JlZ3JvdW5kIHJvdW5kZWQtbWQgdy05IGZvbnQtbm9ybWFsIHRleHQtWzAuOHJlbV0iLAogICAgICAgIHJvdzogImZsZXggdy1mdWxsIG10LTIiLAogICAgICAgIGNlbGw6ICJoLTkgdy05IHRleHQtY2VudGVyIHRleHQtc20gcC0wIHJlbGF0aXZlIFsmOmhhcyhbYXJpYS1zZWxlY3RlZF0uZGF5LXJhbmdlLWVuZCldOnJvdW5kZWQtci1tZCBbJjpoYXMoW2FyaWEtc2VsZWN0ZWRdLmRheS1vdXRzaWRlKV06YmctYWNjZW50LzUwIFsmOmhhcyhbYXJpYS1zZWxlY3RlZF0pXTpiZy1hY2NlbnQgZmlyc3Q6WyY6aGFzKFthcmlhLXNlbGVjdGVkXSldOnJvdW5kZWQtbC1tZCBsYXN0OlsmOmhhcyhbYXJpYS1zZWxlY3RlZF0pXTpyb3VuZGVkLXItbWQgZm9jdXMtd2l0aGluOnJlbGF0aXZlIGZvY3VzLXdpdGhpbjp6LTIwIiwKICAgICAgICBkYXk6IGNuKAogICAgICAgICAgYnV0dG9uVmFyaWFudHMoeyB2YXJpYW50OiAiZ2hvc3QiIH0pLAogICAgICAgICAgImgtOSB3LTkgcC0wIGZvbnQtbm9ybWFsIGFyaWEtc2VsZWN0ZWQ6b3BhY2l0eS0xMDAiCiAgICAgICAgKSwKICAgICAgICBkYXlfcmFuZ2VfZW5kOiAiZGF5LXJhbmdlLWVuZCIsCiAgICAgICAgZGF5X3NlbGVjdGVkOgogICAgICAgICAgImJnLXByaW1hcnkgdGV4dC1wcmltYXJ5LWZvcmVncm91bmQgaG92ZXI6YmctcHJpbWFyeSBob3Zlcjp0ZXh0LXByaW1hcnktZm9yZWdyb3VuZCBmb2N1czpiZy1wcmltYXJ5IGZvY3VzOnRleHQtcHJpbWFyeS1mb3JlZ3JvdW5kIiwKICAgICAgICBkYXlfdG9kYXk6ICJiZy1hY2NlbnQgdGV4dC1hY2NlbnQtZm9yZWdyb3VuZCIsCiAgICAgICAgZGF5X291dHNpZGU6CiAgICAgICAgICAiZGF5LW91dHNpZGUgdGV4dC1tdXRlZC1mb3JlZ3JvdW5kIGFyaWEtc2VsZWN0ZWQ6YmctYWNjZW50LzUwIGFyaWEtc2VsZWN0ZWQ6dGV4dC1tdXRlZC1mb3JlZ3JvdW5kIiwKICAgICAgICBkYXlfZGlzYWJsZWQ6ICJ0ZXh0LW11dGVkLWZvcmVncm91bmQgb3BhY2l0eS01MCIsCiAgICAgICAgZGF5X3JhbmdlX21pZGRsZToKICAgICAgICAgICJhcmlhLXNlbGVjdGVkOmJnLWFjY2VudCBhcmlhLXNlbGVjdGVkOnRleHQtYWNjZW50LWZvcmVncm91bmQiLAogICAgICAgIGRheV9oaWRkZW46ICJpbnZpc2libGUiLAogICAgICAgIC4uLmNsYXNzTmFtZXMsCiAgICAgIH19CiAgICAgIGNvbXBvbmVudHM9e3sKICAgICAgICBJY29uTGVmdDogKHsgY2xhc3NOYW1lLCAuLi5wcm9wcyB9KSA9PiAoCiAgICAgICAgICA8Q2hldnJvbkxlZnQgY2xhc3NOYW1lPXtjbigiaC00IHctNCIsIGNsYXNzTmFtZSl9IHsuLi5wcm9wc30gLz4KICAgICAgICApLAogICAgICAgIEljb25SaWdodDogKHsgY2xhc3NOYW1lLCAuLi5wcm9wcyB9KSA9PiAoCiAgICAgICAgICA8Q2hldnJvblJpZ2h0IGNsYXNzTmFtZT17Y24oImgtNCB3LTQiLCBjbGFzc05hbWUpfSB7Li4ucHJvcHN9IC8+CiAgICAgICAgKSwKICAgICAgfX0KICAgICAgey4uLnByb3BzfQogICAgLz4KICApCn0KQ2FsZW5kYXIuZGlzcGxheU5hbWUgPSAiQ2FsZW5kYXIiCgpleHBvcnQgeyBDYWxlbmRhciB9Cg==
:FILE_19_END

:FILE_20_PATH
client/src/components/ui/card.tsx
:FILE_20_DATA
aW1wb3J0ICogYXMgUmVhY3QgZnJvbSAicmVhY3QiCgppbXBvcnQgeyBjbiB9IGZyb20gIkAvbGliL3V0aWxzIgoKY29uc3QgQ2FyZCA9IFJlYWN0LmZvcndhcmRSZWY8CiAgSFRNTERpdkVsZW1lbnQsCiAgUmVhY3QuSFRNTEF0dHJpYnV0ZXM8SFRNTERpdkVsZW1lbnQ+Cj4oKHsgY2xhc3NOYW1lLCAuLi5wcm9wcyB9LCByZWYpID0+ICgKICA8ZGl2CiAgICByZWY9e3JlZn0KICAgIGNsYXNzTmFtZT17Y24oCiAgICAgICJyb3VuZGVkLWxnIGJvcmRlciBiZy1jYXJkIHRleHQtY2FyZC1mb3JlZ3JvdW5kIHNoYWRvdy1zbSIsCiAgICAgIGNsYXNzTmFtZQogICAgKX0KICAgIHsuLi5wcm9wc30KICAvPgopKQpDYXJkLmRpc3BsYXlOYW1lID0gIkNhcmQiCgpjb25zdCBDYXJkSGVhZGVyID0gUmVhY3QuZm9yd2FyZFJlZjwKICBIVE1MRGl2RWxlbWVudCwKICBSZWFjdC5IVE1MQXR0cmlidXRlczxIVE1MRGl2RWxlbWVudD4KPigoeyBjbGFzc05hbWUsIC4uLnByb3BzIH0sIHJlZikgPT4gKAogIDxkaXYKICAgIHJlZj17cmVmfQogICAgY2xhc3NOYW1lPXtjbigiZmxleCBmbGV4LWNvbCBzcGFjZS15LTEuNSBwLTYiLCBjbGFzc05hbWUpfQogICAgey4uLnByb3BzfQogIC8+CikpCkNhcmRIZWFkZXIuZGlzcGxheU5hbWUgPSAiQ2FyZEhlYWRlciIKCmNvbnN0IENhcmRUaXRsZSA9IFJlYWN0LmZvcndhcmRSZWY8CiAgSFRNTERpdkVsZW1lbnQsCiAgUmVhY3QuSFRNTEF0dHJpYnV0ZXM8SFRNTERpdkVsZW1lbnQ+Cj4oKHsgY2xhc3NOYW1lLCAuLi5wcm9wcyB9LCByZWYpID0+ICgKICA8ZGl2CiAgICByZWY9e3JlZn0KICAgIGNsYXNzTmFtZT17Y24oCiAgICAgICJ0ZXh0LTJ4bCBmb250LXNlbWlib2xkIGxlYWRpbmctbm9uZSB0cmFja2luZy10aWdodCIsCiAgICAgIGNsYXNzTmFtZQogICAgKX0KICAgIHsuLi5wcm9wc30KICAvPgopKQpDYXJkVGl0bGUuZGlzcGxheU5hbWUgPSAiQ2FyZFRpdGxlIgoKY29uc3QgQ2FyZERlc2NyaXB0aW9uID0gUmVhY3QuZm9yd2FyZFJlZjwKICBIVE1MRGl2RWxlbWVudCwKICBSZWFjdC5IVE1MQXR0cmlidXRlczxIVE1MRGl2RWxlbWVudD4KPigoeyBjbGFzc05hbWUsIC4uLnByb3BzIH0sIHJlZikgPT4gKAogIDxkaXYKICAgIHJlZj17cmVmfQogICAgY2xhc3NOYW1lPXtjbigidGV4dC1zbSB0ZXh0LW11dGVkLWZvcmVncm91bmQiLCBjbGFzc05hbWUpfQogICAgey4uLnByb3BzfQogIC8+CikpCkNhcmREZXNjcmlwdGlvbi5kaXNwbGF5TmFtZSA9ICJDYXJkRGVzY3JpcHRpb24iCgpjb25zdCBDYXJkQ29udGVudCA9IFJlYWN0LmZvcndhcmRSZWY8CiAgSFRNTERpdkVsZW1lbnQsCiAgUmVhY3QuSFRNTEF0dHJpYnV0ZXM8SFRNTERpdkVsZW1lbnQ+Cj4oKHsgY2xhc3NOYW1lLCAuLi5wcm9wcyB9LCByZWYpID0+ICgKICA8ZGl2IHJlZj17cmVmfSBjbGFzc05hbWU9e2NuKCJwLTYgcHQtMCIsIGNsYXNzTmFtZSl9IHsuLi5wcm9wc30gLz4KKSkKQ2FyZENvbnRlbnQuZGlzcGxheU5hbWUgPSAiQ2FyZENvbnRlbnQiCgpjb25zdCBDYXJkRm9vdGVyID0gUmVhY3QuZm9yd2FyZFJlZjwKICBIVE1MRGl2RWxlbWVudCwKICBSZWFjdC5IVE1MQXR0cmlidXRlczxIVE1MRGl2RWxlbWVudD4KPigoeyBjbGFzc05hbWUsIC4uLnByb3BzIH0sIHJlZikgPT4gKAogIDxkaXYKICAgIHJlZj17cmVmfQogICAgY2xhc3NOYW1lPXtjbigiZmxleCBpdGVtcy1jZW50ZXIgcC02IHB0LTAiLCBjbGFzc05hbWUpfQogICAgey4uLnByb3BzfQogIC8+CikpCkNhcmRGb290ZXIuZGlzcGxheU5hbWUgPSAiQ2FyZEZvb3RlciIKCmV4cG9ydCB7IENhcmQsIENhcmRIZWFkZXIsIENhcmRGb290ZXIsIENhcmRUaXRsZSwgQ2FyZERlc2NyaXB0aW9uLCBDYXJkQ29udGVudCB9Cg==
:FILE_20_END

:FILE_21_PATH
client/src/components/ui/carousel.tsx
:FILE_21_DATA

:FILE_21_END

:FILE_22_PATH
client/src/components/ui/chart.tsx
:FILE_22_DATA

:FILE_22_END

:FILE_23_PATH
client/src/components/ui/checkbox.tsx
:FILE_23_DATA
aW1wb3J0ICogYXMgUmVhY3QgZnJvbSAicmVhY3QiCmltcG9ydCAqIGFzIENoZWNrYm94UHJpbWl0aXZlIGZyb20gIkByYWRpeC11aS9yZWFjdC1jaGVja2JveCIKaW1wb3J0IHsgQ2hlY2sgfSBmcm9tICJsdWNpZGUtcmVhY3QiCgppbXBvcnQgeyBjbiB9IGZyb20gIkAvbGliL3V0aWxzIgoKY29uc3QgQ2hlY2tib3ggPSBSZWFjdC5mb3J3YXJkUmVmPAogIFJlYWN0LkVsZW1lbnRSZWY8dHlwZW9mIENoZWNrYm94UHJpbWl0aXZlLlJvb3Q+LAogIFJlYWN0LkNvbXBvbmVudFByb3BzV2l0aG91dFJlZjx0eXBlb2YgQ2hlY2tib3hQcmltaXRpdmUuUm9vdD4KPigoeyBjbGFzc05hbWUsIC4uLnByb3BzIH0sIHJlZikgPT4gKAogIDxDaGVja2JveFByaW1pdGl2ZS5Sb290CiAgICByZWY9e3JlZn0KICAgIGNsYXNzTmFtZT17Y24oCiAgICAgICJwZWVyIGgtNCB3LTQgc2hyaW5rLTAgcm91bmRlZC1zbSBib3JkZXIgYm9yZGVyLXByaW1hcnkgcmluZy1vZmZzZXQtYmFja2dyb3VuZCBmb2N1cy12aXNpYmxlOm91dGxpbmUtbm9uZSBmb2N1cy12aXNpYmxlOnJpbmctMiBmb2N1cy12aXNpYmxlOnJpbmctcmluZyBmb2N1cy12aXNpYmxlOnJpbmctb2Zmc2V0LTIgZGlzYWJsZWQ6Y3Vyc29yLW5vdC1hbGxvd2VkIGRpc2FibGVkOm9wYWNpdHktNTAgZGF0YS1bc3RhdGU9Y2hlY2tlZF06YmctcHJpbWFyeSBkYXRhLVtzdGF0ZT1jaGVja2VkXTp0ZXh0LXByaW1hcnktZm9yZWdyb3VuZCIsCiAgICAgIGNsYXNzTmFtZQogICAgKX0KICAgIHsuLi5wcm9wc30KICA+CiAgICA8Q2hlY2tib3hQcmltaXRpdmUuSW5kaWNhdG9yCiAgICAgIGNsYXNzTmFtZT17Y24oImZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktY2VudGVyIHRleHQtY3VycmVudCIpfQogICAgPgogICAgICA8Q2hlY2sgY2xhc3NOYW1lPSJoLTQgdy00IiAvPgogICAgPC9DaGVja2JveFByaW1pdGl2ZS5JbmRpY2F0b3I+CiAgPC9DaGVja2JveFByaW1pdGl2ZS5Sb290PgopKQpDaGVja2JveC5kaXNwbGF5TmFtZSA9IENoZWNrYm94UHJpbWl0aXZlLlJvb3QuZGlzcGxheU5hbWUKCmV4cG9ydCB7IENoZWNrYm94IH0K
:FILE_23_END

:FILE_24_PATH
client/src/components/ui/collapsible.tsx
:FILE_24_DATA
InVzZSBjbGllbnQiCgppbXBvcnQgKiBhcyBDb2xsYXBzaWJsZVByaW1pdGl2ZSBmcm9tICJAcmFkaXgtdWkvcmVhY3QtY29sbGFwc2libGUiCgpjb25zdCBDb2xsYXBzaWJsZSA9IENvbGxhcHNpYmxlUHJpbWl0aXZlLlJvb3QKCmNvbnN0IENvbGxhcHNpYmxlVHJpZ2dlciA9IENvbGxhcHNpYmxlUHJpbWl0aXZlLkNvbGxhcHNpYmxlVHJpZ2dlcgoKY29uc3QgQ29sbGFwc2libGVDb250ZW50ID0gQ29sbGFwc2libGVQcmltaXRpdmUuQ29sbGFwc2libGVDb250ZW50CgpleHBvcnQgeyBDb2xsYXBzaWJsZSwgQ29sbGFwc2libGVUcmlnZ2VyLCBDb2xsYXBzaWJsZUNvbnRlbnQgfQo=
:FILE_24_END

:FILE_25_PATH
client/src/components/ui/command.tsx
:FILE_25_DATA
aW1wb3J0ICogYXMgUmVhY3QgZnJvbSAicmVhY3QiCmltcG9ydCB7IHR5cGUgRGlhbG9nUHJvcHMgfSBmcm9tICJAcmFkaXgtdWkvcmVhY3QtZGlhbG9nIgppbXBvcnQgeyBDb21tYW5kIGFzIENvbW1hbmRQcmltaXRpdmUgfSBmcm9tICJjbWRrIgppbXBvcnQgeyBTZWFyY2ggfSBmcm9tICJsdWNpZGUtcmVhY3QiCgppbXBvcnQgeyBjbiB9IGZyb20gIkAvbGliL3V0aWxzIgppbXBvcnQgeyBEaWFsb2csIERpYWxvZ0NvbnRlbnQgfSBmcm9tICJAL2NvbXBvbmVudHMvdWkvZGlhbG9nIgoKY29uc3QgQ29tbWFuZCA9IFJlYWN0LmZvcndhcmRSZWY8CiAgUmVhY3QuRWxlbWVudFJlZjx0eXBlb2YgQ29tbWFuZFByaW1pdGl2ZT4sCiAgUmVhY3QuQ29tcG9uZW50UHJvcHNXaXRob3V0UmVmPHR5cGVvZiBDb21tYW5kUHJpbWl0aXZlPgo+KCh7IGNsYXNzTmFtZSwgLi4ucHJvcHMgfSwgcmVmKSA9PiAoCiAgPENvbW1hbmRQcmltaXRpdmUKICAgIHJlZj17cmVmfQogICAgY2xhc3NOYW1lPXtjbigKICAgICAgImZsZXggaC1mdWxsIHctZnVsbCBmbGV4LWNvbCBvdmVyZmxvdy1oaWRkZW4gcm91bmRlZC1tZCBiZy1wb3BvdmVyIHRleHQtcG9wb3Zlci1mb3JlZ3JvdW5kIiwKICAgICAgY2xhc3NOYW1lCiAgICApfQogICAgey4uLnByb3BzfQogIC8+CikpCkNvbW1hbmQuZGlzcGxheU5hbWUgPSBDb21tYW5kUHJpbWl0aXZlLmRpc3BsYXlOYW1lCgpjb25zdCBDb21tYW5kRGlhbG9nID0gKHsgY2hpbGRyZW4sIC4uLnByb3BzIH06IERpYWxvZ1Byb3BzKSA9PiB7CiAgcmV0dXJuICgKICAgIDxEaWFsb2cgey4uLnByb3BzfT4KICAgICAgPERpYWxvZ0NvbnRlbnQgY2xhc3NOYW1lPSJvdmVyZmxvdy1oaWRkZW4gcC0wIHNoYWRvdy1sZyI+CiAgICAgICAgPENvbW1hbmQgY2xhc3NOYW1lPSJbJl9bY21kay1ncm91cC1oZWFkaW5nXV06cHgtMiBbJl9bY21kay1ncm91cC1oZWFkaW5nXV06Zm9udC1tZWRpdW0gWyZfW2NtZGstZ3JvdXAtaGVhZGluZ11dOnRleHQtbXV0ZWQtZm9yZWdyb3VuZCBbJl9bY21kay1ncm91cF06bm90KFtoaWRkZW5dKV9+W2NtZGstZ3JvdXBdXTpwdC0wIFsmX1tjbWRrLWdyb3VwXV06cHgtMiBbJl9bY21kay1pbnB1dC13cmFwcGVyXV9zdmddOmgtNSBbJl9bY21kay1pbnB1dC13cmFwcGVyXV9zdmddOnctNSBbJl9bY21kay1pbnB1dF1dOmgtMTIgWyZfW2NtZGstaXRlbV1dOnB4LTIgWyZfW2NtZGstaXRlbV1dOnB5LTMgWyZfW2NtZGstaXRlbV1fc3ZnXTpoLTUgWyZfW2NtZGstaXRlbV1fc3ZnXTp3LTUiPgogICAgICAgICAge2NoaWxkcmVufQogICAgICAgIDwvQ29tbWFuZD4KICAgICAgPC9EaWFsb2dDb250ZW50PgogICAgPC9EaWFsb2c+CiAgKQp9Cgpjb25zdCBDb21tYW5kSW5wdXQgPSBSZWFjdC5mb3J3YXJkUmVmPAogIFJlYWN0LkVsZW1lbnRSZWY8dHlwZW9mIENvbW1hbmRQcmltaXRpdmUuSW5wdXQ+LAogIFJlYWN0LkNvbXBvbmVudFByb3BzV2l0aG91dFJlZjx0eXBlb2YgQ29tbWFuZFByaW1pdGl2ZS5JbnB1dD4KPigoeyBjbGFzc05hbWUsIC4uLnByb3BzIH0sIHJlZikgPT4gKAogIDxkaXYgY2xhc3NOYW1lPSJmbGV4IGl0ZW1zLWNlbnRlciBib3JkZXItYiBweC0zIiBjbWRrLWlucHV0LXdyYXBwZXI9IiI+CiAgICA8U2VhcmNoIGNsYXNzTmFtZT0ibXItMiBoLTQgdy00IHNocmluay0wIG9wYWNpdHktNTAiIC8+CiAgICA8Q29tbWFuZFByaW1pdGl2ZS5JbnB1dAogICAgICByZWY9e3JlZn0KICAgICAgY2xhc3NOYW1lPXtjbigKICAgICAgICAiZmxleCBoLTExIHctZnVsbCByb3VuZGVkLW1kIGJnLXRyYW5zcGFyZW50IHB5LTMgdGV4dC1zbSBvdXRsaW5lLW5vbmUgcGxhY2Vob2xkZXI6dGV4dC1tdXRlZC1mb3JlZ3JvdW5kIGRpc2FibGVkOmN1cnNvci1ub3QtYWxsb3dlZCBkaXNhYmxlZDpvcGFjaXR5LTUwIiwKICAgICAgICBjbGFzc05hbWUKICAgICAgKX0KICAgICAgey4uLnByb3BzfQogICAgLz4KICA8L2Rpdj4KKSkKCkNvbW1hbmRJbnB1dC5kaXNwbGF5TmFtZSA9IENvbW1hbmRQcmltaXRpdmUuSW5wdXQuZGlzcGxheU5hbWUKCmNvbnN0IENvbW1hbmRMaXN0ID0gUmVhY3QuZm9yd2FyZFJlZjwKICBSZWFjdC5FbGVtZW50UmVmPHR5cGVvZiBDb21tYW5kUHJpbWl0aXZlLkxpc3Q+LAogIFJlYWN0LkNvbXBvbmVudFByb3BzV2l0aG91dFJlZjx0eXBlb2YgQ29tbWFuZFByaW1pdGl2ZS5MaXN0Pgo+KCh7IGNsYXNzTmFtZSwgLi4ucHJvcHMgfSwgcmVmKSA9PiAoCiAgPENvbW1hbmRQcmltaXRpdmUuTGlzdAogICAgcmVmPXtyZWZ9CiAgICBjbGFzc05hbWU9e2NuKCJtYXgtaC1bMzAwcHhdIG92ZXJmbG93LXktYXV0byBvdmVyZmxvdy14LWhpZGRlbiIsIGNsYXNzTmFtZSl9CiAgICB7Li4ucHJvcHN9CiAgLz4KKSkKCkNvbW1hbmRMaXN0LmRpc3BsYXlOYW1lID0gQ29tbWFuZFByaW1pdGl2ZS5MaXN0LmRpc3BsYXlOYW1lCgpjb25zdCBDb21tYW5kRW1wdHkgPSBSZWFjdC5mb3J3YXJkUmVmPAogIFJlYWN0LkVsZW1lbnRSZWY8dHlwZW9mIENvbW1hbmRQcmltaXRpdmUuRW1wdHk+LAogIFJlYWN0LkNvbXBvbmVudFByb3BzV2l0aG91dFJlZjx0eXBlb2YgQ29tbWFuZFByaW1pdGl2ZS5FbXB0eT4KPigocHJvcHMsIHJlZikgPT4gKAogIDxDb21tYW5kUHJpbWl0aXZlLkVtcHR5CiAgICByZWY9e3JlZn0KICAgIGNsYXNzTmFtZT0icHktNiB0ZXh0LWNlbnRlciB0ZXh0LXNtIgogICAgey4uLnByb3BzfQogIC8+CikpCgpDb21tYW5kRW1wdHkuZGlzcGxheU5hbWUgPSBDb21tYW5kUHJpbWl0aXZlLkVtcHR5LmRpc3BsYXlOYW1lCgpjb25zdCBDb21tYW5kR3JvdXAgPSBSZWFjdC5mb3J3YXJkUmVmPAogIFJlYWN0LkVsZW1lbnRSZWY8dHlwZW9mIENvbW1hbmRQcmltaXRpdmUuR3JvdXA+LAogIFJlYWN0LkNvbXBvbmVudFByb3BzV2l0aG91dFJlZjx0eXBlb2YgQ29tbWFuZFByaW1pdGl2ZS5Hcm91cD4KPigoeyBjbGFzc05hbWUsIC4uLnByb3BzIH0sIHJlZikgPT4gKAogIDxDb21tYW5kUHJpbWl0aXZlLkdyb3VwCiAgICByZWY9e3JlZn0KICAgIGNsYXNzTmFtZT17Y24oCiAgICAgICJvdmVyZmxvdy1oaWRkZW4gcC0xIHRleHQtZm9yZWdyb3VuZCBbJl9bY21kay1ncm91cC1oZWFkaW5nXV06cHgtMiBbJl9bY21kay1ncm91cC1oZWFkaW5nXV06cHktMS41IFsmX1tjbWRrLWdyb3VwLWhlYWRpbmddXTp0ZXh0LXhzIFsmX1tjbWRrLWdyb3VwLWhlYWRpbmddXTpmb250LW1lZGl1bSBbJl9bY21kay1ncm91cC1oZWFkaW5nXV06dGV4dC1tdXRlZC1mb3JlZ3JvdW5kIiwKICAgICAgY2xhc3NOYW1lCiAgICApfQogICAgey4uLnByb3BzfQogIC8+CikpCgpDb21tYW5kR3JvdXAuZGlzcGxheU5hbWUgPSBDb21tYW5kUHJpbWl0aXZlLkdyb3VwLmRpc3BsYXlOYW1lCgpjb25zdCBDb21tYW5kU2VwYXJhdG9yID0gUmVhY3QuZm9yd2FyZFJlZjwKICBSZWFjdC5FbGVtZW50UmVmPHR5cGVvZiBDb21tYW5kUHJpbWl0aXZlLlNlcGFyYXRvcj4sCiAgUmVhY3QuQ29tcG9uZW50UHJvcHNXaXRob3V0UmVmPHR5cGVvZiBDb21tYW5kUHJpbWl0aXZlLlNlcGFyYXRvcj4KPigoeyBjbGFzc05hbWUsIC4uLnByb3BzIH0sIHJlZikgPT4gKAogIDxDb21tYW5kUHJpbWl0aXZlLlNlcGFyYXRvcgogICAgcmVmPXtyZWZ9CiAgICBjbGFzc05hbWU9e2NuKCItbXgtMSBoLXB4IGJnLWJvcmRlciIsIGNsYXNzTmFtZSl9CiAgICB7Li4ucHJvcHN9CiAgLz4KKSkKQ29tbWFuZFNlcGFyYXRvci5kaXNwbGF5TmFtZSA9IENvbW1hbmRQcmltaXRpdmUuU2VwYXJhdG9yLmRpc3BsYXlOYW1lCgpjb25zdCBDb21tYW5kSXRlbSA9IFJlYWN0LmZvcndhcmRSZWY8CiAgUmVhY3QuRWxlbWVudFJlZjx0eXBlb2YgQ29tbWFuZFByaW1pdGl2ZS5JdGVtPiwKICBSZWFjdC5Db21wb25lbnRQcm9wc1dpdGhvdXRSZWY8dHlwZW9mIENvbW1hbmRQcmltaXRpdmUuSXRlbT4KPigoeyBjbGFzc05hbWUsIC4uLnByb3BzIH0sIHJlZikgPT4gKAogIDxDb21tYW5kUHJpbWl0aXZlLkl0ZW0KICAgIHJlZj17cmVmfQogICAgY2xhc3NOYW1lPXtjbigKICAgICAgInJlbGF0aXZlIGZsZXggY3Vyc29yLWRlZmF1bHQgZ2FwLTIgc2VsZWN0LW5vbmUgaXRlbXMtY2VudGVyIHJvdW5kZWQtc20gcHgtMiBweS0xLjUgdGV4dC1zbSBvdXRsaW5lLW5vbmUgZGF0YS1bZGlzYWJsZWQ9dHJ1ZV06cG9pbnRlci1ldmVudHMtbm9uZSBkYXRhLVtzZWxlY3RlZD0ndHJ1ZSddOmJnLWFjY2VudCBkYXRhLVtzZWxlY3RlZD10cnVlXTp0ZXh0LWFjY2VudC1mb3JlZ3JvdW5kIGRhdGEtW2Rpc2FibGVkPXRydWVdOm9wYWNpdHktNTAgWyZfc3ZnXTpwb2ludGVyLWV2ZW50cy1ub25lIFsmX3N2Z106c2l6ZS00IFsmX3N2Z106c2hyaW5rLTAiLAogICAgICBjbGFzc05hbWUKICAgICl9CiAgICB7Li4ucHJvcHN9CiAgLz4KKSkKCkNvbW1hbmRJdGVtLmRpc3BsYXlOYW1lID0gQ29tbWFuZFByaW1pdGl2ZS5JdGVtLmRpc3BsYXlOYW1lCgpjb25zdCBDb21tYW5kU2hvcnRjdXQgPSAoewogIGNsYXNzTmFtZSwKICAuLi5wcm9wcwp9OiBSZWFjdC5IVE1MQXR0cmlidXRlczxIVE1MU3BhbkVsZW1lbnQ+KSA9PiB7CiAgcmV0dXJuICgKICAgIDxzcGFuCiAgICAgIGNsYXNzTmFtZT17Y24oCiAgICAgICAgIm1sLWF1dG8gdGV4dC14cyB0cmFja2luZy13aWRlc3QgdGV4dC1tdXRlZC1mb3JlZ3JvdW5kIiwKICAgICAgICBjbGFzc05hbWUKICAgICAgKX0KICAgICAgey4uLnByb3BzfQogICAgLz4KICApCn0KQ29tbWFuZFNob3J0Y3V0LmRpc3BsYXlOYW1lID0gIkNvbW1hbmRTaG9ydGN1dCIKCmV4cG9ydCB7CiAgQ29tbWFuZCwKICBDb21tYW5kRGlhbG9nLAogIENvbW1hbmRJbnB1dCwKICBDb21tYW5kTGlzdCwKICBDb21tYW5kRW1wdHksCiAgQ29tbWFuZEdyb3VwLAogIENvbW1hbmRJdGVtLAogIENvbW1hbmRTaG9ydGN1dCwKICBDb21tYW5kU2VwYXJhdG9yLAp9Cg==
:FILE_25_END

:FILE_26_PATH
client/src/components/ui/context-menu.tsx
:FILE_26_DATA

:FILE_26_END

:FILE_27_PATH
client/src/components/ui/dialog.tsx
:FILE_27_DATA
InVzZSBjbGllbnQiCgppbXBvcnQgKiBhcyBSZWFjdCBmcm9tICJyZWFjdCIKaW1wb3J0ICogYXMgRGlhbG9nUHJpbWl0aXZlIGZyb20gIkByYWRpeC11aS9yZWFjdC1kaWFsb2ciCmltcG9ydCB7IFggfSBmcm9tICJsdWNpZGUtcmVhY3QiCgppbXBvcnQgeyBjbiB9IGZyb20gIkAvbGliL3V0aWxzIgoKY29uc3QgRGlhbG9nID0gRGlhbG9nUHJpbWl0aXZlLlJvb3QKCmNvbnN0IERpYWxvZ1RyaWdnZXIgPSBEaWFsb2dQcmltaXRpdmUuVHJpZ2dlcgoKY29uc3QgRGlhbG9nUG9ydGFsID0gRGlhbG9nUHJpbWl0aXZlLlBvcnRhbAoKY29uc3QgRGlhbG9nQ2xvc2UgPSBEaWFsb2dQcmltaXRpdmUuQ2xvc2UKCmNvbnN0IERpYWxvZ092ZXJsYXkgPSBSZWFjdC5mb3J3YXJkUmVmPAogIFJlYWN0LkVsZW1lbnRSZWY8dHlwZW9mIERpYWxvZ1ByaW1pdGl2ZS5PdmVybGF5PiwKICBSZWFjdC5Db21wb25lbnRQcm9wc1dpdGhvdXRSZWY8dHlwZW9mIERpYWxvZ1ByaW1pdGl2ZS5PdmVybGF5Pgo+KCh7IGNsYXNzTmFtZSwgLi4ucHJvcHMgfSwgcmVmKSA9PiAoCiAgPERpYWxvZ1ByaW1pdGl2ZS5PdmVybGF5CiAgICByZWY9e3JlZn0KICAgIGNsYXNzTmFtZT17Y24oCiAgICAgICJmaXhlZCBpbnNldC0wIHotNTAgYmctYmxhY2svODAgZGF0YS1bc3RhdGU9b3Blbl06YW5pbWF0ZS1pbiBkYXRhLVtzdGF0ZT1jbG9zZWRdOmFuaW1hdGUtb3V0IGRhdGEtW3N0YXRlPWNsb3NlZF06ZmFkZS1vdXQtMCBkYXRhLVtzdGF0ZT1vcGVuXTpmYWRlLWluLTAiLAogICAgICBjbGFzc05hbWUKICAgICl9CiAgICB7Li4ucHJvcHN9CiAgLz4KKSkKRGlhbG9nT3ZlcmxheS5kaXNwbGF5TmFtZSA9IERpYWxvZ1ByaW1pdGl2ZS5PdmVybGF5LmRpc3BsYXlOYW1lCgpjb25zdCBEaWFsb2dDb250ZW50ID0gUmVhY3QuZm9yd2FyZFJlZjwKICBSZWFjdC5FbGVtZW50UmVmPHR5cGVvZiBEaWFsb2dQcmltaXRpdmUuQ29udGVudD4sCiAgUmVhY3QuQ29tcG9uZW50UHJvcHNXaXRob3V0UmVmPHR5cGVvZiBEaWFsb2dQcmltaXRpdmUuQ29udGVudD4KPigoeyBjbGFzc05hbWUsIGNoaWxkcmVuLCAuLi5wcm9wcyB9LCByZWYpID0+ICgKICA8RGlhbG9nUG9ydGFsPgogICAgPERpYWxvZ092ZXJsYXkgLz4KICAgIDxEaWFsb2dQcmltaXRpdmUuQ29udGVudAogICAgICByZWY9e3JlZn0KICAgICAgY2xhc3NOYW1lPXtjbigKICAgICAgICAiZml4ZWQgbGVmdC1bNTAlXSB0b3AtWzUwJV0gei01MCBncmlkIHctZnVsbCBtYXgtdy1sZyB0cmFuc2xhdGUteC1bLTUwJV0gdHJhbnNsYXRlLXktWy01MCVdIGdhcC00IGJvcmRlciBiZy1iYWNrZ3JvdW5kIHAtNiBzaGFkb3ctbGcgZHVyYXRpb24tMjAwIGRhdGEtW3N0YXRlPW9wZW5dOmFuaW1hdGUtaW4gZGF0YS1bc3RhdGU9Y2xvc2VkXTphbmltYXRlLW91dCBkYXRhLVtzdGF0ZT1jbG9zZWRdOmZhZGUtb3V0LTAgZGF0YS1bc3RhdGU9b3Blbl06ZmFkZS1pbi0wIGRhdGEtW3N0YXRlPWNsb3NlZF06em9vbS1vdXQtOTUgZGF0YS1bc3RhdGU9b3Blbl06em9vbS1pbi05NSBkYXRhLVtzdGF0ZT1jbG9zZWRdOnNsaWRlLW91dC10by1sZWZ0LTEvMiBkYXRhLVtzdGF0ZT1jbG9zZWRdOnNsaWRlLW91dC10by10b3AtWzQ4JV0gZGF0YS1bc3RhdGU9b3Blbl06c2xpZGUtaW4tZnJvbS1sZWZ0LTEvMiBkYXRhLVtzdGF0ZT1vcGVuXTpzbGlkZS1pbi1mcm9tLXRvcC1bNDglXSBzbTpyb3VuZGVkLWxnIiwKICAgICAgICBjbGFzc05hbWUKICAgICAgKX0KICAgICAgey4uLnByb3BzfQogICAgPgogICAgICB7Y2hpbGRyZW59CiAgICAgIDxEaWFsb2dQcmltaXRpdmUuQ2xvc2UgY2xhc3NOYW1lPSJhYnNvbHV0ZSByaWdodC00IHRvcC00IHJvdW5kZWQtc20gb3BhY2l0eS03MCByaW5nLW9mZnNldC1iYWNrZ3JvdW5kIHRyYW5zaXRpb24tb3BhY2l0eSBob3ZlcjpvcGFjaXR5LTEwMCBmb2N1czpvdXRsaW5lLW5vbmUgZm9jdXM6cmluZy0yIGZvY3VzOnJpbmctcmluZyBmb2N1czpyaW5nLW9mZnNldC0yIGRpc2FibGVkOnBvaW50ZXItZXZlbnRzLW5vbmUgZGF0YS1bc3RhdGU9b3Blbl06YmctYWNjZW50IGRhdGEtW3N0YXRlPW9wZW5dOnRleHQtbXV0ZWQtZm9yZWdyb3VuZCI+CiAgICAgICAgPFggY2xhc3NOYW1lPSJoLTQgdy00IiAvPgogICAgICAgIDxzcGFuIGNsYXNzTmFtZT0ic3Itb25seSI+Q2xvc2U8L3NwYW4+CiAgICAgIDwvRGlhbG9nUHJpbWl0aXZlLkNsb3NlPgogICAgPC9EaWFsb2dQcmltaXRpdmUuQ29udGVudD4KICA8L0RpYWxvZ1BvcnRhbD4KKSkKRGlhbG9nQ29udGVudC5kaXNwbGF5TmFtZSA9IERpYWxvZ1ByaW1pdGl2ZS5Db250ZW50LmRpc3BsYXlOYW1lCgpjb25zdCBEaWFsb2dIZWFkZXIgPSAoewogIGNsYXNzTmFtZSwKICAuLi5wcm9wcwp9OiBSZWFjdC5IVE1MQXR0cmlidXRlczxIVE1MRGl2RWxlbWVudD4pID0+ICgKICA8ZGl2CiAgICBjbGFzc05hbWU9e2NuKAogICAgICAiZmxleCBmbGV4LWNvbCBzcGFjZS15LTEuNSB0ZXh0LWNlbnRlciBzbTp0ZXh0LWxlZnQiLAogICAgICBjbGFzc05hbWUKICAgICl9CiAgICB7Li4ucHJvcHN9CiAgLz4KKQpEaWFsb2dIZWFkZXIuZGlzcGxheU5hbWUgPSAiRGlhbG9nSGVhZGVyIgoKY29uc3QgRGlhbG9nRm9vdGVyID0gKHsKICBjbGFzc05hbWUsCiAgLi4ucHJvcHMKfTogUmVhY3QuSFRNTEF0dHJpYnV0ZXM8SFRNTERpdkVsZW1lbnQ+KSA9PiAoCiAgPGRpdgogICAgY2xhc3NOYW1lPXtjbigKICAgICAgImZsZXggZmxleC1jb2wtcmV2ZXJzZSBzbTpmbGV4LXJvdyBzbTpqdXN0aWZ5LWVuZCBzbTpzcGFjZS14LTIiLAogICAgICBjbGFzc05hbWUKICAgICl9CiAgICB7Li4ucHJvcHN9CiAgLz4KKQpEaWFsb2dGb290ZXIuZGlzcGxheU5hbWUgPSAiRGlhbG9nRm9vdGVyIgoKY29uc3QgRGlhbG9nVGl0bGUgPSBSZWFjdC5mb3J3YXJkUmVmPAogIFJlYWN0LkVsZW1lbnRSZWY8dHlwZW9mIERpYWxvZ1ByaW1pdGl2ZS5UaXRsZT4sCiAgUmVhY3QuQ29tcG9uZW50UHJvcHNXaXRob3V0UmVmPHR5cGVvZiBEaWFsb2dQcmltaXRpdmUuVGl0bGU+Cj4oKHsgY2xhc3NOYW1lLCAuLi5wcm9wcyB9LCByZWYpID0+ICgKICA8RGlhbG9nUHJpbWl0aXZlLlRpdGxlCiAgICByZWY9e3JlZn0KICAgIGNsYXNzTmFtZT17Y24oCiAgICAgICJ0ZXh0LWxnIGZvbnQtc2VtaWJvbGQgbGVhZGluZy1ub25lIHRyYWNraW5nLXRpZ2h0IiwKICAgICAgY2xhc3NOYW1lCiAgICApfQogICAgey4uLnByb3BzfQogIC8+CikpCkRpYWxvZ1RpdGxlLmRpc3BsYXlOYW1lID0gRGlhbG9nUHJpbWl0aXZlLlRpdGxlLmRpc3BsYXlOYW1lCgpjb25zdCBEaWFsb2dEZXNjcmlwdGlvbiA9IFJlYWN0LmZvcndhcmRSZWY8CiAgUmVhY3QuRWxlbWVudFJlZjx0eXBlb2YgRGlhbG9nUHJpbWl0aXZlLkRlc2NyaXB0aW9uPiwKICBSZWFjdC5Db21wb25lbnRQcm9wc1dpdGhvdXRSZWY8dHlwZW9mIERpYWxvZ1ByaW1pdGl2ZS5EZXNjcmlwdGlvbj4KPigoeyBjbGFzc05hbWUsIC4uLnByb3BzIH0sIHJlZikgPT4gKAogIDxEaWFsb2dQcmltaXRpdmUuRGVzY3JpcHRpb24KICAgIHJlZj17cmVmfQogICAgY2xhc3NOYW1lPXtjbigidGV4dC1zbSB0ZXh0LW11dGVkLWZvcmVncm91bmQiLCBjbGFzc05hbWUpfQogICAgey4uLnByb3BzfQogIC8+CikpCkRpYWxvZ0Rlc2NyaXB0aW9uLmRpc3BsYXlOYW1lID0gRGlhbG9nUHJpbWl0aXZlLkRlc2NyaXB0aW9uLmRpc3BsYXlOYW1lCgpleHBvcnQgewogIERpYWxvZywKICBEaWFsb2dQb3J0YWwsCiAgRGlhbG9nT3ZlcmxheSwKICBEaWFsb2dDbG9zZSwKICBEaWFsb2dUcmlnZ2VyLAogIERpYWxvZ0NvbnRlbnQsCiAgRGlhbG9nSGVhZGVyLAogIERpYWxvZ0Zvb3RlciwKICBEaWFsb2dUaXRsZSwKICBEaWFsb2dEZXNjcmlwdGlvbiwKfQo=
:FILE_27_END

:FILE_28_PATH
client/src/components/ui/drawer.tsx
:FILE_28_DATA
InVzZSBjbGllbnQiCgppbXBvcnQgKiBhcyBSZWFjdCBmcm9tICJyZWFjdCIKaW1wb3J0IHsgRHJhd2VyIGFzIERyYXdlclByaW1pdGl2ZSB9IGZyb20gInZhdWwiCgppbXBvcnQgeyBjbiB9IGZyb20gIkAvbGliL3V0aWxzIgoKY29uc3QgRHJhd2VyID0gKHsKICBzaG91bGRTY2FsZUJhY2tncm91bmQgPSB0cnVlLAogIC4uLnByb3BzCn06IFJlYWN0LkNvbXBvbmVudFByb3BzPHR5cGVvZiBEcmF3ZXJQcmltaXRpdmUuUm9vdD4pID0+ICgKICA8RHJhd2VyUHJpbWl0aXZlLlJvb3QKICAgIHNob3VsZFNjYWxlQmFja2dyb3VuZD17c2hvdWxkU2NhbGVCYWNrZ3JvdW5kfQogICAgey4uLnByb3BzfQogIC8+CikKRHJhd2VyLmRpc3BsYXlOYW1lID0gIkRyYXdlciIKCmNvbnN0IERyYXdlclRyaWdnZXIgPSBEcmF3ZXJQcmltaXRpdmUuVHJpZ2dlcgoKY29uc3QgRHJhd2VyUG9ydGFsID0gRHJhd2VyUHJpbWl0aXZlLlBvcnRhbAoKY29uc3QgRHJhd2VyQ2xvc2UgPSBEcmF3ZXJQcmltaXRpdmUuQ2xvc2UKCmNvbnN0IERyYXdlck92ZXJsYXkgPSBSZWFjdC5mb3J3YXJkUmVmPAogIFJlYWN0LkVsZW1lbnRSZWY8dHlwZW9mIERyYXdlclByaW1pdGl2ZS5PdmVybGF5PiwKICBSZWFjdC5Db21wb25lbnRQcm9wc1dpdGhvdXRSZWY8dHlwZW9mIERyYXdlclByaW1pdGl2ZS5PdmVybGF5Pgo+KCh7IGNsYXNzTmFtZSwgLi4ucHJvcHMgfSwgcmVmKSA9PiAoCiAgPERyYXdlclByaW1pdGl2ZS5PdmVybGF5CiAgICByZWY9e3JlZn0KICAgIGNsYXNzTmFtZT17Y24oImZpeGVkIGluc2V0LTAgei01MCBiZy1ibGFjay84MCIsIGNsYXNzTmFtZSl9CiAgICB7Li4ucHJvcHN9CiAgLz4KKSkKRHJhd2VyT3ZlcmxheS5kaXNwbGF5TmFtZSA9IERyYXdlclByaW1pdGl2ZS5PdmVybGF5LmRpc3BsYXlOYW1lCgpjb25zdCBEcmF3ZXJDb250ZW50ID0gUmVhY3QuZm9yd2FyZFJlZjwKICBSZWFjdC5FbGVtZW50UmVmPHR5cGVvZiBEcmF3ZXJQcmltaXRpdmUuQ29udGVudD4sCiAgUmVhY3QuQ29tcG9uZW50UHJvcHNXaXRob3V0UmVmPHR5cGVvZiBEcmF3ZXJQcmltaXRpdmUuQ29udGVudD4KPigoeyBjbGFzc05hbWUsIGNoaWxkcmVuLCAuLi5wcm9wcyB9LCByZWYpID0+ICgKICA8RHJhd2VyUG9ydGFsPgogICAgPERyYXdlck92ZXJsYXkgLz4KICAgIDxEcmF3ZXJQcmltaXRpdmUuQ29udGVudAogICAgICByZWY9e3JlZn0KICAgICAgY2xhc3NOYW1lPXtjbigKICAgICAgICAiZml4ZWQgaW5zZXQteC0wIGJvdHRvbS0wIHotNTAgbXQtMjQgZmxleCBoLWF1dG8gZmxleC1jb2wgcm91bmRlZC10LVsxMHB4XSBib3JkZXIgYmctYmFja2dyb3VuZCIsCiAgICAgICAgY2xhc3NOYW1lCiAgICAgICl9CiAgICAgIHsuLi5wcm9wc30KICAgID4KICAgICAgPGRpdiBjbGFzc05hbWU9Im14LWF1dG8gbXQtNCBoLTIgdy1bMTAwcHhdIHJvdW5kZWQtZnVsbCBiZy1tdXRlZCIgLz4KICAgICAge2NoaWxkcmVufQogICAgPC9EcmF3ZXJQcmltaXRpdmUuQ29udGVudD4KICA8L0RyYXdlclBvcnRhbD4KKSkKRHJhd2VyQ29udGVudC5kaXNwbGF5TmFtZSA9ICJEcmF3ZXJDb250ZW50IgoKY29uc3QgRHJhd2VySGVhZGVyID0gKHsKICBjbGFzc05hbWUsCiAgLi4ucHJvcHMKfTogUmVhY3QuSFRNTEF0dHJpYnV0ZXM8SFRNTERpdkVsZW1lbnQ+KSA9PiAoCiAgPGRpdgogICAgY2xhc3NOYW1lPXtjbigiZ3JpZCBnYXAtMS41IHAtNCB0ZXh0LWNlbnRlciBzbTp0ZXh0LWxlZnQiLCBjbGFzc05hbWUpfQogICAgey4uLnByb3BzfQogIC8+CikKRHJhd2VySGVhZGVyLmRpc3BsYXlOYW1lID0gIkRyYXdlckhlYWRlciIKCmNvbnN0IERyYXdlckZvb3RlciA9ICh7CiAgY2xhc3NOYW1lLAogIC4uLnByb3BzCn06IFJlYWN0LkhUTUxBdHRyaWJ1dGVzPEhUTUxEaXZFbGVtZW50PikgPT4gKAogIDxkaXYKICAgIGNsYXNzTmFtZT17Y24oIm10LWF1dG8gZmxleCBmbGV4LWNvbCBnYXAtMiBwLTQiLCBjbGFzc05hbWUpfQogICAgey4uLnByb3BzfQogIC8+CikKRHJhd2VyRm9vdGVyLmRpc3BsYXlOYW1lID0gIkRyYXdlckZvb3RlciIKCmNvbnN0IERyYXdlclRpdGxlID0gUmVhY3QuZm9yd2FyZFJlZjwKICBSZWFjdC5FbGVtZW50UmVmPHR5cGVvZiBEcmF3ZXJQcmltaXRpdmUuVGl0bGU+LAogIFJlYWN0LkNvbXBvbmVudFByb3BzV2l0aG91dFJlZjx0eXBlb2YgRHJhd2VyUHJpbWl0aXZlLlRpdGxlPgo+KCh7IGNsYXNzTmFtZSwgLi4ucHJvcHMgfSwgcmVmKSA9PiAoCiAgPERyYXdlclByaW1pdGl2ZS5UaXRsZQogICAgcmVmPXtyZWZ9CiAgICBjbGFzc05hbWU9e2NuKAogICAgICAidGV4dC1sZyBmb250LXNlbWlib2xkIGxlYWRpbmctbm9uZSB0cmFja2luZy10aWdodCIsCiAgICAgIGNsYXNzTmFtZQogICAgKX0KICAgIHsuLi5wcm9wc30KICAvPgopKQpEcmF3ZXJUaXRsZS5kaXNwbGF5TmFtZSA9IERyYXdlclByaW1pdGl2ZS5UaXRsZS5kaXNwbGF5TmFtZQoKY29uc3QgRHJhd2VyRGVzY3JpcHRpb24gPSBSZWFjdC5mb3J3YXJkUmVmPAogIFJlYWN0LkVsZW1lbnRSZWY8dHlwZW9mIERyYXdlclByaW1pdGl2ZS5EZXNjcmlwdGlvbj4sCiAgUmVhY3QuQ29tcG9uZW50UHJvcHNXaXRob3V0UmVmPHR5cGVvZiBEcmF3ZXJQcmltaXRpdmUuRGVzY3JpcHRpb24+Cj4oKHsgY2xhc3NOYW1lLCAuLi5wcm9wcyB9LCByZWYpID0+ICgKICA8RHJhd2VyUHJpbWl0aXZlLkRlc2NyaXB0aW9uCiAgICByZWY9e3JlZn0KICAgIGNsYXNzTmFtZT17Y24oInRleHQtc20gdGV4dC1tdXRlZC1mb3JlZ3JvdW5kIiwgY2xhc3NOYW1lKX0KICAgIHsuLi5wcm9wc30KICAvPgopKQpEcmF3ZXJEZXNjcmlwdGlvbi5kaXNwbGF5TmFtZSA9IERyYXdlclByaW1pdGl2ZS5EZXNjcmlwdGlvbi5kaXNwbGF5TmFtZQoKZXhwb3J0IHsKICBEcmF3ZXIsCiAgRHJhd2VyUG9ydGFsLAogIERyYXdlck92ZXJsYXksCiAgRHJhd2VyVHJpZ2dlciwKICBEcmF3ZXJDbG9zZSwKICBEcmF3ZXJDb250ZW50LAogIERyYXdlckhlYWRlciwKICBEcmF3ZXJGb290ZXIsCiAgRHJhd2VyVGl0bGUsCiAgRHJhd2VyRGVzY3JpcHRpb24sCn0K
:FILE_28_END

:FILE_29_PATH
client/src/components/ui/dropdown-menu.tsx
:FILE_29_DATA

:FILE_29_END

:FILE_30_PATH
client/src/components/ui/form.tsx
:FILE_30_DATA
InVzZSBjbGllbnQiCgppbXBvcnQgKiBhcyBSZWFjdCBmcm9tICJyZWFjdCIKaW1wb3J0ICogYXMgTGFiZWxQcmltaXRpdmUgZnJvbSAiQHJhZGl4LXVpL3JlYWN0LWxhYmVsIgppbXBvcnQgeyBTbG90IH0gZnJvbSAiQHJhZGl4LXVpL3JlYWN0LXNsb3QiCmltcG9ydCB7CiAgQ29udHJvbGxlciwKICBGb3JtUHJvdmlkZXIsCiAgdXNlRm9ybUNvbnRleHQsCiAgdHlwZSBDb250cm9sbGVyUHJvcHMsCiAgdHlwZSBGaWVsZFBhdGgsCiAgdHlwZSBGaWVsZFZhbHVlcywKfSBmcm9tICJyZWFjdC1ob29rLWZvcm0iCgppbXBvcnQgeyBjbiB9IGZyb20gIkAvbGliL3V0aWxzIgppbXBvcnQgeyBMYWJlbCB9IGZyb20gIkAvY29tcG9uZW50cy91aS9sYWJlbCIKCmNvbnN0IEZvcm0gPSBGb3JtUHJvdmlkZXIKCnR5cGUgRm9ybUZpZWxkQ29udGV4dFZhbHVlPAogIFRGaWVsZFZhbHVlcyBleHRlbmRzIEZpZWxkVmFsdWVzID0gRmllbGRWYWx1ZXMsCiAgVE5hbWUgZXh0ZW5kcyBGaWVsZFBhdGg8VEZpZWxkVmFsdWVzPiA9IEZpZWxkUGF0aDxURmllbGRWYWx1ZXM+Cj4gPSB7CiAgbmFtZTogVE5hbWUKfQoKY29uc3QgRm9ybUZpZWxkQ29udGV4dCA9IFJlYWN0LmNyZWF0ZUNvbnRleHQ8Rm9ybUZpZWxkQ29udGV4dFZhbHVlPigKICB7fSBhcyBGb3JtRmllbGRDb250ZXh0VmFsdWUKKQoKY29uc3QgRm9ybUZpZWxkID0gPAogIFRGaWVsZFZhbHVlcyBleHRlbmRzIEZpZWxkVmFsdWVzID0gRmllbGRWYWx1ZXMsCiAgVE5hbWUgZXh0ZW5kcyBGaWVsZFBhdGg8VEZpZWxkVmFsdWVzPiA9IEZpZWxkUGF0aDxURmllbGRWYWx1ZXM+Cj4oewogIC4uLnByb3BzCn06IENvbnRyb2xsZXJQcm9wczxURmllbGRWYWx1ZXMsIFROYW1lPikgPT4gewogIHJldHVybiAoCiAgICA8Rm9ybUZpZWxkQ29udGV4dC5Qcm92aWRlciB2YWx1ZT17eyBuYW1lOiBwcm9wcy5uYW1lIH19PgogICAgICA8Q29udHJvbGxlciB7Li4ucHJvcHN9IC8+CiAgICA8L0Zvcm1GaWVsZENvbnRleHQuUHJvdmlkZXI+CiAgKQp9Cgpjb25zdCB1c2VGb3JtRmllbGQgPSAoKSA9PiB7CiAgY29uc3QgZmllbGRDb250ZXh0ID0gUmVhY3QudXNlQ29udGV4dChGb3JtRmllbGRDb250ZXh0KQogIGNvbnN0IGl0ZW1Db250ZXh0ID0gUmVhY3QudXNlQ29udGV4dChGb3JtSXRlbUNvbnRleHQpCiAgY29uc3QgeyBnZXRGaWVsZFN0YXRlLCBmb3JtU3RhdGUgfSA9IHVzZUZvcm1Db250ZXh0KCkKCiAgY29uc3QgZmllbGRTdGF0ZSA9IGdldEZpZWxkU3RhdGUoZmllbGRDb250ZXh0Lm5hbWUsIGZvcm1TdGF0ZSkKCiAgaWYgKCFmaWVsZENvbnRleHQpIHsKICAgIHRocm93IG5ldyBFcnJvcigidXNlRm9ybUZpZWxkIHNob3VsZCBiZSB1c2VkIHdpdGhpbiA8Rm9ybUZpZWxkPiIpCiAgfQoKICBjb25zdCB7IGlkIH0gPSBpdGVtQ29udGV4dAoKICByZXR1cm4gewogICAgaWQsCiAgICBuYW1lOiBmaWVsZENvbnRleHQubmFtZSwKICAgIGZvcm1JdGVtSWQ6IGAke2lkfS1mb3JtLWl0ZW1gLAogICAgZm9ybURlc2NyaXB0aW9uSWQ6IGAke2lkfS1mb3JtLWl0ZW0tZGVzY3JpcHRpb25gLAogICAgZm9ybU1lc3NhZ2VJZDogYCR7aWR9LWZvcm0taXRlbS1tZXNzYWdlYCwKICAgIC4uLmZpZWxkU3RhdGUsCiAgfQp9Cgp0eXBlIEZvcm1JdGVtQ29udGV4dFZhbHVlID0gewogIGlkOiBzdHJpbmcKfQoKY29uc3QgRm9ybUl0ZW1Db250ZXh0ID0gUmVhY3QuY3JlYXRlQ29udGV4dDxGb3JtSXRlbUNvbnRleHRWYWx1ZT4oCiAge30gYXMgRm9ybUl0ZW1Db250ZXh0VmFsdWUKKQoKY29uc3QgRm9ybUl0ZW0gPSBSZWFjdC5mb3J3YXJkUmVmPAogIEhUTUxEaXZFbGVtZW50LAogIFJlYWN0LkhUTUxBdHRyaWJ1dGVzPEhUTUxEaXZFbGVtZW50Pgo+KCh7IGNsYXNzTmFtZSwgLi4ucHJvcHMgfSwgcmVmKSA9PiB7CiAgY29uc3QgaWQgPSBSZWFjdC51c2VJZCgpCgogIHJldHVybiAoCiAgICA8Rm9ybUl0ZW1Db250ZXh0LlByb3ZpZGVyIHZhbHVlPXt7IGlkIH19PgogICAgICA8ZGl2IHJlZj17cmVmfSBjbGFzc05hbWU9e2NuKCJzcGFjZS15LTIiLCBjbGFzc05hbWUpfSB7Li4ucHJvcHN9IC8+CiAgICA8L0Zvcm1JdGVtQ29udGV4dC5Qcm92aWRlcj4KICApCn0pCkZvcm1JdGVtLmRpc3BsYXlOYW1lID0gIkZvcm1JdGVtIgoKY29uc3QgRm9ybUxhYmVsID0gUmVhY3QuZm9yd2FyZFJlZjwKICBSZWFjdC5FbGVtZW50UmVmPHR5cGVvZiBMYWJlbFByaW1pdGl2ZS5Sb290PiwKICBSZWFjdC5Db21wb25lbnRQcm9wc1dpdGhvdXRSZWY8dHlwZW9mIExhYmVsUHJpbWl0aXZlLlJvb3Q+Cj4oKHsgY2xhc3NOYW1lLCAuLi5wcm9wcyB9LCByZWYpID0+IHsKICBjb25zdCB7IGVycm9yLCBmb3JtSXRlbUlkIH0gPSB1c2VGb3JtRmllbGQoKQoKICByZXR1cm4gKAogICAgPExhYmVsCiAgICAgIHJlZj17cmVmfQogICAgICBjbGFzc05hbWU9e2NuKGVycm9yICYmICJ0ZXh0LWRlc3RydWN0aXZlIiwgY2xhc3NOYW1lKX0KICAgICAgaHRtbEZvcj17Zm9ybUl0ZW1JZH0KICAgICAgey4uLnByb3BzfQogICAgLz4KICApCn0pCkZvcm1MYWJlbC5kaXNwbGF5TmFtZSA9ICJGb3JtTGFiZWwiCgpjb25zdCBGb3JtQ29udHJvbCA9IFJlYWN0LmZvcndhcmRSZWY8CiAgUmVhY3QuRWxlbWVudFJlZjx0eXBlb2YgU2xvdD4sCiAgUmVhY3QuQ29tcG9uZW50UHJvcHNXaXRob3V0UmVmPHR5cGVvZiBTbG90Pgo+KCh7IC4uLnByb3BzIH0sIHJlZikgPT4gewogIGNvbnN0IHsgZXJyb3IsIGZvcm1JdGVtSWQsIGZvcm1EZXNjcmlwdGlvbklkLCBmb3JtTWVzc2FnZUlkIH0gPSB1c2VGb3JtRmllbGQoKQoKICByZXR1cm4gKAogICAgPFNsb3QKICAgICAgcmVmPXtyZWZ9CiAgICAgIGlkPXtmb3JtSXRlbUlkfQogICAgICBhcmlhLWRlc2NyaWJlZGJ5PXsKICAgICAgICAhZXJyb3IKICAgICAgICAgID8gYCR7Zm9ybURlc2NyaXB0aW9uSWR9YAogICAgICAgICAgOiBgJHtmb3JtRGVzY3JpcHRpb25JZH0gJHtmb3JtTWVzc2FnZUlkfWAKICAgICAgfQogICAgICBhcmlhLWludmFsaWQ9eyEhZXJyb3J9CiAgICAgIHsuLi5wcm9wc30KICAgIC8+CiAgKQp9KQpGb3JtQ29udHJvbC5kaXNwbGF5TmFtZSA9ICJGb3JtQ29udHJvbCIKCmNvbnN0IEZvcm1EZXNjcmlwdGlvbiA9IFJlYWN0LmZvcndhcmRSZWY8CiAgSFRNTFBhcmFncmFwaEVsZW1lbnQsCiAgUmVhY3QuSFRNTEF0dHJpYnV0ZXM8SFRNTFBhcmFncmFwaEVsZW1lbnQ+Cj4oKHsgY2xhc3NOYW1lLCAuLi5wcm9wcyB9LCByZWYpID0+IHsKICBjb25zdCB7IGZvcm1EZXNjcmlwdGlvbklkIH0gPSB1c2VGb3JtRmllbGQoKQoKICByZXR1cm4gKAogICAgPHAKICAgICAgcmVmPXtyZWZ9CiAgICAgIGlkPXtmb3JtRGVzY3JpcHRpb25JZH0KICAgICAgY2xhc3NOYW1lPXtjbigidGV4dC1zbSB0ZXh0LW11dGVkLWZvcmVncm91bmQiLCBjbGFzc05hbWUpfQogICAgICB7Li4ucHJvcHN9CiAgICAvPgogICkKfSkKRm9ybURlc2NyaXB0aW9uLmRpc3BsYXlOYW1lID0gIkZvcm1EZXNjcmlwdGlvbiIKCmNvbnN0IEZvcm1NZXNzYWdlID0gUmVhY3QuZm9yd2FyZFJlZjwKICBIVE1MUGFyYWdyYXBoRWxlbWVudCwKICBSZWFjdC5IVE1MQXR0cmlidXRlczxIVE1MUGFyYWdyYXBoRWxlbWVudD4KPigoeyBjbGFzc05hbWUsIGNoaWxkcmVuLCAuLi5wcm9wcyB9LCByZWYpID0+IHsKICBjb25zdCB7IGVycm9yLCBmb3JtTWVzc2FnZUlkIH0gPSB1c2VGb3JtRmllbGQoKQogIGNvbnN0IGJvZHkgPSBlcnJvciA/IFN0cmluZyhlcnJvcj8ubWVzc2FnZSA/PyAiIikgOiBjaGlsZHJlbgoKICBpZiAoIWJvZHkpIHsKICAgIHJldHVybiBudWxsCiAgfQoKICByZXR1cm4gKAogICAgPHAKICAgICAgcmVmPXtyZWZ9CiAgICAgIGlkPXtmb3JtTWVzc2FnZUlkfQogICAgICBjbGFzc05hbWU9e2NuKCJ0ZXh0LXNtIGZvbnQtbWVkaXVtIHRleHQtZGVzdHJ1Y3RpdmUiLCBjbGFzc05hbWUpfQogICAgICB7Li4ucHJvcHN9CiAgICA+CiAgICAgIHtib2R5fQogICAgPC9wPgogICkKfSkKRm9ybU1lc3NhZ2UuZGlzcGxheU5hbWUgPSAiRm9ybU1lc3NhZ2UiCgpleHBvcnQgewogIHVzZUZvcm1GaWVsZCwKICBGb3JtLAogIEZvcm1JdGVtLAogIEZvcm1MYWJlbCwKICBGb3JtQ29udHJvbCwKICBGb3JtRGVzY3JpcHRpb24sCiAgRm9ybU1lc3NhZ2UsCiAgRm9ybUZpZWxkLAp9Cg==
:FILE_30_END

:FILE_31_PATH
client/src/components/ui/hover-card.tsx
:FILE_31_DATA
InVzZSBjbGllbnQiCgppbXBvcnQgKiBhcyBSZWFjdCBmcm9tICJyZWFjdCIKaW1wb3J0ICogYXMgSG92ZXJDYXJkUHJpbWl0aXZlIGZyb20gIkByYWRpeC11aS9yZWFjdC1ob3Zlci1jYXJkIgoKaW1wb3J0IHsgY24gfSBmcm9tICJAL2xpYi91dGlscyIKCmNvbnN0IEhvdmVyQ2FyZCA9IEhvdmVyQ2FyZFByaW1pdGl2ZS5Sb290Cgpjb25zdCBIb3ZlckNhcmRUcmlnZ2VyID0gSG92ZXJDYXJkUHJpbWl0aXZlLlRyaWdnZXIKCmNvbnN0IEhvdmVyQ2FyZENvbnRlbnQgPSBSZWFjdC5mb3J3YXJkUmVmPAogIFJlYWN0LkVsZW1lbnRSZWY8dHlwZW9mIEhvdmVyQ2FyZFByaW1pdGl2ZS5Db250ZW50PiwKICBSZWFjdC5Db21wb25lbnRQcm9wc1dpdGhvdXRSZWY8dHlwZW9mIEhvdmVyQ2FyZFByaW1pdGl2ZS5Db250ZW50Pgo+KCh7IGNsYXNzTmFtZSwgYWxpZ24gPSAiY2VudGVyIiwgc2lkZU9mZnNldCA9IDQsIC4uLnByb3BzIH0sIHJlZikgPT4gKAogIDxIb3ZlckNhcmRQcmltaXRpdmUuQ29udGVudAogICAgcmVmPXtyZWZ9CiAgICBhbGlnbj17YWxpZ259CiAgICBzaWRlT2Zmc2V0PXtzaWRlT2Zmc2V0fQogICAgY2xhc3NOYW1lPXtjbigKICAgICAgInotNTAgdy02NCByb3VuZGVkLW1kIGJvcmRlciBiZy1wb3BvdmVyIHAtNCB0ZXh0LXBvcG92ZXItZm9yZWdyb3VuZCBzaGFkb3ctbWQgb3V0bGluZS1ub25lIGRhdGEtW3N0YXRlPW9wZW5dOmFuaW1hdGUtaW4gZGF0YS1bc3RhdGU9Y2xvc2VkXTphbmltYXRlLW91dCBkYXRhLVtzdGF0ZT1jbG9zZWRdOmZhZGUtb3V0LTAgZGF0YS1bc3RhdGU9b3Blbl06ZmFkZS1pbi0wIGRhdGEtW3N0YXRlPWNsb3NlZF06em9vbS1vdXQtOTUgZGF0YS1bc3RhdGU9b3Blbl06em9vbS1pbi05NSBkYXRhLVtzaWRlPWJvdHRvbV06c2xpZGUtaW4tZnJvbS10b3AtMiBkYXRhLVtzaWRlPWxlZnRdOnNsaWRlLWluLWZyb20tcmlnaHQtMiBkYXRhLVtzaWRlPXJpZ2h0XTpzbGlkZS1pbi1mcm9tLWxlZnQtMiBkYXRhLVtzaWRlPXRvcF06c2xpZGUtaW4tZnJvbS1ib3R0b20tMiBvcmlnaW4tWy0tcmFkaXgtaG92ZXItY2FyZC1jb250ZW50LXRyYW5zZm9ybS1vcmlnaW5dIiwKICAgICAgY2xhc3NOYW1lCiAgICApfQogICAgey4uLnByb3BzfQogIC8+CikpCkhvdmVyQ2FyZENvbnRlbnQuZGlzcGxheU5hbWUgPSBIb3ZlckNhcmRQcmltaXRpdmUuQ29udGVudC5kaXNwbGF5TmFtZQoKZXhwb3J0IHsgSG92ZXJDYXJkLCBIb3ZlckNhcmRUcmlnZ2VyLCBIb3ZlckNhcmRDb250ZW50IH0K
:FILE_31_END

:FILE_32_PATH
client/src/components/ui/input-otp.tsx
:FILE_32_DATA
aW1wb3J0ICogYXMgUmVhY3QgZnJvbSAicmVhY3QiCmltcG9ydCB7IE9UUElucHV0LCBPVFBJbnB1dENvbnRleHQgfSBmcm9tICJpbnB1dC1vdHAiCmltcG9ydCB7IERvdCB9IGZyb20gImx1Y2lkZS1yZWFjdCIKCmltcG9ydCB7IGNuIH0gZnJvbSAiQC9saWIvdXRpbHMiCgpjb25zdCBJbnB1dE9UUCA9IFJlYWN0LmZvcndhcmRSZWY8CiAgUmVhY3QuRWxlbWVudFJlZjx0eXBlb2YgT1RQSW5wdXQ+LAogIFJlYWN0LkNvbXBvbmVudFByb3BzV2l0aG91dFJlZjx0eXBlb2YgT1RQSW5wdXQ+Cj4oKHsgY2xhc3NOYW1lLCBjb250YWluZXJDbGFzc05hbWUsIC4uLnByb3BzIH0sIHJlZikgPT4gKAogIDxPVFBJbnB1dAogICAgcmVmPXtyZWZ9CiAgICBjb250YWluZXJDbGFzc05hbWU9e2NuKAogICAgICAiZmxleCBpdGVtcy1jZW50ZXIgZ2FwLTIgaGFzLVs6ZGlzYWJsZWRdOm9wYWNpdHktNTAiLAogICAgICBjb250YWluZXJDbGFzc05hbWUKICAgICl9CiAgICBjbGFzc05hbWU9e2NuKCJkaXNhYmxlZDpjdXJzb3Itbm90LWFsbG93ZWQiLCBjbGFzc05hbWUpfQogICAgey4uLnByb3BzfQogIC8+CikpCklucHV0T1RQLmRpc3BsYXlOYW1lID0gIklucHV0T1RQIgoKY29uc3QgSW5wdXRPVFBHcm91cCA9IFJlYWN0LmZvcndhcmRSZWY8CiAgUmVhY3QuRWxlbWVudFJlZjwiZGl2Ij4sCiAgUmVhY3QuQ29tcG9uZW50UHJvcHNXaXRob3V0UmVmPCJkaXYiPgo+KCh7IGNsYXNzTmFtZSwgLi4ucHJvcHMgfSwgcmVmKSA9PiAoCiAgPGRpdiByZWY9e3JlZn0gY2xhc3NOYW1lPXtjbigiZmxleCBpdGVtcy1jZW50ZXIiLCBjbGFzc05hbWUpfSB7Li4ucHJvcHN9IC8+CikpCklucHV0T1RQR3JvdXAuZGlzcGxheU5hbWUgPSAiSW5wdXRPVFBHcm91cCIKCmNvbnN0IElucHV0T1RQU2xvdCA9IFJlYWN0LmZvcndhcmRSZWY8CiAgUmVhY3QuRWxlbWVudFJlZjwiZGl2Ij4sCiAgUmVhY3QuQ29tcG9uZW50UHJvcHNXaXRob3V0UmVmPCJkaXYiPiAmIHsgaW5kZXg6IG51bWJlciB9Cj4oKHsgaW5kZXgsIGNsYXNzTmFtZSwgLi4ucHJvcHMgfSwgcmVmKSA9PiB7CiAgY29uc3QgaW5wdXRPVFBDb250ZXh0ID0gUmVhY3QudXNlQ29udGV4dChPVFBJbnB1dENvbnRleHQpCiAgY29uc3QgeyBjaGFyLCBoYXNGYWtlQ2FyZXQsIGlzQWN0aXZlIH0gPSBpbnB1dE9UUENvbnRleHQuc2xvdHNbaW5kZXhdCgogIHJldHVybiAoCiAgICA8ZGl2CiAgICAgIHJlZj17cmVmfQogICAgICBjbGFzc05hbWU9e2NuKAogICAgICAgICJyZWxhdGl2ZSBmbGV4IGgtMTAgdy0xMCBpdGVtcy1jZW50ZXIganVzdGlmeS1jZW50ZXIgYm9yZGVyLXkgYm9yZGVyLXIgYm9yZGVyLWlucHV0IHRleHQtc20gdHJhbnNpdGlvbi1hbGwgZmlyc3Q6cm91bmRlZC1sLW1kIGZpcnN0OmJvcmRlci1sIGxhc3Q6cm91bmRlZC1yLW1kIiwKICAgICAgICBpc0FjdGl2ZSAmJiAiei0xMCByaW5nLTIgcmluZy1yaW5nIHJpbmctb2Zmc2V0LWJhY2tncm91bmQiLAogICAgICAgIGNsYXNzTmFtZQogICAgICApfQogICAgICB7Li4ucHJvcHN9CiAgICA+CiAgICAgIHtjaGFyfQogICAgICB7aGFzRmFrZUNhcmV0ICYmICgKICAgICAgICA8ZGl2IGNsYXNzTmFtZT0icG9pbnRlci1ldmVudHMtbm9uZSBhYnNvbHV0ZSBpbnNldC0wIGZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktY2VudGVyIj4KICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSJoLTQgdy1weCBhbmltYXRlLWNhcmV0LWJsaW5rIGJnLWZvcmVncm91bmQgZHVyYXRpb24tMTAwMCIgLz4KICAgICAgICA8L2Rpdj4KICAgICAgKX0KICAgIDwvZGl2PgogICkKfSkKSW5wdXRPVFBTbG90LmRpc3BsYXlOYW1lID0gIklucHV0T1RQU2xvdCIKCmNvbnN0IElucHV0T1RQU2VwYXJhdG9yID0gUmVhY3QuZm9yd2FyZFJlZjwKICBSZWFjdC5FbGVtZW50UmVmPCJkaXYiPiwKICBSZWFjdC5Db21wb25lbnRQcm9wc1dpdGhvdXRSZWY8ImRpdiI+Cj4oKHsgLi4ucHJvcHMgfSwgcmVmKSA9PiAoCiAgPGRpdiByZWY9e3JlZn0gcm9sZT0ic2VwYXJhdG9yIiB7Li4ucHJvcHN9PgogICAgPERvdCAvPgogIDwvZGl2PgopKQpJbnB1dE9UUFNlcGFyYXRvci5kaXNwbGF5TmFtZSA9ICJJbnB1dE9UUFNlcGFyYXRvciIKCmV4cG9ydCB7IElucHV0T1RQLCBJbnB1dE9UUEdyb3VwLCBJbnB1dE9UUFNsb3QsIElucHV0T1RQU2VwYXJhdG9yIH0K
:FILE_32_END

:FILE_33_PATH
client/src/components/ui/input.tsx
:FILE_33_DATA
aW1wb3J0ICogYXMgUmVhY3QgZnJvbSAicmVhY3QiCgppbXBvcnQgeyBjbiB9IGZyb20gIkAvbGliL3V0aWxzIgoKY29uc3QgSW5wdXQgPSBSZWFjdC5mb3J3YXJkUmVmPEhUTUxJbnB1dEVsZW1lbnQsIFJlYWN0LkNvbXBvbmVudFByb3BzPCJpbnB1dCI+PigKICAoeyBjbGFzc05hbWUsIHR5cGUsIC4uLnByb3BzIH0sIHJlZikgPT4gewogICAgcmV0dXJuICgKICAgICAgPGlucHV0CiAgICAgICAgdHlwZT17dHlwZX0KICAgICAgICBjbGFzc05hbWU9e2NuKAogICAgICAgICAgImZsZXggaC0xMCB3LWZ1bGwgcm91bmRlZC1tZCBib3JkZXIgYm9yZGVyLWlucHV0IGJnLWJhY2tncm91bmQgcHgtMyBweS0yIHRleHQtYmFzZSByaW5nLW9mZnNldC1iYWNrZ3JvdW5kIGZpbGU6Ym9yZGVyLTAgZmlsZTpiZy10cmFuc3BhcmVudCBmaWxlOnRleHQtc20gZmlsZTpmb250LW1lZGl1bSBmaWxlOnRleHQtZm9yZWdyb3VuZCBwbGFjZWhvbGRlcjp0ZXh0LW11dGVkLWZvcmVncm91bmQgZm9jdXMtdmlzaWJsZTpvdXRsaW5lLW5vbmUgZm9jdXMtdmlzaWJsZTpyaW5nLTIgZm9jdXMtdmlzaWJsZTpyaW5nLXJpbmcgZm9jdXMtdmlzaWJsZTpyaW5nLW9mZnNldC0yIGRpc2FibGVkOmN1cnNvci1ub3QtYWxsb3dlZCBkaXNhYmxlZDpvcGFjaXR5LTUwIG1kOnRleHQtc20iLAogICAgICAgICAgY2xhc3NOYW1lCiAgICAgICAgKX0KICAgICAgICByZWY9e3JlZn0KICAgICAgICB7Li4ucHJvcHN9CiAgICAgIC8+CiAgICApCiAgfQopCklucHV0LmRpc3BsYXlOYW1lID0gIklucHV0IgoKZXhwb3J0IHsgSW5wdXQgfQo=
:FILE_33_END

:FILE_34_PATH
client/src/components/ui/label.tsx
:FILE_34_DATA
aW1wb3J0ICogYXMgUmVhY3QgZnJvbSAicmVhY3QiCmltcG9ydCAqIGFzIExhYmVsUHJpbWl0aXZlIGZyb20gIkByYWRpeC11aS9yZWFjdC1sYWJlbCIKaW1wb3J0IHsgY3ZhLCB0eXBlIFZhcmlhbnRQcm9wcyB9IGZyb20gImNsYXNzLXZhcmlhbmNlLWF1dGhvcml0eSIKCmltcG9ydCB7IGNuIH0gZnJvbSAiQC9saWIvdXRpbHMiCgpjb25zdCBsYWJlbFZhcmlhbnRzID0gY3ZhKAogICJ0ZXh0LXNtIGZvbnQtbWVkaXVtIGxlYWRpbmctbm9uZSBwZWVyLWRpc2FibGVkOmN1cnNvci1ub3QtYWxsb3dlZCBwZWVyLWRpc2FibGVkOm9wYWNpdHktNzAiCikKCmNvbnN0IExhYmVsID0gUmVhY3QuZm9yd2FyZFJlZjwKICBSZWFjdC5FbGVtZW50UmVmPHR5cGVvZiBMYWJlbFByaW1pdGl2ZS5Sb290PiwKICBSZWFjdC5Db21wb25lbnRQcm9wc1dpdGhvdXRSZWY8dHlwZW9mIExhYmVsUHJpbWl0aXZlLlJvb3Q+ICYKICAgIFZhcmlhbnRQcm9wczx0eXBlb2YgbGFiZWxWYXJpYW50cz4KPigoeyBjbGFzc05hbWUsIC4uLnByb3BzIH0sIHJlZikgPT4gKAogIDxMYWJlbFByaW1pdGl2ZS5Sb290CiAgICByZWY9e3JlZn0KICAgIGNsYXNzTmFtZT17Y24obGFiZWxWYXJpYW50cygpLCBjbGFzc05hbWUpfQogICAgey4uLnByb3BzfQogIC8+CikpCkxhYmVsLmRpc3BsYXlOYW1lID0gTGFiZWxQcmltaXRpdmUuUm9vdC5kaXNwbGF5TmFtZQoKZXhwb3J0IHsgTGFiZWwgfQo=
:FILE_34_END

:FILE_35_PATH
client/src/components/ui/menubar.tsx
:FILE_35_DATA

:FILE_35_END

:FILE_36_PATH
client/src/components/ui/navigation-menu.tsx
:FILE_36_DATA
aW1wb3J0ICogYXMgUmVhY3QgZnJvbSAicmVhY3QiCmltcG9ydCAqIGFzIE5hdmlnYXRpb25NZW51UHJpbWl0aXZlIGZyb20gIkByYWRpeC11aS9yZWFjdC1uYXZpZ2F0aW9uLW1lbnUiCmltcG9ydCB7IGN2YSB9IGZyb20gImNsYXNzLXZhcmlhbmNlLWF1dGhvcml0eSIKaW1wb3J0IHsgQ2hldnJvbkRvd24gfSBmcm9tICJsdWNpZGUtcmVhY3QiCgppbXBvcnQgeyBjbiB9IGZyb20gIkAvbGliL3V0aWxzIgoKY29uc3QgTmF2aWdhdGlvbk1lbnUgPSBSZWFjdC5mb3J3YXJkUmVmPAogIFJlYWN0LkVsZW1lbnRSZWY8dHlwZW9mIE5hdmlnYXRpb25NZW51UHJpbWl0aXZlLlJvb3Q+LAogIFJlYWN0LkNvbXBvbmVudFByb3BzV2l0aG91dFJlZjx0eXBlb2YgTmF2aWdhdGlvbk1lbnVQcmltaXRpdmUuUm9vdD4KPigoeyBjbGFzc05hbWUsIGNoaWxkcmVuLCAuLi5wcm9wcyB9LCByZWYpID0+ICgKICA8TmF2aWdhdGlvbk1lbnVQcmltaXRpdmUuUm9vdAogICAgcmVmPXtyZWZ9CiAgICBjbGFzc05hbWU9e2NuKAogICAgICAicmVsYXRpdmUgei0xMCBmbGV4IG1heC13LW1heCBmbGV4LTEgaXRlbXMtY2VudGVyIGp1c3RpZnktY2VudGVyIiwKICAgICAgY2xhc3NOYW1lCiAgICApfQogICAgey4uLnByb3BzfQogID4KICAgIHtjaGlsZHJlbn0KICAgIDxOYXZpZ2F0aW9uTWVudVZpZXdwb3J0IC8+CiAgPC9OYXZpZ2F0aW9uTWVudVByaW1pdGl2ZS5Sb290PgopKQpOYXZpZ2F0aW9uTWVudS5kaXNwbGF5TmFtZSA9IE5hdmlnYXRpb25NZW51UHJpbWl0aXZlLlJvb3QuZGlzcGxheU5hbWUKCmNvbnN0IE5hdmlnYXRpb25NZW51TGlzdCA9IFJlYWN0LmZvcndhcmRSZWY8CiAgUmVhY3QuRWxlbWVudFJlZjx0eXBlb2YgTmF2aWdhdGlvbk1lbnVQcmltaXRpdmUuTGlzdD4sCiAgUmVhY3QuQ29tcG9uZW50UHJvcHNXaXRob3V0UmVmPHR5cGVvZiBOYXZpZ2F0aW9uTWVudVByaW1pdGl2ZS5MaXN0Pgo+KCh7IGNsYXNzTmFtZSwgLi4ucHJvcHMgfSwgcmVmKSA9PiAoCiAgPE5hdmlnYXRpb25NZW51UHJpbWl0aXZlLkxpc3QKICAgIHJlZj17cmVmfQogICAgY2xhc3NOYW1lPXtjbigKICAgICAgImdyb3VwIGZsZXggZmxleC0xIGxpc3Qtbm9uZSBpdGVtcy1jZW50ZXIganVzdGlmeS1jZW50ZXIgc3BhY2UteC0xIiwKICAgICAgY2xhc3NOYW1lCiAgICApfQogICAgey4uLnByb3BzfQogIC8+CikpCk5hdmlnYXRpb25NZW51TGlzdC5kaXNwbGF5TmFtZSA9IE5hdmlnYXRpb25NZW51UHJpbWl0aXZlLkxpc3QuZGlzcGxheU5hbWUKCmNvbnN0IE5hdmlnYXRpb25NZW51SXRlbSA9IE5hdmlnYXRpb25NZW51UHJpbWl0aXZlLkl0ZW0KCmNvbnN0IG5hdmlnYXRpb25NZW51VHJpZ2dlclN0eWxlID0gY3ZhKAogICJncm91cCBpbmxpbmUtZmxleCBoLTEwIHctbWF4IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWNlbnRlciByb3VuZGVkLW1kIGJnLWJhY2tncm91bmQgcHgtNCBweS0yIHRleHQtc20gZm9udC1tZWRpdW0gdHJhbnNpdGlvbi1jb2xvcnMgaG92ZXI6YmctYWNjZW50IGhvdmVyOnRleHQtYWNjZW50LWZvcmVncm91bmQgZm9jdXM6YmctYWNjZW50IGZvY3VzOnRleHQtYWNjZW50LWZvcmVncm91bmQgZm9jdXM6b3V0bGluZS1ub25lIGRpc2FibGVkOnBvaW50ZXItZXZlbnRzLW5vbmUgZGlzYWJsZWQ6b3BhY2l0eS01MCBkYXRhLVtzdGF0ZT1vcGVuXTp0ZXh0LWFjY2VudC1mb3JlZ3JvdW5kIGRhdGEtW3N0YXRlPW9wZW5dOmJnLWFjY2VudC81MCBkYXRhLVtzdGF0ZT1vcGVuXTpob3ZlcjpiZy1hY2NlbnQgZGF0YS1bc3RhdGU9b3Blbl06Zm9jdXM6YmctYWNjZW50IgopCgpjb25zdCBOYXZpZ2F0aW9uTWVudVRyaWdnZXIgPSBSZWFjdC5mb3J3YXJkUmVmPAogIFJlYWN0LkVsZW1lbnRSZWY8dHlwZW9mIE5hdmlnYXRpb25NZW51UHJpbWl0aXZlLlRyaWdnZXI+LAogIFJlYWN0LkNvbXBvbmVudFByb3BzV2l0aG91dFJlZjx0eXBlb2YgTmF2aWdhdGlvbk1lbnVQcmltaXRpdmUuVHJpZ2dlcj4KPigoeyBjbGFzc05hbWUsIGNoaWxkcmVuLCAuLi5wcm9wcyB9LCByZWYpID0+ICgKICA8TmF2aWdhdGlvbk1lbnVQcmltaXRpdmUuVHJpZ2dlcgogICAgcmVmPXtyZWZ9CiAgICBjbGFzc05hbWU9e2NuKG5hdmlnYXRpb25NZW51VHJpZ2dlclN0eWxlKCksICJncm91cCIsIGNsYXNzTmFtZSl9CiAgICB7Li4ucHJvcHN9CiAgPgogICAge2NoaWxkcmVufXsiICJ9CiAgICA8Q2hldnJvbkRvd24KICAgICAgY2xhc3NOYW1lPSJyZWxhdGl2ZSB0b3AtWzFweF0gbWwtMSBoLTMgdy0zIHRyYW5zaXRpb24gZHVyYXRpb24tMjAwIGdyb3VwLWRhdGEtW3N0YXRlPW9wZW5dOnJvdGF0ZS0xODAiCiAgICAgIGFyaWEtaGlkZGVuPSJ0cnVlIgogICAgLz4KICA8L05hdmlnYXRpb25NZW51UHJpbWl0aXZlLlRyaWdnZXI+CikpCk5hdmlnYXRpb25NZW51VHJpZ2dlci5kaXNwbGF5TmFtZSA9IE5hdmlnYXRpb25NZW51UHJpbWl0aXZlLlRyaWdnZXIuZGlzcGxheU5hbWUKCmNvbnN0IE5hdmlnYXRpb25NZW51Q29udGVudCA9IFJlYWN0LmZvcndhcmRSZWY8CiAgUmVhY3QuRWxlbWVudFJlZjx0eXBlb2YgTmF2aWdhdGlvbk1lbnVQcmltaXRpdmUuQ29udGVudD4sCiAgUmVhY3QuQ29tcG9uZW50UHJvcHNXaXRob3V0UmVmPHR5cGVvZiBOYXZpZ2F0aW9uTWVudVByaW1pdGl2ZS5Db250ZW50Pgo+KCh7IGNsYXNzTmFtZSwgLi4ucHJvcHMgfSwgcmVmKSA9PiAoCiAgPE5hdmlnYXRpb25NZW51UHJpbWl0aXZlLkNvbnRlbnQKICAgIHJlZj17cmVmfQogICAgY2xhc3NOYW1lPXtjbigKICAgICAgImxlZnQtMCB0b3AtMCB3LWZ1bGwgZGF0YS1bbW90aW9uXj1mcm9tLV06YW5pbWF0ZS1pbiBkYXRhLVttb3Rpb25ePXRvLV06YW5pbWF0ZS1vdXQgZGF0YS1bbW90aW9uXj1mcm9tLV06ZmFkZS1pbiBkYXRhLVttb3Rpb25ePXRvLV06ZmFkZS1vdXQgZGF0YS1bbW90aW9uPWZyb20tZW5kXTpzbGlkZS1pbi1mcm9tLXJpZ2h0LTUyIGRhdGEtW21vdGlvbj1mcm9tLXN0YXJ0XTpzbGlkZS1pbi1mcm9tLWxlZnQtNTIgZGF0YS1bbW90aW9uPXRvLWVuZF06c2xpZGUtb3V0LXRvLXJpZ2h0LTUyIGRhdGEtW21vdGlvbj10by1zdGFydF06c2xpZGUtb3V0LXRvLWxlZnQtNTIgbWQ6YWJzb2x1dGUgbWQ6dy1hdXRvICIsCiAgICAgIGNsYXNzTmFtZQogICAgKX0KICAgIHsuLi5wcm9wc30KICAvPgopKQpOYXZpZ2F0aW9uTWVudUNvbnRlbnQuZGlzcGxheU5hbWUgPSBOYXZpZ2F0aW9uTWVudVByaW1pdGl2ZS5Db250ZW50LmRpc3BsYXlOYW1lCgpjb25zdCBOYXZpZ2F0aW9uTWVudUxpbmsgPSBOYXZpZ2F0aW9uTWVudVByaW1pdGl2ZS5MaW5rCgpjb25zdCBOYXZpZ2F0aW9uTWVudVZpZXdwb3J0ID0gUmVhY3QuZm9yd2FyZFJlZjwKICBSZWFjdC5FbGVtZW50UmVmPHR5cGVvZiBOYXZpZ2F0aW9uTWVudVByaW1pdGl2ZS5WaWV3cG9ydD4sCiAgUmVhY3QuQ29tcG9uZW50UHJvcHNXaXRob3V0UmVmPHR5cGVvZiBOYXZpZ2F0aW9uTWVudVByaW1pdGl2ZS5WaWV3cG9ydD4KPigoeyBjbGFzc05hbWUsIC4uLnByb3BzIH0sIHJlZikgPT4gKAogIDxkaXYgY2xhc3NOYW1lPXtjbigiYWJzb2x1dGUgbGVmdC0wIHRvcC1mdWxsIGZsZXgganVzdGlmeS1jZW50ZXIiKX0+CiAgICA8TmF2aWdhdGlvbk1lbnVQcmltaXRpdmUuVmlld3BvcnQKICAgICAgY2xhc3NOYW1lPXtjbigKICAgICAgICAib3JpZ2luLXRvcC1jZW50ZXIgcmVsYXRpdmUgbXQtMS41IGgtW3ZhcigtLXJhZGl4LW5hdmlnYXRpb24tbWVudS12aWV3cG9ydC1oZWlnaHQpXSB3LWZ1bGwgb3ZlcmZsb3ctaGlkZGVuIHJvdW5kZWQtbWQgYm9yZGVyIGJnLXBvcG92ZXIgdGV4dC1wb3BvdmVyLWZvcmVncm91bmQgc2hhZG93LWxnIGRhdGEtW3N0YXRlPW9wZW5dOmFuaW1hdGUtaW4gZGF0YS1bc3RhdGU9Y2xvc2VkXTphbmltYXRlLW91dCBkYXRhLVtzdGF0ZT1jbG9zZWRdOnpvb20tb3V0LTk1IGRhdGEtW3N0YXRlPW9wZW5dOnpvb20taW4tOTAgbWQ6dy1bdmFyKC0tcmFkaXgtbmF2aWdhdGlvbi1tZW51LXZpZXdwb3J0LXdpZHRoKV0iLAogICAgICAgIGNsYXNzTmFtZQogICAgICApfQogICAgICByZWY9e3JlZn0KICAgICAgey4uLnByb3BzfQogICAgLz4KICA8L2Rpdj4KKSkKTmF2aWdhdGlvbk1lbnVWaWV3cG9ydC5kaXNwbGF5TmFtZSA9CiAgTmF2aWdhdGlvbk1lbnVQcmltaXRpdmUuVmlld3BvcnQuZGlzcGxheU5hbWUKCmNvbnN0IE5hdmlnYXRpb25NZW51SW5kaWNhdG9yID0gUmVhY3QuZm9yd2FyZFJlZjwKICBSZWFjdC5FbGVtZW50UmVmPHR5cGVvZiBOYXZpZ2F0aW9uTWVudVByaW1pdGl2ZS5JbmRpY2F0b3I+LAogIFJlYWN0LkNvbXBvbmVudFByb3BzV2l0aG91dFJlZjx0eXBlb2YgTmF2aWdhdGlvbk1lbnVQcmltaXRpdmUuSW5kaWNhdG9yPgo+KCh7IGNsYXNzTmFtZSwgLi4ucHJvcHMgfSwgcmVmKSA9PiAoCiAgPE5hdmlnYXRpb25NZW51UHJpbWl0aXZlLkluZGljYXRvcgogICAgcmVmPXtyZWZ9CiAgICBjbGFzc05hbWU9e2NuKAogICAgICAidG9wLWZ1bGwgei1bMV0gZmxleCBoLTEuNSBpdGVtcy1lbmQganVzdGlmeS1jZW50ZXIgb3ZlcmZsb3ctaGlkZGVuIGRhdGEtW3N0YXRlPXZpc2libGVdOmFuaW1hdGUtaW4gZGF0YS1bc3RhdGU9aGlkZGVuXTphbmltYXRlLW91dCBkYXRhLVtzdGF0ZT1oaWRkZW5dOmZhZGUtb3V0IGRhdGEtW3N0YXRlPXZpc2libGVdOmZhZGUtaW4iLAogICAgICBjbGFzc05hbWUKICAgICl9CiAgICB7Li4ucHJvcHN9CiAgPgogICAgPGRpdiBjbGFzc05hbWU9InJlbGF0aXZlIHRvcC1bNjAlXSBoLTIgdy0yIHJvdGF0ZS00NSByb3VuZGVkLXRsLXNtIGJnLWJvcmRlciBzaGFkb3ctbWQiIC8+CiAgPC9OYXZpZ2F0aW9uTWVudVByaW1pdGl2ZS5JbmRpY2F0b3I+CikpCk5hdmlnYXRpb25NZW51SW5kaWNhdG9yLmRpc3BsYXlOYW1lID0KICBOYXZpZ2F0aW9uTWVudVByaW1pdGl2ZS5JbmRpY2F0b3IuZGlzcGxheU5hbWUKCmV4cG9ydCB7CiAgbmF2aWdhdGlvbk1lbnVUcmlnZ2VyU3R5bGUsCiAgTmF2aWdhdGlvbk1lbnUsCiAgTmF2aWdhdGlvbk1lbnVMaXN0LAogIE5hdmlnYXRpb25NZW51SXRlbSwKICBOYXZpZ2F0aW9uTWVudUNvbnRlbnQsCiAgTmF2aWdhdGlvbk1lbnVUcmlnZ2VyLAogIE5hdmlnYXRpb25NZW51TGluaywKICBOYXZpZ2F0aW9uTWVudUluZGljYXRvciwKICBOYXZpZ2F0aW9uTWVudVZpZXdwb3J0LAp9Cg==
:FILE_36_END

:FILE_37_PATH
client/src/components/ui/pagination.tsx
:FILE_37_DATA
aW1wb3J0ICogYXMgUmVhY3QgZnJvbSAicmVhY3QiCmltcG9ydCB7IENoZXZyb25MZWZ0LCBDaGV2cm9uUmlnaHQsIE1vcmVIb3Jpem9udGFsIH0gZnJvbSAibHVjaWRlLXJlYWN0IgoKaW1wb3J0IHsgY24gfSBmcm9tICJAL2xpYi91dGlscyIKaW1wb3J0IHsgQnV0dG9uUHJvcHMsIGJ1dHRvblZhcmlhbnRzIH0gZnJvbSAiQC9jb21wb25lbnRzL3VpL2J1dHRvbiIKCmNvbnN0IFBhZ2luYXRpb24gPSAoeyBjbGFzc05hbWUsIC4uLnByb3BzIH06IFJlYWN0LkNvbXBvbmVudFByb3BzPCJuYXYiPikgPT4gKAogIDxuYXYKICAgIHJvbGU9Im5hdmlnYXRpb24iCiAgICBhcmlhLWxhYmVsPSJwYWdpbmF0aW9uIgogICAgY2xhc3NOYW1lPXtjbigibXgtYXV0byBmbGV4IHctZnVsbCBqdXN0aWZ5LWNlbnRlciIsIGNsYXNzTmFtZSl9CiAgICB7Li4ucHJvcHN9CiAgLz4KKQpQYWdpbmF0aW9uLmRpc3BsYXlOYW1lID0gIlBhZ2luYXRpb24iCgpjb25zdCBQYWdpbmF0aW9uQ29udGVudCA9IFJlYWN0LmZvcndhcmRSZWY8CiAgSFRNTFVMaXN0RWxlbWVudCwKICBSZWFjdC5Db21wb25lbnRQcm9wczwidWwiPgo+KCh7IGNsYXNzTmFtZSwgLi4ucHJvcHMgfSwgcmVmKSA9PiAoCiAgPHVsCiAgICByZWY9e3JlZn0KICAgIGNsYXNzTmFtZT17Y24oImZsZXggZmxleC1yb3cgaXRlbXMtY2VudGVyIGdhcC0xIiwgY2xhc3NOYW1lKX0KICAgIHsuLi5wcm9wc30KICAvPgopKQpQYWdpbmF0aW9uQ29udGVudC5kaXNwbGF5TmFtZSA9ICJQYWdpbmF0aW9uQ29udGVudCIKCmNvbnN0IFBhZ2luYXRpb25JdGVtID0gUmVhY3QuZm9yd2FyZFJlZjwKICBIVE1MTElFbGVtZW50LAogIFJlYWN0LkNvbXBvbmVudFByb3BzPCJsaSI+Cj4oKHsgY2xhc3NOYW1lLCAuLi5wcm9wcyB9LCByZWYpID0+ICgKICA8bGkgcmVmPXtyZWZ9IGNsYXNzTmFtZT17Y24oIiIsIGNsYXNzTmFtZSl9IHsuLi5wcm9wc30gLz4KKSkKUGFnaW5hdGlvbkl0ZW0uZGlzcGxheU5hbWUgPSAiUGFnaW5hdGlvbkl0ZW0iCgp0eXBlIFBhZ2luYXRpb25MaW5rUHJvcHMgPSB7CiAgaXNBY3RpdmU/OiBib29sZWFuCn0gJiBQaWNrPEJ1dHRvblByb3BzLCAic2l6ZSI+ICYKICBSZWFjdC5Db21wb25lbnRQcm9wczwiYSI+Cgpjb25zdCBQYWdpbmF0aW9uTGluayA9ICh7CiAgY2xhc3NOYW1lLAogIGlzQWN0aXZlLAogIHNpemUgPSAiaWNvbiIsCiAgLi4ucHJvcHMKfTogUGFnaW5hdGlvbkxpbmtQcm9wcykgPT4gKAogIDxhCiAgICBhcmlhLWN1cnJlbnQ9e2lzQWN0aXZlID8gInBhZ2UiIDogdW5kZWZpbmVkfQogICAgY2xhc3NOYW1lPXtjbigKICAgICAgYnV0dG9uVmFyaWFudHMoewogICAgICAgIHZhcmlhbnQ6IGlzQWN0aXZlID8gIm91dGxpbmUiIDogImdob3N0IiwKICAgICAgICBzaXplLAogICAgICB9KSwKICAgICAgY2xhc3NOYW1lCiAgICApfQogICAgey4uLnByb3BzfQogIC8+CikKUGFnaW5hdGlvbkxpbmsuZGlzcGxheU5hbWUgPSAiUGFnaW5hdGlvbkxpbmsiCgpjb25zdCBQYWdpbmF0aW9uUHJldmlvdXMgPSAoewogIGNsYXNzTmFtZSwKICAuLi5wcm9wcwp9OiBSZWFjdC5Db21wb25lbnRQcm9wczx0eXBlb2YgUGFnaW5hdGlvbkxpbms+KSA9PiAoCiAgPFBhZ2luYXRpb25MaW5rCiAgICBhcmlhLWxhYmVsPSJHbyB0byBwcmV2aW91cyBwYWdlIgogICAgc2l6ZT0iZGVmYXVsdCIKICAgIGNsYXNzTmFtZT17Y24oImdhcC0xIHBsLTIuNSIsIGNsYXNzTmFtZSl9CiAgICB7Li4ucHJvcHN9CiAgPgogICAgPENoZXZyb25MZWZ0IGNsYXNzTmFtZT0iaC00IHctNCIgLz4KICAgIDxzcGFuPlByZXZpb3VzPC9zcGFuPgogIDwvUGFnaW5hdGlvbkxpbms+CikKUGFnaW5hdGlvblByZXZpb3VzLmRpc3BsYXlOYW1lID0gIlBhZ2luYXRpb25QcmV2aW91cyIKCmNvbnN0IFBhZ2luYXRpb25OZXh0ID0gKHsKICBjbGFzc05hbWUsCiAgLi4ucHJvcHMKfTogUmVhY3QuQ29tcG9uZW50UHJvcHM8dHlwZW9mIFBhZ2luYXRpb25MaW5rPikgPT4gKAogIDxQYWdpbmF0aW9uTGluawogICAgYXJpYS1sYWJlbD0iR28gdG8gbmV4dCBwYWdlIgogICAgc2l6ZT0iZGVmYXVsdCIKICAgIGNsYXNzTmFtZT17Y24oImdhcC0xIHByLTIuNSIsIGNsYXNzTmFtZSl9CiAgICB7Li4ucHJvcHN9CiAgPgogICAgPHNwYW4+TmV4dDwvc3Bhbj4KICAgIDxDaGV2cm9uUmlnaHQgY2xhc3NOYW1lPSJoLTQgdy00IiAvPgogIDwvUGFnaW5hdGlvbkxpbms+CikKUGFnaW5hdGlvbk5leHQuZGlzcGxheU5hbWUgPSAiUGFnaW5hdGlvbk5leHQiCgpjb25zdCBQYWdpbmF0aW9uRWxsaXBzaXMgPSAoewogIGNsYXNzTmFtZSwKICAuLi5wcm9wcwp9OiBSZWFjdC5Db21wb25lbnRQcm9wczwic3BhbiI+KSA9PiAoCiAgPHNwYW4KICAgIGFyaWEtaGlkZGVuCiAgICBjbGFzc05hbWU9e2NuKCJmbGV4IGgtOSB3LTkgaXRlbXMtY2VudGVyIGp1c3RpZnktY2VudGVyIiwgY2xhc3NOYW1lKX0KICAgIHsuLi5wcm9wc30KICA+CiAgICA8TW9yZUhvcml6b250YWwgY2xhc3NOYW1lPSJoLTQgdy00IiAvPgogICAgPHNwYW4gY2xhc3NOYW1lPSJzci1vbmx5Ij5Nb3JlIHBhZ2VzPC9zcGFuPgogIDwvc3Bhbj4KKQpQYWdpbmF0aW9uRWxsaXBzaXMuZGlzcGxheU5hbWUgPSAiUGFnaW5hdGlvbkVsbGlwc2lzIgoKZXhwb3J0IHsKICBQYWdpbmF0aW9uLAogIFBhZ2luYXRpb25Db250ZW50LAogIFBhZ2luYXRpb25FbGxpcHNpcywKICBQYWdpbmF0aW9uSXRlbSwKICBQYWdpbmF0aW9uTGluaywKICBQYWdpbmF0aW9uTmV4dCwKICBQYWdpbmF0aW9uUHJldmlvdXMsCn0K
:FILE_37_END

:FILE_38_PATH
client/src/components/ui/popover.tsx
:FILE_38_DATA
aW1wb3J0ICogYXMgUmVhY3QgZnJvbSAicmVhY3QiCmltcG9ydCAqIGFzIFBvcG92ZXJQcmltaXRpdmUgZnJvbSAiQHJhZGl4LXVpL3JlYWN0LXBvcG92ZXIiCgppbXBvcnQgeyBjbiB9IGZyb20gIkAvbGliL3V0aWxzIgoKY29uc3QgUG9wb3ZlciA9IFBvcG92ZXJQcmltaXRpdmUuUm9vdAoKY29uc3QgUG9wb3ZlclRyaWdnZXIgPSBQb3BvdmVyUHJpbWl0aXZlLlRyaWdnZXIKCmNvbnN0IFBvcG92ZXJDb250ZW50ID0gUmVhY3QuZm9yd2FyZFJlZjwKICBSZWFjdC5FbGVtZW50UmVmPHR5cGVvZiBQb3BvdmVyUHJpbWl0aXZlLkNvbnRlbnQ+LAogIFJlYWN0LkNvbXBvbmVudFByb3BzV2l0aG91dFJlZjx0eXBlb2YgUG9wb3ZlclByaW1pdGl2ZS5Db250ZW50Pgo+KCh7IGNsYXNzTmFtZSwgYWxpZ24gPSAiY2VudGVyIiwgc2lkZU9mZnNldCA9IDQsIC4uLnByb3BzIH0sIHJlZikgPT4gKAogIDxQb3BvdmVyUHJpbWl0aXZlLlBvcnRhbD4KICAgIDxQb3BvdmVyUHJpbWl0aXZlLkNvbnRlbnQKICAgICAgcmVmPXtyZWZ9CiAgICAgIGFsaWduPXthbGlnbn0KICAgICAgc2lkZU9mZnNldD17c2lkZU9mZnNldH0KICAgICAgY2xhc3NOYW1lPXtjbigKICAgICAgICAiei01MCB3LTcyIHJvdW5kZWQtbWQgYm9yZGVyIGJnLXBvcG92ZXIgcC00IHRleHQtcG9wb3Zlci1mb3JlZ3JvdW5kIHNoYWRvdy1tZCBvdXRsaW5lLW5vbmUgZGF0YS1bc3RhdGU9b3Blbl06YW5pbWF0ZS1pbiBkYXRhLVtzdGF0ZT1jbG9zZWRdOmFuaW1hdGUtb3V0IGRhdGEtW3N0YXRlPWNsb3NlZF06ZmFkZS1vdXQtMCBkYXRhLVtzdGF0ZT1vcGVuXTpmYWRlLWluLTAgZGF0YS1bc3RhdGU9Y2xvc2VkXTp6b29tLW91dC05NSBkYXRhLVtzdGF0ZT1vcGVuXTp6b29tLWluLTk1IGRhdGEtW3NpZGU9Ym90dG9tXTpzbGlkZS1pbi1mcm9tLXRvcC0yIGRhdGEtW3NpZGU9bGVmdF06c2xpZGUtaW4tZnJvbS1yaWdodC0yIGRhdGEtW3NpZGU9cmlnaHRdOnNsaWRlLWluLWZyb20tbGVmdC0yIGRhdGEtW3NpZGU9dG9wXTpzbGlkZS1pbi1mcm9tLWJvdHRvbS0yIG9yaWdpbi1bLS1yYWRpeC1wb3BvdmVyLWNvbnRlbnQtdHJhbnNmb3JtLW9yaWdpbl0iLAogICAgICAgIGNsYXNzTmFtZQogICAgICApfQogICAgICB7Li4ucHJvcHN9CiAgICAvPgogIDwvUG9wb3ZlclByaW1pdGl2ZS5Qb3J0YWw+CikpClBvcG92ZXJDb250ZW50LmRpc3BsYXlOYW1lID0gUG9wb3ZlclByaW1pdGl2ZS5Db250ZW50LmRpc3BsYXlOYW1lCgpleHBvcnQgeyBQb3BvdmVyLCBQb3BvdmVyVHJpZ2dlciwgUG9wb3ZlckNvbnRlbnQgfQo=
:FILE_38_END

:FILE_39_PATH
client/src/components/ui/progress.tsx
:FILE_39_DATA
InVzZSBjbGllbnQiCgppbXBvcnQgKiBhcyBSZWFjdCBmcm9tICJyZWFjdCIKaW1wb3J0ICogYXMgUHJvZ3Jlc3NQcmltaXRpdmUgZnJvbSAiQHJhZGl4LXVpL3JlYWN0LXByb2dyZXNzIgoKaW1wb3J0IHsgY24gfSBmcm9tICJAL2xpYi91dGlscyIKCmNvbnN0IFByb2dyZXNzID0gUmVhY3QuZm9yd2FyZFJlZjwKICBSZWFjdC5FbGVtZW50UmVmPHR5cGVvZiBQcm9ncmVzc1ByaW1pdGl2ZS5Sb290PiwKICBSZWFjdC5Db21wb25lbnRQcm9wc1dpdGhvdXRSZWY8dHlwZW9mIFByb2dyZXNzUHJpbWl0aXZlLlJvb3Q+Cj4oKHsgY2xhc3NOYW1lLCB2YWx1ZSwgLi4ucHJvcHMgfSwgcmVmKSA9PiAoCiAgPFByb2dyZXNzUHJpbWl0aXZlLlJvb3QKICAgIHJlZj17cmVmfQogICAgY2xhc3NOYW1lPXtjbigKICAgICAgInJlbGF0aXZlIGgtNCB3LWZ1bGwgb3ZlcmZsb3ctaGlkZGVuIHJvdW5kZWQtZnVsbCBiZy1zZWNvbmRhcnkiLAogICAgICBjbGFzc05hbWUKICAgICl9CiAgICB7Li4ucHJvcHN9CiAgPgogICAgPFByb2dyZXNzUHJpbWl0aXZlLkluZGljYXRvcgogICAgICBjbGFzc05hbWU9ImgtZnVsbCB3LWZ1bGwgZmxleC0xIGJnLXByaW1hcnkgdHJhbnNpdGlvbi1hbGwiCiAgICAgIHN0eWxlPXt7IHRyYW5zZm9ybTogYHRyYW5zbGF0ZVgoLSR7MTAwIC0gKHZhbHVlIHx8IDApfSUpYCB9fQogICAgLz4KICA8L1Byb2dyZXNzUHJpbWl0aXZlLlJvb3Q+CikpClByb2dyZXNzLmRpc3BsYXlOYW1lID0gUHJvZ3Jlc3NQcmltaXRpdmUuUm9vdC5kaXNwbGF5TmFtZQoKZXhwb3J0IHsgUHJvZ3Jlc3MgfQo=
:FILE_39_END

:FILE_40_PATH
client/src/components/ui/radio-group.tsx
:FILE_40_DATA
aW1wb3J0ICogYXMgUmVhY3QgZnJvbSAicmVhY3QiCmltcG9ydCAqIGFzIFJhZGlvR3JvdXBQcmltaXRpdmUgZnJvbSAiQHJhZGl4LXVpL3JlYWN0LXJhZGlvLWdyb3VwIgppbXBvcnQgeyBDaXJjbGUgfSBmcm9tICJsdWNpZGUtcmVhY3QiCgppbXBvcnQgeyBjbiB9IGZyb20gIkAvbGliL3V0aWxzIgoKY29uc3QgUmFkaW9Hcm91cCA9IFJlYWN0LmZvcndhcmRSZWY8CiAgUmVhY3QuRWxlbWVudFJlZjx0eXBlb2YgUmFkaW9Hcm91cFByaW1pdGl2ZS5Sb290PiwKICBSZWFjdC5Db21wb25lbnRQcm9wc1dpdGhvdXRSZWY8dHlwZW9mIFJhZGlvR3JvdXBQcmltaXRpdmUuUm9vdD4KPigoeyBjbGFzc05hbWUsIC4uLnByb3BzIH0sIHJlZikgPT4gewogIHJldHVybiAoCiAgICA8UmFkaW9Hcm91cFByaW1pdGl2ZS5Sb290CiAgICAgIGNsYXNzTmFtZT17Y24oImdyaWQgZ2FwLTIiLCBjbGFzc05hbWUpfQogICAgICB7Li4ucHJvcHN9CiAgICAgIHJlZj17cmVmfQogICAgLz4KICApCn0pClJhZGlvR3JvdXAuZGlzcGxheU5hbWUgPSBSYWRpb0dyb3VwUHJpbWl0aXZlLlJvb3QuZGlzcGxheU5hbWUKCmNvbnN0IFJhZGlvR3JvdXBJdGVtID0gUmVhY3QuZm9yd2FyZFJlZjwKICBSZWFjdC5FbGVtZW50UmVmPHR5cGVvZiBSYWRpb0dyb3VwUHJpbWl0aXZlLkl0ZW0+LAogIFJlYWN0LkNvbXBvbmVudFByb3BzV2l0aG91dFJlZjx0eXBlb2YgUmFkaW9Hcm91cFByaW1pdGl2ZS5JdGVtPgo+KCh7IGNsYXNzTmFtZSwgLi4ucHJvcHMgfSwgcmVmKSA9PiB7CiAgcmV0dXJuICgKICAgIDxSYWRpb0dyb3VwUHJpbWl0aXZlLkl0ZW0KICAgICAgcmVmPXtyZWZ9CiAgICAgIGNsYXNzTmFtZT17Y24oCiAgICAgICAgImFzcGVjdC1zcXVhcmUgaC00IHctNCByb3VuZGVkLWZ1bGwgYm9yZGVyIGJvcmRlci1wcmltYXJ5IHRleHQtcHJpbWFyeSByaW5nLW9mZnNldC1iYWNrZ3JvdW5kIGZvY3VzOm91dGxpbmUtbm9uZSBmb2N1cy12aXNpYmxlOnJpbmctMiBmb2N1cy12aXNpYmxlOnJpbmctcmluZyBmb2N1cy12aXNpYmxlOnJpbmctb2Zmc2V0LTIgZGlzYWJsZWQ6Y3Vyc29yLW5vdC1hbGxvd2VkIGRpc2FibGVkOm9wYWNpdHktNTAiLAogICAgICAgIGNsYXNzTmFtZQogICAgICApfQogICAgICB7Li4ucHJvcHN9CiAgICA+CiAgICAgIDxSYWRpb0dyb3VwUHJpbWl0aXZlLkluZGljYXRvciBjbGFzc05hbWU9ImZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktY2VudGVyIj4KICAgICAgICA8Q2lyY2xlIGNsYXNzTmFtZT0iaC0yLjUgdy0yLjUgZmlsbC1jdXJyZW50IHRleHQtY3VycmVudCIgLz4KICAgICAgPC9SYWRpb0dyb3VwUHJpbWl0aXZlLkluZGljYXRvcj4KICAgIDwvUmFkaW9Hcm91cFByaW1pdGl2ZS5JdGVtPgogICkKfSkKUmFkaW9Hcm91cEl0ZW0uZGlzcGxheU5hbWUgPSBSYWRpb0dyb3VwUHJpbWl0aXZlLkl0ZW0uZGlzcGxheU5hbWUKCmV4cG9ydCB7IFJhZGlvR3JvdXAsIFJhZGlvR3JvdXBJdGVtIH0K
:FILE_40_END

:FILE_41_PATH
client/src/components/ui/resizable.tsx
:FILE_41_DATA
InVzZSBjbGllbnQiCgppbXBvcnQgeyBHcmlwVmVydGljYWwgfSBmcm9tICJsdWNpZGUtcmVhY3QiCmltcG9ydCAqIGFzIFJlc2l6YWJsZVByaW1pdGl2ZSBmcm9tICJyZWFjdC1yZXNpemFibGUtcGFuZWxzIgoKaW1wb3J0IHsgY24gfSBmcm9tICJAL2xpYi91dGlscyIKCmNvbnN0IFJlc2l6YWJsZVBhbmVsR3JvdXAgPSAoewogIGNsYXNzTmFtZSwKICAuLi5wcm9wcwp9OiBSZWFjdC5Db21wb25lbnRQcm9wczx0eXBlb2YgUmVzaXphYmxlUHJpbWl0aXZlLlBhbmVsR3JvdXA+KSA9PiAoCiAgPFJlc2l6YWJsZVByaW1pdGl2ZS5QYW5lbEdyb3VwCiAgICBjbGFzc05hbWU9e2NuKAogICAgICAiZmxleCBoLWZ1bGwgdy1mdWxsIGRhdGEtW3BhbmVsLWdyb3VwLWRpcmVjdGlvbj12ZXJ0aWNhbF06ZmxleC1jb2wiLAogICAgICBjbGFzc05hbWUKICAgICl9CiAgICB7Li4ucHJvcHN9CiAgLz4KKQoKY29uc3QgUmVzaXphYmxlUGFuZWwgPSBSZXNpemFibGVQcmltaXRpdmUuUGFuZWwKCmNvbnN0IFJlc2l6YWJsZUhhbmRsZSA9ICh7CiAgd2l0aEhhbmRsZSwKICBjbGFzc05hbWUsCiAgLi4ucHJvcHMKfTogUmVhY3QuQ29tcG9uZW50UHJvcHM8dHlwZW9mIFJlc2l6YWJsZVByaW1pdGl2ZS5QYW5lbFJlc2l6ZUhhbmRsZT4gJiB7CiAgd2l0aEhhbmRsZT86IGJvb2xlYW4KfSkgPT4gKAogIDxSZXNpemFibGVQcmltaXRpdmUuUGFuZWxSZXNpemVIYW5kbGUKICAgIGNsYXNzTmFtZT17Y24oCiAgICAgICJyZWxhdGl2ZSBmbGV4IHctcHggaXRlbXMtY2VudGVyIGp1c3RpZnktY2VudGVyIGJnLWJvcmRlciBhZnRlcjphYnNvbHV0ZSBhZnRlcjppbnNldC15LTAgYWZ0ZXI6bGVmdC0xLzIgYWZ0ZXI6dy0xIGFmdGVyOi10cmFuc2xhdGUteC0xLzIgZm9jdXMtdmlzaWJsZTpvdXRsaW5lLW5vbmUgZm9jdXMtdmlzaWJsZTpyaW5nLTEgZm9jdXMtdmlzaWJsZTpyaW5nLXJpbmcgZm9jdXMtdmlzaWJsZTpyaW5nLW9mZnNldC0xIGRhdGEtW3BhbmVsLWdyb3VwLWRpcmVjdGlvbj12ZXJ0aWNhbF06aC1weCBkYXRhLVtwYW5lbC1ncm91cC1kaXJlY3Rpb249dmVydGljYWxdOnctZnVsbCBkYXRhLVtwYW5lbC1ncm91cC1kaXJlY3Rpb249dmVydGljYWxdOmFmdGVyOmxlZnQtMCBkYXRhLVtwYW5lbC1ncm91cC1kaXJlY3Rpb249dmVydGljYWxdOmFmdGVyOmgtMSBkYXRhLVtwYW5lbC1ncm91cC1kaXJlY3Rpb249dmVydGljYWxdOmFmdGVyOnctZnVsbCBkYXRhLVtwYW5lbC1ncm91cC1kaXJlY3Rpb249dmVydGljYWxdOmFmdGVyOi10cmFuc2xhdGUteS0xLzIgZGF0YS1bcGFuZWwtZ3JvdXAtZGlyZWN0aW9uPXZlcnRpY2FsXTphZnRlcjp0cmFuc2xhdGUteC0wIFsmW2RhdGEtcGFuZWwtZ3JvdXAtZGlyZWN0aW9uPXZlcnRpY2FsXT5kaXZdOnJvdGF0ZS05MCIsCiAgICAgIGNsYXNzTmFtZQogICAgKX0KICAgIHsuLi5wcm9wc30KICA+CiAgICB7d2l0aEhhbmRsZSAmJiAoCiAgICAgIDxkaXYgY2xhc3NOYW1lPSJ6LTEwIGZsZXggaC00IHctMyBpdGVtcy1jZW50ZXIganVzdGlmeS1jZW50ZXIgcm91bmRlZC1zbSBib3JkZXIgYmctYm9yZGVyIj4KICAgICAgICA8R3JpcFZlcnRpY2FsIGNsYXNzTmFtZT0iaC0yLjUgdy0yLjUiIC8+CiAgICAgIDwvZGl2PgogICAgKX0KICA8L1Jlc2l6YWJsZVByaW1pdGl2ZS5QYW5lbFJlc2l6ZUhhbmRsZT4KKQoKZXhwb3J0IHsgUmVzaXphYmxlUGFuZWxHcm91cCwgUmVzaXphYmxlUGFuZWwsIFJlc2l6YWJsZUhhbmRsZSB9Cg==
:FILE_41_END

:FILE_42_PATH
client/src/components/ui/scroll-area.tsx
:FILE_42_DATA
aW1wb3J0ICogYXMgUmVhY3QgZnJvbSAicmVhY3QiCmltcG9ydCAqIGFzIFNjcm9sbEFyZWFQcmltaXRpdmUgZnJvbSAiQHJhZGl4LXVpL3JlYWN0LXNjcm9sbC1hcmVhIgoKaW1wb3J0IHsgY24gfSBmcm9tICJAL2xpYi91dGlscyIKCmNvbnN0IFNjcm9sbEFyZWEgPSBSZWFjdC5mb3J3YXJkUmVmPAogIFJlYWN0LkVsZW1lbnRSZWY8dHlwZW9mIFNjcm9sbEFyZWFQcmltaXRpdmUuUm9vdD4sCiAgUmVhY3QuQ29tcG9uZW50UHJvcHNXaXRob3V0UmVmPHR5cGVvZiBTY3JvbGxBcmVhUHJpbWl0aXZlLlJvb3Q+Cj4oKHsgY2xhc3NOYW1lLCBjaGlsZHJlbiwgLi4ucHJvcHMgfSwgcmVmKSA9PiAoCiAgPFNjcm9sbEFyZWFQcmltaXRpdmUuUm9vdAogICAgcmVmPXtyZWZ9CiAgICBjbGFzc05hbWU9e2NuKCJyZWxhdGl2ZSBvdmVyZmxvdy1oaWRkZW4iLCBjbGFzc05hbWUpfQogICAgey4uLnByb3BzfQogID4KICAgIDxTY3JvbGxBcmVhUHJpbWl0aXZlLlZpZXdwb3J0IGNsYXNzTmFtZT0iaC1mdWxsIHctZnVsbCByb3VuZGVkLVtpbmhlcml0XSI+CiAgICAgIHtjaGlsZHJlbn0KICAgIDwvU2Nyb2xsQXJlYVByaW1pdGl2ZS5WaWV3cG9ydD4KICAgIDxTY3JvbGxCYXIgLz4KICAgIDxTY3JvbGxBcmVhUHJpbWl0aXZlLkNvcm5lciAvPgogIDwvU2Nyb2xsQXJlYVByaW1pdGl2ZS5Sb290PgopKQpTY3JvbGxBcmVhLmRpc3BsYXlOYW1lID0gU2Nyb2xsQXJlYVByaW1pdGl2ZS5Sb290LmRpc3BsYXlOYW1lCgpjb25zdCBTY3JvbGxCYXIgPSBSZWFjdC5mb3J3YXJkUmVmPAogIFJlYWN0LkVsZW1lbnRSZWY8dHlwZW9mIFNjcm9sbEFyZWFQcmltaXRpdmUuU2Nyb2xsQXJlYVNjcm9sbGJhcj4sCiAgUmVhY3QuQ29tcG9uZW50UHJvcHNXaXRob3V0UmVmPHR5cGVvZiBTY3JvbGxBcmVhUHJpbWl0aXZlLlNjcm9sbEFyZWFTY3JvbGxiYXI+Cj4oKHsgY2xhc3NOYW1lLCBvcmllbnRhdGlvbiA9ICJ2ZXJ0aWNhbCIsIC4uLnByb3BzIH0sIHJlZikgPT4gKAogIDxTY3JvbGxBcmVhUHJpbWl0aXZlLlNjcm9sbEFyZWFTY3JvbGxiYXIKICAgIHJlZj17cmVmfQogICAgb3JpZW50YXRpb249e29yaWVudGF0aW9ufQogICAgY2xhc3NOYW1lPXtjbigKICAgICAgImZsZXggdG91Y2gtbm9uZSBzZWxlY3Qtbm9uZSB0cmFuc2l0aW9uLWNvbG9ycyIsCiAgICAgIG9yaWVudGF0aW9uID09PSAidmVydGljYWwiICYmCiAgICAgICAgImgtZnVsbCB3LTIuNSBib3JkZXItbCBib3JkZXItbC10cmFuc3BhcmVudCBwLVsxcHhdIiwKICAgICAgb3JpZW50YXRpb24gPT09ICJob3Jpem9udGFsIiAmJgogICAgICAgICJoLTIuNSBmbGV4LWNvbCBib3JkZXItdCBib3JkZXItdC10cmFuc3BhcmVudCBwLVsxcHhdIiwKICAgICAgY2xhc3NOYW1lCiAgICApfQogICAgey4uLnByb3BzfQogID4KICAgIDxTY3JvbGxBcmVhUHJpbWl0aXZlLlNjcm9sbEFyZWFUaHVtYiBjbGFzc05hbWU9InJlbGF0aXZlIGZsZXgtMSByb3VuZGVkLWZ1bGwgYmctYm9yZGVyIiAvPgogIDwvU2Nyb2xsQXJlYVByaW1pdGl2ZS5TY3JvbGxBcmVhU2Nyb2xsYmFyPgopKQpTY3JvbGxCYXIuZGlzcGxheU5hbWUgPSBTY3JvbGxBcmVhUHJpbWl0aXZlLlNjcm9sbEFyZWFTY3JvbGxiYXIuZGlzcGxheU5hbWUKCmV4cG9ydCB7IFNjcm9sbEFyZWEsIFNjcm9sbEJhciB9Cg==
:FILE_42_END

:FILE_43_PATH
client/src/components/ui/select.tsx
:FILE_43_DATA
InVzZSBjbGllbnQiCgppbXBvcnQgKiBhcyBSZWFjdCBmcm9tICJyZWFjdCIKaW1wb3J0ICogYXMgU2VsZWN0UHJpbWl0aXZlIGZyb20gIkByYWRpeC11aS9yZWFjdC1zZWxlY3QiCmltcG9ydCB7IENoZWNrLCBDaGV2cm9uRG93biwgQ2hldnJvblVwIH0gZnJvbSAibHVjaWRlLXJlYWN0IgoKaW1wb3J0IHsgY24gfSBmcm9tICJAL2xpYi91dGlscyIKCmNvbnN0IFNlbGVjdCA9IFNlbGVjdFByaW1pdGl2ZS5Sb290Cgpjb25zdCBTZWxlY3RHcm91cCA9IFNlbGVjdFByaW1pdGl2ZS5Hcm91cAoKY29uc3QgU2VsZWN0VmFsdWUgPSBTZWxlY3RQcmltaXRpdmUuVmFsdWUKCmNvbnN0IFNlbGVjdFRyaWdnZXIgPSBSZWFjdC5mb3J3YXJkUmVmPAogIFJlYWN0LkVsZW1lbnRSZWY8dHlwZW9mIFNlbGVjdFByaW1pdGl2ZS5UcmlnZ2VyPiwKICBSZWFjdC5Db21wb25lbnRQcm9wc1dpdGhvdXRSZWY8dHlwZW9mIFNlbGVjdFByaW1pdGl2ZS5UcmlnZ2VyPgo+KCh7IGNsYXNzTmFtZSwgY2hpbGRyZW4sIC4uLnByb3BzIH0sIHJlZikgPT4gKAogIDxTZWxlY3RQcmltaXRpdmUuVHJpZ2dlcgogICAgcmVmPXtyZWZ9CiAgICBjbGFzc05hbWU9e2NuKAogICAgICAiZmxleCBoLTEwIHctZnVsbCBpdGVtcy1jZW50ZXIganVzdGlmeS1iZXR3ZWVuIHJvdW5kZWQtbWQgYm9yZGVyIGJvcmRlci1pbnB1dCBiZy1iYWNrZ3JvdW5kIHB4LTMgcHktMiB0ZXh0LXNtIHJpbmctb2Zmc2V0LWJhY2tncm91bmQgZGF0YS1bcGxhY2Vob2xkZXJdOnRleHQtbXV0ZWQtZm9yZWdyb3VuZCBmb2N1czpvdXRsaW5lLW5vbmUgZm9jdXM6cmluZy0yIGZvY3VzOnJpbmctcmluZyBmb2N1czpyaW5nLW9mZnNldC0yIGRpc2FibGVkOmN1cnNvci1ub3QtYWxsb3dlZCBkaXNhYmxlZDpvcGFjaXR5LTUwIFsmPnNwYW5dOmxpbmUtY2xhbXAtMSIsCiAgICAgIGNsYXNzTmFtZQogICAgKX0KICAgIHsuLi5wcm9wc30KICA+CiAgICB7Y2hpbGRyZW59CiAgICA8U2VsZWN0UHJpbWl0aXZlLkljb24gYXNDaGlsZD4KICAgICAgPENoZXZyb25Eb3duIGNsYXNzTmFtZT0iaC00IHctNCBvcGFjaXR5LTUwIiAvPgogICAgPC9TZWxlY3RQcmltaXRpdmUuSWNvbj4KICA8L1NlbGVjdFByaW1pdGl2ZS5UcmlnZ2VyPgopKQpTZWxlY3RUcmlnZ2VyLmRpc3BsYXlOYW1lID0gU2VsZWN0UHJpbWl0aXZlLlRyaWdnZXIuZGlzcGxheU5hbWUKCmNvbnN0IFNlbGVjdFNjcm9sbFVwQnV0dG9uID0gUmVhY3QuZm9yd2FyZFJlZjwKICBSZWFjdC5FbGVtZW50UmVmPHR5cGVvZiBTZWxlY3RQcmltaXRpdmUuU2Nyb2xsVXBCdXR0b24+LAogIFJlYWN0LkNvbXBvbmVudFByb3BzV2l0aG91dFJlZjx0eXBlb2YgU2VsZWN0UHJpbWl0aXZlLlNjcm9sbFVwQnV0dG9uPgo+KCh7IGNsYXNzTmFtZSwgLi4ucHJvcHMgfSwgcmVmKSA9PiAoCiAgPFNlbGVjdFByaW1pdGl2ZS5TY3JvbGxVcEJ1dHRvbgogICAgcmVmPXtyZWZ9CiAgICBjbGFzc05hbWU9e2NuKAogICAgICAiZmxleCBjdXJzb3ItZGVmYXVsdCBpdGVtcy1jZW50ZXIganVzdGlmeS1jZW50ZXIgcHktMSIsCiAgICAgIGNsYXNzTmFtZQogICAgKX0KICAgIHsuLi5wcm9wc30KICA+CiAgICA8Q2hldnJvblVwIGNsYXNzTmFtZT0iaC00IHctNCIgLz4KICA8L1NlbGVjdFByaW1pdGl2ZS5TY3JvbGxVcEJ1dHRvbj4KKSkKU2VsZWN0U2Nyb2xsVXBCdXR0b24uZGlzcGxheU5hbWUgPSBTZWxlY3RQcmltaXRpdmUuU2Nyb2xsVXBCdXR0b24uZGlzcGxheU5hbWUKCmNvbnN0IFNlbGVjdFNjcm9sbERvd25CdXR0b24gPSBSZWFjdC5mb3J3YXJkUmVmPAogIFJlYWN0LkVsZW1lbnRSZWY8dHlwZW9mIFNlbGVjdFByaW1pdGl2ZS5TY3JvbGxEb3duQnV0dG9uPiwKICBSZWFjdC5Db21wb25lbnRQcm9wc1dpdGhvdXRSZWY8dHlwZW9mIFNlbGVjdFByaW1pdGl2ZS5TY3JvbGxEb3duQnV0dG9uPgo+KCh7IGNsYXNzTmFtZSwgLi4ucHJvcHMgfSwgcmVmKSA9PiAoCiAgPFNlbGVjdFByaW1pdGl2ZS5TY3JvbGxEb3duQnV0dG9uCiAgICByZWY9e3JlZn0KICAgIGNsYXNzTmFtZT17Y24oCiAgICAgICJmbGV4IGN1cnNvci1kZWZhdWx0IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWNlbnRlciBweS0xIiwKICAgICAgY2xhc3NOYW1lCiAgICApfQogICAgey4uLnByb3BzfQogID4KICAgIDxDaGV2cm9uRG93biBjbGFzc05hbWU9ImgtNCB3LTQiIC8+CiAgPC9TZWxlY3RQcmltaXRpdmUuU2Nyb2xsRG93bkJ1dHRvbj4KKSkKU2VsZWN0U2Nyb2xsRG93bkJ1dHRvbi5kaXNwbGF5TmFtZSA9CiAgU2VsZWN0UHJpbWl0aXZlLlNjcm9sbERvd25CdXR0b24uZGlzcGxheU5hbWUKCmNvbnN0IFNlbGVjdENvbnRlbnQgPSBSZWFjdC5mb3J3YXJkUmVmPAogIFJlYWN0LkVsZW1lbnRSZWY8dHlwZW9mIFNlbGVjdFByaW1pdGl2ZS5Db250ZW50PiwKICBSZWFjdC5Db21wb25lbnRQcm9wc1dpdGhvdXRSZWY8dHlwZW9mIFNlbGVjdFByaW1pdGl2ZS5Db250ZW50Pgo+KCh7IGNsYXNzTmFtZSwgY2hpbGRyZW4sIHBvc2l0aW9uID0gInBvcHBlciIsIC4uLnByb3BzIH0sIHJlZikgPT4gKAogIDxTZWxlY3RQcmltaXRpdmUuUG9ydGFsPgogICAgPFNlbGVjdFByaW1pdGl2ZS5Db250ZW50CiAgICAgIHJlZj17cmVmfQogICAgICBjbGFzc05hbWU9e2NuKAogICAgICAgICJyZWxhdGl2ZSB6LTUwIG1heC1oLVstLXJhZGl4LXNlbGVjdC1jb250ZW50LWF2YWlsYWJsZS1oZWlnaHRdIG1pbi13LVs4cmVtXSBvdmVyZmxvdy15LWF1dG8gb3ZlcmZsb3cteC1oaWRkZW4gcm91bmRlZC1tZCBib3JkZXIgYmctcG9wb3ZlciB0ZXh0LXBvcG92ZXItZm9yZWdyb3VuZCBzaGFkb3ctbWQgZGF0YS1bc3RhdGU9b3Blbl06YW5pbWF0ZS1pbiBkYXRhLVtzdGF0ZT1jbG9zZWRdOmFuaW1hdGUtb3V0IGRhdGEtW3N0YXRlPWNsb3NlZF06ZmFkZS1vdXQtMCBkYXRhLVtzdGF0ZT1vcGVuXTpmYWRlLWluLTAgZGF0YS1bc3RhdGU9Y2xvc2VkXTp6b29tLW91dC05NSBkYXRhLVtzdGF0ZT1vcGVuXTp6b29tLWluLTk1IGRhdGEtW3NpZGU9Ym90dG9tXTpzbGlkZS1pbi1mcm9tLXRvcC0yIGRhdGEtW3NpZGU9bGVmdF06c2xpZGUtaW4tZnJvbS1yaWdodC0yIGRhdGEtW3NpZGU9cmlnaHRdOnNsaWRlLWluLWZyb20tbGVmdC0yIGRhdGEtW3NpZGU9dG9wXTpzbGlkZS1pbi1mcm9tLWJvdHRvbS0yIG9yaWdpbi1bLS1yYWRpeC1zZWxlY3QtY29udGVudC10cmFuc2Zvcm0tb3JpZ2luXSIsCiAgICAgICAgcG9zaXRpb24gPT09ICJwb3BwZXIiICYmCiAgICAgICAgICAiZGF0YS1bc2lkZT1ib3R0b21dOnRyYW5zbGF0ZS15LTEgZGF0YS1bc2lkZT1sZWZ0XTotdHJhbnNsYXRlLXgtMSBkYXRhLVtzaWRlPXJpZ2h0XTp0cmFuc2xhdGUteC0xIGRhdGEtW3NpZGU9dG9wXTotdHJhbnNsYXRlLXktMSIsCiAgICAgICAgY2xhc3NOYW1lCiAgICAgICl9CiAgICAgIHBvc2l0aW9uPXtwb3NpdGlvbn0KICAgICAgey4uLnByb3BzfQogICAgPgogICAgICA8U2VsZWN0U2Nyb2xsVXBCdXR0b24gLz4KICAgICAgPFNlbGVjdFByaW1pdGl2ZS5WaWV3cG9ydAogICAgICAgIGNsYXNzTmFtZT17Y24oCiAgICAgICAgICAicC0xIiwKICAgICAgICAgIHBvc2l0aW9uID09PSAicG9wcGVyIiAmJgogICAgICAgICAgICAiaC1bdmFyKC0tcmFkaXgtc2VsZWN0LXRyaWdnZXItaGVpZ2h0KV0gdy1mdWxsIG1pbi13LVt2YXIoLS1yYWRpeC1zZWxlY3QtdHJpZ2dlci13aWR0aCldIgogICAgICAgICl9CiAgICAgID4KICAgICAgICB7Y2hpbGRyZW59CiAgICAgIDwvU2VsZWN0UHJpbWl0aXZlLlZpZXdwb3J0PgogICAgICA8U2VsZWN0U2Nyb2xsRG93bkJ1dHRvbiAvPgogICAgPC9TZWxlY3RQcmltaXRpdmUuQ29udGVudD4KICA8L1NlbGVjdFByaW1pdGl2ZS5Qb3J0YWw+CikpClNlbGVjdENvbnRlbnQuZGlzcGxheU5hbWUgPSBTZWxlY3RQcmltaXRpdmUuQ29udGVudC5kaXNwbGF5TmFtZQoKY29uc3QgU2VsZWN0TGFiZWwgPSBSZWFjdC5mb3J3YXJkUmVmPAogIFJlYWN0LkVsZW1lbnRSZWY8dHlwZW9mIFNlbGVjdFByaW1pdGl2ZS5MYWJlbD4sCiAgUmVhY3QuQ29tcG9uZW50UHJvcHNXaXRob3V0UmVmPHR5cGVvZiBTZWxlY3RQcmltaXRpdmUuTGFiZWw+Cj4oKHsgY2xhc3NOYW1lLCAuLi5wcm9wcyB9LCByZWYpID0+ICgKICA8U2VsZWN0UHJpbWl0aXZlLkxhYmVsCiAgICByZWY9e3JlZn0KICAgIGNsYXNzTmFtZT17Y24oInB5LTEuNSBwbC04IHByLTIgdGV4dC1zbSBmb250LXNlbWlib2xkIiwgY2xhc3NOYW1lKX0KICAgIHsuLi5wcm9wc30KICAvPgopKQpTZWxlY3RMYWJlbC5kaXNwbGF5TmFtZSA9IFNlbGVjdFByaW1pdGl2ZS5MYWJlbC5kaXNwbGF5TmFtZQoKY29uc3QgU2VsZWN0SXRlbSA9IFJlYWN0LmZvcndhcmRSZWY8CiAgUmVhY3QuRWxlbWVudFJlZjx0eXBlb2YgU2VsZWN0UHJpbWl0aXZlLkl0ZW0+LAogIFJlYWN0LkNvbXBvbmVudFByb3BzV2l0aG91dFJlZjx0eXBlb2YgU2VsZWN0UHJpbWl0aXZlLkl0ZW0+Cj4oKHsgY2xhc3NOYW1lLCBjaGlsZHJlbiwgLi4ucHJvcHMgfSwgcmVmKSA9PiAoCiAgPFNlbGVjdFByaW1pdGl2ZS5JdGVtCiAgICByZWY9e3JlZn0KICAgIGNsYXNzTmFtZT17Y24oCiAgICAgICJyZWxhdGl2ZSBmbGV4IHctZnVsbCBjdXJzb3ItZGVmYXVsdCBzZWxlY3Qtbm9uZSBpdGVtcy1jZW50ZXIgcm91bmRlZC1zbSBweS0xLjUgcGwtOCBwci0yIHRleHQtc20gb3V0bGluZS1ub25lIGZvY3VzOmJnLWFjY2VudCBmb2N1czp0ZXh0LWFjY2VudC1mb3JlZ3JvdW5kIGRhdGEtW2Rpc2FibGVkXTpwb2ludGVyLWV2ZW50cy1ub25lIGRhdGEtW2Rpc2FibGVkXTpvcGFjaXR5LTUwIiwKICAgICAgY2xhc3NOYW1lCiAgICApfQogICAgey4uLnByb3BzfQogID4KICAgIDxzcGFuIGNsYXNzTmFtZT0iYWJzb2x1dGUgbGVmdC0yIGZsZXggaC0zLjUgdy0zLjUgaXRlbXMtY2VudGVyIGp1c3RpZnktY2VudGVyIj4KICAgICAgPFNlbGVjdFByaW1pdGl2ZS5JdGVtSW5kaWNhdG9yPgogICAgICAgIDxDaGVjayBjbGFzc05hbWU9ImgtNCB3LTQiIC8+CiAgICAgIDwvU2VsZWN0UHJpbWl0aXZlLkl0ZW1JbmRpY2F0b3I+CiAgICA8L3NwYW4+CgogICAgPFNlbGVjdFByaW1pdGl2ZS5JdGVtVGV4dD57Y2hpbGRyZW59PC9TZWxlY3RQcmltaXRpdmUuSXRlbVRleHQ+CiAgPC9TZWxlY3RQcmltaXRpdmUuSXRlbT4KKSkKU2VsZWN0SXRlbS5kaXNwbGF5TmFtZSA9IFNlbGVjdFByaW1pdGl2ZS5JdGVtLmRpc3BsYXlOYW1lCgpjb25zdCBTZWxlY3RTZXBhcmF0b3IgPSBSZWFjdC5mb3J3YXJkUmVmPAogIFJlYWN0LkVsZW1lbnRSZWY8dHlwZW9mIFNlbGVjdFByaW1pdGl2ZS5TZXBhcmF0b3I+LAogIFJlYWN0LkNvbXBvbmVudFByb3BzV2l0aG91dFJlZjx0eXBlb2YgU2VsZWN0UHJpbWl0aXZlLlNlcGFyYXRvcj4KPigoeyBjbGFzc05hbWUsIC4uLnByb3BzIH0sIHJlZikgPT4gKAogIDxTZWxlY3RQcmltaXRpdmUuU2VwYXJhdG9yCiAgICByZWY9e3JlZn0KICAgIGNsYXNzTmFtZT17Y24oIi1teC0xIG15LTEgaC1weCBiZy1tdXRlZCIsIGNsYXNzTmFtZSl9CiAgICB7Li4ucHJvcHN9CiAgLz4KKSkKU2VsZWN0U2VwYXJhdG9yLmRpc3BsYXlOYW1lID0gU2VsZWN0UHJpbWl0aXZlLlNlcGFyYXRvci5kaXNwbGF5TmFtZQoKZXhwb3J0IHsKICBTZWxlY3QsCiAgU2VsZWN0R3JvdXAsCiAgU2VsZWN0VmFsdWUsCiAgU2VsZWN0VHJpZ2dlciwKICBTZWxlY3RDb250ZW50LAogIFNlbGVjdExhYmVsLAogIFNlbGVjdEl0ZW0sCiAgU2VsZWN0U2VwYXJhdG9yLAogIFNlbGVjdFNjcm9sbFVwQnV0dG9uLAogIFNlbGVjdFNjcm9sbERvd25CdXR0b24sCn0K
:FILE_43_END

:FILE_44_PATH
client/src/components/ui/separator.tsx
:FILE_44_DATA
aW1wb3J0ICogYXMgUmVhY3QgZnJvbSAicmVhY3QiCmltcG9ydCAqIGFzIFNlcGFyYXRvclByaW1pdGl2ZSBmcm9tICJAcmFkaXgtdWkvcmVhY3Qtc2VwYXJhdG9yIgoKaW1wb3J0IHsgY24gfSBmcm9tICJAL2xpYi91dGlscyIKCmNvbnN0IFNlcGFyYXRvciA9IFJlYWN0LmZvcndhcmRSZWY8CiAgUmVhY3QuRWxlbWVudFJlZjx0eXBlb2YgU2VwYXJhdG9yUHJpbWl0aXZlLlJvb3Q+LAogIFJlYWN0LkNvbXBvbmVudFByb3BzV2l0aG91dFJlZjx0eXBlb2YgU2VwYXJhdG9yUHJpbWl0aXZlLlJvb3Q+Cj4oCiAgKAogICAgeyBjbGFzc05hbWUsIG9yaWVudGF0aW9uID0gImhvcml6b250YWwiLCBkZWNvcmF0aXZlID0gdHJ1ZSwgLi4ucHJvcHMgfSwKICAgIHJlZgogICkgPT4gKAogICAgPFNlcGFyYXRvclByaW1pdGl2ZS5Sb290CiAgICAgIHJlZj17cmVmfQogICAgICBkZWNvcmF0aXZlPXtkZWNvcmF0aXZlfQogICAgICBvcmllbnRhdGlvbj17b3JpZW50YXRpb259CiAgICAgIGNsYXNzTmFtZT17Y24oCiAgICAgICAgInNocmluay0wIGJnLWJvcmRlciIsCiAgICAgICAgb3JpZW50YXRpb24gPT09ICJob3Jpem9udGFsIiA/ICJoLVsxcHhdIHctZnVsbCIgOiAiaC1mdWxsIHctWzFweF0iLAogICAgICAgIGNsYXNzTmFtZQogICAgICApfQogICAgICB7Li4ucHJvcHN9CiAgICAvPgogICkKKQpTZXBhcmF0b3IuZGlzcGxheU5hbWUgPSBTZXBhcmF0b3JQcmltaXRpdmUuUm9vdC5kaXNwbGF5TmFtZQoKZXhwb3J0IHsgU2VwYXJhdG9yIH0K
:FILE_44_END

:FILE_45_PATH
client/src/components/ui/sheet.tsx
:FILE_45_DATA
InVzZSBjbGllbnQiCgppbXBvcnQgKiBhcyBSZWFjdCBmcm9tICJyZWFjdCIKaW1wb3J0ICogYXMgU2hlZXRQcmltaXRpdmUgZnJvbSAiQHJhZGl4LXVpL3JlYWN0LWRpYWxvZyIKaW1wb3J0IHsgY3ZhLCB0eXBlIFZhcmlhbnRQcm9wcyB9IGZyb20gImNsYXNzLXZhcmlhbmNlLWF1dGhvcml0eSIKaW1wb3J0IHsgWCB9IGZyb20gImx1Y2lkZS1yZWFjdCIKCmltcG9ydCB7IGNuIH0gZnJvbSAiQC9saWIvdXRpbHMiCgpjb25zdCBTaGVldCA9IFNoZWV0UHJpbWl0aXZlLlJvb3QKCmNvbnN0IFNoZWV0VHJpZ2dlciA9IFNoZWV0UHJpbWl0aXZlLlRyaWdnZXIKCmNvbnN0IFNoZWV0Q2xvc2UgPSBTaGVldFByaW1pdGl2ZS5DbG9zZQoKY29uc3QgU2hlZXRQb3J0YWwgPSBTaGVldFByaW1pdGl2ZS5Qb3J0YWwKCmNvbnN0IFNoZWV0T3ZlcmxheSA9IFJlYWN0LmZvcndhcmRSZWY8CiAgUmVhY3QuRWxlbWVudFJlZjx0eXBlb2YgU2hlZXRQcmltaXRpdmUuT3ZlcmxheT4sCiAgUmVhY3QuQ29tcG9uZW50UHJvcHNXaXRob3V0UmVmPHR5cGVvZiBTaGVldFByaW1pdGl2ZS5PdmVybGF5Pgo+KCh7IGNsYXNzTmFtZSwgLi4ucHJvcHMgfSwgcmVmKSA9PiAoCiAgPFNoZWV0UHJpbWl0aXZlLk92ZXJsYXkKICAgIGNsYXNzTmFtZT17Y24oCiAgICAgICJmaXhlZCBpbnNldC0wIHotNTAgYmctYmxhY2svODAgIGRhdGEtW3N0YXRlPW9wZW5dOmFuaW1hdGUtaW4gZGF0YS1bc3RhdGU9Y2xvc2VkXTphbmltYXRlLW91dCBkYXRhLVtzdGF0ZT1jbG9zZWRdOmZhZGUtb3V0LTAgZGF0YS1bc3RhdGU9b3Blbl06ZmFkZS1pbi0wIiwKICAgICAgY2xhc3NOYW1lCiAgICApfQogICAgey4uLnByb3BzfQogICAgcmVmPXtyZWZ9CiAgLz4KKSkKU2hlZXRPdmVybGF5LmRpc3BsYXlOYW1lID0gU2hlZXRQcmltaXRpdmUuT3ZlcmxheS5kaXNwbGF5TmFtZQoKY29uc3Qgc2hlZXRWYXJpYW50cyA9IGN2YSgKICAiZml4ZWQgei01MCBnYXAtNCBiZy1iYWNrZ3JvdW5kIHAtNiBzaGFkb3ctbGcgdHJhbnNpdGlvbiBlYXNlLWluLW91dCBkYXRhLVtzdGF0ZT1vcGVuXTphbmltYXRlLWluIGRhdGEtW3N0YXRlPWNsb3NlZF06YW5pbWF0ZS1vdXQgZGF0YS1bc3RhdGU9Y2xvc2VkXTpkdXJhdGlvbi0zMDAgZGF0YS1bc3RhdGU9b3Blbl06ZHVyYXRpb24tNTAwIiwKICB7CiAgICB2YXJpYW50czogewogICAgICBzaWRlOiB7CiAgICAgICAgdG9wOiAiaW5zZXQteC0wIHRvcC0wIGJvcmRlci1iIGRhdGEtW3N0YXRlPWNsb3NlZF06c2xpZGUtb3V0LXRvLXRvcCBkYXRhLVtzdGF0ZT1vcGVuXTpzbGlkZS1pbi1mcm9tLXRvcCIsCiAgICAgICAgYm90dG9tOgogICAgICAgICAgImluc2V0LXgtMCBib3R0b20tMCBib3JkZXItdCBkYXRhLVtzdGF0ZT1jbG9zZWRdOnNsaWRlLW91dC10by1ib3R0b20gZGF0YS1bc3RhdGU9b3Blbl06c2xpZGUtaW4tZnJvbS1ib3R0b20iLAogICAgICAgIGxlZnQ6ICJpbnNldC15LTAgbGVmdC0wIGgtZnVsbCB3LTMvNCBib3JkZXItciBkYXRhLVtzdGF0ZT1jbG9zZWRdOnNsaWRlLW91dC10by1sZWZ0IGRhdGEtW3N0YXRlPW9wZW5dOnNsaWRlLWluLWZyb20tbGVmdCBzbTptYXgtdy1zbSIsCiAgICAgICAgcmlnaHQ6CiAgICAgICAgICAiaW5zZXQteS0wIHJpZ2h0LTAgaC1mdWxsIHctMy80ICBib3JkZXItbCBkYXRhLVtzdGF0ZT1jbG9zZWRdOnNsaWRlLW91dC10by1yaWdodCBkYXRhLVtzdGF0ZT1vcGVuXTpzbGlkZS1pbi1mcm9tLXJpZ2h0IHNtOm1heC13LXNtIiwKICAgICAgfSwKICAgIH0sCiAgICBkZWZhdWx0VmFyaWFudHM6IHsKICAgICAgc2lkZTogInJpZ2h0IiwKICAgIH0sCiAgfQopCgppbnRlcmZhY2UgU2hlZXRDb250ZW50UHJvcHMKICBleHRlbmRzIFJlYWN0LkNvbXBvbmVudFByb3BzV2l0aG91dFJlZjx0eXBlb2YgU2hlZXRQcmltaXRpdmUuQ29udGVudD4sCiAgICBWYXJpYW50UHJvcHM8dHlwZW9mIHNoZWV0VmFyaWFudHM+IHt9Cgpjb25zdCBTaGVldENvbnRlbnQgPSBSZWFjdC5mb3J3YXJkUmVmPAogIFJlYWN0LkVsZW1lbnRSZWY8dHlwZW9mIFNoZWV0UHJpbWl0aXZlLkNvbnRlbnQ+LAogIFNoZWV0Q29udGVudFByb3BzCj4oKHsgc2lkZSA9ICJyaWdodCIsIGNsYXNzTmFtZSwgY2hpbGRyZW4sIC4uLnByb3BzIH0sIHJlZikgPT4gKAogIDxTaGVldFBvcnRhbD4KICAgIDxTaGVldE92ZXJsYXkgLz4KICAgIDxTaGVldFByaW1pdGl2ZS5Db250ZW50CiAgICAgIHJlZj17cmVmfQogICAgICBjbGFzc05hbWU9e2NuKHNoZWV0VmFyaWFudHMoeyBzaWRlIH0pLCBjbGFzc05hbWUpfQogICAgICB7Li4ucHJvcHN9CiAgICA+CiAgICAgIHtjaGlsZHJlbn0KICAgICAgPFNoZWV0UHJpbWl0aXZlLkNsb3NlIGNsYXNzTmFtZT0iYWJzb2x1dGUgcmlnaHQtNCB0b3AtNCByb3VuZGVkLXNtIG9wYWNpdHktNzAgcmluZy1vZmZzZXQtYmFja2dyb3VuZCB0cmFuc2l0aW9uLW9wYWNpdHkgaG92ZXI6b3BhY2l0eS0xMDAgZm9jdXM6b3V0bGluZS1ub25lIGZvY3VzOnJpbmctMiBmb2N1czpyaW5nLXJpbmcgZm9jdXM6cmluZy1vZmZzZXQtMiBkaXNhYmxlZDpwb2ludGVyLWV2ZW50cy1ub25lIGRhdGEtW3N0YXRlPW9wZW5dOmJnLXNlY29uZGFyeSI+CiAgICAgICAgPFggY2xhc3NOYW1lPSJoLTQgdy00IiAvPgogICAgICAgIDxzcGFuIGNsYXNzTmFtZT0ic3Itb25seSI+Q2xvc2U8L3NwYW4+CiAgICAgIDwvU2hlZXRQcmltaXRpdmUuQ2xvc2U+CiAgICA8L1NoZWV0UHJpbWl0aXZlLkNvbnRlbnQ+CiAgPC9TaGVldFBvcnRhbD4KKSkKU2hlZXRDb250ZW50LmRpc3BsYXlOYW1lID0gU2hlZXRQcmltaXRpdmUuQ29udGVudC5kaXNwbGF5TmFtZQoKY29uc3QgU2hlZXRIZWFkZXIgPSAoewogIGNsYXNzTmFtZSwKICAuLi5wcm9wcwp9OiBSZWFjdC5IVE1MQXR0cmlidXRlczxIVE1MRGl2RWxlbWVudD4pID0+ICgKICA8ZGl2CiAgICBjbGFzc05hbWU9e2NuKAogICAgICAiZmxleCBmbGV4LWNvbCBzcGFjZS15LTIgdGV4dC1jZW50ZXIgc206dGV4dC1sZWZ0IiwKICAgICAgY2xhc3NOYW1lCiAgICApfQogICAgey4uLnByb3BzfQogIC8+CikKU2hlZXRIZWFkZXIuZGlzcGxheU5hbWUgPSAiU2hlZXRIZWFkZXIiCgpjb25zdCBTaGVldEZvb3RlciA9ICh7CiAgY2xhc3NOYW1lLAogIC4uLnByb3BzCn06IFJlYWN0LkhUTUxBdHRyaWJ1dGVzPEhUTUxEaXZFbGVtZW50PikgPT4gKAogIDxkaXYKICAgIGNsYXNzTmFtZT17Y24oCiAgICAgICJmbGV4IGZsZXgtY29sLXJldmVyc2Ugc206ZmxleC1yb3cgc206anVzdGlmeS1lbmQgc206c3BhY2UteC0yIiwKICAgICAgY2xhc3NOYW1lCiAgICApfQogICAgey4uLnByb3BzfQogIC8+CikKU2hlZXRGb290ZXIuZGlzcGxheU5hbWUgPSAiU2hlZXRGb290ZXIiCgpjb25zdCBTaGVldFRpdGxlID0gUmVhY3QuZm9yd2FyZFJlZjwKICBSZWFjdC5FbGVtZW50UmVmPHR5cGVvZiBTaGVldFByaW1pdGl2ZS5UaXRsZT4sCiAgUmVhY3QuQ29tcG9uZW50UHJvcHNXaXRob3V0UmVmPHR5cGVvZiBTaGVldFByaW1pdGl2ZS5UaXRsZT4KPigoeyBjbGFzc05hbWUsIC4uLnByb3BzIH0sIHJlZikgPT4gKAogIDxTaGVldFByaW1pdGl2ZS5UaXRsZQogICAgcmVmPXtyZWZ9CiAgICBjbGFzc05hbWU9e2NuKCJ0ZXh0LWxnIGZvbnQtc2VtaWJvbGQgdGV4dC1mb3JlZ3JvdW5kIiwgY2xhc3NOYW1lKX0KICAgIHsuLi5wcm9wc30KICAvPgopKQpTaGVldFRpdGxlLmRpc3BsYXlOYW1lID0gU2hlZXRQcmltaXRpdmUuVGl0bGUuZGlzcGxheU5hbWUKCmNvbnN0IFNoZWV0RGVzY3JpcHRpb24gPSBSZWFjdC5mb3J3YXJkUmVmPAogIFJlYWN0LkVsZW1lbnRSZWY8dHlwZW9mIFNoZWV0UHJpbWl0aXZlLkRlc2NyaXB0aW9uPiwKICBSZWFjdC5Db21wb25lbnRQcm9wc1dpdGhvdXRSZWY8dHlwZW9mIFNoZWV0UHJpbWl0aXZlLkRlc2NyaXB0aW9uPgo+KCh7IGNsYXNzTmFtZSwgLi4ucHJvcHMgfSwgcmVmKSA9PiAoCiAgPFNoZWV0UHJpbWl0aXZlLkRlc2NyaXB0aW9uCiAgICByZWY9e3JlZn0KICAgIGNsYXNzTmFtZT17Y24oInRleHQtc20gdGV4dC1tdXRlZC1mb3JlZ3JvdW5kIiwgY2xhc3NOYW1lKX0KICAgIHsuLi5wcm9wc30KICAvPgopKQpTaGVldERlc2NyaXB0aW9uLmRpc3BsYXlOYW1lID0gU2hlZXRQcmltaXRpdmUuRGVzY3JpcHRpb24uZGlzcGxheU5hbWUKCmV4cG9ydCB7CiAgU2hlZXQsCiAgU2hlZXRQb3J0YWwsCiAgU2hlZXRPdmVybGF5LAogIFNoZWV0VHJpZ2dlciwKICBTaGVldENsb3NlLAogIFNoZWV0Q29udGVudCwKICBTaGVldEhlYWRlciwKICBTaGVldEZvb3RlciwKICBTaGVldFRpdGxlLAogIFNoZWV0RGVzY3JpcHRpb24sCn0K
:FILE_45_END

:FILE_46_PATH
client/src/components/ui/sidebar.tsx
:FILE_46_DATA

:FILE_46_END

:FILE_47_PATH
client/src/components/ui/skeleton.tsx
:FILE_47_DATA
aW1wb3J0IHsgY24gfSBmcm9tICJAL2xpYi91dGlscyIKCmZ1bmN0aW9uIFNrZWxldG9uKHsKICBjbGFzc05hbWUsCiAgLi4ucHJvcHMKfTogUmVhY3QuSFRNTEF0dHJpYnV0ZXM8SFRNTERpdkVsZW1lbnQ+KSB7CiAgcmV0dXJuICgKICAgIDxkaXYKICAgICAgY2xhc3NOYW1lPXtjbigiYW5pbWF0ZS1wdWxzZSByb3VuZGVkLW1kIGJnLW11dGVkIiwgY2xhc3NOYW1lKX0KICAgICAgey4uLnByb3BzfQogICAgLz4KICApCn0KCmV4cG9ydCB7IFNrZWxldG9uIH0K
:FILE_47_END

:FILE_48_PATH
client/src/components/ui/slider.tsx
:FILE_48_DATA
aW1wb3J0ICogYXMgUmVhY3QgZnJvbSAicmVhY3QiCmltcG9ydCAqIGFzIFNsaWRlclByaW1pdGl2ZSBmcm9tICJAcmFkaXgtdWkvcmVhY3Qtc2xpZGVyIgoKaW1wb3J0IHsgY24gfSBmcm9tICJAL2xpYi91dGlscyIKCmNvbnN0IFNsaWRlciA9IFJlYWN0LmZvcndhcmRSZWY8CiAgUmVhY3QuRWxlbWVudFJlZjx0eXBlb2YgU2xpZGVyUHJpbWl0aXZlLlJvb3Q+LAogIFJlYWN0LkNvbXBvbmVudFByb3BzV2l0aG91dFJlZjx0eXBlb2YgU2xpZGVyUHJpbWl0aXZlLlJvb3Q+Cj4oKHsgY2xhc3NOYW1lLCAuLi5wcm9wcyB9LCByZWYpID0+ICgKICA8U2xpZGVyUHJpbWl0aXZlLlJvb3QKICAgIHJlZj17cmVmfQogICAgY2xhc3NOYW1lPXtjbigKICAgICAgInJlbGF0aXZlIGZsZXggdy1mdWxsIHRvdWNoLW5vbmUgc2VsZWN0LW5vbmUgaXRlbXMtY2VudGVyIiwKICAgICAgY2xhc3NOYW1lCiAgICApfQogICAgey4uLnByb3BzfQogID4KICAgIDxTbGlkZXJQcmltaXRpdmUuVHJhY2sgY2xhc3NOYW1lPSJyZWxhdGl2ZSBoLTIgdy1mdWxsIGdyb3cgb3ZlcmZsb3ctaGlkZGVuIHJvdW5kZWQtZnVsbCBiZy1zZWNvbmRhcnkiPgogICAgICA8U2xpZGVyUHJpbWl0aXZlLlJhbmdlIGNsYXNzTmFtZT0iYWJzb2x1dGUgaC1mdWxsIGJnLXByaW1hcnkiIC8+CiAgICA8L1NsaWRlclByaW1pdGl2ZS5UcmFjaz4KICAgIDxTbGlkZXJQcmltaXRpdmUuVGh1bWIgY2xhc3NOYW1lPSJibG9jayBoLTUgdy01IHJvdW5kZWQtZnVsbCBib3JkZXItMiBib3JkZXItcHJpbWFyeSBiZy1iYWNrZ3JvdW5kIHJpbmctb2Zmc2V0LWJhY2tncm91bmQgdHJhbnNpdGlvbi1jb2xvcnMgZm9jdXMtdmlzaWJsZTpvdXRsaW5lLW5vbmUgZm9jdXMtdmlzaWJsZTpyaW5nLTIgZm9jdXMtdmlzaWJsZTpyaW5nLXJpbmcgZm9jdXMtdmlzaWJsZTpyaW5nLW9mZnNldC0yIGRpc2FibGVkOnBvaW50ZXItZXZlbnRzLW5vbmUgZGlzYWJsZWQ6b3BhY2l0eS01MCIgLz4KICA8L1NsaWRlclByaW1pdGl2ZS5Sb290PgopKQpTbGlkZXIuZGlzcGxheU5hbWUgPSBTbGlkZXJQcmltaXRpdmUuUm9vdC5kaXNwbGF5TmFtZQoKZXhwb3J0IHsgU2xpZGVyIH0K
:FILE_48_END

:FILE_49_PATH
client/src/components/ui/switch.tsx
:FILE_49_DATA
aW1wb3J0ICogYXMgUmVhY3QgZnJvbSAicmVhY3QiCmltcG9ydCAqIGFzIFN3aXRjaFByaW1pdGl2ZXMgZnJvbSAiQHJhZGl4LXVpL3JlYWN0LXN3aXRjaCIKCmltcG9ydCB7IGNuIH0gZnJvbSAiQC9saWIvdXRpbHMiCgpjb25zdCBTd2l0Y2ggPSBSZWFjdC5mb3J3YXJkUmVmPAogIFJlYWN0LkVsZW1lbnRSZWY8dHlwZW9mIFN3aXRjaFByaW1pdGl2ZXMuUm9vdD4sCiAgUmVhY3QuQ29tcG9uZW50UHJvcHNXaXRob3V0UmVmPHR5cGVvZiBTd2l0Y2hQcmltaXRpdmVzLlJvb3Q+Cj4oKHsgY2xhc3NOYW1lLCAuLi5wcm9wcyB9LCByZWYpID0+ICgKICA8U3dpdGNoUHJpbWl0aXZlcy5Sb290CiAgICBjbGFzc05hbWU9e2NuKAogICAgICAicGVlciBpbmxpbmUtZmxleCBoLTYgdy0xMSBzaHJpbmstMCBjdXJzb3ItcG9pbnRlciBpdGVtcy1jZW50ZXIgcm91bmRlZC1mdWxsIGJvcmRlci0yIGJvcmRlci10cmFuc3BhcmVudCB0cmFuc2l0aW9uLWNvbG9ycyBmb2N1cy12aXNpYmxlOm91dGxpbmUtbm9uZSBmb2N1cy12aXNpYmxlOnJpbmctMiBmb2N1cy12aXNpYmxlOnJpbmctcmluZyBmb2N1cy12aXNpYmxlOnJpbmctb2Zmc2V0LTIgZm9jdXMtdmlzaWJsZTpyaW5nLW9mZnNldC1iYWNrZ3JvdW5kIGRpc2FibGVkOmN1cnNvci1ub3QtYWxsb3dlZCBkaXNhYmxlZDpvcGFjaXR5LTUwIGRhdGEtW3N0YXRlPWNoZWNrZWRdOmJnLXByaW1hcnkgZGF0YS1bc3RhdGU9dW5jaGVja2VkXTpiZy1pbnB1dCIsCiAgICAgIGNsYXNzTmFtZQogICAgKX0KICAgIHsuLi5wcm9wc30KICAgIHJlZj17cmVmfQogID4KICAgIDxTd2l0Y2hQcmltaXRpdmVzLlRodW1iCiAgICAgIGNsYXNzTmFtZT17Y24oCiAgICAgICAgInBvaW50ZXItZXZlbnRzLW5vbmUgYmxvY2sgaC01IHctNSByb3VuZGVkLWZ1bGwgYmctYmFja2dyb3VuZCBzaGFkb3ctbGcgcmluZy0wIHRyYW5zaXRpb24tdHJhbnNmb3JtIGRhdGEtW3N0YXRlPWNoZWNrZWRdOnRyYW5zbGF0ZS14LTUgZGF0YS1bc3RhdGU9dW5jaGVja2VkXTp0cmFuc2xhdGUteC0wIgogICAgICApfQogICAgLz4KICA8L1N3aXRjaFByaW1pdGl2ZXMuUm9vdD4KKSkKU3dpdGNoLmRpc3BsYXlOYW1lID0gU3dpdGNoUHJpbWl0aXZlcy5Sb290LmRpc3BsYXlOYW1lCgpleHBvcnQgeyBTd2l0Y2ggfQo=
:FILE_49_END

:FILE_50_PATH
client/src/components/ui/table.tsx
:FILE_50_DATA
aW1wb3J0ICogYXMgUmVhY3QgZnJvbSAicmVhY3QiCgppbXBvcnQgeyBjbiB9IGZyb20gIkAvbGliL3V0aWxzIgoKY29uc3QgVGFibGUgPSBSZWFjdC5mb3J3YXJkUmVmPAogIEhUTUxUYWJsZUVsZW1lbnQsCiAgUmVhY3QuSFRNTEF0dHJpYnV0ZXM8SFRNTFRhYmxlRWxlbWVudD4KPigoeyBjbGFzc05hbWUsIC4uLnByb3BzIH0sIHJlZikgPT4gKAogIDxkaXYgY2xhc3NOYW1lPSJyZWxhdGl2ZSB3LWZ1bGwgb3ZlcmZsb3ctYXV0byI+CiAgICA8dGFibGUKICAgICAgcmVmPXtyZWZ9CiAgICAgIGNsYXNzTmFtZT17Y24oInctZnVsbCBjYXB0aW9uLWJvdHRvbSB0ZXh0LXNtIiwgY2xhc3NOYW1lKX0KICAgICAgey4uLnByb3BzfQogICAgLz4KICA8L2Rpdj4KKSkKVGFibGUuZGlzcGxheU5hbWUgPSAiVGFibGUiCgpjb25zdCBUYWJsZUhlYWRlciA9IFJlYWN0LmZvcndhcmRSZWY8CiAgSFRNTFRhYmxlU2VjdGlvbkVsZW1lbnQsCiAgUmVhY3QuSFRNTEF0dHJpYnV0ZXM8SFRNTFRhYmxlU2VjdGlvbkVsZW1lbnQ+Cj4oKHsgY2xhc3NOYW1lLCAuLi5wcm9wcyB9LCByZWYpID0+ICgKICA8dGhlYWQgcmVmPXtyZWZ9IGNsYXNzTmFtZT17Y24oIlsmX3RyXTpib3JkZXItYiIsIGNsYXNzTmFtZSl9IHsuLi5wcm9wc30gLz4KKSkKVGFibGVIZWFkZXIuZGlzcGxheU5hbWUgPSAiVGFibGVIZWFkZXIiCgpjb25zdCBUYWJsZUJvZHkgPSBSZWFjdC5mb3J3YXJkUmVmPAogIEhUTUxUYWJsZVNlY3Rpb25FbGVtZW50LAogIFJlYWN0LkhUTUxBdHRyaWJ1dGVzPEhUTUxUYWJsZVNlY3Rpb25FbGVtZW50Pgo+KCh7IGNsYXNzTmFtZSwgLi4ucHJvcHMgfSwgcmVmKSA9PiAoCiAgPHRib2R5CiAgICByZWY9e3JlZn0KICAgIGNsYXNzTmFtZT17Y24oIlsmX3RyOmxhc3QtY2hpbGRdOmJvcmRlci0wIiwgY2xhc3NOYW1lKX0KICAgIHsuLi5wcm9wc30KICAvPgopKQpUYWJsZUJvZHkuZGlzcGxheU5hbWUgPSAiVGFibGVCb2R5IgoKY29uc3QgVGFibGVGb290ZXIgPSBSZWFjdC5mb3J3YXJkUmVmPAogIEhUTUxUYWJsZVNlY3Rpb25FbGVtZW50LAogIFJlYWN0LkhUTUxBdHRyaWJ1dGVzPEhUTUxUYWJsZVNlY3Rpb25FbGVtZW50Pgo+KCh7IGNsYXNzTmFtZSwgLi4ucHJvcHMgfSwgcmVmKSA9PiAoCiAgPHRmb290CiAgICByZWY9e3JlZn0KICAgIGNsYXNzTmFtZT17Y24oCiAgICAgICJib3JkZXItdCBiZy1tdXRlZC81MCBmb250LW1lZGl1bSBbJj50cl06bGFzdDpib3JkZXItYi0wIiwKICAgICAgY2xhc3NOYW1lCiAgICApfQogICAgey4uLnByb3BzfQogIC8+CikpClRhYmxlRm9vdGVyLmRpc3BsYXlOYW1lID0gIlRhYmxlRm9vdGVyIgoKY29uc3QgVGFibGVSb3cgPSBSZWFjdC5mb3J3YXJkUmVmPAogIEhUTUxUYWJsZVJvd0VsZW1lbnQsCiAgUmVhY3QuSFRNTEF0dHJpYnV0ZXM8SFRNTFRhYmxlUm93RWxlbWVudD4KPigoeyBjbGFzc05hbWUsIC4uLnByb3BzIH0sIHJlZikgPT4gKAogIDx0cgogICAgcmVmPXtyZWZ9CiAgICBjbGFzc05hbWU9e2NuKAogICAgICAiYm9yZGVyLWIgdHJhbnNpdGlvbi1jb2xvcnMgaG92ZXI6YmctbXV0ZWQvNTAgZGF0YS1bc3RhdGU9c2VsZWN0ZWRdOmJnLW11dGVkIiwKICAgICAgY2xhc3NOYW1lCiAgICApfQogICAgey4uLnByb3BzfQogIC8+CikpClRhYmxlUm93LmRpc3BsYXlOYW1lID0gIlRhYmxlUm93IgoKY29uc3QgVGFibGVIZWFkID0gUmVhY3QuZm9yd2FyZFJlZjwKICBIVE1MVGFibGVDZWxsRWxlbWVudCwKICBSZWFjdC5UaEhUTUxBdHRyaWJ1dGVzPEhUTUxUYWJsZUNlbGxFbGVtZW50Pgo+KCh7IGNsYXNzTmFtZSwgLi4ucHJvcHMgfSwgcmVmKSA9PiAoCiAgPHRoCiAgICByZWY9e3JlZn0KICAgIGNsYXNzTmFtZT17Y24oCiAgICAgICJoLTEyIHB4LTQgdGV4dC1sZWZ0IGFsaWduLW1pZGRsZSBmb250LW1lZGl1bSB0ZXh0LW11dGVkLWZvcmVncm91bmQgWyY6aGFzKFtyb2xlPWNoZWNrYm94XSldOnByLTAiLAogICAgICBjbGFzc05hbWUKICAgICl9CiAgICB7Li4ucHJvcHN9CiAgLz4KKSkKVGFibGVIZWFkLmRpc3BsYXlOYW1lID0gIlRhYmxlSGVhZCIKCmNvbnN0IFRhYmxlQ2VsbCA9IFJlYWN0LmZvcndhcmRSZWY8CiAgSFRNTFRhYmxlQ2VsbEVsZW1lbnQsCiAgUmVhY3QuVGRIVE1MQXR0cmlidXRlczxIVE1MVGFibGVDZWxsRWxlbWVudD4KPigoeyBjbGFzc05hbWUsIC4uLnByb3BzIH0sIHJlZikgPT4gKAogIDx0ZAogICAgcmVmPXtyZWZ9CiAgICBjbGFzc05hbWU9e2NuKCJwLTQgYWxpZ24tbWlkZGxlIFsmOmhhcyhbcm9sZT1jaGVja2JveF0pXTpwci0wIiwgY2xhc3NOYW1lKX0KICAgIHsuLi5wcm9wc30KICAvPgopKQpUYWJsZUNlbGwuZGlzcGxheU5hbWUgPSAiVGFibGVDZWxsIgoKY29uc3QgVGFibGVDYXB0aW9uID0gUmVhY3QuZm9yd2FyZFJlZjwKICBIVE1MVGFibGVDYXB0aW9uRWxlbWVudCwKICBSZWFjdC5IVE1MQXR0cmlidXRlczxIVE1MVGFibGVDYXB0aW9uRWxlbWVudD4KPigoeyBjbGFzc05hbWUsIC4uLnByb3BzIH0sIHJlZikgPT4gKAogIDxjYXB0aW9uCiAgICByZWY9e3JlZn0KICAgIGNsYXNzTmFtZT17Y24oIm10LTQgdGV4dC1zbSB0ZXh0LW11dGVkLWZvcmVncm91bmQiLCBjbGFzc05hbWUpfQogICAgey4uLnByb3BzfQogIC8+CikpClRhYmxlQ2FwdGlvbi5kaXNwbGF5TmFtZSA9ICJUYWJsZUNhcHRpb24iCgpleHBvcnQgewogIFRhYmxlLAogIFRhYmxlSGVhZGVyLAogIFRhYmxlQm9keSwKICBUYWJsZUZvb3RlciwKICBUYWJsZUhlYWQsCiAgVGFibGVSb3csCiAgVGFibGVDZWxsLAogIFRhYmxlQ2FwdGlvbiwKfQo=
:FILE_50_END

:FILE_51_PATH
client/src/components/ui/tabs.tsx
:FILE_51_DATA
aW1wb3J0ICogYXMgUmVhY3QgZnJvbSAicmVhY3QiCmltcG9ydCAqIGFzIFRhYnNQcmltaXRpdmUgZnJvbSAiQHJhZGl4LXVpL3JlYWN0LXRhYnMiCgppbXBvcnQgeyBjbiB9IGZyb20gIkAvbGliL3V0aWxzIgoKY29uc3QgVGFicyA9IFRhYnNQcmltaXRpdmUuUm9vdAoKY29uc3QgVGFic0xpc3QgPSBSZWFjdC5mb3J3YXJkUmVmPAogIFJlYWN0LkVsZW1lbnRSZWY8dHlwZW9mIFRhYnNQcmltaXRpdmUuTGlzdD4sCiAgUmVhY3QuQ29tcG9uZW50UHJvcHNXaXRob3V0UmVmPHR5cGVvZiBUYWJzUHJpbWl0aXZlLkxpc3Q+Cj4oKHsgY2xhc3NOYW1lLCAuLi5wcm9wcyB9LCByZWYpID0+ICgKICA8VGFic1ByaW1pdGl2ZS5MaXN0CiAgICByZWY9e3JlZn0KICAgIGNsYXNzTmFtZT17Y24oCiAgICAgICJpbmxpbmUtZmxleCBoLTEwIGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWNlbnRlciByb3VuZGVkLW1kIGJnLW11dGVkIHAtMSB0ZXh0LW11dGVkLWZvcmVncm91bmQiLAogICAgICBjbGFzc05hbWUKICAgICl9CiAgICB7Li4ucHJvcHN9CiAgLz4KKSkKVGFic0xpc3QuZGlzcGxheU5hbWUgPSBUYWJzUHJpbWl0aXZlLkxpc3QuZGlzcGxheU5hbWUKCmNvbnN0IFRhYnNUcmlnZ2VyID0gUmVhY3QuZm9yd2FyZFJlZjwKICBSZWFjdC5FbGVtZW50UmVmPHR5cGVvZiBUYWJzUHJpbWl0aXZlLlRyaWdnZXI+LAogIFJlYWN0LkNvbXBvbmVudFByb3BzV2l0aG91dFJlZjx0eXBlb2YgVGFic1ByaW1pdGl2ZS5UcmlnZ2VyPgo+KCh7IGNsYXNzTmFtZSwgLi4ucHJvcHMgfSwgcmVmKSA9PiAoCiAgPFRhYnNQcmltaXRpdmUuVHJpZ2dlcgogICAgcmVmPXtyZWZ9CiAgICBjbGFzc05hbWU9e2NuKAogICAgICAiaW5saW5lLWZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktY2VudGVyIHdoaXRlc3BhY2Utbm93cmFwIHJvdW5kZWQtc20gcHgtMyBweS0xLjUgdGV4dC1zbSBmb250LW1lZGl1bSByaW5nLW9mZnNldC1iYWNrZ3JvdW5kIHRyYW5zaXRpb24tYWxsIGZvY3VzLXZpc2libGU6b3V0bGluZS1ub25lIGZvY3VzLXZpc2libGU6cmluZy0yIGZvY3VzLXZpc2libGU6cmluZy1yaW5nIGZvY3VzLXZpc2libGU6cmluZy1vZmZzZXQtMiBkaXNhYmxlZDpwb2ludGVyLWV2ZW50cy1ub25lIGRpc2FibGVkOm9wYWNpdHktNTAgZGF0YS1bc3RhdGU9YWN0aXZlXTpiZy1iYWNrZ3JvdW5kIGRhdGEtW3N0YXRlPWFjdGl2ZV06dGV4dC1mb3JlZ3JvdW5kIGRhdGEtW3N0YXRlPWFjdGl2ZV06c2hhZG93LXNtIiwKICAgICAgY2xhc3NOYW1lCiAgICApfQogICAgey4uLnByb3BzfQogIC8+CikpClRhYnNUcmlnZ2VyLmRpc3BsYXlOYW1lID0gVGFic1ByaW1pdGl2ZS5UcmlnZ2VyLmRpc3BsYXlOYW1lCgpjb25zdCBUYWJzQ29udGVudCA9IFJlYWN0LmZvcndhcmRSZWY8CiAgUmVhY3QuRWxlbWVudFJlZjx0eXBlb2YgVGFic1ByaW1pdGl2ZS5Db250ZW50PiwKICBSZWFjdC5Db21wb25lbnRQcm9wc1dpdGhvdXRSZWY8dHlwZW9mIFRhYnNQcmltaXRpdmUuQ29udGVudD4KPigoeyBjbGFzc05hbWUsIC4uLnByb3BzIH0sIHJlZikgPT4gKAogIDxUYWJzUHJpbWl0aXZlLkNvbnRlbnQKICAgIHJlZj17cmVmfQogICAgY2xhc3NOYW1lPXtjbigKICAgICAgIm10LTIgcmluZy1vZmZzZXQtYmFja2dyb3VuZCBmb2N1cy12aXNpYmxlOm91dGxpbmUtbm9uZSBmb2N1cy12aXNpYmxlOnJpbmctMiBmb2N1cy12aXNpYmxlOnJpbmctcmluZyBmb2N1cy12aXNpYmxlOnJpbmctb2Zmc2V0LTIiLAogICAgICBjbGFzc05hbWUKICAgICl9CiAgICB7Li4ucHJvcHN9CiAgLz4KKSkKVGFic0NvbnRlbnQuZGlzcGxheU5hbWUgPSBUYWJzUHJpbWl0aXZlLkNvbnRlbnQuZGlzcGxheU5hbWUKCmV4cG9ydCB7IFRhYnMsIFRhYnNMaXN0LCBUYWJzVHJpZ2dlciwgVGFic0NvbnRlbnQgfQo=
:FILE_51_END

:FILE_52_PATH
client/src/components/ui/textarea.tsx
:FILE_52_DATA
aW1wb3J0ICogYXMgUmVhY3QgZnJvbSAicmVhY3QiCgppbXBvcnQgeyBjbiB9IGZyb20gIkAvbGliL3V0aWxzIgoKY29uc3QgVGV4dGFyZWEgPSBSZWFjdC5mb3J3YXJkUmVmPAogIEhUTUxUZXh0QXJlYUVsZW1lbnQsCiAgUmVhY3QuQ29tcG9uZW50UHJvcHM8InRleHRhcmVhIj4KPigoeyBjbGFzc05hbWUsIC4uLnByb3BzIH0sIHJlZikgPT4gewogIHJldHVybiAoCiAgICA8dGV4dGFyZWEKICAgICAgY2xhc3NOYW1lPXtjbigKICAgICAgICAiZmxleCBtaW4taC1bODBweF0gdy1mdWxsIHJvdW5kZWQtbWQgYm9yZGVyIGJvcmRlci1pbnB1dCBiZy1iYWNrZ3JvdW5kIHB4LTMgcHktMiB0ZXh0LWJhc2UgcmluZy1vZmZzZXQtYmFja2dyb3VuZCBwbGFjZWhvbGRlcjp0ZXh0LW11dGVkLWZvcmVncm91bmQgZm9jdXMtdmlzaWJsZTpvdXRsaW5lLW5vbmUgZm9jdXMtdmlzaWJsZTpyaW5nLTIgZm9jdXMtdmlzaWJsZTpyaW5nLXJpbmcgZm9jdXMtdmlzaWJsZTpyaW5nLW9mZnNldC0yIGRpc2FibGVkOmN1cnNvci1ub3QtYWxsb3dlZCBkaXNhYmxlZDpvcGFjaXR5LTUwIG1kOnRleHQtc20iLAogICAgICAgIGNsYXNzTmFtZQogICAgICApfQogICAgICByZWY9e3JlZn0KICAgICAgey4uLnByb3BzfQogICAgLz4KICApCn0pClRleHRhcmVhLmRpc3BsYXlOYW1lID0gIlRleHRhcmVhIgoKZXhwb3J0IHsgVGV4dGFyZWEgfQo=
:FILE_52_END

:FILE_53_PATH
client/src/components/ui/toast.tsx
:FILE_53_DATA
aW1wb3J0ICogYXMgUmVhY3QgZnJvbSAicmVhY3QiCmltcG9ydCAqIGFzIFRvYXN0UHJpbWl0aXZlcyBmcm9tICJAcmFkaXgtdWkvcmVhY3QtdG9hc3QiCmltcG9ydCB7IGN2YSwgdHlwZSBWYXJpYW50UHJvcHMgfSBmcm9tICJjbGFzcy12YXJpYW5jZS1hdXRob3JpdHkiCmltcG9ydCB7IFggfSBmcm9tICJsdWNpZGUtcmVhY3QiCgppbXBvcnQgeyBjbiB9IGZyb20gIkAvbGliL3V0aWxzIgoKY29uc3QgVG9hc3RQcm92aWRlciA9IFRvYXN0UHJpbWl0aXZlcy5Qcm92aWRlcgoKY29uc3QgVG9hc3RWaWV3cG9ydCA9IFJlYWN0LmZvcndhcmRSZWY8CiAgUmVhY3QuRWxlbWVudFJlZjx0eXBlb2YgVG9hc3RQcmltaXRpdmVzLlZpZXdwb3J0PiwKICBSZWFjdC5Db21wb25lbnRQcm9wc1dpdGhvdXRSZWY8dHlwZW9mIFRvYXN0UHJpbWl0aXZlcy5WaWV3cG9ydD4KPigoeyBjbGFzc05hbWUsIC4uLnByb3BzIH0sIHJlZikgPT4gKAogIDxUb2FzdFByaW1pdGl2ZXMuVmlld3BvcnQKICAgIHJlZj17cmVmfQogICAgY2xhc3NOYW1lPXtjbigKICAgICAgImZpeGVkIHRvcC0wIHotWzEwMF0gZmxleCBtYXgtaC1zY3JlZW4gdy1mdWxsIGZsZXgtY29sLXJldmVyc2UgcC00IHNtOmJvdHRvbS0wIHNtOnJpZ2h0LTAgc206dG9wLWF1dG8gc206ZmxleC1jb2wgbWQ6bWF4LXctWzQyMHB4XSIsCiAgICAgIGNsYXNzTmFtZQogICAgKX0KICAgIHsuLi5wcm9wc30KICAvPgopKQpUb2FzdFZpZXdwb3J0LmRpc3BsYXlOYW1lID0gVG9hc3RQcmltaXRpdmVzLlZpZXdwb3J0LmRpc3BsYXlOYW1lCgpjb25zdCB0b2FzdFZhcmlhbnRzID0gY3ZhKAogICJncm91cCBwb2ludGVyLWV2ZW50cy1hdXRvIHJlbGF0aXZlIGZsZXggdy1mdWxsIGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWJldHdlZW4gc3BhY2UteC00IG92ZXJmbG93LWhpZGRlbiByb3VuZGVkLW1kIGJvcmRlciBwLTYgcHItOCBzaGFkb3ctbGcgdHJhbnNpdGlvbi1hbGwgZGF0YS1bc3dpcGU9Y2FuY2VsXTp0cmFuc2xhdGUteC0wIGRhdGEtW3N3aXBlPWVuZF06dHJhbnNsYXRlLXgtW3ZhcigtLXJhZGl4LXRvYXN0LXN3aXBlLWVuZC14KV0gZGF0YS1bc3dpcGU9bW92ZV06dHJhbnNsYXRlLXgtW3ZhcigtLXJhZGl4LXRvYXN0LXN3aXBlLW1vdmUteCldIGRhdGEtW3N3aXBlPW1vdmVdOnRyYW5zaXRpb24tbm9uZSBkYXRhLVtzdGF0ZT1vcGVuXTphbmltYXRlLWluIGRhdGEtW3N0YXRlPWNsb3NlZF06YW5pbWF0ZS1vdXQgZGF0YS1bc3dpcGU9ZW5kXTphbmltYXRlLW91dCBkYXRhLVtzdGF0ZT1jbG9zZWRdOmZhZGUtb3V0LTgwIGRhdGEtW3N0YXRlPWNsb3NlZF06c2xpZGUtb3V0LXRvLXJpZ2h0LWZ1bGwgZGF0YS1bc3RhdGU9b3Blbl06c2xpZGUtaW4tZnJvbS10b3AtZnVsbCBkYXRhLVtzdGF0ZT1vcGVuXTpzbTpzbGlkZS1pbi1mcm9tLWJvdHRvbS1mdWxsIiwKICB7CiAgICB2YXJpYW50czogewogICAgICB2YXJpYW50OiB7CiAgICAgICAgZGVmYXVsdDogImJvcmRlciBiZy1iYWNrZ3JvdW5kIHRleHQtZm9yZWdyb3VuZCIsCiAgICAgICAgZGVzdHJ1Y3RpdmU6CiAgICAgICAgICAiZGVzdHJ1Y3RpdmUgZ3JvdXAgYm9yZGVyLWRlc3RydWN0aXZlIGJnLWRlc3RydWN0aXZlIHRleHQtZGVzdHJ1Y3RpdmUtZm9yZWdyb3VuZCIsCiAgICAgIH0sCiAgICB9LAogICAgZGVmYXVsdFZhcmlhbnRzOiB7CiAgICAgIHZhcmlhbnQ6ICJkZWZhdWx0IiwKICAgIH0sCiAgfQopCgpjb25zdCBUb2FzdCA9IFJlYWN0LmZvcndhcmRSZWY8CiAgUmVhY3QuRWxlbWVudFJlZjx0eXBlb2YgVG9hc3RQcmltaXRpdmVzLlJvb3Q+LAogIFJlYWN0LkNvbXBvbmVudFByb3BzV2l0aG91dFJlZjx0eXBlb2YgVG9hc3RQcmltaXRpdmVzLlJvb3Q+ICYKICAgIFZhcmlhbnRQcm9wczx0eXBlb2YgdG9hc3RWYXJpYW50cz4KPigoeyBjbGFzc05hbWUsIHZhcmlhbnQsIC4uLnByb3BzIH0sIHJlZikgPT4gewogIHJldHVybiAoCiAgICA8VG9hc3RQcmltaXRpdmVzLlJvb3QKICAgICAgcmVmPXtyZWZ9CiAgICAgIGNsYXNzTmFtZT17Y24odG9hc3RWYXJpYW50cyh7IHZhcmlhbnQgfSksIGNsYXNzTmFtZSl9CiAgICAgIHsuLi5wcm9wc30KICAgIC8+CiAgKQp9KQpUb2FzdC5kaXNwbGF5TmFtZSA9IFRvYXN0UHJpbWl0aXZlcy5Sb290LmRpc3BsYXlOYW1lCgpjb25zdCBUb2FzdEFjdGlvbiA9IFJlYWN0LmZvcndhcmRSZWY8CiAgUmVhY3QuRWxlbWVudFJlZjx0eXBlb2YgVG9hc3RQcmltaXRpdmVzLkFjdGlvbj4sCiAgUmVhY3QuQ29tcG9uZW50UHJvcHNXaXRob3V0UmVmPHR5cGVvZiBUb2FzdFByaW1pdGl2ZXMuQWN0aW9uPgo+KCh7IGNsYXNzTmFtZSwgLi4ucHJvcHMgfSwgcmVmKSA9PiAoCiAgPFRvYXN0UHJpbWl0aXZlcy5BY3Rpb24KICAgIHJlZj17cmVmfQogICAgY2xhc3NOYW1lPXtjbigKICAgICAgImlubGluZS1mbGV4IGgtOCBzaHJpbmstMCBpdGVtcy1jZW50ZXIganVzdGlmeS1jZW50ZXIgcm91bmRlZC1tZCBib3JkZXIgYmctdHJhbnNwYXJlbnQgcHgtMyB0ZXh0LXNtIGZvbnQtbWVkaXVtIHJpbmctb2Zmc2V0LWJhY2tncm91bmQgdHJhbnNpdGlvbi1jb2xvcnMgaG92ZXI6Ymctc2Vjb25kYXJ5IGZvY3VzOm91dGxpbmUtbm9uZSBmb2N1czpyaW5nLTIgZm9jdXM6cmluZy1yaW5nIGZvY3VzOnJpbmctb2Zmc2V0LTIgZGlzYWJsZWQ6cG9pbnRlci1ldmVudHMtbm9uZSBkaXNhYmxlZDpvcGFjaXR5LTUwIGdyb3VwLVsuZGVzdHJ1Y3RpdmVdOmJvcmRlci1tdXRlZC80MCBncm91cC1bLmRlc3RydWN0aXZlXTpob3Zlcjpib3JkZXItZGVzdHJ1Y3RpdmUvMzAgZ3JvdXAtWy5kZXN0cnVjdGl2ZV06aG92ZXI6YmctZGVzdHJ1Y3RpdmUgZ3JvdXAtWy5kZXN0cnVjdGl2ZV06aG92ZXI6dGV4dC1kZXN0cnVjdGl2ZS1mb3JlZ3JvdW5kIGdyb3VwLVsuZGVzdHJ1Y3RpdmVdOmZvY3VzOnJpbmctZGVzdHJ1Y3RpdmUiLAogICAgICBjbGFzc05hbWUKICAgICl9CiAgICB7Li4ucHJvcHN9CiAgLz4KKSkKVG9hc3RBY3Rpb24uZGlzcGxheU5hbWUgPSBUb2FzdFByaW1pdGl2ZXMuQWN0aW9uLmRpc3BsYXlOYW1lCgpjb25zdCBUb2FzdENsb3NlID0gUmVhY3QuZm9yd2FyZFJlZjwKICBSZWFjdC5FbGVtZW50UmVmPHR5cGVvZiBUb2FzdFByaW1pdGl2ZXMuQ2xvc2U+LAogIFJlYWN0LkNvbXBvbmVudFByb3BzV2l0aG91dFJlZjx0eXBlb2YgVG9hc3RQcmltaXRpdmVzLkNsb3NlPgo+KCh7IGNsYXNzTmFtZSwgLi4ucHJvcHMgfSwgcmVmKSA9PiAoCiAgPFRvYXN0UHJpbWl0aXZlcy5DbG9zZQogICAgcmVmPXtyZWZ9CiAgICBjbGFzc05hbWU9e2NuKAogICAgICAiYWJzb2x1dGUgcmlnaHQtMiB0b3AtMiByb3VuZGVkLW1kIHAtMSB0ZXh0LWZvcmVncm91bmQvNTAgb3BhY2l0eS0wIHRyYW5zaXRpb24tb3BhY2l0eSBob3Zlcjp0ZXh0LWZvcmVncm91bmQgZm9jdXM6b3BhY2l0eS0xMDAgZm9jdXM6b3V0bGluZS1ub25lIGZvY3VzOnJpbmctMiBncm91cC1ob3ZlcjpvcGFjaXR5LTEwMCBncm91cC1bLmRlc3RydWN0aXZlXTp0ZXh0LXJlZC0zMDAgZ3JvdXAtWy5kZXN0cnVjdGl2ZV06aG92ZXI6dGV4dC1yZWQtNTAgZ3JvdXAtWy5kZXN0cnVjdGl2ZV06Zm9jdXM6cmluZy1yZWQtNDAwIGdyb3VwLVsuZGVzdHJ1Y3RpdmVdOmZvY3VzOnJpbmctb2Zmc2V0LXJlZC02MDAiLAogICAgICBjbGFzc05hbWUKICAgICl9CiAgICB0b2FzdC1jbG9zZT0iIgogICAgey4uLnByb3BzfQogID4KICAgIDxYIGNsYXNzTmFtZT0iaC00IHctNCIgLz4KICA8L1RvYXN0UHJpbWl0aXZlcy5DbG9zZT4KKSkKVG9hc3RDbG9zZS5kaXNwbGF5TmFtZSA9IFRvYXN0UHJpbWl0aXZlcy5DbG9zZS5kaXNwbGF5TmFtZQoKY29uc3QgVG9hc3RUaXRsZSA9IFJlYWN0LmZvcndhcmRSZWY8CiAgUmVhY3QuRWxlbWVudFJlZjx0eXBlb2YgVG9hc3RQcmltaXRpdmVzLlRpdGxlPiwKICBSZWFjdC5Db21wb25lbnRQcm9wc1dpdGhvdXRSZWY8dHlwZW9mIFRvYXN0UHJpbWl0aXZlcy5UaXRsZT4KPigoeyBjbGFzc05hbWUsIC4uLnByb3BzIH0sIHJlZikgPT4gKAogIDxUb2FzdFByaW1pdGl2ZXMuVGl0bGUKICAgIHJlZj17cmVmfQogICAgY2xhc3NOYW1lPXtjbigidGV4dC1zbSBmb250LXNlbWlib2xkIiwgY2xhc3NOYW1lKX0KICAgIHsuLi5wcm9wc30KICAvPgopKQpUb2FzdFRpdGxlLmRpc3BsYXlOYW1lID0gVG9hc3RQcmltaXRpdmVzLlRpdGxlLmRpc3BsYXlOYW1lCgpjb25zdCBUb2FzdERlc2NyaXB0aW9uID0gUmVhY3QuZm9yd2FyZFJlZjwKICBSZWFjdC5FbGVtZW50UmVmPHR5cGVvZiBUb2FzdFByaW1pdGl2ZXMuRGVzY3JpcHRpb24+LAogIFJlYWN0LkNvbXBvbmVudFByb3BzV2l0aG91dFJlZjx0eXBlb2YgVG9hc3RQcmltaXRpdmVzLkRlc2NyaXB0aW9uPgo+KCh7IGNsYXNzTmFtZSwgLi4ucHJvcHMgfSwgcmVmKSA9PiAoCiAgPFRvYXN0UHJpbWl0aXZlcy5EZXNjcmlwdGlvbgogICAgcmVmPXtyZWZ9CiAgICBjbGFzc05hbWU9e2NuKCJ0ZXh0LXNtIG9wYWNpdHktOTAiLCBjbGFzc05hbWUpfQogICAgey4uLnByb3BzfQogIC8+CikpClRvYXN0RGVzY3JpcHRpb24uZGlzcGxheU5hbWUgPSBUb2FzdFByaW1pdGl2ZXMuRGVzY3JpcHRpb24uZGlzcGxheU5hbWUKCnR5cGUgVG9hc3RQcm9wcyA9IFJlYWN0LkNvbXBvbmVudFByb3BzV2l0aG91dFJlZjx0eXBlb2YgVG9hc3Q+Cgp0eXBlIFRvYXN0QWN0aW9uRWxlbWVudCA9IFJlYWN0LlJlYWN0RWxlbWVudDx0eXBlb2YgVG9hc3RBY3Rpb24+CgpleHBvcnQgewogIHR5cGUgVG9hc3RQcm9wcywKICB0eXBlIFRvYXN0QWN0aW9uRWxlbWVudCwKICBUb2FzdFByb3ZpZGVyLAogIFRvYXN0Vmlld3BvcnQsCiAgVG9hc3QsCiAgVG9hc3RUaXRsZSwKICBUb2FzdERlc2NyaXB0aW9uLAogIFRvYXN0Q2xvc2UsCiAgVG9hc3RBY3Rpb24sCn0K
:FILE_53_END

:FILE_54_PATH
client/src/components/ui/toaster.tsx
:FILE_54_DATA
aW1wb3J0IHsgdXNlVG9hc3QgfSBmcm9tICJAL2hvb2tzL3VzZS10b2FzdCIKaW1wb3J0IHsKICBUb2FzdCwKICBUb2FzdENsb3NlLAogIFRvYXN0RGVzY3JpcHRpb24sCiAgVG9hc3RQcm92aWRlciwKICBUb2FzdFRpdGxlLAogIFRvYXN0Vmlld3BvcnQsCn0gZnJvbSAiQC9jb21wb25lbnRzL3VpL3RvYXN0IgoKZXhwb3J0IGZ1bmN0aW9uIFRvYXN0ZXIoKSB7CiAgY29uc3QgeyB0b2FzdHMgfSA9IHVzZVRvYXN0KCkKCiAgcmV0dXJuICgKICAgIDxUb2FzdFByb3ZpZGVyPgogICAgICB7dG9hc3RzLm1hcChmdW5jdGlvbiAoeyBpZCwgdGl0bGUsIGRlc2NyaXB0aW9uLCBhY3Rpb24sIC4uLnByb3BzIH0pIHsKICAgICAgICByZXR1cm4gKAogICAgICAgICAgPFRvYXN0IGtleT17aWR9IHsuLi5wcm9wc30+CiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSJncmlkIGdhcC0xIj4KICAgICAgICAgICAgICB7dGl0bGUgJiYgPFRvYXN0VGl0bGU+e3RpdGxlfTwvVG9hc3RUaXRsZT59CiAgICAgICAgICAgICAge2Rlc2NyaXB0aW9uICYmICgKICAgICAgICAgICAgICAgIDxUb2FzdERlc2NyaXB0aW9uPntkZXNjcmlwdGlvbn08L1RvYXN0RGVzY3JpcHRpb24+CiAgICAgICAgICAgICAgKX0KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIHthY3Rpb259CiAgICAgICAgICAgIDxUb2FzdENsb3NlIC8+CiAgICAgICAgICA8L1RvYXN0PgogICAgICAgICkKICAgICAgfSl9CiAgICAgIDxUb2FzdFZpZXdwb3J0IC8+CiAgICA8L1RvYXN0UHJvdmlkZXI+CiAgKQp9Cg==
:FILE_54_END

:FILE_55_PATH
client/src/components/ui/toggle-group.tsx
:FILE_55_DATA
InVzZSBjbGllbnQiCgppbXBvcnQgKiBhcyBSZWFjdCBmcm9tICJyZWFjdCIKaW1wb3J0ICogYXMgVG9nZ2xlR3JvdXBQcmltaXRpdmUgZnJvbSAiQHJhZGl4LXVpL3JlYWN0LXRvZ2dsZS1ncm91cCIKaW1wb3J0IHsgdHlwZSBWYXJpYW50UHJvcHMgfSBmcm9tICJjbGFzcy12YXJpYW5jZS1hdXRob3JpdHkiCgppbXBvcnQgeyBjbiB9IGZyb20gIkAvbGliL3V0aWxzIgppbXBvcnQgeyB0b2dnbGVWYXJpYW50cyB9IGZyb20gIkAvY29tcG9uZW50cy91aS90b2dnbGUiCgpjb25zdCBUb2dnbGVHcm91cENvbnRleHQgPSBSZWFjdC5jcmVhdGVDb250ZXh0PAogIFZhcmlhbnRQcm9wczx0eXBlb2YgdG9nZ2xlVmFyaWFudHM+Cj4oewogIHNpemU6ICJkZWZhdWx0IiwKICB2YXJpYW50OiAiZGVmYXVsdCIsCn0pCgpjb25zdCBUb2dnbGVHcm91cCA9IFJlYWN0LmZvcndhcmRSZWY8CiAgUmVhY3QuRWxlbWVudFJlZjx0eXBlb2YgVG9nZ2xlR3JvdXBQcmltaXRpdmUuUm9vdD4sCiAgUmVhY3QuQ29tcG9uZW50UHJvcHNXaXRob3V0UmVmPHR5cGVvZiBUb2dnbGVHcm91cFByaW1pdGl2ZS5Sb290PiAmCiAgICBWYXJpYW50UHJvcHM8dHlwZW9mIHRvZ2dsZVZhcmlhbnRzPgo+KCh7IGNsYXNzTmFtZSwgdmFyaWFudCwgc2l6ZSwgY2hpbGRyZW4sIC4uLnByb3BzIH0sIHJlZikgPT4gKAogIDxUb2dnbGVHcm91cFByaW1pdGl2ZS5Sb290CiAgICByZWY9e3JlZn0KICAgIGNsYXNzTmFtZT17Y24oImZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktY2VudGVyIGdhcC0xIiwgY2xhc3NOYW1lKX0KICAgIHsuLi5wcm9wc30KICA+CiAgICA8VG9nZ2xlR3JvdXBDb250ZXh0LlByb3ZpZGVyIHZhbHVlPXt7IHZhcmlhbnQsIHNpemUgfX0+CiAgICAgIHtjaGlsZHJlbn0KICAgIDwvVG9nZ2xlR3JvdXBDb250ZXh0LlByb3ZpZGVyPgogIDwvVG9nZ2xlR3JvdXBQcmltaXRpdmUuUm9vdD4KKSkKClRvZ2dsZUdyb3VwLmRpc3BsYXlOYW1lID0gVG9nZ2xlR3JvdXBQcmltaXRpdmUuUm9vdC5kaXNwbGF5TmFtZQoKY29uc3QgVG9nZ2xlR3JvdXBJdGVtID0gUmVhY3QuZm9yd2FyZFJlZjwKICBSZWFjdC5FbGVtZW50UmVmPHR5cGVvZiBUb2dnbGVHcm91cFByaW1pdGl2ZS5JdGVtPiwKICBSZWFjdC5Db21wb25lbnRQcm9wc1dpdGhvdXRSZWY8dHlwZW9mIFRvZ2dsZUdyb3VwUHJpbWl0aXZlLkl0ZW0+ICYKICAgIFZhcmlhbnRQcm9wczx0eXBlb2YgdG9nZ2xlVmFyaWFudHM+Cj4oKHsgY2xhc3NOYW1lLCBjaGlsZHJlbiwgdmFyaWFudCwgc2l6ZSwgLi4ucHJvcHMgfSwgcmVmKSA9PiB7CiAgY29uc3QgY29udGV4dCA9IFJlYWN0LnVzZUNvbnRleHQoVG9nZ2xlR3JvdXBDb250ZXh0KQoKICByZXR1cm4gKAogICAgPFRvZ2dsZUdyb3VwUHJpbWl0aXZlLkl0ZW0KICAgICAgcmVmPXtyZWZ9CiAgICAgIGNsYXNzTmFtZT17Y24oCiAgICAgICAgdG9nZ2xlVmFyaWFudHMoewogICAgICAgICAgdmFyaWFudDogY29udGV4dC52YXJpYW50IHx8IHZhcmlhbnQsCiAgICAgICAgICBzaXplOiBjb250ZXh0LnNpemUgfHwgc2l6ZSwKICAgICAgICB9KSwKICAgICAgICBjbGFzc05hbWUKICAgICAgKX0KICAgICAgey4uLnByb3BzfQogICAgPgogICAgICB7Y2hpbGRyZW59CiAgICA8L1RvZ2dsZUdyb3VwUHJpbWl0aXZlLkl0ZW0+CiAgKQp9KQoKVG9nZ2xlR3JvdXBJdGVtLmRpc3BsYXlOYW1lID0gVG9nZ2xlR3JvdXBQcmltaXRpdmUuSXRlbS5kaXNwbGF5TmFtZQoKZXhwb3J0IHsgVG9nZ2xlR3JvdXAsIFRvZ2dsZUdyb3VwSXRlbSB9Cg==
:FILE_55_END

:FILE_56_PATH
client/src/components/ui/toggle.tsx
:FILE_56_DATA
aW1wb3J0ICogYXMgUmVhY3QgZnJvbSAicmVhY3QiCmltcG9ydCAqIGFzIFRvZ2dsZVByaW1pdGl2ZSBmcm9tICJAcmFkaXgtdWkvcmVhY3QtdG9nZ2xlIgppbXBvcnQgeyBjdmEsIHR5cGUgVmFyaWFudFByb3BzIH0gZnJvbSAiY2xhc3MtdmFyaWFuY2UtYXV0aG9yaXR5IgoKaW1wb3J0IHsgY24gfSBmcm9tICJAL2xpYi91dGlscyIKCmNvbnN0IHRvZ2dsZVZhcmlhbnRzID0gY3ZhKAogICJpbmxpbmUtZmxleCBpdGVtcy1jZW50ZXIganVzdGlmeS1jZW50ZXIgcm91bmRlZC1tZCB0ZXh0LXNtIGZvbnQtbWVkaXVtIHJpbmctb2Zmc2V0LWJhY2tncm91bmQgdHJhbnNpdGlvbi1jb2xvcnMgaG92ZXI6YmctbXV0ZWQgaG92ZXI6dGV4dC1tdXRlZC1mb3JlZ3JvdW5kIGZvY3VzLXZpc2libGU6b3V0bGluZS1ub25lIGZvY3VzLXZpc2libGU6cmluZy0yIGZvY3VzLXZpc2libGU6cmluZy1yaW5nIGZvY3VzLXZpc2libGU6cmluZy1vZmZzZXQtMiBkaXNhYmxlZDpwb2ludGVyLWV2ZW50cy1ub25lIGRpc2FibGVkOm9wYWNpdHktNTAgZGF0YS1bc3RhdGU9b25dOmJnLWFjY2VudCBkYXRhLVtzdGF0ZT1vbl06dGV4dC1hY2NlbnQtZm9yZWdyb3VuZCBbJl9zdmddOnBvaW50ZXItZXZlbnRzLW5vbmUgWyZfc3ZnXTpzaXplLTQgWyZfc3ZnXTpzaHJpbmstMCBnYXAtMiIsCiAgewogICAgdmFyaWFudHM6IHsKICAgICAgdmFyaWFudDogewogICAgICAgIGRlZmF1bHQ6ICJiZy10cmFuc3BhcmVudCIsCiAgICAgICAgb3V0bGluZToKICAgICAgICAgICJib3JkZXIgYm9yZGVyLWlucHV0IGJnLXRyYW5zcGFyZW50IGhvdmVyOmJnLWFjY2VudCBob3Zlcjp0ZXh0LWFjY2VudC1mb3JlZ3JvdW5kIiwKICAgICAgfSwKICAgICAgc2l6ZTogewogICAgICAgIGRlZmF1bHQ6ICJoLTEwIHB4LTMgbWluLXctMTAiLAogICAgICAgIHNtOiAiaC05IHB4LTIuNSBtaW4tdy05IiwKICAgICAgICBsZzogImgtMTEgcHgtNSBtaW4tdy0xMSIsCiAgICAgIH0sCiAgICB9LAogICAgZGVmYXVsdFZhcmlhbnRzOiB7CiAgICAgIHZhcmlhbnQ6ICJkZWZhdWx0IiwKICAgICAgc2l6ZTogImRlZmF1bHQiLAogICAgfSwKICB9CikKCmNvbnN0IFRvZ2dsZSA9IFJlYWN0LmZvcndhcmRSZWY8CiAgUmVhY3QuRWxlbWVudFJlZjx0eXBlb2YgVG9nZ2xlUHJpbWl0aXZlLlJvb3Q+LAogIFJlYWN0LkNvbXBvbmVudFByb3BzV2l0aG91dFJlZjx0eXBlb2YgVG9nZ2xlUHJpbWl0aXZlLlJvb3Q+ICYKICAgIFZhcmlhbnRQcm9wczx0eXBlb2YgdG9nZ2xlVmFyaWFudHM+Cj4oKHsgY2xhc3NOYW1lLCB2YXJpYW50LCBzaXplLCAuLi5wcm9wcyB9LCByZWYpID0+ICgKICA8VG9nZ2xlUHJpbWl0aXZlLlJvb3QKICAgIHJlZj17cmVmfQogICAgY2xhc3NOYW1lPXtjbih0b2dnbGVWYXJpYW50cyh7IHZhcmlhbnQsIHNpemUsIGNsYXNzTmFtZSB9KSl9CiAgICB7Li4ucHJvcHN9CiAgLz4KKSkKClRvZ2dsZS5kaXNwbGF5TmFtZSA9IFRvZ2dsZVByaW1pdGl2ZS5Sb290LmRpc3BsYXlOYW1lCgpleHBvcnQgeyBUb2dnbGUsIHRvZ2dsZVZhcmlhbnRzIH0K
:FILE_56_END

:FILE_57_PATH
client/src/components/ui/tooltip.tsx
:FILE_57_DATA
InVzZSBjbGllbnQiCgppbXBvcnQgKiBhcyBSZWFjdCBmcm9tICJyZWFjdCIKaW1wb3J0ICogYXMgVG9vbHRpcFByaW1pdGl2ZSBmcm9tICJAcmFkaXgtdWkvcmVhY3QtdG9vbHRpcCIKCmltcG9ydCB7IGNuIH0gZnJvbSAiQC9saWIvdXRpbHMiCgpjb25zdCBUb29sdGlwUHJvdmlkZXIgPSBUb29sdGlwUHJpbWl0aXZlLlByb3ZpZGVyCgpjb25zdCBUb29sdGlwID0gVG9vbHRpcFByaW1pdGl2ZS5Sb290Cgpjb25zdCBUb29sdGlwVHJpZ2dlciA9IFRvb2x0aXBQcmltaXRpdmUuVHJpZ2dlcgoKY29uc3QgVG9vbHRpcENvbnRlbnQgPSBSZWFjdC5mb3J3YXJkUmVmPAogIFJlYWN0LkVsZW1lbnRSZWY8dHlwZW9mIFRvb2x0aXBQcmltaXRpdmUuQ29udGVudD4sCiAgUmVhY3QuQ29tcG9uZW50UHJvcHNXaXRob3V0UmVmPHR5cGVvZiBUb29sdGlwUHJpbWl0aXZlLkNvbnRlbnQ+Cj4oKHsgY2xhc3NOYW1lLCBzaWRlT2Zmc2V0ID0gNCwgLi4ucHJvcHMgfSwgcmVmKSA9PiAoCiAgPFRvb2x0aXBQcmltaXRpdmUuQ29udGVudAogICAgcmVmPXtyZWZ9CiAgICBzaWRlT2Zmc2V0PXtzaWRlT2Zmc2V0fQogICAgY2xhc3NOYW1lPXtjbigKICAgICAgInotNTAgb3ZlcmZsb3ctaGlkZGVuIHJvdW5kZWQtbWQgYm9yZGVyIGJnLXBvcG92ZXIgcHgtMyBweS0xLjUgdGV4dC1zbSB0ZXh0LXBvcG92ZXItZm9yZWdyb3VuZCBzaGFkb3ctbWQgYW5pbWF0ZS1pbiBmYWRlLWluLTAgem9vbS1pbi05NSBkYXRhLVtzdGF0ZT1jbG9zZWRdOmFuaW1hdGUtb3V0IGRhdGEtW3N0YXRlPWNsb3NlZF06ZmFkZS1vdXQtMCBkYXRhLVtzdGF0ZT1jbG9zZWRdOnpvb20tb3V0LTk1IGRhdGEtW3NpZGU9Ym90dG9tXTpzbGlkZS1pbi1mcm9tLXRvcC0yIGRhdGEtW3NpZGU9bGVmdF06c2xpZGUtaW4tZnJvbS1yaWdodC0yIGRhdGEtW3NpZGU9cmlnaHRdOnNsaWRlLWluLWZyb20tbGVmdC0yIGRhdGEtW3NpZGU9dG9wXTpzbGlkZS1pbi1mcm9tLWJvdHRvbS0yIG9yaWdpbi1bLS1yYWRpeC10b29sdGlwLWNvbnRlbnQtdHJhbnNmb3JtLW9yaWdpbl0iLAogICAgICBjbGFzc05hbWUKICAgICl9CiAgICB7Li4ucHJvcHN9CiAgLz4KKSkKVG9vbHRpcENvbnRlbnQuZGlzcGxheU5hbWUgPSBUb29sdGlwUHJpbWl0aXZlLkNvbnRlbnQuZGlzcGxheU5hbWUKCmV4cG9ydCB7IFRvb2x0aXAsIFRvb2x0aXBUcmlnZ2VyLCBUb29sdGlwQ29udGVudCwgVG9vbHRpcFByb3ZpZGVyIH0K
:FILE_57_END

:FILE_58_PATH
client/src/hooks/use-mobile.tsx
:FILE_58_DATA
aW1wb3J0ICogYXMgUmVhY3QgZnJvbSAicmVhY3QiCgpjb25zdCBNT0JJTEVfQlJFQUtQT0lOVCA9IDc2OAoKZXhwb3J0IGZ1bmN0aW9uIHVzZUlzTW9iaWxlKCkgewogIGNvbnN0IFtpc01vYmlsZSwgc2V0SXNNb2JpbGVdID0gUmVhY3QudXNlU3RhdGU8Ym9vbGVhbiB8IHVuZGVmaW5lZD4odW5kZWZpbmVkKQoKICBSZWFjdC51c2VFZmZlY3QoKCkgPT4gewogICAgY29uc3QgbXFsID0gd2luZG93Lm1hdGNoTWVkaWEoYChtYXgtd2lkdGg6ICR7TU9CSUxFX0JSRUFLUE9JTlQgLSAxfXB4KWApCiAgICBjb25zdCBvbkNoYW5nZSA9ICgpID0+IHsKICAgICAgc2V0SXNNb2JpbGUod2luZG93LmlubmVyV2lkdGggPCBNT0JJTEVfQlJFQUtQT0lOVCkKICAgIH0KICAgIG1xbC5hZGRFdmVudExpc3RlbmVyKCJjaGFuZ2UiLCBvbkNoYW5nZSkKICAgIHNldElzTW9iaWxlKHdpbmRvdy5pbm5lcldpZHRoIDwgTU9CSUxFX0JSRUFLUE9JTlQpCiAgICByZXR1cm4gKCkgPT4gbXFsLnJlbW92ZUV2ZW50TGlzdGVuZXIoImNoYW5nZSIsIG9uQ2hhbmdlKQogIH0sIFtdKQoKICByZXR1cm4gISFpc01vYmlsZQp9Cg==
:FILE_58_END

:FILE_59_PATH
client/src/hooks/use-toast.ts
:FILE_59_DATA
aW1wb3J0ICogYXMgUmVhY3QgZnJvbSAicmVhY3QiCgppbXBvcnQgdHlwZSB7CiAgVG9hc3RBY3Rpb25FbGVtZW50LAogIFRvYXN0UHJvcHMsCn0gZnJvbSAiQC9jb21wb25lbnRzL3VpL3RvYXN0IgoKY29uc3QgVE9BU1RfTElNSVQgPSAxCmNvbnN0IFRPQVNUX1JFTU9WRV9ERUxBWSA9IDEwMDAwMDAKCnR5cGUgVG9hc3RlclRvYXN0ID0gVG9hc3RQcm9wcyAmIHsKICBpZDogc3RyaW5nCiAgdGl0bGU/OiBSZWFjdC5SZWFjdE5vZGUKICBkZXNjcmlwdGlvbj86IFJlYWN0LlJlYWN0Tm9kZQogIGFjdGlvbj86IFRvYXN0QWN0aW9uRWxlbWVudAp9Cgpjb25zdCBhY3Rpb25UeXBlcyA9IHsKICBBRERfVE9BU1Q6ICJBRERfVE9BU1QiLAogIFVQREFURV9UT0FTVDogIlVQREFURV9UT0FTVCIsCiAgRElTTUlTU19UT0FTVDogIkRJU01JU1NfVE9BU1QiLAogIFJFTU9WRV9UT0FTVDogIlJFTU9WRV9UT0FTVCIsCn0gYXMgY29uc3QKCmxldCBjb3VudCA9IDAKCmZ1bmN0aW9uIGdlbklkKCkgewogIGNvdW50ID0gKGNvdW50ICsgMSkgJSBOdW1iZXIuTUFYX1NBRkVfSU5URUdFUgogIHJldHVybiBjb3VudC50b1N0cmluZygpCn0KCnR5cGUgQWN0aW9uVHlwZSA9IHR5cGVvZiBhY3Rpb25UeXBlcwoKdHlwZSBBY3Rpb24gPQogIHwgewogICAgICB0eXBlOiBBY3Rpb25UeXBlWyJBRERfVE9BU1QiXQogICAgICB0b2FzdDogVG9hc3RlclRvYXN0CiAgICB9CiAgfCB7CiAgICAgIHR5cGU6IEFjdGlvblR5cGVbIlVQREFURV9UT0FTVCJdCiAgICAgIHRvYXN0OiBQYXJ0aWFsPFRvYXN0ZXJUb2FzdD4KICAgIH0KICB8IHsKICAgICAgdHlwZTogQWN0aW9uVHlwZVsiRElTTUlTU19UT0FTVCJdCiAgICAgIHRvYXN0SWQ/OiBUb2FzdGVyVG9hc3RbImlkIl0KICAgIH0KICB8IHsKICAgICAgdHlwZTogQWN0aW9uVHlwZVsiUkVNT1ZFX1RPQVNUIl0KICAgICAgdG9hc3RJZD86IFRvYXN0ZXJUb2FzdFsiaWQiXQogICAgfQoKaW50ZXJmYWNlIFN0YXRlIHsKICB0b2FzdHM6IFRvYXN0ZXJUb2FzdFtdCn0KCmNvbnN0IHRvYXN0VGltZW91dHMgPSBuZXcgTWFwPHN0cmluZywgUmV0dXJuVHlwZTx0eXBlb2Ygc2V0VGltZW91dD4+KCkKCmNvbnN0IGFkZFRvUmVtb3ZlUXVldWUgPSAodG9hc3RJZDogc3RyaW5nKSA9PiB7CiAgaWYgKHRvYXN0VGltZW91dHMuaGFzKHRvYXN0SWQpKSB7CiAgICByZXR1cm4KICB9CgogIGNvbnN0IHRpbWVvdXQgPSBzZXRUaW1lb3V0KCgpID0+IHsKICAgIHRvYXN0VGltZW91dHMuZGVsZXRlKHRvYXN0SWQpCiAgICBkaXNwYXRjaCh7CiAgICAgIHR5cGU6ICJSRU1PVkVfVE9BU1QiLAogICAgICB0b2FzdElkOiB0b2FzdElkLAogICAgfSkKICB9LCBUT0FTVF9SRU1PVkVfREVMQVkpCgogIHRvYXN0VGltZW91dHMuc2V0KHRvYXN0SWQsIHRpbWVvdXQpCn0KCmV4cG9ydCBjb25zdCByZWR1Y2VyID0gKHN0YXRlOiBTdGF0ZSwgYWN0aW9uOiBBY3Rpb24pOiBTdGF0ZSA9PiB7CiAgc3dpdGNoIChhY3Rpb24udHlwZSkgewogICAgY2FzZSAiQUREX1RPQVNUIjoKICAgICAgcmV0dXJuIHsKICAgICAgICAuLi5zdGF0ZSwKICAgICAgICB0b2FzdHM6IFthY3Rpb24udG9hc3QsIC4uLnN0YXRlLnRvYXN0c10uc2xpY2UoMCwgVE9BU1RfTElNSVQpLAogICAgICB9CgogICAgY2FzZSAiVVBEQVRFX1RPQVNUIjoKICAgICAgcmV0dXJuIHsKICAgICAgICAuLi5zdGF0ZSwKICAgICAgICB0b2FzdHM6IHN0YXRlLnRvYXN0cy5tYXAoKHQpID0+CiAgICAgICAgICB0LmlkID09PSBhY3Rpb24udG9hc3QuaWQgPyB7IC4uLnQsIC4uLmFjdGlvbi50b2FzdCB9IDogdAogICAgICAgICksCiAgICAgIH0KCiAgICBjYXNlICJESVNNSVNTX1RPQVNUIjogewogICAgICBjb25zdCB7IHRvYXN0SWQgfSA9IGFjdGlvbgoKICAgICAgLy8gISBTaWRlIGVmZmVjdHMgISAtIFRoaXMgY291bGQgYmUgZXh0cmFjdGVkIGludG8gYSBkaXNtaXNzVG9hc3QoKSBhY3Rpb24sCiAgICAgIC8vIGJ1dCBJJ2xsIGtlZXAgaXQgaGVyZSBmb3Igc2ltcGxpY2l0eQogICAgICBpZiAodG9hc3RJZCkgewogICAgICAgIGFkZFRvUmVtb3ZlUXVldWUodG9hc3RJZCkKICAgICAgfSBlbHNlIHsKICAgICAgICBzdGF0ZS50b2FzdHMuZm9yRWFjaCgodG9hc3QpID0+IHsKICAgICAgICAgIGFkZFRvUmVtb3ZlUXVldWUodG9hc3QuaWQpCiAgICAgICAgfSkKICAgICAgfQoKICAgICAgcmV0dXJuIHsKICAgICAgICAuLi5zdGF0ZSwKICAgICAgICB0b2FzdHM6IHN0YXRlLnRvYXN0cy5tYXAoKHQpID0+CiAgICAgICAgICB0LmlkID09PSB0b2FzdElkIHx8IHRvYXN0SWQgPT09IHVuZGVmaW5lZAogICAgICAgICAgICA/IHsKICAgICAgICAgICAgICAgIC4uLnQsCiAgICAgICAgICAgICAgICBvcGVuOiBmYWxzZSwKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIDogdAogICAgICAgICksCiAgICAgIH0KICAgIH0KICAgIGNhc2UgIlJFTU9WRV9UT0FTVCI6CiAgICAgIGlmIChhY3Rpb24udG9hc3RJZCA9PT0gdW5kZWZpbmVkKSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgIC4uLnN0YXRlLAogICAgICAgICAgdG9hc3RzOiBbXSwKICAgICAgICB9CiAgICAgIH0KICAgICAgcmV0dXJuIHsKICAgICAgICAuLi5zdGF0ZSwKICAgICAgICB0b2FzdHM6IHN0YXRlLnRvYXN0cy5maWx0ZXIoKHQpID0+IHQuaWQgIT09IGFjdGlvbi50b2FzdElkKSwKICAgICAgfQogIH0KfQoKY29uc3QgbGlzdGVuZXJzOiBBcnJheTwoc3RhdGU6IFN0YXRlKSA9PiB2b2lkPiA9IFtdCgpsZXQgbWVtb3J5U3RhdGU6IFN0YXRlID0geyB0b2FzdHM6IFtdIH0KCmZ1bmN0aW9uIGRpc3BhdGNoKGFjdGlvbjogQWN0aW9uKSB7CiAgbWVtb3J5U3RhdGUgPSByZWR1Y2VyKG1lbW9yeVN0YXRlLCBhY3Rpb24pCiAgbGlzdGVuZXJzLmZvckVhY2goKGxpc3RlbmVyKSA9PiB7CiAgICBsaXN0ZW5lcihtZW1vcnlTdGF0ZSkKICB9KQp9Cgp0eXBlIFRvYXN0ID0gT21pdDxUb2FzdGVyVG9hc3QsICJpZCI+CgpmdW5jdGlvbiB0b2FzdCh7IC4uLnByb3BzIH06IFRvYXN0KSB7CiAgY29uc3QgaWQgPSBnZW5JZCgpCgogIGNvbnN0IHVwZGF0ZSA9IChwcm9wczogVG9hc3RlclRvYXN0KSA9PgogICAgZGlzcGF0Y2goewogICAgICB0eXBlOiAiVVBEQVRFX1RPQVNUIiwKICAgICAgdG9hc3Q6IHsgLi4ucHJvcHMsIGlkIH0sCiAgICB9KQogIGNvbnN0IGRpc21pc3MgPSAoKSA9PiBkaXNwYXRjaCh7IHR5cGU6ICJESVNNSVNTX1RPQVNUIiwgdG9hc3RJZDogaWQgfSkKCiAgZGlzcGF0Y2goewogICAgdHlwZTogIkFERF9UT0FTVCIsCiAgICB0b2FzdDogewogICAgICAuLi5wcm9wcywKICAgICAgaWQsCiAgICAgIG9wZW46IHRydWUsCiAgICAgIG9uT3BlbkNoYW5nZTogKG9wZW4pID0+IHsKICAgICAgICBpZiAoIW9wZW4pIGRpc21pc3MoKQogICAgICB9LAogICAgfSwKICB9KQoKICByZXR1cm4gewogICAgaWQ6IGlkLAogICAgZGlzbWlzcywKICAgIHVwZGF0ZSwKICB9Cn0KCmZ1bmN0aW9uIHVzZVRvYXN0KCkgewogIGNvbnN0IFtzdGF0ZSwgc2V0U3RhdGVdID0gUmVhY3QudXNlU3RhdGU8U3RhdGU+KG1lbW9yeVN0YXRlKQoKICBSZWFjdC51c2VFZmZlY3QoKCkgPT4gewogICAgbGlzdGVuZXJzLnB1c2goc2V0U3RhdGUpCiAgICByZXR1cm4gKCkgPT4gewogICAgICBjb25zdCBpbmRleCA9IGxpc3RlbmVycy5pbmRleE9mKHNldFN0YXRlKQogICAgICBpZiAoaW5kZXggPiAtMSkgewogICAgICAgIGxpc3RlbmVycy5zcGxpY2UoaW5kZXgsIDEpCiAgICAgIH0KICAgIH0KICB9LCBbc3RhdGVdKQoKICByZXR1cm4gewogICAgLi4uc3RhdGUsCiAgICB0b2FzdCwKICAgIGRpc21pc3M6ICh0b2FzdElkPzogc3RyaW5nKSA9PiBkaXNwYXRjaCh7IHR5cGU6ICJESVNNSVNTX1RPQVNUIiwgdG9hc3RJZCB9KSwKICB9Cn0KCmV4cG9ydCB7IHVzZVRvYXN0LCB0b2FzdCB9Cg==
:FILE_59_END

:FILE_60_PATH
client/src/hooks/useAuth.ts
:FILE_60_DATA
aW1wb3J0IHsgdXNlUXVlcnkgfSBmcm9tICJAdGFuc3RhY2svcmVhY3QtcXVlcnkiOwppbXBvcnQgdHlwZSB7IFVzZXIgfSBmcm9tICJAc2hhcmVkL3NjaGVtYSI7CmltcG9ydCB7IGdldFF1ZXJ5Rm4gfSBmcm9tICJAL2xpYi9xdWVyeUNsaWVudCI7CgpleHBvcnQgZnVuY3Rpb24gdXNlQXV0aCgpIHsKICBjb25zdCB7IGRhdGE6IHVzZXIsIGlzTG9hZGluZywgZXJyb3IgfSA9IHVzZVF1ZXJ5PFVzZXI+KHsKICAgIHF1ZXJ5S2V5OiBbIi9hcGkvYXV0aC91c2VyIl0sCiAgICBxdWVyeUZuOiBnZXRRdWVyeUZuKHsgb240MDE6ICJyZXR1cm5OdWxsIiB9KSwKICAgIHJldHJ5OiBmYWxzZSwKICAgIC8vIERvbid0IHRocm93IGVycm9ycyB0byBwcmV2ZW50IGFwcCBjcmFzaGVzCiAgICB0aHJvd09uRXJyb3I6IGZhbHNlLAogIH0pOwoKICByZXR1cm4gewogICAgdXNlciwKICAgIGlzTG9hZGluZywKICAgIGlzQXV0aGVudGljYXRlZDogISF1c2VyLAogICAgZXJyb3IKICB9Owp9Cg==
:FILE_60_END

:FILE_61_PATH
client/src/index.css
:FILE_61_DATA
QGltcG9ydCB1cmwoJ2h0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzMj9mYW1pbHk9SW50ZXI6d2dodEAzMDA7NDAwOzUwMDs2MDA7NzAwJmRpc3BsYXk9c3dhcCcpOwpAdGFpbHdpbmQgYmFzZTsKQHRhaWx3aW5kIGNvbXBvbmVudHM7CkB0YWlsd2luZCB1dGlsaXRpZXM7Cgo6cm9vdCB7CiAgLS1iYWNrZ3JvdW5kOiBoc2woMjEwLCA0MCUsIDk4JSk7CiAgLS1mb3JlZ3JvdW5kOiBoc2woMjIyLjIsIDg0JSwgNC45JSk7CiAgLS1jYXJkOiBoc2woMCwgMCUsIDEwMCUpOwogIC0tY2FyZC1mb3JlZ3JvdW5kOiBoc2woMjIyLjIsIDg0JSwgNC45JSk7CiAgLS1wb3BvdmVyOiBoc2woMCwgMCUsIDEwMCUpOwogIC0tcG9wb3Zlci1mb3JlZ3JvdW5kOiBoc2woMjIyLjIsIDg0JSwgNC45JSk7CiAgLS1wcmltYXJ5OiBoc2woMjEwLCA4MyUsIDUzJSk7CiAgLS1wcmltYXJ5LWZvcmVncm91bmQ6IGhzbCgyMTAsIDQwJSwgOTglKTsKICAtLXNlY29uZGFyeTogaHNsKDIxMCwgNDAlLCA5NiUpOwogIC0tc2Vjb25kYXJ5LWZvcmVncm91bmQ6IGhzbCgyMjIuMiwgODQlLCA0LjklKTsKICAtLW11dGVkOiBoc2woMjEwLCA0MCUsIDk2JSk7CiAgLS1tdXRlZC1mb3JlZ3JvdW5kOiBoc2woMjE1LjQsIDE2LjMlLCA0Ni45JSk7CiAgLS1hY2NlbnQ6IGhzbCgzNiwgMTAwJSwgNTAlKTsKICAtLWFjY2VudC1mb3JlZ3JvdW5kOiBoc2woMjEwLCA0MCUsIDk4JSk7CiAgLS1kZXN0cnVjdGl2ZTogaHNsKDAsIDg0LjIlLCA2MC4yJSk7CiAgLS1kZXN0cnVjdGl2ZS1mb3JlZ3JvdW5kOiBoc2woMjEwLCA0MCUsIDk4JSk7CiAgLS1ib3JkZXI6IGhzbCgyMTQuMywgMzEuOCUsIDkxLjQlKTsKICAtLWlucHV0OiBoc2woMjE0LjMsIDMxLjglLCA5MS40JSk7CiAgLS1yaW5nOiBoc2woMjEwLCA4MyUsIDUzJSk7CiAgLS1jaGFydC0xOiBoc2woMjEwLCA4MyUsIDUzJSk7CiAgLS1jaGFydC0yOiBoc2woMTU5Ljc4MjYsIDEwMCUsIDM2LjA3ODQlKTsKICAtLWNoYXJ0LTM6IGhzbCg0Mi4wMjkwLCA5Mi44MjUxJSwgNTYuMjc0NSUpOwogIC0tY2hhcnQtNDogaHNsKDE0Ny4xNDI5LCA3OC41MDQ3JSwgNDEuOTYwOCUpOwogIC0tY2hhcnQtNTogaHNsKDM0MS40ODk0LCA3NS4yMDAwJSwgNTAuOTgwNCUpOwogIC0tc2lkZWJhcjogaHNsKDAsIDAlLCAxMDAlKTsKICAtLXNpZGViYXItZm9yZWdyb3VuZDogaHNsKDIyMi4yLCA4NCUsIDQuOSUpOwogIC0tc2lkZWJhci1wcmltYXJ5OiBoc2woMjEwLCA4MyUsIDUzJSk7CiAgLS1zaWRlYmFyLXByaW1hcnktZm9yZWdyb3VuZDogaHNsKDIxMCwgNDAlLCA5OCUpOwogIC0tc2lkZWJhci1hY2NlbnQ6IGhzbCgyMTAsIDQwJSwgOTYlKTsKICAtLXNpZGViYXItYWNjZW50LWZvcmVncm91bmQ6IGhzbCgyMTAsIDgzJSwgNTMlKTsKICAtLXNpZGViYXItYm9yZGVyOiBoc2woMjE0LjMsIDMxLjglLCA5MS40JSk7CiAgLS1zaWRlYmFyLXJpbmc6IGhzbCgyMTAsIDgzJSwgNTMlKTsKICAtLWZvbnQtc2FuczogSW50ZXIsIHNhbnMtc2VyaWY7CiAgLS1mb250LXNlcmlmOiBHZW9yZ2lhLCBzZXJpZjsKICAtLWZvbnQtbW9ubzogTWVubG8sIG1vbm9zcGFjZTsKICAtLXJhZGl1czogMC41cmVtOwogIC0tc2hhZG93LTJ4czogMHB4IDJweCAwcHggMHB4IGhzbCgyMTAsIDgzJSwgNTMlLCAwLjAwKTsKICAtLXNoYWRvdy14czogMHB4IDJweCAwcHggMHB4IGhzbCgyMTAsIDgzJSwgNTMlLCAwLjAwKTsKICAtLXNoYWRvdy1zbTogMHB4IDJweCAwcHggMHB4IGhzbCgyMTAsIDgzJSwgNTMlLCAwLjAwKSwgMHB4IDFweCAycHggLTFweCBoc2woMjEwLCA4MyUsIDUzJSwgMC4wMCk7CiAgLS1zaGFkb3c6IDBweCAycHggMHB4IDBweCBoc2woMjEwLCA4MyUsIDUzJSwgMC4wMCksIDBweCAxcHggMnB4IC0xcHggaHNsKDIxMCwgODMlLCA1MyUsIDAuMDApOwogIC0tc2hhZG93LW1kOiAwcHggMnB4IDBweCAwcHggaHNsKDIxMCwgODMlLCA1MyUsIDAuMDApLCAwcHggMnB4IDRweCAtMXB4IGhzbCgyMTAsIDgzJSwgNTMlLCAwLjAwKTsKICAtLXNoYWRvdy1sZzogMHB4IDJweCAwcHggMHB4IGhzbCgyMTAsIDgzJSwgNTMlLCAwLjAwKSwgMHB4IDRweCA2cHggLTFweCBoc2woMjEwLCA4MyUsIDUzJSwgMC4wMCk7CiAgLS1zaGFkb3cteGw6IDBweCAycHggMHB4IDBweCBoc2woMjEwLCA4MyUsIDUzJSwgMC4wMCksIDBweCA4cHggMTBweCAtMXB4IGhzbCgyMTAsIDgzJSwgNTMlLCAwLjAwKTsKICAtLXNoYWRvdy0yeGw6IDBweCAycHggMHB4IDBweCBoc2woMjEwLCA4MyUsIDUzJSwgMC4wMCk7CiAgLS10cmFja2luZy1ub3JtYWw6IDBlbTsKICAtLXNwYWNpbmc6IDAuMjVyZW07Cn0KCi5kYXJrIHsKICAtLWJhY2tncm91bmQ6IGhzbCgyMjIuMiwgODQlLCA0LjklKTsKICAtLWZvcmVncm91bmQ6IGhzbCgyMTAsIDQwJSwgOTglKTsKICAtLWNhcmQ6IGhzbCgyMjIuMiwgODQlLCA0LjklKTsKICAtLWNhcmQtZm9yZWdyb3VuZDogaHNsKDIxMCwgNDAlLCA5OCUpOwogIC0tcG9wb3ZlcjogaHNsKDIyMi4yLCA4NCUsIDQuOSUpOwogIC0tcG9wb3Zlci1mb3JlZ3JvdW5kOiBoc2woMjEwLCA0MCUsIDk4JSk7CiAgLS1wcmltYXJ5OiBoc2woMjEwLCA4MyUsIDUzJSk7CiAgLS1wcmltYXJ5LWZvcmVncm91bmQ6IGhzbCgyMjIuMiwgODQlLCA0LjklKTsKICAtLXNlY29uZGFyeTogaHNsKDIxNy4yLCAzMi42JSwgMTcuNSUpOwogIC0tc2Vjb25kYXJ5LWZvcmVncm91bmQ6IGhzbCgyMTAsIDQwJSwgOTglKTsKICAtLW11dGVkOiBoc2woMjE3LjIsIDMyLjYlLCAxNy41JSk7CiAgLS1tdXRlZC1mb3JlZ3JvdW5kOiBoc2woMjE1LCAyMC4yJSwgNjUuMSUpOwogIC0tYWNjZW50OiBoc2woMzYsIDEwMCUsIDUwJSk7CiAgLS1hY2NlbnQtZm9yZWdyb3VuZDogaHNsKDIyMi4yLCA4NCUsIDQuOSUpOwogIC0tZGVzdHJ1Y3RpdmU6IGhzbCgwLCA2Mi44JSwgMzAuNiUpOwogIC0tZGVzdHJ1Y3RpdmUtZm9yZWdyb3VuZDogaHNsKDIxMCwgNDAlLCA5OCUpOwogIC0tYm9yZGVyOiBoc2woMjE3LjIsIDMyLjYlLCAxNy41JSk7CiAgLS1pbnB1dDogaHNsKDIxNy4yLCAzMi42JSwgMTcuNSUpOwogIC0tcmluZzogaHNsKDIxMCwgODMlLCA1MyUpOwogIC0tY2hhcnQtMTogaHNsKDIxMCwgODMlLCA1MyUpOwogIC0tY2hhcnQtMjogaHNsKDE1OS43ODI2LCAxMDAlLCAzNi4wNzg0JSk7CiAgLS1jaGFydC0zOiBoc2woNDIuMDI5MCwgOTIuODI1MSUsIDU2LjI3NDUlKTsKICAtLWNoYXJ0LTQ6IGhzbCgxNDcuMTQyOSwgNzguNTA0NyUsIDQxLjk2MDglKTsKICAtLWNoYXJ0LTU6IGhzbCgzNDEuNDg5NCwgNzUuMjAwMCUsIDUwLjk4MDQlKTsKICAtLXNpZGViYXI6IGhzbCgyMjIuMiwgODQlLCA0LjklKTsKICAtLXNpZGViYXItZm9yZWdyb3VuZDogaHNsKDIxMCwgNDAlLCA5OCUpOwogIC0tc2lkZWJhci1wcmltYXJ5OiBoc2woMjEwLCA4MyUsIDUzJSk7CiAgLS1zaWRlYmFyLXByaW1hcnktZm9yZWdyb3VuZDogaHNsKDIyMi4yLCA4NCUsIDQuOSUpOwogIC0tc2lkZWJhci1hY2NlbnQ6IGhzbCgyMTcuMiwgMzIuNiUsIDE3LjUlKTsKICAtLXNpZGViYXItYWNjZW50LWZvcmVncm91bmQ6IGhzbCgyMTAsIDgzJSwgNTMlKTsKICAtLXNpZGViYXItYm9yZGVyOiBoc2woMjE3LjIsIDMyLjYlLCAxNy41JSk7CiAgLS1zaWRlYmFyLXJpbmc6IGhzbCgyMTAsIDgzJSwgNTMlKTsKICAtLWZvbnQtc2FuczogSW50ZXIsIHNhbnMtc2VyaWY7CiAgLS1mb250LXNlcmlmOiBHZW9yZ2lhLCBzZXJpZjsKICAtLWZvbnQtbW9ubzogTWVubG8sIG1vbm9zcGFjZTsKICAtLXJhZGl1czogMC41cmVtOwogIC0tc2hhZG93LTJ4czogMHB4IDJweCAwcHggMHB4IGhzbCgyMTAsIDgzJSwgNTMlLCAwLjAwKTsKICAtLXNoYWRvdy14czogMHB4IDJweCAwcHggMHB4IGhzbCgyMTAsIDgzJSwgNTMlLCAwLjAwKTsKICAtLXNoYWRvdy1zbTogMHB4IDJweCAwcHggMHB4IGhzbCgyMTAsIDgzJSwgNTMlLCAwLjAwKSwgMHB4IDFweCAycHggLTFweCBoc2woMjEwLCA4MyUsIDUzJSwgMC4wMCk7CiAgLS1zaGFkb3c6IDBweCAycHggMHB4IDBweCBoc2woMjEwLCA4MyUsIDUzJSwgMC4wMCksIDBweCAxcHggMnB4IC0xcHggaHNsKDIxMCwgODMlLCA1MyUsIDAuMDApOwogIC0tc2hhZG93LW1kOiAwcHggMnB4IDBweCAwcHggaHNsKDIxMCwgODMlLCA1MyUsIDAuMDApLCAwcHggMnB4IDRweCAtMXB4IGhzbCgyMTAsIDgzJSwgNTMlLCAwLjAwKTsKICAtLXNoYWRvdy1sZzogMHB4IDJweCAwcHggMHB4IGhzbCgyMTAsIDgzJSwgNTMlLCAwLjAwKSwgMHB4IDRweCA2cHggLTFweCBoc2woMjEwLCA4MyUsIDUzJSwgMC4wMCk7CiAgLS1zaGFkb3cteGw6IDBweCAycHggMHB4IDBweCBoc2woMjEwLCA4MyUsIDUzJSwgMC4wMCksIDBweCA4cHggMTBweCAtMXB4IGhzbCgyMTAsIDgzJSwgNTMlLCAwLjAwKTsKICAtLXNoYWRvdy0yeGw6IDBweCAycHggMHB4IDBweCBoc2woMjEwLCA4MyUsIDUzJSwgMC4wMCk7Cn0KCkBsYXllciBiYXNlIHsKICAqIHsKICAgIEBhcHBseSBib3JkZXItYm9yZGVyOwogIH0KCiAgYm9keSB7CiAgICBAYXBwbHkgZm9udC1zYW5zIGFudGlhbGlhc2VkIGJnLWJhY2tncm91bmQgdGV4dC1mb3JlZ3JvdW5kOwogIH0KfQoKLnNpZGViYXItc2hhZG93IHsKICBib3gtc2hhZG93OiA0cHggMCAxMnB4IHJnYmEoMCwgMCwgMCwgMC4xKTsKfQoKLnByb2Nlc3MtY2FyZCB7CiAgdHJhbnNpdGlvbjogYWxsIDAuMnMgZWFzZS1pbi1vdXQ7Cn0KCi5wcm9jZXNzLWNhcmQ6aG92ZXIgewogIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMnB4KTsKICBib3gtc2hhZG93OiAwIDhweCAyNXB4IHJnYmEoMCwgMCwgMCwgMC4xKTsKfQoKLmZhYiB7CiAgcG9zaXRpb246IGZpeGVkOwogIGJvdHRvbTogMnJlbTsKICByaWdodDogMnJlbTsKICB6LWluZGV4OiA1MDsKfQoKLm1vZGFsLWJhY2tkcm9wIHsKICBiYWNrZHJvcC1maWx0ZXI6IGJsdXIoNHB4KTsKfQo=
:FILE_61_END

:FILE_62_PATH
client/src/lib/authUtils.ts
:FILE_62_DATA
ZXhwb3J0IGZ1bmN0aW9uIGlzVW5hdXRob3JpemVkRXJyb3IoZXJyb3I6IEVycm9yKTogYm9vbGVhbiB7CiAgcmV0dXJuIC9eNDAxOiAuKlVuYXV0aG9yaXplZC8udGVzdChlcnJvci5tZXNzYWdlKTsKfQ==
:FILE_62_END

:FILE_63_PATH
client/src/lib/queryClient.ts
:FILE_63_DATA
aW1wb3J0IHsgUXVlcnlDbGllbnQsIFF1ZXJ5RnVuY3Rpb24gfSBmcm9tICJAdGFuc3RhY2svcmVhY3QtcXVlcnkiOwoKYXN5bmMgZnVuY3Rpb24gdGhyb3dJZlJlc05vdE9rKHJlczogUmVzcG9uc2UpIHsKICBpZiAoIXJlcy5vaykgewogICAgY29uc3QgdGV4dCA9IChhd2FpdCByZXMudGV4dCgpKSB8fCByZXMuc3RhdHVzVGV4dDsKICAgIHRocm93IG5ldyBFcnJvcihgJHtyZXMuc3RhdHVzfTogJHt0ZXh0fWApOwogIH0KfQoKZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGFwaVJlcXVlc3QoCiAgbWV0aG9kOiBzdHJpbmcsCiAgdXJsOiBzdHJpbmcsCiAgZGF0YT86IHVua25vd24gfCB1bmRlZmluZWQsCik6IFByb21pc2U8UmVzcG9uc2U+IHsKICBjb25zdCByZXMgPSBhd2FpdCBmZXRjaCh1cmwsIHsKICAgIG1ldGhvZCwKICAgIGhlYWRlcnM6IGRhdGEgPyB7ICJDb250ZW50LVR5cGUiOiAiYXBwbGljYXRpb24vanNvbiIgfSA6IHt9LAogICAgYm9keTogZGF0YSA/IEpTT04uc3RyaW5naWZ5KGRhdGEpIDogdW5kZWZpbmVkLAogICAgY3JlZGVudGlhbHM6ICJpbmNsdWRlIiwKICB9KTsKCiAgYXdhaXQgdGhyb3dJZlJlc05vdE9rKHJlcyk7CiAgcmV0dXJuIHJlczsKfQoKdHlwZSBVbmF1dGhvcml6ZWRCZWhhdmlvciA9ICJyZXR1cm5OdWxsIiB8ICJ0aHJvdyI7CmV4cG9ydCBjb25zdCBnZXRRdWVyeUZuOiA8VD4ob3B0aW9uczogewogIG9uNDAxOiBVbmF1dGhvcml6ZWRCZWhhdmlvcjsKfSkgPT4gUXVlcnlGdW5jdGlvbjxUPiA9CiAgKHsgb240MDE6IHVuYXV0aG9yaXplZEJlaGF2aW9yIH0pID0+CiAgYXN5bmMgKHsgcXVlcnlLZXkgfSkgPT4gewogICAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2gocXVlcnlLZXkuam9pbigiLyIpIGFzIHN0cmluZywgewogICAgICBjcmVkZW50aWFsczogImluY2x1ZGUiLAogICAgfSk7CgogICAgaWYgKHVuYXV0aG9yaXplZEJlaGF2aW9yID09PSAicmV0dXJuTnVsbCIgJiYgcmVzLnN0YXR1cyA9PT0gNDAxKSB7CiAgICAgIHJldHVybiBudWxsOwogICAgfQoKICAgIGF3YWl0IHRocm93SWZSZXNOb3RPayhyZXMpOwogICAgcmV0dXJuIGF3YWl0IHJlcy5qc29uKCk7CiAgfTsKCmV4cG9ydCBjb25zdCBxdWVyeUNsaWVudCA9IG5ldyBRdWVyeUNsaWVudCh7CiAgZGVmYXVsdE9wdGlvbnM6IHsKICAgIHF1ZXJpZXM6IHsKICAgICAgcXVlcnlGbjogZ2V0UXVlcnlGbih7IG9uNDAxOiAidGhyb3ciIH0pLAogICAgICByZWZldGNoSW50ZXJ2YWw6IGZhbHNlLAogICAgICByZWZldGNoT25XaW5kb3dGb2N1czogZmFsc2UsCiAgICAgIHN0YWxlVGltZTogSW5maW5pdHksCiAgICAgIHJldHJ5OiBmYWxzZSwKICAgIH0sCiAgICBtdXRhdGlvbnM6IHsKICAgICAgcmV0cnk6IGZhbHNlLAogICAgfSwKICB9LAp9KTsK
:FILE_63_END

:FILE_64_PATH
client/src/lib/utils.ts
:FILE_64_DATA
aW1wb3J0IHsgY2xzeCwgdHlwZSBDbGFzc1ZhbHVlIH0gZnJvbSAiY2xzeCIKaW1wb3J0IHsgdHdNZXJnZSB9IGZyb20gInRhaWx3aW5kLW1lcmdlIgoKZXhwb3J0IGZ1bmN0aW9uIGNuKC4uLmlucHV0czogQ2xhc3NWYWx1ZVtdKSB7CiAgcmV0dXJuIHR3TWVyZ2UoY2xzeChpbnB1dHMpKQp9Cg==
:FILE_64_END

:FILE_65_PATH
client/src/main.tsx
:FILE_65_DATA
aW1wb3J0IHsgY3JlYXRlUm9vdCB9IGZyb20gInJlYWN0LWRvbS9jbGllbnQiOwppbXBvcnQgQXBwIGZyb20gIi4vQXBwIjsKaW1wb3J0ICIuL2luZGV4LmNzcyI7CgpjcmVhdGVSb290KGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJyb290IikhKS5yZW5kZXIoPEFwcCAvPik7Cg==
:FILE_65_END

:FILE_66_PATH
client/src/pages/all-processes.tsx
:FILE_66_DATA

:FILE_66_END

:FILE_67_PATH
client/src/pages/balanced-scorecard.tsx
:FILE_67_DATA

:FILE_67_END

:FILE_68_PATH
client/src/pages/dashboard.tsx
:FILE_68_DATA

:FILE_68_END

:FILE_69_PATH
client/src/pages/element-detail.tsx
:FILE_69_DATA
aW1wb3J0IHsgdXNlRWZmZWN0IH0gZnJvbSAicmVhY3QiOwppbXBvcnQgeyB1c2VQYXJhbXMsIExpbmsgfSBmcm9tICJ3b3V0ZXIiOwppbXBvcnQgeyB1c2VBdXRoIH0gZnJvbSAiQC9ob29rcy91c2VBdXRoIjsKaW1wb3J0IHsgdXNlVG9hc3QgfSBmcm9tICJAL2hvb2tzL3VzZS10b2FzdCI7CmltcG9ydCB7IHVzZVF1ZXJ5IH0gZnJvbSAiQHRhbnN0YWNrL3JlYWN0LXF1ZXJ5IjsKaW1wb3J0IFNpZGViYXIgZnJvbSAiQC9jb21wb25lbnRzL3NpZGViYXIiOwppbXBvcnQgSGVhZGVyIGZyb20gIkAvY29tcG9uZW50cy9oZWFkZXIiOwppbXBvcnQgeyBCdXR0b24gfSBmcm9tICJAL2NvbXBvbmVudHMvdWkvYnV0dG9uIjsKaW1wb3J0IHsgQ2FyZCwgQ2FyZENvbnRlbnQsIENhcmRIZWFkZXIsIENhcmRUaXRsZSB9IGZyb20gIkAvY29tcG9uZW50cy91aS9jYXJkIjsKaW1wb3J0IHsgQmFkZ2UgfSBmcm9tICJAL2NvbXBvbmVudHMvdWkvYmFkZ2UiOwppbXBvcnQgeyBTZXBhcmF0b3IgfSBmcm9tICJAL2NvbXBvbmVudHMvdWkvc2VwYXJhdG9yIjsKaW1wb3J0IHsgaXNVbmF1dGhvcml6ZWRFcnJvciB9IGZyb20gIkAvbGliL2F1dGhVdGlscyI7CmltcG9ydCB7CiAgQXJyb3dMZWZ0LAogIFBsdXMsCiAgRm9sZGVyLAogIEZpbGVUZXh0LAogIENhbGVuZGFyLAogIFVzZXIsCiAgQWN0aXZpdHksCiAgRWRpdCwKICBEb3dubG9hZCwKICBCYXJDaGFydDMKfSBmcm9tICJsdWNpZGUtcmVhY3QiOwppbXBvcnQgTWluaVByb2Nlc3NGbG93IGZyb20gIkAvY29tcG9uZW50cy9taW5pLXByb2Nlc3MtZmxvdyI7CmltcG9ydCB7IE1pbmRNYXBUcmVlIH0gZnJvbSAiQC9jb21wb25lbnRzL21pbmQtbWFwLXRyZWUiOwppbXBvcnQgdHlwZSB7IE9lRWxlbWVudFdpdGhQcm9jZXNzZXMgfSBmcm9tICJAc2hhcmVkL3NjaGVtYSI7CgpleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBFbGVtZW50RGV0YWlsKCkgewogIGNvbnN0IHsgaWQgfSA9IHVzZVBhcmFtczx7IGlkOiBzdHJpbmcgfT4oKTsKICBjb25zdCB7IHRvYXN0IH0gPSB1c2VUb2FzdCgpOwogIGNvbnN0IHsgaXNBdXRoZW50aWNhdGVkLCBpc0xvYWRpbmcgfSA9IHVzZUF1dGgoKTsKCiAgLy8gUmVkaXJlY3QgdG8gaG9tZSBpZiBub3QgYXV0aGVudGljYXRlZAogIHVzZUVmZmVjdCgoKSA9PiB7CiAgICBpZiAoIWlzTG9hZGluZyAmJiAhaXNBdXRoZW50aWNhdGVkKSB7CiAgICAgIHRvYXN0KHsKICAgICAgICB0aXRsZTogIlVuYXV0aG9yaXplZCIsCiAgICAgICAgZGVzY3JpcHRpb246ICJZb3UgYXJlIGxvZ2dlZCBvdXQuIExvZ2dpbmcgaW4gYWdhaW4uLi4iLAogICAgICAgIHZhcmlhbnQ6ICJkZXN0cnVjdGl2ZSIsCiAgICAgIH0pOwogICAgICBzZXRUaW1lb3V0KCgpID0+IHsKICAgICAgICB3aW5kb3cubG9jYXRpb24uaHJlZiA9ICIvYXBpL2xvZ2luIjsKICAgICAgfSwgNTAwKTsKICAgICAgcmV0dXJuOwogICAgfQogIH0sIFtpc0F1dGhlbnRpY2F0ZWQsIGlzTG9hZGluZywgdG9hc3RdKTsKCiAgY29uc3QgeyBkYXRhOiBlbGVtZW50LCBpc0xvYWRpbmc6IGVsZW1lbnRMb2FkaW5nLCBlcnJvcjogZWxlbWVudEVycm9yIH0gPSB1c2VRdWVyeTxPZUVsZW1lbnRXaXRoUHJvY2Vzc2VzPih7CiAgICBxdWVyeUtleTogWyIvYXBpL29lLWVsZW1lbnRzIiwgaWRdLAogICAgZW5hYmxlZDogaXNBdXRoZW50aWNhdGVkICYmICEhaWQsCiAgfSk7CgogIC8vIEhhbmRsZSBlbGVtZW50IGVycm9yCiAgdXNlRWZmZWN0KCgpID0+IHsKICAgIGlmIChlbGVtZW50RXJyb3IpIHsKICAgICAgaWYgKGlzVW5hdXRob3JpemVkRXJyb3IoZWxlbWVudEVycm9yKSkgewogICAgICAgIHRvYXN0KHsKICAgICAgICAgIHRpdGxlOiAiVW5hdXRob3JpemVkIiwKICAgICAgICAgIGRlc2NyaXB0aW9uOiAiWW91IGFyZSBsb2dnZWQgb3V0LiBMb2dnaW5nIGluIGFnYWluLi4uIiwKICAgICAgICAgIHZhcmlhbnQ6ICJkZXN0cnVjdGl2ZSIsCiAgICAgICAgfSk7CiAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7CiAgICAgICAgICB3aW5kb3cubG9jYXRpb24uaHJlZiA9ICIvYXBpL2xvZ2luIjsKICAgICAgICB9LCA1MDApOwogICAgICAgIHJldHVybjsKICAgICAgfQogICAgICB0b2FzdCh7CiAgICAgICAgdGl0bGU6ICJFcnJvciIsCiAgICAgICAgZGVzY3JpcHRpb246ICJGYWlsZWQgdG8gbG9hZCBlbGVtZW50IGRldGFpbHMiLAogICAgICAgIHZhcmlhbnQ6ICJkZXN0cnVjdGl2ZSIsCiAgICAgIH0pOwogICAgfQogIH0sIFtlbGVtZW50RXJyb3IsIHRvYXN0XSk7CgogIGNvbnN0IGhhbmRsZUV4cG9ydFBERiA9IGFzeW5jICgpID0+IHsKICAgIGlmICghZWxlbWVudCkgcmV0dXJuOwogICAgCiAgICBjb25zdCB7IGpzUERGIH0gPSBhd2FpdCBpbXBvcnQoJ2pzcGRmJyk7CiAgICBjb25zdCBkb2MgPSBuZXcganNQREYoKTsKICAgIGxldCB5UG9zID0gMjA7CiAgICAKICAgIC8vIEhlbHBlciBmdW5jdGlvbiB0byBhZGQganVzdGlmaWVkIHRleHQgd2l0aCBiZXR0ZXIgb3ZlcmZsb3cgY29udHJvbAogICAgY29uc3QgYWRkSnVzdGlmaWVkVGV4dCA9ICh0ZXh0OiBzdHJpbmcsIHg6IG51bWJlciwgZm9udFNpemU6IG51bWJlciA9IDksIG1heFdpZHRoOiBudW1iZXIgPSAxNjUsIGluZGVudDogbnVtYmVyID0gMCkgPT4gewogICAgICBkb2Muc2V0Rm9udFNpemUoZm9udFNpemUpOwogICAgICBjb25zdCBhdmFpbGFibGVXaWR0aCA9IG1heFdpZHRoIC0gaW5kZW50OwogICAgICBjb25zdCBsaW5lcyA9IGRvYy5zcGxpdFRleHRUb1NpemUodGV4dCwgYXZhaWxhYmxlV2lkdGgpOwogICAgICAKICAgICAgbGluZXMuZm9yRWFjaCgobGluZTogc3RyaW5nLCBpbmRleDogbnVtYmVyKSA9PiB7CiAgICAgICAgLy8gU2ltcGxlIGxlZnQtYWxpZ25lZCB0ZXh0IHRvIHByZXZlbnQgb3ZlcmZsb3cKICAgICAgICBkb2MudGV4dChsaW5lLCB4ICsgaW5kZW50LCB5UG9zKTsKICAgICAgICB5UG9zICs9IGZvbnRTaXplICogMC42ICsgMTsKICAgICAgfSk7CiAgICAgIAogICAgICByZXR1cm4geVBvczsKICAgIH07CiAgICAKICAgIC8vIEhlbHBlciBmdW5jdGlvbiBmb3IgY2hhcHRlciBoZWFkaW5ncyB3aXRoIHNtYWxsZXIgZm9udHMKICAgIGNvbnN0IGFkZENoYXB0ZXJIZWFkaW5nID0gKHRpdGxlOiBzdHJpbmcsIGxldmVsOiBudW1iZXIgPSAxKSA9PiB7CiAgICAgIGNoZWNrTmV3UGFnZSgxNSk7CiAgICAgIHlQb3MgKz0gbGV2ZWwgPT09IDEgPyA4IDogNTsKICAgICAgCiAgICAgIGRvYy5zZXRUZXh0Q29sb3IoMCwgMCwgMCk7CiAgICAgIGRvYy5zZXRGb250KCdoZWx2ZXRpY2EnLCAnYm9sZCcpOwogICAgICBkb2Muc2V0Rm9udFNpemUobGV2ZWwgPT09IDEgPyAxMiA6IDEwKTsKICAgICAgZG9jLnRleHQodGl0bGUudG9VcHBlckNhc2UoKSwgMjAsIHlQb3MpOwogICAgICAKICAgICAgLy8gU2ltcGxlIHVuZGVybGluZSBmb3IgbWFpbiBoZWFkaW5ncwogICAgICBpZiAobGV2ZWwgPT09IDEpIHsKICAgICAgICBkb2Muc2V0TGluZVdpZHRoKDAuMyk7CiAgICAgICAgZG9jLmxpbmUoMjAsIHlQb3MgKyAxLCAyMCArIGRvYy5nZXRUZXh0V2lkdGgodGl0bGUudG9VcHBlckNhc2UoKSksIHlQb3MgKyAxKTsKICAgICAgfQogICAgICAKICAgICAgeVBvcyArPSBsZXZlbCA9PT0gMSA/IDYgOiA0OwogICAgfTsKICAgIAogICAgLy8gSGVscGVyIGZ1bmN0aW9uIHRvIGFkZCBuZXcgcGFnZSBpZiBuZWVkZWQKICAgIGNvbnN0IGNoZWNrTmV3UGFnZSA9IChyZXF1aXJlZFNwYWNlOiBudW1iZXIgPSAyMCkgPT4gewogICAgICBpZiAoeVBvcyArIHJlcXVpcmVkU3BhY2UgPiAyNzUpIHsKICAgICAgICBkb2MuYWRkUGFnZSgpOwogICAgICAgIHlQb3MgPSAyMDsKICAgICAgfQogICAgfTsKCiAgICAvLyBEb2N1bWVudCBUaXRsZSBQYWdlIHdpdGggc21hbGxlciBmb250cwogICAgZG9jLnNldFRleHRDb2xvcigwLCAwLCAwKTsKICAgIGRvYy5zZXRGb250KCdoZWx2ZXRpY2EnLCAnYm9sZCcpOwogICAgZG9jLnNldEZvbnRTaXplKDE0KTsKICAgIGRvYy50ZXh0KCdPUEVSQVRJT05BTCBFWENFTExFTkNFIEVMRU1FTlQnLCAxMDUsIDUwLCB7IGFsaWduOiAnY2VudGVyJyB9KTsKICAgIAogICAgZG9jLnNldEZvbnRTaXplKDE2KTsKICAgIGRvYy50ZXh0KGBFTEVNRU5UIE5vLiAke2VsZW1lbnQuZWxlbWVudE51bWJlcn1gLCAxMDUsIDY1LCB7IGFsaWduOiAnY2VudGVyJyB9KTsKICAgIAogICAgZG9jLnNldEZvbnRTaXplKDEyKTsKICAgIGRvYy5zZXRGb250KCdoZWx2ZXRpY2EnLCAnbm9ybWFsJyk7CiAgICBkb2MudGV4dChlbGVtZW50LnRpdGxlLnRvVXBwZXJDYXNlKCksIDEwNSwgODAsIHsgYWxpZ246ICdjZW50ZXInIH0pOwogICAgCiAgICAvLyBEb2N1bWVudCBpbmZvCiAgICBkb2Muc2V0Rm9udFNpemUoOSk7CiAgICBkb2MudGV4dChgR2VuZXJhdGVkOiAke25ldyBEYXRlKCkudG9Mb2NhbGVEYXRlU3RyaW5nKCl9YCwgMTA1LCAxMTAsIHsgYWxpZ246ICdjZW50ZXInIH0pOwogICAgZG9jLnRleHQoJ1dTTSBPcGVyYXRpb25hbCBFeGNlbGxlbmNlIEZyYW1ld29yaycsIDEwNSwgMTIwLCB7IGFsaWduOiAnY2VudGVyJyB9KTsKICAgIAogICAgLy8gU2ltcGxlIGxpbmUgc2VwYXJhdG9yCiAgICBkb2Muc2V0TGluZVdpZHRoKDAuNSk7CiAgICBkb2MubGluZSg1MCwgMTMwLCAxNjAsIDEzMCk7CiAgICAKICAgIGRvYy5hZGRQYWdlKCk7CiAgICB5UG9zID0gMjA7CgogICAgLy8gQ2hhcHRlciAxOiBFbGVtZW50IE92ZXJ2aWV3CiAgICBhZGRDaGFwdGVySGVhZGluZygnMS4gRUxFTUVOVCBPVkVSVklFVycsIDEpOwogICAgCiAgICBkb2Muc2V0VGV4dENvbG9yKDAsIDAsIDApOwogICAgZG9jLnNldEZvbnQoJ2hlbHZldGljYScsICdub3JtYWwnKTsKICAgIGRvYy5zZXRGb250U2l6ZSg5KTsKICAgIAogICAgYWRkSnVzdGlmaWVkVGV4dChgRWxlbWVudCBOdW1iZXI6ICR7ZWxlbWVudC5lbGVtZW50TnVtYmVyfWAsIDIwLCA5KTsKICAgIGFkZEp1c3RpZmllZFRleHQoYEVsZW1lbnQgVGl0bGU6ICR7ZWxlbWVudC50aXRsZX1gLCAyMCwgOSk7CiAgICBhZGRKdXN0aWZpZWRUZXh0KGBTdGF0dXM6ICR7ZWxlbWVudC5pc0FjdGl2ZSA/ICdBY3RpdmUnIDogJ0luYWN0aXZlJ31gLCAyMCwgOSk7CiAgICBhZGRKdXN0aWZpZWRUZXh0KGBUb3RhbCBBc3NvY2lhdGVkIFByb2Nlc3NlczogJHtlbGVtZW50LnByb2Nlc3Nlcz8ubGVuZ3RoIHx8IDB9YCwgMjAsIDkpOwogICAgeVBvcyArPSAzOwogICAgCiAgICBpZiAoZWxlbWVudC5kZXNjcmlwdGlvbikgewogICAgICBkb2Muc2V0Rm9udCgnaGVsdmV0aWNhJywgJ2JvbGQnKTsKICAgICAgYWRkSnVzdGlmaWVkVGV4dCgnRGVzY3JpcHRpb246JywgMjAsIDkpOwogICAgICBkb2Muc2V0Rm9udCgnaGVsdmV0aWNhJywgJ25vcm1hbCcpOwogICAgICBhZGRKdXN0aWZpZWRUZXh0KGVsZW1lbnQuZGVzY3JpcHRpb24sIDIwLCA5KTsKICAgICAgeVBvcyArPSAzOwogICAgfQogICAgCiAgICBpZiAoZWxlbWVudC5jcmVhdGVkQXQgfHwgZWxlbWVudC51cGRhdGVkQXQpIHsKICAgICAgZG9jLnNldEZvbnQoJ2hlbHZldGljYScsICdib2xkJyk7CiAgICAgIGFkZEp1c3RpZmllZFRleHQoJ1RpbWVsaW5lIEluZm9ybWF0aW9uOicsIDIwLCA5KTsKICAgICAgZG9jLnNldEZvbnQoJ2hlbHZldGljYScsICdub3JtYWwnKTsKICAgICAgCiAgICAgIGlmIChlbGVtZW50LmNyZWF0ZWRBdCkgewogICAgICAgIGFkZEp1c3RpZmllZFRleHQoYENyZWF0ZWQ6ICR7bmV3IERhdGUoZWxlbWVudC5jcmVhdGVkQXQpLnRvTG9jYWxlRGF0ZVN0cmluZygpfWAsIDIwLCA5KTsKICAgICAgfQogICAgICBpZiAoZWxlbWVudC51cGRhdGVkQXQpIHsKICAgICAgICBhZGRKdXN0aWZpZWRUZXh0KGBMYXN0IFVwZGF0ZWQ6ICR7bmV3IERhdGUoZWxlbWVudC51cGRhdGVkQXQpLnRvTG9jYWxlRGF0ZVN0cmluZygpfWAsIDIwLCA5KTsKICAgICAgfQogICAgICB5UG9zICs9IDU7CiAgICB9CgogICAgLy8gQ2hhcHRlciAyOiBBc3NvY2lhdGVkIFByb2Nlc3NlcwogICAgaWYgKGVsZW1lbnQucHJvY2Vzc2VzICYmIGVsZW1lbnQucHJvY2Vzc2VzLmxlbmd0aCA+IDApIHsKICAgICAgYWRkQ2hhcHRlckhlYWRpbmcoJzIuIEFTU09DSUFURUQgUFJPQ0VTU0VTJywgMSk7CiAgICAgIAogICAgICBkb2Muc2V0Rm9udCgnaGVsdmV0aWNhJywgJ25vcm1hbCcpOwogICAgICBhZGRKdXN0aWZpZWRUZXh0KGBUaGlzIGVsZW1lbnQgY29udGFpbnMgJHtlbGVtZW50LnByb2Nlc3Nlcy5sZW5ndGh9IGFzc29jaWF0ZWQgcHJvY2Vzc2VzIHRoYXQgZGVmaW5lIHRoZSBvcGVyYXRpb25hbCBwcm9jZWR1cmVzIGFuZCBzdGFuZGFyZHMuIEVhY2ggcHJvY2VzcyBpbmNsdWRlcyBkZXRhaWxlZCBzdGVwcywgcmVzcG9uc2liaWxpdGllcywgYW5kIHBlcmZvcm1hbmNlIG1lYXN1cmVzIHRvIGVuc3VyZSBjb25zaXN0ZW50IGV4ZWN1dGlvbiBhbmQgY29udGludW91cyBpbXByb3ZlbWVudC5gLCAyMCwgOSk7CiAgICAgIHlQb3MgKz0gNTsKICAgICAgCiAgICAgIGVsZW1lbnQucHJvY2Vzc2VzLmZvckVhY2goKHByb2Nlc3MsIGluZGV4KSA9PiB7CiAgICAgICAgY2hlY2tOZXdQYWdlKDQwKTsKICAgICAgICAKICAgICAgICAvLyBQcm9jZXNzIHN1YmhlYWRpbmcKICAgICAgICBhZGRDaGFwdGVySGVhZGluZyhgMi4ke2luZGV4ICsgMX0gJHtwcm9jZXNzLnByb2Nlc3NOdW1iZXJ9OiAke3Byb2Nlc3MubmFtZX1gLCAyKTsKICAgICAgICAKICAgICAgICAvLyBQcm9jZXNzIGRldGFpbHMKICAgICAgICBkb2Muc2V0Rm9udCgnaGVsdmV0aWNhJywgJ2JvbGQnKTsKICAgICAgICBhZGRKdXN0aWZpZWRUZXh0KCdQcm9jZXNzIEluZm9ybWF0aW9uOicsIDIwLCA5KTsKICAgICAgICAKICAgICAgICBkb2Muc2V0Rm9udCgnaGVsdmV0aWNhJywgJ25vcm1hbCcpOwogICAgICAgIGFkZEp1c3RpZmllZFRleHQoYFByb2Nlc3MgTnVtYmVyOiAke3Byb2Nlc3MucHJvY2Vzc051bWJlcn1gLCAyNSwgOCwgMTY1LCA1KTsKICAgICAgICBhZGRKdXN0aWZpZWRUZXh0KGBQcm9jZXNzIE5hbWU6ICR7cHJvY2Vzcy5uYW1lfWAsIDI1LCA4LCAxNjUsIDUpOwogICAgICAgIGFkZEp1c3RpZmllZFRleHQoYFN0YXR1czogJHtwcm9jZXNzLnN0YXR1cyB8fCAnRHJhZnQnfWAsIDI1LCA4LCAxNjUsIDUpOwogICAgICAgIGFkZEp1c3RpZmllZFRleHQoYFJldmlzaW9uOiAke3Byb2Nlc3MucmV2aXNpb24gfHwgMX1gLCAyNSwgOCwgMTY1LCA1KTsKICAgICAgICAKICAgICAgICBpZiAocHJvY2Vzcy5wcm9jZXNzT3duZXIpIHsKICAgICAgICAgIGFkZEp1c3RpZmllZFRleHQoYFByb2Nlc3MgT3duZXI6ICR7cHJvY2Vzcy5wcm9jZXNzT3duZXJ9YCwgMjUsIDgsIDE2NSwgNSk7CiAgICAgICAgfQogICAgICAgIAogICAgICAgIGlmIChwcm9jZXNzLmlzc3VlRGF0ZSkgewogICAgICAgICAgYWRkSnVzdGlmaWVkVGV4dChgSXNzdWUgRGF0ZTogJHtuZXcgRGF0ZShwcm9jZXNzLmlzc3VlRGF0ZSkudG9Mb2NhbGVEYXRlU3RyaW5nKCl9YCwgMjUsIDgsIDE2NSwgNSk7CiAgICAgICAgfQogICAgICAgIAogICAgICAgIHlQb3MgKz0gMzsKICAgICAgICAKICAgICAgICAvLyBQcm9jZXNzIGRlc2NyaXB0aW9uCiAgICAgICAgaWYgKHByb2Nlc3MuZGVzY3JpcHRpb24pIHsKICAgICAgICAgIGRvYy5zZXRGb250KCdoZWx2ZXRpY2EnLCAnYm9sZCcpOwogICAgICAgICAgYWRkSnVzdGlmaWVkVGV4dCgnUHJvY2VzcyBEZXNjcmlwdGlvbjonLCAyMCwgOSk7CiAgICAgICAgICBkb2Muc2V0Rm9udCgnaGVsdmV0aWNhJywgJ25vcm1hbCcpOwogICAgICAgICAgYWRkSnVzdGlmaWVkVGV4dChwcm9jZXNzLmRlc2NyaXB0aW9uLCAyNSwgOCwgMTY1LCA1KTsKICAgICAgICAgIHlQb3MgKz0gMzsKICAgICAgICB9CiAgICAgICAgCiAgICAgICAgLy8gRXhwZWN0YXRpb25zCiAgICAgICAgaWYgKHByb2Nlc3MuZXhwZWN0YXRpb25zKSB7CiAgICAgICAgICBkb2Muc2V0Rm9udCgnaGVsdmV0aWNhJywgJ2JvbGQnKTsKICAgICAgICAgIGFkZEp1c3RpZmllZFRleHQoJ0V4cGVjdGF0aW9uczonLCAyMCwgOSk7CiAgICAgICAgICBkb2Muc2V0Rm9udCgnaGVsdmV0aWNhJywgJ25vcm1hbCcpOwogICAgICAgICAgYWRkSnVzdGlmaWVkVGV4dChwcm9jZXNzLmV4cGVjdGF0aW9ucywgMjUsIDgsIDE2NSwgNSk7CiAgICAgICAgICB5UG9zICs9IDM7CiAgICAgICAgfQogICAgICAgIAogICAgICAgIC8vIFJlc3BvbnNpYmlsaXRpZXMKICAgICAgICBpZiAocHJvY2Vzcy5yZXNwb25zaWJpbGl0aWVzKSB7CiAgICAgICAgICBkb2Muc2V0Rm9udCgnaGVsdmV0aWNhJywgJ2JvbGQnKTsKICAgICAgICAgIGFkZEp1c3RpZmllZFRleHQoJ1Jlc3BvbnNpYmlsaXRpZXM6JywgMjAsIDkpOwogICAgICAgICAgZG9jLnNldEZvbnQoJ2hlbHZldGljYScsICdub3JtYWwnKTsKICAgICAgICAgIGFkZEp1c3RpZmllZFRleHQocHJvY2Vzcy5yZXNwb25zaWJpbGl0aWVzLCAyNSwgOCwgMTY1LCA1KTsKICAgICAgICAgIHlQb3MgKz0gMzsKICAgICAgICB9CiAgICAgICAgCiAgICAgICAgLy8gRGV0YWlsZWQgUHJvY2VzcyBTdGVwcyAoSW5kaXZpZHVhbCBTdGVwcykKICAgICAgICBpZiAocHJvY2Vzcy5zdGVwcyAmJiBwcm9jZXNzLnN0ZXBzLmxlbmd0aCA+IDApIHsKICAgICAgICAgIGNoZWNrTmV3UGFnZSgzMCk7CiAgICAgICAgICBkb2Muc2V0Rm9udCgnaGVsdmV0aWNhJywgJ2JvbGQnKTsKICAgICAgICAgIGFkZEp1c3RpZmllZFRleHQoYERldGFpbGVkIFByb2Nlc3MgU3RlcHMgKCR7cHJvY2Vzcy5zdGVwcy5sZW5ndGh9IHN0ZXBzKTpgLCAyMCwgOSk7CiAgICAgICAgICB5UG9zICs9IDI7CiAgICAgICAgICAKICAgICAgICAgIHByb2Nlc3Muc3RlcHMuZm9yRWFjaCgoc3RlcCkgPT4gewogICAgICAgICAgICBjaGVja05ld1BhZ2UoMjUpOwogICAgICAgICAgICAKICAgICAgICAgICAgZG9jLnNldEZvbnQoJ2hlbHZldGljYScsICdib2xkJyk7CiAgICAgICAgICAgIGFkZEp1c3RpZmllZFRleHQoYFN0ZXAgJHtzdGVwLnN0ZXBOdW1iZXJ9OiAke3N0ZXAuc3RlcE5hbWV9YCwgMjUsIDgsIDE2NSwgNSk7CiAgICAgICAgICAgIAogICAgICAgICAgICBkb2Muc2V0Rm9udCgnaGVsdmV0aWNhJywgJ25vcm1hbCcpOwogICAgICAgICAgICAKICAgICAgICAgICAgaWYgKHN0ZXAuc3RlcERldGFpbHMpIHsKICAgICAgICAgICAgICBhZGRKdXN0aWZpZWRUZXh0KGBEZXRhaWxzOiAke3N0ZXAuc3RlcERldGFpbHN9YCwgMzAsIDgsIDE2NSwgMTApOwogICAgICAgICAgICB9CiAgICAgICAgICAgIAogICAgICAgICAgICBpZiAoc3RlcC5yZXNwb25zaWJpbGl0aWVzKSB7CiAgICAgICAgICAgICAgYWRkSnVzdGlmaWVkVGV4dChgUmVzcG9uc2liaWxpdGllczogJHtzdGVwLnJlc3BvbnNpYmlsaXRpZXN9YCwgMzAsIDgsIDE2NSwgMTApOwogICAgICAgICAgICB9CiAgICAgICAgICAgIAogICAgICAgICAgICBpZiAoc3RlcC5yZWZlcmVuY2VzKSB7CiAgICAgICAgICAgICAgYWRkSnVzdGlmaWVkVGV4dChgUmVmZXJlbmNlczogJHtzdGVwLnJlZmVyZW5jZXN9YCwgMzAsIDgsIDE2NSwgMTApOwogICAgICAgICAgICB9CiAgICAgICAgICAgIAogICAgICAgICAgICB5UG9zICs9IDI7CiAgICAgICAgICB9KTsKICAgICAgICAgIHlQb3MgKz0gMzsKICAgICAgICB9CiAgICAgICAgCiAgICAgICAgLy8gUHJvY2VzcyBTdGVwcyBDb250ZW50IChHZW5lcmFsIGNvbnRlbnQpCiAgICAgICAgaWYgKHByb2Nlc3MucHJvY2Vzc1N0ZXBzQ29udGVudCkgewogICAgICAgICAgZG9jLnNldEZvbnQoJ2hlbHZldGljYScsICdib2xkJyk7CiAgICAgICAgICBhZGRKdXN0aWZpZWRUZXh0KCdQcm9jZXNzIFN0ZXBzIE92ZXJ2aWV3OicsIDIwLCA5KTsKICAgICAgICAgIGRvYy5zZXRGb250KCdoZWx2ZXRpY2EnLCAnbm9ybWFsJyk7CiAgICAgICAgICBhZGRKdXN0aWZpZWRUZXh0KHByb2Nlc3MucHJvY2Vzc1N0ZXBzQ29udGVudCwgMjUsIDgsIDE2NSwgNSk7CiAgICAgICAgICB5UG9zICs9IDM7CiAgICAgICAgfQogICAgICAgIAogICAgICAgIC8vIFBlcmZvcm1hbmNlIE1lYXN1cmVzIE92ZXJ2aWV3CiAgICAgICAgaWYgKHByb2Nlc3MucGVyZm9ybWFuY2VNZWFzdXJlQ29udGVudCkgewogICAgICAgICAgY2hlY2tOZXdQYWdlKDIwKTsKICAgICAgICAgIGRvYy5zZXRGb250KCdoZWx2ZXRpY2EnLCAnYm9sZCcpOwogICAgICAgICAgYWRkSnVzdGlmaWVkVGV4dCgnUGVyZm9ybWFuY2UgTWVhc3VyZXMgT3ZlcnZpZXc6JywgMjAsIDkpOwogICAgICAgICAgZG9jLnNldEZvbnQoJ2hlbHZldGljYScsICdub3JtYWwnKTsKICAgICAgICAgIGFkZEp1c3RpZmllZFRleHQocHJvY2Vzcy5wZXJmb3JtYW5jZU1lYXN1cmVDb250ZW50LCAyNSwgOCwgMTY1LCA1KTsKICAgICAgICAgIHlQb3MgKz0gMzsKICAgICAgICB9CgogICAgICAgIC8vIEluZGl2aWR1YWwgUGVyZm9ybWFuY2UgTWVhc3VyZXMKICAgICAgICBpZiAocHJvY2Vzcy5wZXJmb3JtYW5jZU1lYXN1cmVzICYmIHByb2Nlc3MucGVyZm9ybWFuY2VNZWFzdXJlcy5sZW5ndGggPiAwKSB7CiAgICAgICAgICBjaGVja05ld1BhZ2UoMzApOwogICAgICAgICAgZG9jLnNldEZvbnQoJ2hlbHZldGljYScsICdib2xkJyk7CiAgICAgICAgICBhZGRKdXN0aWZpZWRUZXh0KGBQZXJmb3JtYW5jZSBNZWFzdXJlcyAoJHtwcm9jZXNzLnBlcmZvcm1hbmNlTWVhc3VyZXMubGVuZ3RofSBtZWFzdXJlcyk6YCwgMjAsIDkpOwogICAgICAgICAgeVBvcyArPSAyOwogICAgICAgICAgCiAgICAgICAgICBwcm9jZXNzLnBlcmZvcm1hbmNlTWVhc3VyZXMuZm9yRWFjaCgobWVhc3VyZSwgbWVhc3VyZUluZGV4KSA9PiB7CiAgICAgICAgICAgIGNoZWNrTmV3UGFnZSgyMCk7CiAgICAgICAgICAgIAogICAgICAgICAgICBkb2Muc2V0Rm9udCgnaGVsdmV0aWNhJywgJ2JvbGQnKTsKICAgICAgICAgICAgYWRkSnVzdGlmaWVkVGV4dChgJHttZWFzdXJlSW5kZXggKyAxfS4gJHttZWFzdXJlLm1lYXN1cmVOYW1lfWAsIDI1LCA4LCAxNjUsIDUpOwogICAgICAgICAgICAKICAgICAgICAgICAgZG9jLnNldEZvbnQoJ2hlbHZldGljYScsICdub3JtYWwnKTsKICAgICAgICAgICAgCiAgICAgICAgICAgIGlmIChtZWFzdXJlLmZvcm11bGEpIHsKICAgICAgICAgICAgICBhZGRKdXN0aWZpZWRUZXh0KGBGb3JtdWxhOiAke21lYXN1cmUuZm9ybXVsYX1gLCAzMCwgOCwgMTY1LCAxMCk7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgCiAgICAgICAgICAgIGlmIChtZWFzdXJlLnRhcmdldCkgewogICAgICAgICAgICAgIGFkZEp1c3RpZmllZFRleHQoYFRhcmdldDogJHttZWFzdXJlLnRhcmdldH1gLCAzMCwgOCwgMTY1LCAxMCk7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgCiAgICAgICAgICAgIGlmIChtZWFzdXJlLmZyZXF1ZW5jeSkgewogICAgICAgICAgICAgIGFkZEp1c3RpZmllZFRleHQoYEZyZXF1ZW5jeTogJHttZWFzdXJlLmZyZXF1ZW5jeX1gLCAzMCwgOCwgMTY1LCAxMCk7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgCiAgICAgICAgICAgIGlmIChtZWFzdXJlLnNvdXJjZSkgewogICAgICAgICAgICAgIGFkZEp1c3RpZmllZFRleHQoYFNvdXJjZTogJHttZWFzdXJlLnNvdXJjZX1gLCAzMCwgOCwgMTY1LCAxMCk7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgCiAgICAgICAgICAgIHlQb3MgKz0gMjsKICAgICAgICAgIH0pOwogICAgICAgICAgeVBvcyArPSAzOwogICAgICAgIH0KICAgICAgICAKICAgICAgICAvLyBBZGRpdGlvbmFsIHByb2Nlc3MgZmllbGRzCiAgICAgICAgaWYgKHByb2Nlc3MucHJvY2Vzc0Zsb3dDb250ZW50KSB7CiAgICAgICAgICBkb2Muc2V0Rm9udCgnaGVsdmV0aWNhJywgJ2JvbGQnKTsKICAgICAgICAgIGFkZEp1c3RpZmllZFRleHQoJ1Byb2Nlc3MgRmxvdzonLCAyMCwgOSk7CiAgICAgICAgICBkb2Muc2V0Rm9udCgnaGVsdmV0aWNhJywgJ25vcm1hbCcpOwogICAgICAgICAgYWRkSnVzdGlmaWVkVGV4dChwcm9jZXNzLnByb2Nlc3NGbG93Q29udGVudCwgMjUsIDgsIDE2NSwgNSk7CiAgICAgICAgICB5UG9zICs9IDM7CiAgICAgICAgfQogICAgICAgIAogICAgICAgIGlmIChwcm9jZXNzLnJlc291cmNlUmVxdWlyZW1lbnRzKSB7CiAgICAgICAgICBkb2Muc2V0Rm9udCgnaGVsdmV0aWNhJywgJ2JvbGQnKTsKICAgICAgICAgIGFkZEp1c3RpZmllZFRleHQoJ1Jlc291cmNlIFJlcXVpcmVtZW50czonLCAyMCwgOSk7CiAgICAgICAgICBkb2Muc2V0Rm9udCgnaGVsdmV0aWNhJywgJ25vcm1hbCcpOwogICAgICAgICAgYWRkSnVzdGlmaWVkVGV4dChwcm9jZXNzLnJlc291cmNlUmVxdWlyZW1lbnRzLCAyNSwgOCwgMTY1LCA1KTsKICAgICAgICAgIHlQb3MgKz0gMzsKICAgICAgICB9CiAgICAgICAgCiAgICAgICAgaWYgKHByb2Nlc3Mucmlza0NvbnNpZGVyYXRpb25zKSB7CiAgICAgICAgICBkb2Muc2V0Rm9udCgnaGVsdmV0aWNhJywgJ2JvbGQnKTsKICAgICAgICAgIGFkZEp1c3RpZmllZFRleHQoJ1Jpc2sgQ29uc2lkZXJhdGlvbnM6JywgMjAsIDkpOwogICAgICAgICAgZG9jLnNldEZvbnQoJ2hlbHZldGljYScsICdub3JtYWwnKTsKICAgICAgICAgIGFkZEp1c3RpZmllZFRleHQocHJvY2Vzcy5yaXNrQ29uc2lkZXJhdGlvbnMsIDI1LCA4LCAxNjUsIDUpOwogICAgICAgICAgeVBvcyArPSAzOwogICAgICAgIH0KICAgICAgICAKICAgICAgICB5UG9zICs9IDg7IC8vIFJlZHVjZWQgc3BhY2UgYmV0d2VlbiBwcm9jZXNzZXMKICAgICAgfSk7CiAgICB9CgogICAgLy8gRm9vdGVyIGZvciBhbGwgcGFnZXMKICAgIGNvbnN0IHBhZ2VDb3VudCA9IChkb2MgYXMgYW55KS5nZXROdW1iZXJPZlBhZ2VzKCk7CiAgICBmb3IgKGxldCBpID0gMTsgaSA8PSBwYWdlQ291bnQ7IGkrKykgewogICAgICBkb2Muc2V0UGFnZShpKTsKICAgICAgCiAgICAgIC8vIFNpbXBsZSBmb290ZXIgbGluZQogICAgICBkb2Muc2V0TGluZVdpZHRoKDAuMyk7CiAgICAgIGRvYy5zZXREcmF3Q29sb3IoMCwgMCwgMCk7CiAgICAgIGRvYy5saW5lKDIwLCAyODUsIDE5MCwgMjg1KTsKICAgICAgCiAgICAgIC8vIEZvb3RlciB0ZXh0CiAgICAgIGRvYy5zZXRUZXh0Q29sb3IoMCwgMCwgMCk7CiAgICAgIGRvYy5zZXRGb250KCdoZWx2ZXRpY2EnLCAnbm9ybWFsJyk7CiAgICAgIGRvYy5zZXRGb250U2l6ZSg3KTsKICAgICAgZG9jLnRleHQoYE9FIEVsZW1lbnQgJHtlbGVtZW50LmVsZW1lbnROdW1iZXJ9IC0gJHtlbGVtZW50LnRpdGxlfWAsIDIwLCAyOTIpOwogICAgICBkb2MudGV4dChgUGFnZSAke2l9IG9mICR7cGFnZUNvdW50fWAsIDE5MCwgMjkyLCB7IGFsaWduOiAncmlnaHQnIH0pOwogICAgICBkb2MudGV4dChgR2VuZXJhdGVkOiAke25ldyBEYXRlKCkudG9Mb2NhbGVEYXRlU3RyaW5nKCl9YCwgMTA1LCAyOTIsIHsgYWxpZ246ICdjZW50ZXInIH0pOwogICAgfQoKICAgIC8vIFNhdmUgdGhlIFBERgogICAgZG9jLnNhdmUoYE9FLUVsZW1lbnQtJHtlbGVtZW50LmVsZW1lbnROdW1iZXJ9LSR7ZWxlbWVudC50aXRsZS5yZXBsYWNlKC9bXmEtekEtWjAtOV0vZywgJy0nKX0ucGRmYCk7CiAgICAKICAgIHRvYXN0KHsKICAgICAgdGl0bGU6ICJFeHBvcnQgU3VjY2Vzc2Z1bCIsCiAgICAgIGRlc2NyaXB0aW9uOiAiRWxlbWVudCByZXBvcnQgaGFzIGJlZW4gZXhwb3J0ZWQgYXMgUERGIiwKICAgIH0pOwogIH07CgogIGlmIChpc0xvYWRpbmcgfHwgKCFpc0F1dGhlbnRpY2F0ZWQgJiYgIWlzTG9hZGluZykpIHsKICAgIHJldHVybiAoCiAgICAgIDxkaXYgY2xhc3NOYW1lPSJtaW4taC1zY3JlZW4gZmxleCBpdGVtcy1jZW50ZXIganVzdGlmeS1jZW50ZXIiPgogICAgICAgIDxkaXYgY2xhc3NOYW1lPSJ0ZXh0LWNlbnRlciI+CiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0iYW5pbWF0ZS1zcGluIHJvdW5kZWQtZnVsbCBoLTggdy04IGJvcmRlci1iLTIgYm9yZGVyLXByaW1hcnkgbXgtYXV0byBtYi00Ij48L2Rpdj4KICAgICAgICAgIDxwIGNsYXNzTmFtZT0idGV4dC1tdXRlZC1mb3JlZ3JvdW5kIj5Mb2FkaW5nLi4uPC9wPgogICAgICAgIDwvZGl2PgogICAgICA8L2Rpdj4KICAgICk7CiAgfQoKICBpZiAoZWxlbWVudExvYWRpbmcpIHsKICAgIHJldHVybiAoCiAgICAgIDxkaXYgY2xhc3NOYW1lPSJtaW4taC1zY3JlZW4gZmxleCBiZy1iYWNrZ3JvdW5kIj4KICAgICAgICA8U2lkZWJhciAvPgogICAgICAgIDxtYWluIGNsYXNzTmFtZT0iZmxleC0xIG92ZXJmbG93LWF1dG8iPgogICAgICAgICAgPEhlYWRlciAvPgogICAgICAgICAgPGRpdiBjbGFzc05hbWU9InAtNiI+CiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSJhbmltYXRlLXB1bHNlIj4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0iaC04IGJnLW11dGVkIHJvdW5kZWQgbWItNCB3LTEvMyI+PC9kaXY+CiAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9ImgtNiBiZy1tdXRlZCByb3VuZGVkIG1iLTYgdy0xLzIiPjwvZGl2PgogICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSJncmlkIGdyaWQtY29scy0xIGxnOmdyaWQtY29scy0zIGdhcC02Ij4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSJsZzpjb2wtc3Bhbi0yIHNwYWNlLXktNiI+CiAgICAgICAgICAgICAgICAgIHtbLi4uQXJyYXkoMyldLm1hcCgoXywgaSkgPT4gKAogICAgICAgICAgICAgICAgICAgIDxkaXYga2V5PXtpfSBjbGFzc05hbWU9ImgtNDggYmctbXV0ZWQgcm91bmRlZC1sZyI+PC9kaXY+CiAgICAgICAgICAgICAgICAgICkpfQogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0ic3BhY2UteS02Ij4KICAgICAgICAgICAgICAgICAge1suLi5BcnJheSgyKV0ubWFwKChfLCBpKSA9PiAoCiAgICAgICAgICAgICAgICAgICAgPGRpdiBrZXk9e2l9IGNsYXNzTmFtZT0iaC0zMiBiZy1tdXRlZCByb3VuZGVkLWxnIj48L2Rpdj4KICAgICAgICAgICAgICAgICAgKSl9CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L21haW4+CiAgICAgIDwvZGl2PgogICAgKTsKICB9CgogIGlmICghZWxlbWVudCkgewogICAgcmV0dXJuICgKICAgICAgPGRpdiBjbGFzc05hbWU9Im1pbi1oLXNjcmVlbiBmbGV4IGJnLWJhY2tncm91bmQiPgogICAgICAgIDxTaWRlYmFyIC8+CiAgICAgICAgPG1haW4gY2xhc3NOYW1lPSJmbGV4LTEgb3ZlcmZsb3ctYXV0byI+CiAgICAgICAgICA8SGVhZGVyIC8+CiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0icC02Ij4KICAgICAgICAgICAgPENhcmQ+CiAgICAgICAgICAgICAgPENhcmRDb250ZW50IGNsYXNzTmFtZT0icC04IHRleHQtY2VudGVyIj4KICAgICAgICAgICAgICAgIDxGb2xkZXIgY2xhc3NOYW1lPSJ3LTEyIGgtMTIgdGV4dC1tdXRlZC1mb3JlZ3JvdW5kIG14LWF1dG8gbWItNCIgLz4KICAgICAgICAgICAgICAgIDxoMyBjbGFzc05hbWU9InRleHQtbGcgZm9udC1zZW1pYm9sZCBtYi0yIj5FbGVtZW50IE5vdCBGb3VuZDwvaDM+CiAgICAgICAgICAgICAgICA8cCBjbGFzc05hbWU9InRleHQtbXV0ZWQtZm9yZWdyb3VuZCBtYi00Ij4KICAgICAgICAgICAgICAgICAgVGhlIHJlcXVlc3RlZCBPRSBlbGVtZW50IGNvdWxkIG5vdCBiZSBmb3VuZCBvciB5b3UgZG9uJ3QgaGF2ZSBwZXJtaXNzaW9uIHRvIHZpZXcgaXQuCiAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICA8QnV0dG9uIGFzQ2hpbGQgZGF0YS10ZXN0aWQ9ImJ1dHRvbi1iYWNrLXRvLWRhc2hib2FyZCI+CiAgICAgICAgICAgICAgICAgIDxMaW5rIGhyZWY9Ii8iPgogICAgICAgICAgICAgICAgICAgIDxBcnJvd0xlZnQgY2xhc3NOYW1lPSJ3LTQgaC00IG1yLTIiIC8+CiAgICAgICAgICAgICAgICAgICAgQmFjayB0byBEYXNoYm9hcmQKICAgICAgICAgICAgICAgICAgPC9MaW5rPgogICAgICAgICAgICAgICAgPC9CdXR0b24+CiAgICAgICAgICAgICAgPC9DYXJkQ29udGVudD4KICAgICAgICAgICAgPC9DYXJkPgogICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9tYWluPgogICAgICA8L2Rpdj4KICAgICk7CiAgfQoKICBjb25zdCBnZXRTdGF0dXNDb2xvciA9IChzdGF0dXM6IHN0cmluZykgPT4gewogICAgc3dpdGNoIChzdGF0dXMpIHsKICAgICAgY2FzZSAnYWN0aXZlJzogcmV0dXJuICdiZy1ncmVlbi0xMDAgdGV4dC1ncmVlbi04MDAnOwogICAgICBjYXNlICdyZXZpZXcnOiByZXR1cm4gJ2JnLXllbGxvdy0xMDAgdGV4dC15ZWxsb3ctODAwJzsKICAgICAgY2FzZSAnZHJhZnQnOiByZXR1cm4gJ2JnLWdyYXktMTAwIHRleHQtZ3JheS04MDAnOwogICAgICBjYXNlICdhcmNoaXZlZCc6IHJldHVybiAnYmctcmVkLTEwMCB0ZXh0LXJlZC04MDAnOwogICAgICBkZWZhdWx0OiByZXR1cm4gJ2JnLWJsdWUtMTAwIHRleHQtYmx1ZS04MDAnOwogICAgfQogIH07CgogIHJldHVybiAoCiAgICA8ZGl2IGNsYXNzTmFtZT0ibWluLWgtc2NyZWVuIGZsZXggYmctYmFja2dyb3VuZCI+CiAgICAgIDxTaWRlYmFyIC8+CiAgICAgIAogICAgICA8bWFpbiBjbGFzc05hbWU9ImZsZXgtMSBvdmVyZmxvdy1hdXRvIj4KICAgICAgICA8SGVhZGVyIC8+CiAgICAgICAgCiAgICAgICAgPGRpdiBjbGFzc05hbWU9InAtNiI+CiAgICAgICAgICB7LyogSGVhZGVyIFNlY3Rpb24gKi99CiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0iZmxleCBpdGVtcy1jZW50ZXIganVzdGlmeS1iZXR3ZWVuIG1iLTYiPgogICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0iZmxleCBpdGVtcy1jZW50ZXIgc3BhY2UteC00Ij4KICAgICAgICAgICAgICA8QnV0dG9uIHZhcmlhbnQ9Imdob3N0IiBzaXplPSJzbSIgYXNDaGlsZCBkYXRhLXRlc3RpZD0iYnV0dG9uLWJhY2siPgogICAgICAgICAgICAgICAgPExpbmsgaHJlZj0iLyI+CiAgICAgICAgICAgICAgICAgIDxBcnJvd0xlZnQgY2xhc3NOYW1lPSJ3LTQgaC00IG1yLTIiIC8+CiAgICAgICAgICAgICAgICAgIEJhY2sKICAgICAgICAgICAgICAgIDwvTGluaz4KICAgICAgICAgICAgICA8L0J1dHRvbj4KICAgICAgICAgICAgICA8U2VwYXJhdG9yIG9yaWVudGF0aW9uPSJ2ZXJ0aWNhbCIgY2xhc3NOYW1lPSJoLTYiIC8+CiAgICAgICAgICAgICAgPGRpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSJmbGV4IGl0ZW1zLWNlbnRlciBzcGFjZS14LTMgbWItMiI+CiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSJ3LTEwIGgtMTAgcm91bmRlZC1sZyBmbGV4IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWNlbnRlciB0ZXh0LTJ4bCIgc3R5bGU9e3sgYmFja2dyb3VuZENvbG9yOiBlbGVtZW50LmNvbG9yIHx8ICcjM0I4MkY2JyB9fT4KICAgICAgICAgICAgICAgICAgICB7ZWxlbWVudC5pY29ufQogICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgPGgxIGNsYXNzTmFtZT0idGV4dC0yeGwgZm9udC1ib2xkIiBkYXRhLXRlc3RpZD0iZWxlbWVudC10aXRsZSI+CiAgICAgICAgICAgICAgICAgICAgT0UgRWxlbWVudCBOby4ge2VsZW1lbnQuZWxlbWVudE51bWJlcn06IHtlbGVtZW50LnRpdGxlfQogICAgICAgICAgICAgICAgICA8L2gxPgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0iZmxleCBpdGVtcy1jZW50ZXIgc3BhY2UteC00IHRleHQtc20gdGV4dC1tdXRlZC1mb3JlZ3JvdW5kIj4KICAgICAgICAgICAgICAgICAgPHNwYW4gZGF0YS10ZXN0aWQ9ImVsZW1lbnQtcHJvY2Vzc2VzLWNvdW50Ij4KICAgICAgICAgICAgICAgICAgICB7ZWxlbWVudC5wcm9jZXNzZXM/Lmxlbmd0aCB8fCAwfSBQcm9jZXNzeyhlbGVtZW50LnByb2Nlc3Nlcz8ubGVuZ3RoIHx8IDApICE9PSAxID8gJ2VzJyA6ICcnfQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuPuKAojwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPEJhZGdlIHZhcmlhbnQ9e2VsZW1lbnQuaXNBY3RpdmUgPyAiZGVmYXVsdCIgOiAic2Vjb25kYXJ5In0gZGF0YS10ZXN0aWQ9ImVsZW1lbnQtc3RhdHVzIj4KICAgICAgICAgICAgICAgICAgICB7ZWxlbWVudC5pc0FjdGl2ZSA/ICdBY3RpdmUnIDogJ0luYWN0aXZlJ30KICAgICAgICAgICAgICAgICAgPC9CYWRnZT4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgCiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSJmbGV4IGl0ZW1zLWNlbnRlciBzcGFjZS14LTMiPgogICAgICAgICAgICAgIDxCdXR0b24gdmFyaWFudD0ib3V0bGluZSIgc2l6ZT0ic20iIGFzQ2hpbGQgZGF0YS10ZXN0aWQ9ImJ1dHRvbi1lZGl0LWVsZW1lbnQiPgogICAgICAgICAgICAgICAgPExpbmsgaHJlZj17YC9lbGVtZW50LyR7ZWxlbWVudC5pZH0vZWRpdGB9PgogICAgICAgICAgICAgICAgICA8RWRpdCBjbGFzc05hbWU9InctNCBoLTQgbXItMiIgLz4KICAgICAgICAgICAgICAgICAgRWRpdCBFbGVtZW50CiAgICAgICAgICAgICAgICA8L0xpbms+CiAgICAgICAgICAgICAgPC9CdXR0b24+CiAgICAgICAgICAgICAgPEJ1dHRvbiAKICAgICAgICAgICAgICAgIHZhcmlhbnQ9Im91dGxpbmUiIAogICAgICAgICAgICAgICAgc2l6ZT0ic20iIAogICAgICAgICAgICAgICAgb25DbGljaz17aGFuZGxlRXhwb3J0UERGfQogICAgICAgICAgICAgICAgZGF0YS10ZXN0aWQ9ImJ1dHRvbi1leHBvcnQiCiAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgPERvd25sb2FkIGNsYXNzTmFtZT0idy00IGgtNCBtci0yIiAvPgogICAgICAgICAgICAgICAgRXhwb3J0IFJlcG9ydAogICAgICAgICAgICAgIDwvQnV0dG9uPgogICAgICAgICAgICAgIDxCdXR0b24gc2l6ZT0ic20iIGFzQ2hpbGQgZGF0YS10ZXN0aWQ9ImJ1dHRvbi1jcmVhdGUtcHJvY2VzcyI+CiAgICAgICAgICAgICAgICA8TGluayBocmVmPXtgL2NyZWF0ZS1wcm9jZXNzP2VsZW1lbnRJZD0ke2VsZW1lbnQuaWR9YH0+CiAgICAgICAgICAgICAgICAgIDxQbHVzIGNsYXNzTmFtZT0idy00IGgtNCBtci0yIiAvPgogICAgICAgICAgICAgICAgICBDcmVhdGUgUHJvY2VzcwogICAgICAgICAgICAgICAgPC9MaW5rPgogICAgICAgICAgICAgIDwvQnV0dG9uPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSJncmlkIGdyaWQtY29scy0xIGxnOmdyaWQtY29scy0zIGdhcC02Ij4KICAgICAgICAgICAgey8qIE1haW4gQ29udGVudCAqL30KICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9ImxnOmNvbC1zcGFuLTIgc3BhY2UteS02Ij4KICAgICAgICAgICAgICB7LyogRWxlbWVudCBPdmVydmlldyAqL30KICAgICAgICAgICAgICA8Q2FyZD4KICAgICAgICAgICAgICAgIDxDYXJkSGVhZGVyPgogICAgICAgICAgICAgICAgICA8Q2FyZFRpdGxlIGNsYXNzTmFtZT0iZmxleCBpdGVtcy1jZW50ZXIgc3BhY2UteC0yIj4KICAgICAgICAgICAgICAgICAgICA8Rm9sZGVyIGNsYXNzTmFtZT0idy01IGgtNSIgLz4KICAgICAgICAgICAgICAgICAgICA8c3Bhbj5FbGVtZW50IE92ZXJ2aWV3PC9zcGFuPgogICAgICAgICAgICAgICAgICA8L0NhcmRUaXRsZT4KICAgICAgICAgICAgICAgIDwvQ2FyZEhlYWRlcj4KICAgICAgICAgICAgICAgIDxDYXJkQ29udGVudD4KICAgICAgICAgICAgICAgICAge2VsZW1lbnQuZGVzY3JpcHRpb24gPyAoCiAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3NOYW1lPSJ0ZXh0LW11dGVkLWZvcmVncm91bmQgbWItNiIgZGF0YS10ZXN0aWQ9ImVsZW1lbnQtZGVzY3JpcHRpb24iPgogICAgICAgICAgICAgICAgICAgICAge2VsZW1lbnQuZGVzY3JpcHRpb259CiAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgICApIDogKAogICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzTmFtZT0idGV4dC1tdXRlZC1mb3JlZ3JvdW5kIGl0YWxpYyBtYi02Ij5ObyBkZXNjcmlwdGlvbiBhdmFpbGFibGUuPC9wPgogICAgICAgICAgICAgICAgICApfQogICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgey8qIE1pbmQgTWFwIFRyZWUgKi99CiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSJtdC02Ij4KICAgICAgICAgICAgICAgICAgICA8aDMgY2xhc3NOYW1lPSJ0ZXh0LWxnIGZvbnQtc2VtaWJvbGQgbWItNCBmbGV4IGl0ZW1zLWNlbnRlciBzcGFjZS14LTIiPgogICAgICAgICAgICAgICAgICAgICAgPEFjdGl2aXR5IGNsYXNzTmFtZT0idy01IGgtNSIgLz4KICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPlByb2Nlc3MgTWluZCBNYXA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICAgICAgICA8TWluZE1hcFRyZWUgCiAgICAgICAgICAgICAgICAgICAgICBwcm9jZXNzZXM9e2VsZW1lbnQucHJvY2Vzc2VzPy5tYXAocHJvY2VzcyA9PiAoewogICAgICAgICAgICAgICAgICAgICAgICBpZDogcHJvY2Vzcy5pZCwKICAgICAgICAgICAgICAgICAgICAgICAgcHJvY2Vzc051bWJlcjogcHJvY2Vzcy5wcm9jZXNzTnVtYmVyLAogICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiBwcm9jZXNzLm5hbWUsCiAgICAgICAgICAgICAgICAgICAgICAgIHN0ZXBzOiAocHJvY2VzcyBhcyBhbnkpLnN0ZXBzPy5tYXAoKHN0ZXA6IGFueSkgPT4gKHsKICAgICAgICAgICAgICAgICAgICAgICAgICBpZDogc3RlcC5pZCwKICAgICAgICAgICAgICAgICAgICAgICAgICBzdGVwTnVtYmVyOiBzdGVwLnN0ZXBOdW1iZXIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgc3RlcE5hbWU6IHN0ZXAuc3RlcE5hbWUsCiAgICAgICAgICAgICAgICAgICAgICAgICAgc3RlcERldGFpbHM6IHN0ZXAuc3RlcERldGFpbHMKICAgICAgICAgICAgICAgICAgICAgICAgfSkpIHx8IFtdCiAgICAgICAgICAgICAgICAgICAgICB9KSkgfHwgW119CiAgICAgICAgICAgICAgICAgICAgICBlbGVtZW50VGl0bGU9e2VsZW1lbnQudGl0bGV9CiAgICAgICAgICAgICAgICAgICAgLz4KICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L0NhcmRDb250ZW50PgogICAgICAgICAgICAgIDwvQ2FyZD4KCiAgICAgICAgICAgICAgey8qIEFzc29jaWF0ZWQgUHJvY2Vzc2VzICovfQogICAgICAgICAgICAgIDxDYXJkPgogICAgICAgICAgICAgICAgPENhcmRIZWFkZXI+CiAgICAgICAgICAgICAgICAgIDxDYXJkVGl0bGUgY2xhc3NOYW1lPSJmbGV4IGl0ZW1zLWNlbnRlciBzcGFjZS14LTIiPgogICAgICAgICAgICAgICAgICAgIDxBY3Rpdml0eSBjbGFzc05hbWU9InctNSBoLTUiIC8+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4+QXNzb2NpYXRlZCBQcm9jZXNzZXM8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDwvQ2FyZFRpdGxlPgogICAgICAgICAgICAgICAgPC9DYXJkSGVhZGVyPgogICAgICAgICAgICAgICAgPENhcmRDb250ZW50PgogICAgICAgICAgICAgICAgICB7ZWxlbWVudC5wcm9jZXNzZXMgJiYgZWxlbWVudC5wcm9jZXNzZXMubGVuZ3RoID4gMCA/ICgKICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0iZ3JpZCBncmlkLWNvbHMtMSBnYXAtNCI+CiAgICAgICAgICAgICAgICAgICAgICB7ZWxlbWVudC5wcm9jZXNzZXMubWFwKChwcm9jZXNzKSA9PiAoCiAgICAgICAgICAgICAgICAgICAgICAgIDxDYXJkIGtleT17cHJvY2Vzcy5pZH0gY2xhc3NOYW1lPSJjdXJzb3ItcG9pbnRlciB0cmFuc2l0aW9uLWFsbCBkdXJhdGlvbi0yMDAgaG92ZXI6c2hhZG93LW1kIiBkYXRhLXRlc3RpZD17YHByb2Nlc3MtY2FyZC0ke3Byb2Nlc3MuaWR9YH0+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPExpbmsgaHJlZj17YC9wcm9jZXNzLyR7cHJvY2Vzcy5pZH1gfT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxDYXJkQ29udGVudCBjbGFzc05hbWU9InAtNCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSJmbGV4IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWJldHdlZW4gbWItMyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9ImZsZXggaXRlbXMtY2VudGVyIHNwYWNlLXgtMyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0idy04IGgtOCBiZy1wcmltYXJ5LzEwIHJvdW5kZWQtbGcgZmxleCBpdGVtcy1jZW50ZXIganVzdGlmeS1jZW50ZXIiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8QWN0aXZpdHkgY2xhc3NOYW1lPSJ3LTQgaC00IHRleHQtcHJpbWFyeSIgLz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGgzIGNsYXNzTmFtZT0iZm9udC1zZW1pYm9sZCB0ZXh0LXNtIj57cHJvY2Vzcy5uYW1lfTwvaDM+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzTmFtZT0idGV4dC14cyB0ZXh0LW11dGVkLWZvcmVncm91bmQiPntwcm9jZXNzLnByb2Nlc3NOdW1iZXJ9PC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPEJhZGdlIGNsYXNzTmFtZT17Z2V0U3RhdHVzQ29sb3IocHJvY2Vzcy5zdGF0dXMgfHwgJ2RyYWZ0Jyl9PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3Byb2Nlc3Muc3RhdHVzIHx8ICdkcmFmdCd9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9CYWRnZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7cHJvY2Vzcy5kZXNjcmlwdGlvbiAmJiAoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3NOYW1lPSJ0ZXh0LXNtIHRleHQtbXV0ZWQtZm9yZWdyb3VuZCBtYi0zIGxpbmUtY2xhbXAtMiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7cHJvY2Vzcy5kZXNjcmlwdGlvbn0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICl9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0iZmxleCBpdGVtcy1jZW50ZXIganVzdGlmeS1iZXR3ZWVuIHRleHQteHMgdGV4dC1tdXRlZC1mb3JlZ3JvdW5kIG1iLTMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSJmbGV4IGl0ZW1zLWNlbnRlciBzcGFjZS14LTQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3Byb2Nlc3MucHJvY2Vzc093bmVyICYmICgKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9ImZsZXggaXRlbXMtY2VudGVyIHNwYWNlLXgtMSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPFVzZXIgY2xhc3NOYW1lPSJ3LTMgaC0zIiAvPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPntwcm9jZXNzLnByb2Nlc3NPd25lcn08L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKX0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtwcm9jZXNzLnVwZGF0ZWRBdCAmJiAoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSJmbGV4IGl0ZW1zLWNlbnRlciBzcGFjZS14LTEiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxDYWxlbmRhciBjbGFzc05hbWU9InctMyBoLTMiIC8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+e25ldyBEYXRlKHByb2Nlc3MudXBkYXRlZEF0KS50b0xvY2FsZURhdGVTdHJpbmcoKX08L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKX0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7cHJvY2Vzcy5pc01hbmRhdG9yeSAmJiAoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0iZmxleCBpdGVtcy1jZW50ZXIgc3BhY2UteC0xIHRleHQtcHJpbWFyeSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxBY3Rpdml0eSBjbGFzc05hbWU9InctMyBoLTMiIC8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT0idGV4dC14cyBmb250LW1lZGl1bSI+TWFuZGF0b3J5PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKX0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7LyogTWluaSBQcm9jZXNzIEZsb3cgKi99CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSJtdC0zIHB0LTMgYm9yZGVyLXQgYm9yZGVyLWJvcmRlci81MCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPE1pbmlQcm9jZXNzRmxvdyAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByb2Nlc3NOdW1iZXI9e3Byb2Nlc3MucHJvY2Vzc051bWJlcn0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0ZXBzPXtbXX0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbXBhY3Q9e3RydWV9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L0NhcmRDb250ZW50PgogICAgICAgICAgICAgICAgICAgICAgICAgIDwvTGluaz4KICAgICAgICAgICAgICAgICAgICAgICAgPC9DYXJkPgogICAgICAgICAgICAgICAgICAgICAgKSl9CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICkgOiAoCiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9InRleHQtY2VudGVyIHB5LTggdGV4dC1tdXRlZC1mb3JlZ3JvdW5kIj4KICAgICAgICAgICAgICAgICAgICAgIDxBY3Rpdml0eSBjbGFzc05hbWU9InctMTIgaC0xMiBteC1hdXRvIG1iLTQgb3BhY2l0eS01MCIgLz4KICAgICAgICAgICAgICAgICAgICAgIDxoMyBjbGFzc05hbWU9InRleHQtbGcgZm9udC1tZWRpdW0gbWItMiI+Tm8gUHJvY2Vzc2VzIFlldDwvaDM+CiAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzc05hbWU9Im1iLTQiPlRoaXMgZWxlbWVudCBkb2Vzbid0IGhhdmUgYW55IHByb2Nlc3NlcyBkZWZpbmVkIHlldC48L3A+CiAgICAgICAgICAgICAgICAgICAgICA8QnV0dG9uIGFzQ2hpbGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDxMaW5rIGhyZWY9e2AvY3JlYXRlLXByb2Nlc3M/ZWxlbWVudElkPSR7ZWxlbWVudC5pZH1gfT4KICAgICAgICAgICAgICAgICAgICAgICAgICA8UGx1cyBjbGFzc05hbWU9InctNCBoLTQgbXItMiIgLz4KICAgICAgICAgICAgICAgICAgICAgICAgICBDcmVhdGUgRmlyc3QgUHJvY2VzcwogICAgICAgICAgICAgICAgICAgICAgICA8L0xpbms+CiAgICAgICAgICAgICAgICAgICAgICA8L0J1dHRvbj4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgKX0KICAgICAgICAgICAgICAgIDwvQ2FyZENvbnRlbnQ+CiAgICAgICAgICAgICAgPC9DYXJkPgoKICAgICAgICAgICAgICB7LyogUGVyZm9ybWFuY2UgTWVhc3VyZW1lbnRzIFNlY3Rpb24gKi99CiAgICAgICAgICAgICAgPENhcmQ+CiAgICAgICAgICAgICAgICA8Q2FyZEhlYWRlcj4KICAgICAgICAgICAgICAgICAgPENhcmRUaXRsZSBjbGFzc05hbWU9ImZsZXggaXRlbXMtY2VudGVyIHNwYWNlLXgtMiI+CiAgICAgICAgICAgICAgICAgICAgPEJhckNoYXJ0MyBjbGFzc05hbWU9InctNSBoLTUiIC8+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4+UGVyZm9ybWFuY2UgTWVhc3VyZW1lbnRzPC9zcGFuPgogICAgICAgICAgICAgICAgICA8L0NhcmRUaXRsZT4KICAgICAgICAgICAgICAgIDwvQ2FyZEhlYWRlcj4KICAgICAgICAgICAgICAgIDxDYXJkQ29udGVudD4KICAgICAgICAgICAgICAgICAge2VsZW1lbnQucHJvY2Vzc2VzICYmIGVsZW1lbnQucHJvY2Vzc2VzLmxlbmd0aCA+IDAgPyAoCiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9InNwYWNlLXktNiI+CiAgICAgICAgICAgICAgICAgICAgICB7ZWxlbWVudC5wcm9jZXNzZXMubWFwKChwcm9jZXNzKSA9PiAoCiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYga2V5PXtwcm9jZXNzLmlkfSBjbGFzc05hbWU9ImJvcmRlci1sLTQgYm9yZGVyLXByaW1hcnkvMjAgcGwtNCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9Im1iLTQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGgzIGNsYXNzTmFtZT0iZm9udC1zZW1pYm9sZCB0ZXh0LWxnIGZsZXggaXRlbXMtY2VudGVyIHNwYWNlLXgtMiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxBY3Rpdml0eSBjbGFzc05hbWU9InctNSBoLTUgdGV4dC1wcmltYXJ5IiAvPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj57cHJvY2Vzcy5wcm9jZXNzTnVtYmVyfToge3Byb2Nlc3MubmFtZX08L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgIHsocHJvY2VzcyBhcyBhbnkpLnBlcmZvcm1hbmNlTWVhc3VyZXMgJiYgKHByb2Nlc3MgYXMgYW55KS5wZXJmb3JtYW5jZU1lYXN1cmVzLmxlbmd0aCA+IDAgPyAoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0ib3ZlcmZsb3cteC1hdXRvIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRhYmxlIGNsYXNzTmFtZT0idy1mdWxsIGJvcmRlciBib3JkZXItYm9yZGVyIHJvdW5kZWQtbGciPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0aGVhZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ciBjbGFzc05hbWU9ImJvcmRlci1iIGJnLW11dGVkLzUwIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRoIGNsYXNzTmFtZT0idGV4dC1sZWZ0IHAtMyBmb250LXNlbWlib2xkIHRleHQtc20iPiM8L3RoPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGggY2xhc3NOYW1lPSJ0ZXh0LWxlZnQgcC0zIGZvbnQtc2VtaWJvbGQgdGV4dC1zbSI+TWVhc3VyZSBOYW1lPC90aD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRoIGNsYXNzTmFtZT0idGV4dC1sZWZ0IHAtMyBmb250LXNlbWlib2xkIHRleHQtc20iPlRhcmdldDwvdGg+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0aCBjbGFzc05hbWU9InRleHQtbGVmdCBwLTMgZm9udC1zZW1pYm9sZCB0ZXh0LXNtIj5Gb3JtdWxhPC90aD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRoIGNsYXNzTmFtZT0idGV4dC1sZWZ0IHAtMyBmb250LXNlbWlib2xkIHRleHQtc20iPkZyZXF1ZW5jeTwvdGg+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0aCBjbGFzc05hbWU9InRleHQtbGVmdCBwLTMgZm9udC1zZW1pYm9sZCB0ZXh0LXNtIj5Tb3VyY2U8L3RoPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RoZWFkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0Ym9keT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsocHJvY2VzcyBhcyBhbnkpLnBlcmZvcm1hbmNlTWVhc3VyZXMubWFwKChtZWFzdXJlOiBhbnksIGluZGV4OiBudW1iZXIpID0+ICgKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyIGtleT17bWVhc3VyZS5pZH0gY2xhc3NOYW1lPSJib3JkZXItYiBsYXN0OmJvcmRlci1iLTAgaG92ZXI6YmctbXV0ZWQvMzAiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzc05hbWU9InAtMyB0ZXh0LXNtIGZvbnQtbWVkaXVtIHRleHQtcHJpbWFyeSI+e2luZGV4ICsgMX08L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzc05hbWU9InAtMyB0ZXh0LXNtIGZvbnQtbWVkaXVtIj57bWVhc3VyZS5tZWFzdXJlTmFtZX08L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzc05hbWU9InAtMyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7bWVhc3VyZS50YXJnZXQgJiYgKAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8QmFkZ2UgdmFyaWFudD0ib3V0bGluZSIgY2xhc3NOYW1lPSJ0ZXh0LXhzIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7bWVhc3VyZS50YXJnZXR9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvQmFkZ2U+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzTmFtZT0icC0zIHRleHQteHMgdGV4dC1tdXRlZC1mb3JlZ3JvdW5kIG1heC13LXhzIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSJ0cnVuY2F0ZSIgdGl0bGU9e21lYXN1cmUuZm9ybXVsYX0+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHttZWFzdXJlLmZvcm11bGEgfHwgJy0nfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3NOYW1lPSJwLTMgdGV4dC14cyB0ZXh0LW11dGVkLWZvcmVncm91bmQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge21lYXN1cmUuZnJlcXVlbmN5IHx8ICctJ30KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzc05hbWU9InAtMyB0ZXh0LXhzIHRleHQtbXV0ZWQtZm9yZWdyb3VuZCBtYXgtdy14cyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0idHJ1bmNhdGUiIHRpdGxlPXttZWFzdXJlLnNvdXJjZX0+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHttZWFzdXJlLnNvdXJjZSB8fCAnLSd9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKSl9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90Ym9keT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90YWJsZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICkgOiAoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0idGV4dC1jZW50ZXIgcHktNCB0ZXh0LW11dGVkLWZvcmVncm91bmQgYmctbXV0ZWQvMzAgcm91bmRlZC1sZyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxCYXJDaGFydDMgY2xhc3NOYW1lPSJ3LTggaC04IG14LWF1dG8gbWItMiBvcGFjaXR5LTUwIiAvPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzc05hbWU9InRleHQtc20iPk5vIHBlcmZvcm1hbmNlIG1lYXN1cmVzIGRlZmluZWQ8L3A+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICApfQogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICkpfQogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICApIDogKAogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSJ0ZXh0LWNlbnRlciBweS04IHRleHQtbXV0ZWQtZm9yZWdyb3VuZCI+CiAgICAgICAgICAgICAgICAgICAgICA8QmFyQ2hhcnQzIGNsYXNzTmFtZT0idy0xMiBoLTEyIG14LWF1dG8gbWItNCBvcGFjaXR5LTUwIiAvPgogICAgICAgICAgICAgICAgICAgICAgPGgzIGNsYXNzTmFtZT0idGV4dC1sZyBmb250LW1lZGl1bSBtYi0yIj5ObyBQZXJmb3JtYW5jZSBEYXRhPC9oMz4KICAgICAgICAgICAgICAgICAgICAgIDxwPlBlcmZvcm1hbmNlIG1lYXN1cmVtZW50cyB3aWxsIGJlIGF2YWlsYWJsZSBvbmNlIHByb2Nlc3NlcyBhcmUgY3JlYXRlZC48L3A+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICl9CiAgICAgICAgICAgICAgICA8L0NhcmRDb250ZW50PgogICAgICAgICAgICAgIDwvQ2FyZD4KICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICB7LyogU2lkZWJhciAqL30KICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9InNwYWNlLXktNiI+CiAgICAgICAgICAgICAgey8qIEVsZW1lbnQgRGV0YWlscyAqL30KICAgICAgICAgICAgICA8Q2FyZD4KICAgICAgICAgICAgICAgIDxDYXJkSGVhZGVyPgogICAgICAgICAgICAgICAgICA8Q2FyZFRpdGxlIGNsYXNzTmFtZT0iZmxleCBpdGVtcy1jZW50ZXIgc3BhY2UteC0yIj4KICAgICAgICAgICAgICAgICAgICA8RmlsZVRleHQgY2xhc3NOYW1lPSJ3LTUgaC01IiAvPgogICAgICAgICAgICAgICAgICAgIDxzcGFuPkVsZW1lbnQgRGV0YWlsczwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPC9DYXJkVGl0bGU+CiAgICAgICAgICAgICAgICA8L0NhcmRIZWFkZXI+CiAgICAgICAgICAgICAgICA8Q2FyZENvbnRlbnQgY2xhc3NOYW1lPSJzcGFjZS15LTQiPgogICAgICAgICAgICAgICAgICA8ZGl2PgogICAgICAgICAgICAgICAgICAgIDxkdCBjbGFzc05hbWU9InRleHQtc20gZm9udC1tZWRpdW0gdGV4dC1tdXRlZC1mb3JlZ3JvdW5kIj5FbGVtZW50IE51bWJlcjwvZHQ+CiAgICAgICAgICAgICAgICAgICAgPGRkIGNsYXNzTmFtZT0ibXQtMSB0ZXh0LXNtIiBkYXRhLXRlc3RpZD0iZWxlbWVudC1udW1iZXIiPntlbGVtZW50LmVsZW1lbnROdW1iZXJ9PC9kZD4KICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8ZGl2PgogICAgICAgICAgICAgICAgICAgIDxkdCBjbGFzc05hbWU9InRleHQtc20gZm9udC1tZWRpdW0gdGV4dC1tdXRlZC1mb3JlZ3JvdW5kIj5TdGF0dXM8L2R0PgogICAgICAgICAgICAgICAgICAgIDxkZCBjbGFzc05hbWU9Im10LTEiPgogICAgICAgICAgICAgICAgICAgICAgPEJhZGdlIHZhcmlhbnQ9e2VsZW1lbnQuaXNBY3RpdmUgPyAiZGVmYXVsdCIgOiAic2Vjb25kYXJ5In0+CiAgICAgICAgICAgICAgICAgICAgICAgIHtlbGVtZW50LmlzQWN0aXZlID8gJ0FjdGl2ZScgOiAnSW5hY3RpdmUnfQogICAgICAgICAgICAgICAgICAgICAgPC9CYWRnZT4KICAgICAgICAgICAgICAgICAgICA8L2RkPgogICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxkaXY+CiAgICAgICAgICAgICAgICAgICAgPGR0IGNsYXNzTmFtZT0idGV4dC1zbSBmb250LW1lZGl1bSB0ZXh0LW11dGVkLWZvcmVncm91bmQiPlRvdGFsIFByb2Nlc3NlczwvZHQ+CiAgICAgICAgICAgICAgICAgICAgPGRkIGNsYXNzTmFtZT0ibXQtMSB0ZXh0LXNtIiBkYXRhLXRlc3RpZD0iZWxlbWVudC1wcm9jZXNzLWNvdW50Ij4KICAgICAgICAgICAgICAgICAgICAgIHtlbGVtZW50LnByb2Nlc3Nlcz8ubGVuZ3RoIHx8IDB9CiAgICAgICAgICAgICAgICAgICAgPC9kZD4KICAgICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgICAgICB7ZWxlbWVudC5jcmVhdGVkQXQgJiYgKAogICAgICAgICAgICAgICAgICAgIDxkaXY+CiAgICAgICAgICAgICAgICAgICAgICA8ZHQgY2xhc3NOYW1lPSJ0ZXh0LXNtIGZvbnQtbWVkaXVtIHRleHQtbXV0ZWQtZm9yZWdyb3VuZCI+Q3JlYXRlZDwvZHQ+CiAgICAgICAgICAgICAgICAgICAgICA8ZGQgY2xhc3NOYW1lPSJtdC0xIHRleHQtc20iIGRhdGEtdGVzdGlkPSJlbGVtZW50LWNyZWF0ZWQtZGF0ZSI+CiAgICAgICAgICAgICAgICAgICAgICAgIHtuZXcgRGF0ZShlbGVtZW50LmNyZWF0ZWRBdCkudG9Mb2NhbGVEYXRlU3RyaW5nKCl9CiAgICAgICAgICAgICAgICAgICAgICA8L2RkPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICApfQoKICAgICAgICAgICAgICAgICAge2VsZW1lbnQudXBkYXRlZEF0ICYmICgKICAgICAgICAgICAgICAgICAgICA8ZGl2PgogICAgICAgICAgICAgICAgICAgICAgPGR0IGNsYXNzTmFtZT0idGV4dC1zbSBmb250LW1lZGl1bSB0ZXh0LW11dGVkLWZvcmVncm91bmQiPkxhc3QgVXBkYXRlZDwvZHQ+CiAgICAgICAgICAgICAgICAgICAgICA8ZGQgY2xhc3NOYW1lPSJtdC0xIHRleHQtc20iIGRhdGEtdGVzdGlkPSJlbGVtZW50LXVwZGF0ZWQtZGF0ZSI+CiAgICAgICAgICAgICAgICAgICAgICAgIHtuZXcgRGF0ZShlbGVtZW50LnVwZGF0ZWRBdCkudG9Mb2NhbGVEYXRlU3RyaW5nKCl9CiAgICAgICAgICAgICAgICAgICAgICA8L2RkPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICApfQogICAgICAgICAgICAgICAgPC9DYXJkQ29udGVudD4KICAgICAgICAgICAgICA8L0NhcmQ+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgIDwvbWFpbj4KICAgIDwvZGl2PgogICk7Cn0=
:FILE_69_END

:FILE_70_PATH
client/src/pages/element-editor.tsx
:FILE_70_DATA

:FILE_70_END

:FILE_71_PATH
client/src/pages/landing.tsx
:FILE_71_DATA

:FILE_71_END

:FILE_72_PATH
client/src/pages/mind-map.tsx
:FILE_72_DATA

:FILE_72_END

:FILE_73_PATH
client/src/pages/not-found.tsx
:FILE_73_DATA
aW1wb3J0IHsgQ2FyZCwgQ2FyZENvbnRlbnQgfSBmcm9tICJAL2NvbXBvbmVudHMvdWkvY2FyZCI7CmltcG9ydCB7IEFsZXJ0Q2lyY2xlIH0gZnJvbSAibHVjaWRlLXJlYWN0IjsKCmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE5vdEZvdW5kKCkgewogIHJldHVybiAoCiAgICA8ZGl2IGNsYXNzTmFtZT0ibWluLWgtc2NyZWVuIHctZnVsbCBmbGV4IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWNlbnRlciBiZy1ncmF5LTUwIj4KICAgICAgPENhcmQgY2xhc3NOYW1lPSJ3LWZ1bGwgbWF4LXctbWQgbXgtNCI+CiAgICAgICAgPENhcmRDb250ZW50IGNsYXNzTmFtZT0icHQtNiI+CiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0iZmxleCBtYi00IGdhcC0yIj4KICAgICAgICAgICAgPEFsZXJ0Q2lyY2xlIGNsYXNzTmFtZT0iaC04IHctOCB0ZXh0LXJlZC01MDAiIC8+CiAgICAgICAgICAgIDxoMSBjbGFzc05hbWU9InRleHQtMnhsIGZvbnQtYm9sZCB0ZXh0LWdyYXktOTAwIj40MDQgUGFnZSBOb3QgRm91bmQ8L2gxPgogICAgICAgICAgPC9kaXY+CgogICAgICAgICAgPHAgY2xhc3NOYW1lPSJtdC00IHRleHQtc20gdGV4dC1ncmF5LTYwMCI+CiAgICAgICAgICAgIERpZCB5b3UgZm9yZ2V0IHRvIGFkZCB0aGUgcGFnZSB0byB0aGUgcm91dGVyPwogICAgICAgICAgPC9wPgogICAgICAgIDwvQ2FyZENvbnRlbnQ+CiAgICAgIDwvQ2FyZD4KICAgIDwvZGl2PgogICk7Cn0K
:FILE_73_END

:FILE_74_PATH
client/src/pages/process-detail.tsx
:FILE_74_DATA

:FILE_74_END

:FILE_75_PATH
client/src/pages/process-editor.tsx
:FILE_75_DATA

:FILE_75_END

:FILE_76_PATH
client/src/pages/risk-management.tsx
:FILE_76_DATA

:FILE_76_END

:FILE_77_PATH
dist/index.js
:FILE_77_DATA

:FILE_77_END

:FILE_78_PATH
dist/public/assets/html2canvas.esm-CBrSDip1.js
:FILE_78_DATA

:FILE_78_END

:FILE_79_PATH
dist/public/assets/index-DNdLeLte.css
:FILE_79_DATA

:FILE_79_END

:FILE_80_PATH
dist/public/assets/index-DbIbghhg.js
:FILE_80_DATA
dmFyIEhoPWU9Pnt0aHJvdyBUeXBlRXJyb3IoZSl9O3ZhciBBdT0oZSx0LHIpPT50LmhhcyhlKXx8SGgoIkNhbm5vdCAiK3IpO3ZhciBDPShlLHQscik9PihBdShlLHQsInJlYWQgZnJvbSBwcml2YXRlIGZpZWxkIikscj9yLmNhbGwoZSk6dC5nZXQoZSkpLHVlPShlLHQscik9PnQuaGFzKGUpP0hoKCJDYW5ub3QgYWRkIHRoZSBzYW1lIHByaXZhdGUgbWVtYmVyIG1vcmUgdGhhbiBvbmNlIik6dCBpbnN0YW5jZW9mIFdlYWtTZXQ/dC5hZGQoZSk6dC5zZXQoZSxyKSxYPShlLHQscixuKT0+KEF1KGUsdCwid3JpdGUgdG8gcHJpdmF0ZSBmaWVsZCIpLG4/bi5jYWxsKGUscik6dC5zZXQoZSxyKSxyKSx2ZT0oZSx0LHIpPT4oQXUoZSx0LCJhY2Nlc3MgcHJpdmF0ZSBtZXRob2QiKSxyKTt2YXIgdWw9KGUsdCxyLG4pPT4oe3NldCBfKHMpe1goZSx0LHMscil9LGdldCBfKCl7cmV0dXJuIEMoZSx0LG4pfX0pO2Z1bmN0aW9uIFRiKGUsdCl7Zm9yKHZhciByPTA7cjx0Lmxlbmd0aDtyKyspe2NvbnN0IG49dFtyXTtpZih0eXBlb2YgbiE9InN0cmluZyImJiFBcnJheS5pc0FycmF5KG4pKXtmb3IoY29uc3QgcyBpbiBuKWlmKHMhPT0iZGVmYXVsdCImJiEocyBpbiBlKSl7Y29uc3QgYT1PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG4scyk7YSYmT2JqZWN0LmRlZmluZVByb3BlcnR5KGUscyxhLmdldD9hOntlbnVtZXJhYmxlOiEwLGdldDooKT0+bltzXX0pfX19cmV0dXJuIE9iamVjdC5mcmVlemUoT2JqZWN0LmRlZmluZVByb3BlcnR5KGUsU3ltYm9sLnRvU3RyaW5nVGFnLHt2YWx1ZToiTW9kdWxlIn0pKX0oZnVuY3Rpb24oKXtjb25zdCB0PWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImxpbmsiKS5yZWxMaXN0O2lmKHQmJnQuc3VwcG9ydHMmJnQuc3VwcG9ydHMoIm1vZHVsZXByZWxvYWQiKSlyZXR1cm47Zm9yKGNvbnN0IHMgb2YgZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnbGlua1tyZWw9Im1vZHVsZXByZWxvYWQiXScpKW4ocyk7bmV3IE11dGF0aW9uT2JzZXJ2ZXIocz0+e2Zvcihjb25zdCBhIG9mIHMpaWYoYS50eXBlPT09ImNoaWxkTGlzdCIpZm9yKGNvbnN0IG8gb2YgYS5hZGRlZE5vZGVzKW8udGFnTmFtZT09PSJMSU5LIiYmby5yZWw9PT0ibW9kdWxlcHJlbG9hZCImJm4obyl9KS5vYnNlcnZlKGRvY3VtZW50LHtjaGlsZExpc3Q6ITAsc3VidHJlZTohMH0pO2Z1bmN0aW9uIHIocyl7Y29uc3QgYT17fTtyZXR1cm4gcy5pbnRlZ3JpdHkmJihhLmludGVncml0eT1zLmludGVncml0eSkscy5yZWZlcnJlclBvbGljeSYmKGEucmVmZXJyZXJQb2xpY3k9cy5yZWZlcnJlclBvbGljeSkscy5jcm9zc09yaWdpbj09PSJ1c2UtY3JlZGVudGlhbHMiP2EuY3JlZGVudGlhbHM9ImluY2x1ZGUiOnMuY3Jvc3NPcmlnaW49PT0iYW5vbnltb3VzIj9hLmNyZWRlbnRpYWxzPSJvbWl0IjphLmNyZWRlbnRpYWxzPSJzYW1lLW9yaWdpbiIsYX1mdW5jdGlvbiBuKHMpe2lmKHMuZXApcmV0dXJuO3MuZXA9ITA7Y29uc3QgYT1yKHMpO2ZldGNoKHMuaHJlZixhKX19KSgpO3ZhciBNUj10eXBlb2YgZ2xvYmFsVGhpczwidSI/Z2xvYmFsVGhpczp0eXBlb2Ygd2luZG93PCJ1Ij93aW5kb3c6dHlwZW9mIGdsb2JhbDwidSI/Z2xvYmFsOnR5cGVvZiBzZWxmPCJ1Ij9zZWxmOnt9O2Z1bmN0aW9uIGp4KGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGUmJk9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChlLCJkZWZhdWx0Iik/ZS5kZWZhdWx0OmV9dmFyIE54PXtleHBvcnRzOnt9fSxaYz17fSxTeD17ZXhwb3J0czp7fX0samU9e307LyoqCiAqIEBsaWNlbnNlIFJlYWN0CiAqIHJlYWN0LnByb2R1Y3Rpb24ubWluLmpzCiAqCiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLgogKgogKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGUKICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLgogKi92YXIgS289U3ltYm9sLmZvcigicmVhY3QuZWxlbWVudCIpLFJiPVN5bWJvbC5mb3IoInJlYWN0LnBvcnRhbCIpLEFiPVN5bWJvbC5mb3IoInJlYWN0LmZyYWdtZW50IiksTWI9U3ltYm9sLmZvcigicmVhY3Quc3RyaWN0X21vZGUiKSxPYj1TeW1ib2wuZm9yKCJyZWFjdC5wcm9maWxlciIpLEZiPVN5bWJvbC5mb3IoInJlYWN0LnByb3ZpZGVyIiksSWI9U3ltYm9sLmZvcigicmVhY3QuY29udGV4dCIpLExiPVN5bWJvbC5mb3IoInJlYWN0LmZvcndhcmRfcmVmIiksRGI9U3ltYm9sLmZvcigicmVhY3Quc3VzcGVuc2UiKSwkYj1TeW1ib2wuZm9yKCJyZWFjdC5tZW1vIiksemI9U3ltYm9sLmZvcigicmVhY3QubGF6eSIpLFdoPVN5bWJvbC5pdGVyYXRvcjtmdW5jdGlvbiBWYihlKXtyZXR1cm4gZT09PW51bGx8fHR5cGVvZiBlIT0ib2JqZWN0Ij9udWxsOihlPVdoJiZlW1doXXx8ZVsiQEBpdGVyYXRvciJdLHR5cGVvZiBlPT0iZnVuY3Rpb24iP2U6bnVsbCl9dmFyIGt4PXtpc01vdW50ZWQ6ZnVuY3Rpb24oKXtyZXR1cm4hMX0sZW5xdWV1ZUZvcmNlVXBkYXRlOmZ1bmN0aW9uKCl7fSxlbnF1ZXVlUmVwbGFjZVN0YXRlOmZ1bmN0aW9uKCl7fSxlbnF1ZXVlU2V0U3RhdGU6ZnVuY3Rpb24oKXt9fSxFeD1PYmplY3QuYXNzaWduLEN4PXt9O2Z1bmN0aW9uIE5hKGUsdCxyKXt0aGlzLnByb3BzPWUsdGhpcy5jb250ZXh0PXQsdGhpcy5yZWZzPUN4LHRoaXMudXBkYXRlcj1yfHxreH1OYS5wcm90b3R5cGUuaXNSZWFjdENvbXBvbmVudD17fTtOYS5wcm90b3R5cGUuc2V0U3RhdGU9ZnVuY3Rpb24oZSx0KXtpZih0eXBlb2YgZSE9Im9iamVjdCImJnR5cGVvZiBlIT0iZnVuY3Rpb24iJiZlIT1udWxsKXRocm93IEVycm9yKCJzZXRTdGF0ZSguLi4pOiB0YWtlcyBhbiBvYmplY3Qgb2Ygc3RhdGUgdmFyaWFibGVzIHRvIHVwZGF0ZSBvciBhIGZ1bmN0aW9uIHdoaWNoIHJldHVybnMgYW4gb2JqZWN0IG9mIHN0YXRlIHZhcmlhYmxlcy4iKTt0aGlzLnVwZGF0ZXIuZW5xdWV1ZVNldFN0YXRlKHRoaXMsZSx0LCJzZXRTdGF0ZSIpfTtOYS5wcm90b3R5cGUuZm9yY2VVcGRhdGU9ZnVuY3Rpb24oZSl7dGhpcy51cGRhdGVyLmVucXVldWVGb3JjZVVwZGF0ZSh0aGlzLGUsImZvcmNlVXBkYXRlIil9O2Z1bmN0aW9uIF94KCl7fV94LnByb3RvdHlwZT1OYS5wcm90b3R5cGU7ZnVuY3Rpb24gdW0oZSx0LHIpe3RoaXMucHJvcHM9ZSx0aGlzLmNvbnRleHQ9dCx0aGlzLnJlZnM9Q3gsdGhpcy51cGRhdGVyPXJ8fGt4fXZhciBkbT11bS5wcm90b3R5cGU9bmV3IF94O2RtLmNvbnN0cnVjdG9yPXVtO0V4KGRtLE5hLnByb3RvdHlwZSk7ZG0uaXNQdXJlUmVhY3RDb21wb25lbnQ9ITA7dmFyIHFoPUFycmF5LmlzQXJyYXksUHg9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eSxmbT17Y3VycmVudDpudWxsfSxUeD17a2V5OiEwLHJlZjohMCxfX3NlbGY6ITAsX19zb3VyY2U6ITB9O2Z1bmN0aW9uIFJ4KGUsdCxyKXt2YXIgbixzPXt9LGE9bnVsbCxvPW51bGw7aWYodCE9bnVsbClmb3IobiBpbiB0LnJlZiE9PXZvaWQgMCYmKG89dC5yZWYpLHQua2V5IT09dm9pZCAwJiYoYT0iIit0LmtleSksdClQeC5jYWxsKHQsbikmJiFUeC5oYXNPd25Qcm9wZXJ0eShuKSYmKHNbbl09dFtuXSk7dmFyIGw9YXJndW1lbnRzLmxlbmd0aC0yO2lmKGw9PT0xKXMuY2hpbGRyZW49cjtlbHNlIGlmKDE8bCl7Zm9yKHZhciBjPUFycmF5KGwpLHU9MDt1PGw7dSsrKWNbdV09YXJndW1lbnRzW3UrMl07cy5jaGlsZHJlbj1jfWlmKGUmJmUuZGVmYXVsdFByb3BzKWZvcihuIGluIGw9ZS5kZWZhdWx0UHJvcHMsbClzW25dPT09dm9pZCAwJiYoc1tuXT1sW25dKTtyZXR1cm57JCR0eXBlb2Y6S28sdHlwZTplLGtleTphLHJlZjpvLHByb3BzOnMsX293bmVyOmZtLmN1cnJlbnR9fWZ1bmN0aW9uIFViKGUsdCl7cmV0dXJueyQkdHlwZW9mOktvLHR5cGU6ZS50eXBlLGtleTp0LHJlZjplLnJlZixwcm9wczplLnByb3BzLF9vd25lcjplLl9vd25lcn19ZnVuY3Rpb24gbW0oZSl7cmV0dXJuIHR5cGVvZiBlPT0ib2JqZWN0IiYmZSE9PW51bGwmJmUuJCR0eXBlb2Y9PT1Lb31mdW5jdGlvbiBCYihlKXt2YXIgdD17Ij0iOiI9MCIsIjoiOiI9MiJ9O3JldHVybiIkIitlLnJlcGxhY2UoL1s9Ol0vZyxmdW5jdGlvbihyKXtyZXR1cm4gdFtyXX0pfXZhciBHaD0vXC8rL2c7ZnVuY3Rpb24gTXUoZSx0KXtyZXR1cm4gdHlwZW9mIGU9PSJvYmplY3QiJiZlIT09bnVsbCYmZS5rZXkhPW51bGw/QmIoIiIrZS5rZXkpOnQudG9TdHJpbmcoMzYpfWZ1bmN0aW9uIExsKGUsdCxyLG4scyl7dmFyIGE9dHlwZW9mIGU7KGE9PT0idW5kZWZpbmVkInx8YT09PSJib29sZWFuIikmJihlPW51bGwpO3ZhciBvPSExO2lmKGU9PT1udWxsKW89ITA7ZWxzZSBzd2l0Y2goYSl7Y2FzZSJzdHJpbmciOmNhc2UibnVtYmVyIjpvPSEwO2JyZWFrO2Nhc2Uib2JqZWN0Ijpzd2l0Y2goZS4kJHR5cGVvZil7Y2FzZSBLbzpjYXNlIFJiOm89ITB9fWlmKG8pcmV0dXJuIG89ZSxzPXMobyksZT1uPT09IiI/Ii4iK011KG8sMCk6bixxaChzKT8ocj0iIixlIT1udWxsJiYocj1lLnJlcGxhY2UoR2gsIiQmLyIpKyIvIiksTGwocyx0LHIsIiIsZnVuY3Rpb24odSl7cmV0dXJuIHV9KSk6cyE9bnVsbCYmKG1tKHMpJiYocz1VYihzLHIrKCFzLmtleXx8byYmby5rZXk9PT1zLmtleT8iIjooIiIrcy5rZXkpLnJlcGxhY2UoR2gsIiQmLyIpKyIvIikrZSkpLHQucHVzaChzKSksMTtpZihvPTAsbj1uPT09IiI/Ii4iOm4rIjoiLHFoKGUpKWZvcih2YXIgbD0wO2w8ZS5sZW5ndGg7bCsrKXthPWVbbF07dmFyIGM9bitNdShhLGwpO28rPUxsKGEsdCxyLGMscyl9ZWxzZSBpZihjPVZiKGUpLHR5cGVvZiBjPT0iZnVuY3Rpb24iKWZvcihlPWMuY2FsbChlKSxsPTA7IShhPWUubmV4dCgpKS5kb25lOylhPWEudmFsdWUsYz1uK011KGEsbCsrKSxvKz1MbChhLHQscixjLHMpO2Vsc2UgaWYoYT09PSJvYmplY3QiKXRocm93IHQ9U3RyaW5nKGUpLEVycm9yKCJPYmplY3RzIGFyZSBub3QgdmFsaWQgYXMgYSBSZWFjdCBjaGlsZCAoZm91bmQ6ICIrKHQ9PT0iW29iamVjdCBPYmplY3RdIj8ib2JqZWN0IHdpdGgga2V5cyB7IitPYmplY3Qua2V5cyhlKS5qb2luKCIsICIpKyJ9Ijp0KSsiKS4gSWYgeW91IG1lYW50IHRvIHJlbmRlciBhIGNvbGxlY3Rpb24gb2YgY2hpbGRyZW4sIHVzZSBhbiBhcnJheSBpbnN0ZWFkLiIpO3JldHVybiBvfWZ1bmN0aW9uIGRsKGUsdCxyKXtpZihlPT1udWxsKXJldHVybiBlO3ZhciBuPVtdLHM9MDtyZXR1cm4gTGwoZSxuLCIiLCIiLGZ1bmN0aW9uKGEpe3JldHVybiB0LmNhbGwocixhLHMrKyl9KSxufWZ1bmN0aW9uIEhiKGUpe2lmKGUuX3N0YXR1cz09PS0xKXt2YXIgdD1lLl9yZXN1bHQ7dD10KCksdC50aGVuKGZ1bmN0aW9uKHIpeyhlLl9zdGF0dXM9PT0wfHxlLl9zdGF0dXM9PT0tMSkmJihlLl9zdGF0dXM9MSxlLl9yZXN1bHQ9cil9LGZ1bmN0aW9uKHIpeyhlLl9zdGF0dXM9PT0wfHxlLl9zdGF0dXM9PT0tMSkmJihlLl9zdGF0dXM9MixlLl9yZXN1bHQ9cil9KSxlLl9zdGF0dXM9PT0tMSYmKGUuX3N0YXR1cz0wLGUuX3Jlc3VsdD10KX1pZihlLl9zdGF0dXM9PT0xKXJldHVybiBlLl9yZXN1bHQuZGVmYXVsdDt0aHJvdyBlLl9yZXN1bHR9dmFyIEd0PXtjdXJyZW50Om51bGx9LERsPXt0cmFuc2l0aW9uOm51bGx9LFdiPXtSZWFjdEN1cnJlbnREaXNwYXRjaGVyOkd0LFJlYWN0Q3VycmVudEJhdGNoQ29uZmlnOkRsLFJlYWN0Q3VycmVudE93bmVyOmZtfTtmdW5jdGlvbiBBeCgpe3Rocm93IEVycm9yKCJhY3QoLi4uKSBpcyBub3Qgc3VwcG9ydGVkIGluIHByb2R1Y3Rpb24gYnVpbGRzIG9mIFJlYWN0LiIpfWplLkNoaWxkcmVuPXttYXA6ZGwsZm9yRWFjaDpmdW5jdGlvbihlLHQscil7ZGwoZSxmdW5jdGlvbigpe3QuYXBwbHkodGhpcyxhcmd1bWVudHMpfSxyKX0sY291bnQ6ZnVuY3Rpb24oZSl7dmFyIHQ9MDtyZXR1cm4gZGwoZSxmdW5jdGlvbigpe3QrK30pLHR9LHRvQXJyYXk6ZnVuY3Rpb24oZSl7cmV0dXJuIGRsKGUsZnVuY3Rpb24odCl7cmV0dXJuIHR9KXx8W119LG9ubHk6ZnVuY3Rpb24oZSl7aWYoIW1tKGUpKXRocm93IEVycm9yKCJSZWFjdC5DaGlsZHJlbi5vbmx5IGV4cGVjdGVkIHRvIHJlY2VpdmUgYSBzaW5nbGUgUmVhY3QgZWxlbWVudCBjaGlsZC4iKTtyZXR1cm4gZX19O2plLkNvbXBvbmVudD1OYTtqZS5GcmFnbWVudD1BYjtqZS5Qcm9maWxlcj1PYjtqZS5QdXJlQ29tcG9uZW50PXVtO2plLlN0cmljdE1vZGU9TWI7amUuU3VzcGVuc2U9RGI7amUuX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQ9V2I7amUuYWN0PUF4O2plLmNsb25lRWxlbWVudD1mdW5jdGlvbihlLHQscil7aWYoZT09bnVsbCl0aHJvdyBFcnJvcigiUmVhY3QuY2xvbmVFbGVtZW50KC4uLik6IFRoZSBhcmd1bWVudCBtdXN0IGJlIGEgUmVhY3QgZWxlbWVudCwgYnV0IHlvdSBwYXNzZWQgIitlKyIuIik7dmFyIG49RXgoe30sZS5wcm9wcykscz1lLmtleSxhPWUucmVmLG89ZS5fb3duZXI7aWYodCE9bnVsbCl7aWYodC5yZWYhPT12b2lkIDAmJihhPXQucmVmLG89Zm0uY3VycmVudCksdC5rZXkhPT12b2lkIDAmJihzPSIiK3Qua2V5KSxlLnR5cGUmJmUudHlwZS5kZWZhdWx0UHJvcHMpdmFyIGw9ZS50eXBlLmRlZmF1bHRQcm9wcztmb3IoYyBpbiB0KVB4LmNhbGwodCxjKSYmIVR4Lmhhc093blByb3BlcnR5KGMpJiYobltjXT10W2NdPT09dm9pZCAwJiZsIT09dm9pZCAwP2xbY106dFtjXSl9dmFyIGM9YXJndW1lbnRzLmxlbmd0aC0yO2lmKGM9PT0xKW4uY2hpbGRyZW49cjtlbHNlIGlmKDE8Yyl7bD1BcnJheShjKTtmb3IodmFyIHU9MDt1PGM7dSsrKWxbdV09YXJndW1lbnRzW3UrMl07bi5jaGlsZHJlbj1sfXJldHVybnskJHR5cGVvZjpLbyx0eXBlOmUudHlwZSxrZXk6cyxyZWY6YSxwcm9wczpuLF9vd25lcjpvfX07amUuY3JlYXRlQ29udGV4dD1mdW5jdGlvbihlKXtyZXR1cm4gZT17JCR0eXBlb2Y6SWIsX2N1cnJlbnRWYWx1ZTplLF9jdXJyZW50VmFsdWUyOmUsX3RocmVhZENvdW50OjAsUHJvdmlkZXI6bnVsbCxDb25zdW1lcjpudWxsLF9kZWZhdWx0VmFsdWU6bnVsbCxfZ2xvYmFsTmFtZTpudWxsfSxlLlByb3ZpZGVyPXskJHR5cGVvZjpGYixfY29udGV4dDplfSxlLkNvbnN1bWVyPWV9O2plLmNyZWF0ZUVsZW1lbnQ9Ung7amUuY3JlYXRlRmFjdG9yeT1mdW5jdGlvbihlKXt2YXIgdD1SeC5iaW5kKG51bGwsZSk7cmV0dXJuIHQudHlwZT1lLHR9O2plLmNyZWF0ZVJlZj1mdW5jdGlvbigpe3JldHVybntjdXJyZW50Om51bGx9fTtqZS5mb3J3YXJkUmVmPWZ1bmN0aW9uKGUpe3JldHVybnskJHR5cGVvZjpMYixyZW5kZXI6ZX19O2plLmlzVmFsaWRFbGVtZW50PW1tO2plLmxhenk9ZnVuY3Rpb24oZSl7cmV0dXJueyQkdHlwZW9mOnpiLF9wYXlsb2FkOntfc3RhdHVzOi0xLF9yZXN1bHQ6ZX0sX2luaXQ6SGJ9fTtqZS5tZW1vPWZ1bmN0aW9uKGUsdCl7cmV0dXJueyQkdHlwZW9mOiRiLHR5cGU6ZSxjb21wYXJlOnQ9PT12b2lkIDA/bnVsbDp0fX07amUuc3RhcnRUcmFuc2l0aW9uPWZ1bmN0aW9uKGUpe3ZhciB0PURsLnRyYW5zaXRpb247RGwudHJhbnNpdGlvbj17fTt0cnl7ZSgpfWZpbmFsbHl7RGwudHJhbnNpdGlvbj10fX07amUudW5zdGFibGVfYWN0PUF4O2plLnVzZUNhbGxiYWNrPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIEd0LmN1cnJlbnQudXNlQ2FsbGJhY2soZSx0KX07amUudXNlQ29udGV4dD1mdW5jdGlvbihlKXtyZXR1cm4gR3QuY3VycmVudC51c2VDb250ZXh0KGUpfTtqZS51c2VEZWJ1Z1ZhbHVlPWZ1bmN0aW9uKCl7fTtqZS51c2VEZWZlcnJlZFZhbHVlPWZ1bmN0aW9uKGUpe3JldHVybiBHdC5jdXJyZW50LnVzZURlZmVycmVkVmFsdWUoZSl9O2plLnVzZUVmZmVjdD1mdW5jdGlvbihlLHQpe3JldHVybiBHdC5jdXJyZW50LnVzZUVmZmVjdChlLHQpfTtqZS51c2VJZD1mdW5jdGlvbigpe3JldHVybiBHdC5jdXJyZW50LnVzZUlkKCl9O2plLnVzZUltcGVyYXRpdmVIYW5kbGU9ZnVuY3Rpb24oZSx0LHIpe3JldHVybiBHdC5jdXJyZW50LnVzZUltcGVyYXRpdmVIYW5kbGUoZSx0LHIpfTtqZS51c2VJbnNlcnRpb25FZmZlY3Q9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gR3QuY3VycmVudC51c2VJbnNlcnRpb25FZmZlY3QoZSx0KX07amUudXNlTGF5b3V0RWZmZWN0PWZ1bmN0aW9uKGUsdCl7cmV0dXJuIEd0LmN1cnJlbnQudXNlTGF5b3V0RWZmZWN0KGUsdCl9O2plLnVzZU1lbW89ZnVuY3Rpb24oZSx0KXtyZXR1cm4gR3QuY3VycmVudC51c2VNZW1vKGUsdCl9O2plLnVzZVJlZHVjZXI9ZnVuY3Rpb24oZSx0LHIpe3JldHVybiBHdC5jdXJyZW50LnVzZVJlZHVjZXIoZSx0LHIpfTtqZS51c2VSZWY9ZnVuY3Rpb24oZSl7cmV0dXJuIEd0LmN1cnJlbnQudXNlUmVmKGUpfTtqZS51c2VTdGF0ZT1mdW5jdGlvbihlKXtyZXR1cm4gR3QuY3VycmVudC51c2VTdGF0ZShlKX07amUudXNlU3luY0V4dGVybmFsU3RvcmU9ZnVuY3Rpb24oZSx0LHIpe3JldHVybiBHdC5jdXJyZW50LnVzZVN5bmNFeHRlcm5hbFN0b3JlKGUsdCxyKX07amUudXNlVHJhbnNpdGlvbj1mdW5jdGlvbigpe3JldHVybiBHdC5jdXJyZW50LnVzZVRyYW5zaXRpb24oKX07amUudmVyc2lvbj0iMTguMy4xIjtTeC5leHBvcnRzPWplO3ZhciB5PVN4LmV4cG9ydHM7Y29uc3Qgc2U9angoeSksTXg9VGIoe19fcHJvdG9fXzpudWxsLGRlZmF1bHQ6c2V9LFt5XSk7LyoqCiAqIEBsaWNlbnNlIFJlYWN0CiAqIHJlYWN0LWpzeC1ydW50aW1lLnByb2R1Y3Rpb24ubWluLmpzCiAqCiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLgogKgogKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGUKICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLgogKi92YXIgcWI9eSxHYj1TeW1ib2wuZm9yKCJyZWFjdC5lbGVtZW50IiksUWI9U3ltYm9sLmZvcigicmVhY3QuZnJhZ21lbnQiKSxaYj1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LEtiPXFiLl9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVELlJlYWN0Q3VycmVudE93bmVyLFliPXtrZXk6ITAscmVmOiEwLF9fc2VsZjohMCxfX3NvdXJjZTohMH07ZnVuY3Rpb24gT3goZSx0LHIpe3ZhciBuLHM9e30sYT1udWxsLG89bnVsbDtyIT09dm9pZCAwJiYoYT0iIityKSx0LmtleSE9PXZvaWQgMCYmKGE9IiIrdC5rZXkpLHQucmVmIT09dm9pZCAwJiYobz10LnJlZik7Zm9yKG4gaW4gdClaYi5jYWxsKHQsbikmJiFZYi5oYXNPd25Qcm9wZXJ0eShuKSYmKHNbbl09dFtuXSk7aWYoZSYmZS5kZWZhdWx0UHJvcHMpZm9yKG4gaW4gdD1lLmRlZmF1bHRQcm9wcyx0KXNbbl09PT12b2lkIDAmJihzW25dPXRbbl0pO3JldHVybnskJHR5cGVvZjpHYix0eXBlOmUsa2V5OmEscmVmOm8scHJvcHM6cyxfb3duZXI6S2IuY3VycmVudH19WmMuRnJhZ21lbnQ9UWI7WmMuanN4PU94O1pjLmpzeHM9T3g7TnguZXhwb3J0cz1aYzt2YXIgaT1OeC5leHBvcnRzLEZ4PXtleHBvcnRzOnt9fSxncj17fSxJeD17ZXhwb3J0czp7fX0sTHg9e307LyoqCiAqIEBsaWNlbnNlIFJlYWN0CiAqIHNjaGVkdWxlci5wcm9kdWN0aW9uLm1pbi5qcwogKgogKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy4KICoKICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlCiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS4KICovKGZ1bmN0aW9uKGUpe2Z1bmN0aW9uIHQoTSwkKXt2YXIgRD1NLmxlbmd0aDtNLnB1c2goJCk7ZTpmb3IoOzA8RDspe3ZhciBSPUQtMT4+PjEsZmU9TVtSXTtpZigwPHMoZmUsJCkpTVtSXT0kLE1bRF09ZmUsRD1SO2Vsc2UgYnJlYWsgZX19ZnVuY3Rpb24gcihNKXtyZXR1cm4gTS5sZW5ndGg9PT0wP251bGw6TVswXX1mdW5jdGlvbiBuKE0pe2lmKE0ubGVuZ3RoPT09MClyZXR1cm4gbnVsbDt2YXIgJD1NWzBdLEQ9TS5wb3AoKTtpZihEIT09JCl7TVswXT1EO2U6Zm9yKHZhciBSPTAsZmU9TS5sZW5ndGgsZHQ9ZmU+Pj4xO1I8ZHQ7KXt2YXIgdHQ9MiooUisxKS0xLF90PU1bdHRdLHh0PXR0KzEsY2U9TVt4dF07aWYoMD5zKF90LEQpKXh0PGZlJiYwPnMoY2UsX3QpPyhNW1JdPWNlLE1beHRdPUQsUj14dCk6KE1bUl09X3QsTVt0dF09RCxSPXR0KTtlbHNlIGlmKHh0PGZlJiYwPnMoY2UsRCkpTVtSXT1jZSxNW3h0XT1ELFI9eHQ7ZWxzZSBicmVhayBlfX1yZXR1cm4gJH1mdW5jdGlvbiBzKE0sJCl7dmFyIEQ9TS5zb3J0SW5kZXgtJC5zb3J0SW5kZXg7cmV0dXJuIEQhPT0wP0Q6TS5pZC0kLmlkfWlmKHR5cGVvZiBwZXJmb3JtYW5jZT09Im9iamVjdCImJnR5cGVvZiBwZXJmb3JtYW5jZS5ub3c9PSJmdW5jdGlvbiIpe3ZhciBhPXBlcmZvcm1hbmNlO2UudW5zdGFibGVfbm93PWZ1bmN0aW9uKCl7cmV0dXJuIGEubm93KCl9fWVsc2V7dmFyIG89RGF0ZSxsPW8ubm93KCk7ZS51bnN0YWJsZV9ub3c9ZnVuY3Rpb24oKXtyZXR1cm4gby5ub3coKS1sfX12YXIgYz1bXSx1PVtdLGQ9MSxmPW51bGwscD0zLHg9ITEsdj0hMSxtPSExLHc9dHlwZW9mIHNldFRpbWVvdXQ9PSJmdW5jdGlvbiI/c2V0VGltZW91dDpudWxsLGg9dHlwZW9mIGNsZWFyVGltZW91dD09ImZ1bmN0aW9uIj9jbGVhclRpbWVvdXQ6bnVsbCxnPXR5cGVvZiBzZXRJbW1lZGlhdGU8InUiP3NldEltbWVkaWF0ZTpudWxsO3R5cGVvZiBuYXZpZ2F0b3I8InUiJiZuYXZpZ2F0b3Iuc2NoZWR1bGluZyE9PXZvaWQgMCYmbmF2aWdhdG9yLnNjaGVkdWxpbmcuaXNJbnB1dFBlbmRpbmchPT12b2lkIDAmJm5hdmlnYXRvci5zY2hlZHVsaW5nLmlzSW5wdXRQZW5kaW5nLmJpbmQobmF2aWdhdG9yLnNjaGVkdWxpbmcpO2Z1bmN0aW9uIGIoTSl7Zm9yKHZhciAkPXIodSk7JCE9PW51bGw7KXtpZigkLmNhbGxiYWNrPT09bnVsbCluKHUpO2Vsc2UgaWYoJC5zdGFydFRpbWU8PU0pbih1KSwkLnNvcnRJbmRleD0kLmV4cGlyYXRpb25UaW1lLHQoYywkKTtlbHNlIGJyZWFrOyQ9cih1KX19ZnVuY3Rpb24gTihNKXtpZihtPSExLGIoTSksIXYpaWYocihjKSE9PW51bGwpdj0hMCxRKFMpO2Vsc2V7dmFyICQ9cih1KTskIT09bnVsbCYmQShOLCQuc3RhcnRUaW1lLU0pfX1mdW5jdGlvbiBTKE0sJCl7dj0hMSxtJiYobT0hMSxoKFQpLFQ9LTEpLHg9ITA7dmFyIEQ9cDt0cnl7Zm9yKGIoJCksZj1yKGMpO2YhPT1udWxsJiYoIShmLmV4cGlyYXRpb25UaW1lPiQpfHxNJiYhaigpKTspe3ZhciBSPWYuY2FsbGJhY2s7aWYodHlwZW9mIFI9PSJmdW5jdGlvbiIpe2YuY2FsbGJhY2s9bnVsbCxwPWYucHJpb3JpdHlMZXZlbDt2YXIgZmU9UihmLmV4cGlyYXRpb25UaW1lPD0kKTskPWUudW5zdGFibGVfbm93KCksdHlwZW9mIGZlPT0iZnVuY3Rpb24iP2YuY2FsbGJhY2s9ZmU6Zj09PXIoYykmJm4oYyksYigkKX1lbHNlIG4oYyk7Zj1yKGMpfWlmKGYhPT1udWxsKXZhciBkdD0hMDtlbHNle3ZhciB0dD1yKHUpO3R0IT09bnVsbCYmQShOLHR0LnN0YXJ0VGltZS0kKSxkdD0hMX1yZXR1cm4gZHR9ZmluYWxseXtmPW51bGwscD1ELHg9ITF9fXZhciBfPSExLGs9bnVsbCxUPS0xLEw9NSxQPS0xO2Z1bmN0aW9uIGooKXtyZXR1cm4hKGUudW5zdGFibGVfbm93KCktUDxMKX1mdW5jdGlvbiBJKCl7aWYoayE9PW51bGwpe3ZhciBNPWUudW5zdGFibGVfbm93KCk7UD1NO3ZhciAkPSEwO3RyeXskPWsoITAsTSl9ZmluYWxseXskP1YoKTooXz0hMSxrPW51bGwpfX1lbHNlIF89ITF9dmFyIFY7aWYodHlwZW9mIGc9PSJmdW5jdGlvbiIpVj1mdW5jdGlvbigpe2coSSl9O2Vsc2UgaWYodHlwZW9mIE1lc3NhZ2VDaGFubmVsPCJ1Iil7dmFyIE89bmV3IE1lc3NhZ2VDaGFubmVsLFo9Ty5wb3J0MjtPLnBvcnQxLm9ubWVzc2FnZT1JLFY9ZnVuY3Rpb24oKXtaLnBvc3RNZXNzYWdlKG51bGwpfX1lbHNlIFY9ZnVuY3Rpb24oKXt3KEksMCl9O2Z1bmN0aW9uIFEoTSl7az1NLF98fChfPSEwLFYoKSl9ZnVuY3Rpb24gQShNLCQpe1Q9dyhmdW5jdGlvbigpe00oZS51bnN0YWJsZV9ub3coKSl9LCQpfWUudW5zdGFibGVfSWRsZVByaW9yaXR5PTUsZS51bnN0YWJsZV9JbW1lZGlhdGVQcmlvcml0eT0xLGUudW5zdGFibGVfTG93UHJpb3JpdHk9NCxlLnVuc3RhYmxlX05vcm1hbFByaW9yaXR5PTMsZS51bnN0YWJsZV9Qcm9maWxpbmc9bnVsbCxlLnVuc3RhYmxlX1VzZXJCbG9ja2luZ1ByaW9yaXR5PTIsZS51bnN0YWJsZV9jYW5jZWxDYWxsYmFjaz1mdW5jdGlvbihNKXtNLmNhbGxiYWNrPW51bGx9LGUudW5zdGFibGVfY29udGludWVFeGVjdXRpb249ZnVuY3Rpb24oKXt2fHx4fHwodj0hMCxRKFMpKX0sZS51bnN0YWJsZV9mb3JjZUZyYW1lUmF0ZT1mdW5jdGlvbihNKXswPk18fDEyNTxNP2NvbnNvbGUuZXJyb3IoImZvcmNlRnJhbWVSYXRlIHRha2VzIGEgcG9zaXRpdmUgaW50IGJldHdlZW4gMCBhbmQgMTI1LCBmb3JjaW5nIGZyYW1lIHJhdGVzIGhpZ2hlciB0aGFuIDEyNSBmcHMgaXMgbm90IHN1cHBvcnRlZCIpOkw9MDxNP01hdGguZmxvb3IoMWUzL00pOjV9LGUudW5zdGFibGVfZ2V0Q3VycmVudFByaW9yaXR5TGV2ZWw9ZnVuY3Rpb24oKXtyZXR1cm4gcH0sZS51bnN0YWJsZV9nZXRGaXJzdENhbGxiYWNrTm9kZT1mdW5jdGlvbigpe3JldHVybiByKGMpfSxlLnVuc3RhYmxlX25leHQ9ZnVuY3Rpb24oTSl7c3dpdGNoKHApe2Nhc2UgMTpjYXNlIDI6Y2FzZSAzOnZhciAkPTM7YnJlYWs7ZGVmYXVsdDokPXB9dmFyIEQ9cDtwPSQ7dHJ5e3JldHVybiBNKCl9ZmluYWxseXtwPUR9fSxlLnVuc3RhYmxlX3BhdXNlRXhlY3V0aW9uPWZ1bmN0aW9uKCl7fSxlLnVuc3RhYmxlX3JlcXVlc3RQYWludD1mdW5jdGlvbigpe30sZS51bnN0YWJsZV9ydW5XaXRoUHJpb3JpdHk9ZnVuY3Rpb24oTSwkKXtzd2l0Y2goTSl7Y2FzZSAxOmNhc2UgMjpjYXNlIDM6Y2FzZSA0OmNhc2UgNTpicmVhaztkZWZhdWx0Ok09M312YXIgRD1wO3A9TTt0cnl7cmV0dXJuICQoKX1maW5hbGx5e3A9RH19LGUudW5zdGFibGVfc2NoZWR1bGVDYWxsYmFjaz1mdW5jdGlvbihNLCQsRCl7dmFyIFI9ZS51bnN0YWJsZV9ub3coKTtzd2l0Y2godHlwZW9mIEQ9PSJvYmplY3QiJiZEIT09bnVsbD8oRD1ELmRlbGF5LEQ9dHlwZW9mIEQ9PSJudW1iZXIiJiYwPEQ/UitEOlIpOkQ9UixNKXtjYXNlIDE6dmFyIGZlPS0xO2JyZWFrO2Nhc2UgMjpmZT0yNTA7YnJlYWs7Y2FzZSA1OmZlPTEwNzM3NDE4MjM7YnJlYWs7Y2FzZSA0OmZlPTFlNDticmVhaztkZWZhdWx0OmZlPTVlM31yZXR1cm4gZmU9RCtmZSxNPXtpZDpkKyssY2FsbGJhY2s6JCxwcmlvcml0eUxldmVsOk0sc3RhcnRUaW1lOkQsZXhwaXJhdGlvblRpbWU6ZmUsc29ydEluZGV4Oi0xfSxEPlI/KE0uc29ydEluZGV4PUQsdCh1LE0pLHIoYyk9PT1udWxsJiZNPT09cih1KSYmKG0/KGgoVCksVD0tMSk6bT0hMCxBKE4sRC1SKSkpOihNLnNvcnRJbmRleD1mZSx0KGMsTSksdnx8eHx8KHY9ITAsUShTKSkpLE19LGUudW5zdGFibGVfc2hvdWxkWWllbGQ9aixlLnVuc3RhYmxlX3dyYXBDYWxsYmFjaz1mdW5jdGlvbihNKXt2YXIgJD1wO3JldHVybiBmdW5jdGlvbigpe3ZhciBEPXA7cD0kO3RyeXtyZXR1cm4gTS5hcHBseSh0aGlzLGFyZ3VtZW50cyl9ZmluYWxseXtwPUR9fX19KShMeCk7SXguZXhwb3J0cz1MeDt2YXIgWGI9SXguZXhwb3J0czsvKioKICogQGxpY2Vuc2UgUmVhY3QKICogcmVhY3QtZG9tLnByb2R1Y3Rpb24ubWluLmpzCiAqCiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLgogKgogKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGUKICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLgogKi92YXIgSmI9eSxocj1YYjtmdW5jdGlvbiBCKGUpe2Zvcih2YXIgdD0iaHR0cHM6Ly9yZWFjdGpzLm9yZy9kb2NzL2Vycm9yLWRlY29kZXIuaHRtbD9pbnZhcmlhbnQ9IitlLHI9MTtyPGFyZ3VtZW50cy5sZW5ndGg7cisrKXQrPSImYXJnc1tdPSIrZW5jb2RlVVJJQ29tcG9uZW50KGFyZ3VtZW50c1tyXSk7cmV0dXJuIk1pbmlmaWVkIFJlYWN0IGVycm9yICMiK2UrIjsgdmlzaXQgIit0KyIgZm9yIHRoZSBmdWxsIG1lc3NhZ2Ugb3IgdXNlIHRoZSBub24tbWluaWZpZWQgZGV2IGVudmlyb25tZW50IGZvciBmdWxsIGVycm9ycyBhbmQgYWRkaXRpb25hbCBoZWxwZnVsIHdhcm5pbmdzLiJ9dmFyIER4PW5ldyBTZXQsbG89e307ZnVuY3Rpb24gaGkoZSx0KXtsYShlLHQpLGxhKGUrIkNhcHR1cmUiLHQpfWZ1bmN0aW9uIGxhKGUsdCl7Zm9yKGxvW2VdPXQsZT0wO2U8dC5sZW5ndGg7ZSsrKUR4LmFkZCh0W2VdKX12YXIgUm49ISh0eXBlb2Ygd2luZG93PiJ1Inx8dHlwZW9mIHdpbmRvdy5kb2N1bWVudD4idSJ8fHR5cGVvZiB3aW5kb3cuZG9jdW1lbnQuY3JlYXRlRWxlbWVudD4idSIpLE1kPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHksZWo9L15bOkEtWl9hLXpcdTAwQzAtXHUwMEQ2XHUwMEQ4LVx1MDBGNlx1MDBGOC1cdTAyRkZcdTAzNzAtXHUwMzdEXHUwMzdGLVx1MUZGRlx1MjAwQy1cdTIwMERcdTIwNzAtXHUyMThGXHUyQzAwLVx1MkZFRlx1MzAwMS1cdUQ3RkZcdUY5MDAtXHVGRENGXHVGREYwLVx1RkZGRF1bOkEtWl9hLXpcdTAwQzAtXHUwMEQ2XHUwMEQ4LVx1MDBGNlx1MDBGOC1cdTAyRkZcdTAzNzAtXHUwMzdEXHUwMzdGLVx1MUZGRlx1MjAwQy1cdTIwMERcdTIwNzAtXHUyMThGXHUyQzAwLVx1MkZFRlx1MzAwMS1cdUQ3RkZcdUY5MDAtXHVGRENGXHVGREYwLVx1RkZGRFwtLjAtOVx1MDBCN1x1MDMwMC1cdTAzNkZcdTIwM0YtXHUyMDQwXSokLyxRaD17fSxaaD17fTtmdW5jdGlvbiB0aihlKXtyZXR1cm4gTWQuY2FsbChaaCxlKT8hMDpNZC5jYWxsKFFoLGUpPyExOmVqLnRlc3QoZSk/WmhbZV09ITA6KFFoW2VdPSEwLCExKX1mdW5jdGlvbiByaihlLHQscixuKXtpZihyIT09bnVsbCYmci50eXBlPT09MClyZXR1cm4hMTtzd2l0Y2godHlwZW9mIHQpe2Nhc2UiZnVuY3Rpb24iOmNhc2Uic3ltYm9sIjpyZXR1cm4hMDtjYXNlImJvb2xlYW4iOnJldHVybiBuPyExOnIhPT1udWxsPyFyLmFjY2VwdHNCb29sZWFuczooZT1lLnRvTG93ZXJDYXNlKCkuc2xpY2UoMCw1KSxlIT09ImRhdGEtIiYmZSE9PSJhcmlhLSIpO2RlZmF1bHQ6cmV0dXJuITF9fWZ1bmN0aW9uIG5qKGUsdCxyLG4pe2lmKHQ9PT1udWxsfHx0eXBlb2YgdD4idSJ8fHJqKGUsdCxyLG4pKXJldHVybiEwO2lmKG4pcmV0dXJuITE7aWYociE9PW51bGwpc3dpdGNoKHIudHlwZSl7Y2FzZSAzOnJldHVybiF0O2Nhc2UgNDpyZXR1cm4gdD09PSExO2Nhc2UgNTpyZXR1cm4gaXNOYU4odCk7Y2FzZSA2OnJldHVybiBpc05hTih0KXx8MT50fXJldHVybiExfWZ1bmN0aW9uIFF0KGUsdCxyLG4scyxhLG8pe3RoaXMuYWNjZXB0c0Jvb2xlYW5zPXQ9PT0yfHx0PT09M3x8dD09PTQsdGhpcy5hdHRyaWJ1dGVOYW1lPW4sdGhpcy5hdHRyaWJ1dGVOYW1lc3BhY2U9cyx0aGlzLm11c3RVc2VQcm9wZXJ0eT1yLHRoaXMucHJvcGVydHlOYW1lPWUsdGhpcy50eXBlPXQsdGhpcy5zYW5pdGl6ZVVSTD1hLHRoaXMucmVtb3ZlRW1wdHlTdHJpbmc9b312YXIgQ3Q9e307ImNoaWxkcmVuIGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MIGRlZmF1bHRWYWx1ZSBkZWZhdWx0Q2hlY2tlZCBpbm5lckhUTUwgc3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nIHN1cHByZXNzSHlkcmF0aW9uV2FybmluZyBzdHlsZSIuc3BsaXQoIiAiKS5mb3JFYWNoKGZ1bmN0aW9uKGUpe0N0W2VdPW5ldyBRdChlLDAsITEsZSxudWxsLCExLCExKX0pO1tbImFjY2VwdENoYXJzZXQiLCJhY2NlcHQtY2hhcnNldCJdLFsiY2xhc3NOYW1lIiwiY2xhc3MiXSxbImh0bWxGb3IiLCJmb3IiXSxbImh0dHBFcXVpdiIsImh0dHAtZXF1aXYiXV0uZm9yRWFjaChmdW5jdGlvbihlKXt2YXIgdD1lWzBdO0N0W3RdPW5ldyBRdCh0LDEsITEsZVsxXSxudWxsLCExLCExKX0pO1siY29udGVudEVkaXRhYmxlIiwiZHJhZ2dhYmxlIiwic3BlbGxDaGVjayIsInZhbHVlIl0uZm9yRWFjaChmdW5jdGlvbihlKXtDdFtlXT1uZXcgUXQoZSwyLCExLGUudG9Mb3dlckNhc2UoKSxudWxsLCExLCExKX0pO1siYXV0b1JldmVyc2UiLCJleHRlcm5hbFJlc291cmNlc1JlcXVpcmVkIiwiZm9jdXNhYmxlIiwicHJlc2VydmVBbHBoYSJdLmZvckVhY2goZnVuY3Rpb24oZSl7Q3RbZV09bmV3IFF0KGUsMiwhMSxlLG51bGwsITEsITEpfSk7ImFsbG93RnVsbFNjcmVlbiBhc3luYyBhdXRvRm9jdXMgYXV0b1BsYXkgY29udHJvbHMgZGVmYXVsdCBkZWZlciBkaXNhYmxlZCBkaXNhYmxlUGljdHVyZUluUGljdHVyZSBkaXNhYmxlUmVtb3RlUGxheWJhY2sgZm9ybU5vVmFsaWRhdGUgaGlkZGVuIGxvb3Agbm9Nb2R1bGUgbm9WYWxpZGF0ZSBvcGVuIHBsYXlzSW5saW5lIHJlYWRPbmx5IHJlcXVpcmVkIHJldmVyc2VkIHNjb3BlZCBzZWFtbGVzcyBpdGVtU2NvcGUiLnNwbGl0KCIgIikuZm9yRWFjaChmdW5jdGlvbihlKXtDdFtlXT1uZXcgUXQoZSwzLCExLGUudG9Mb3dlckNhc2UoKSxudWxsLCExLCExKX0pO1siY2hlY2tlZCIsIm11bHRpcGxlIiwibXV0ZWQiLCJzZWxlY3RlZCJdLmZvckVhY2goZnVuY3Rpb24oZSl7Q3RbZV09bmV3IFF0KGUsMywhMCxlLG51bGwsITEsITEpfSk7WyJjYXB0dXJlIiwiZG93bmxvYWQiXS5mb3JFYWNoKGZ1bmN0aW9uKGUpe0N0W2VdPW5ldyBRdChlLDQsITEsZSxudWxsLCExLCExKX0pO1siY29scyIsInJvd3MiLCJzaXplIiwic3BhbiJdLmZvckVhY2goZnVuY3Rpb24oZSl7Q3RbZV09bmV3IFF0KGUsNiwhMSxlLG51bGwsITEsITEpfSk7WyJyb3dTcGFuIiwic3RhcnQiXS5mb3JFYWNoKGZ1bmN0aW9uKGUpe0N0W2VdPW5ldyBRdChlLDUsITEsZS50b0xvd2VyQ2FzZSgpLG51bGwsITEsITEpfSk7dmFyIGhtPS9bXC06XShbYS16XSkvZztmdW5jdGlvbiBwbShlKXtyZXR1cm4gZVsxXS50b1VwcGVyQ2FzZSgpfSJhY2NlbnQtaGVpZ2h0IGFsaWdubWVudC1iYXNlbGluZSBhcmFiaWMtZm9ybSBiYXNlbGluZS1zaGlmdCBjYXAtaGVpZ2h0IGNsaXAtcGF0aCBjbGlwLXJ1bGUgY29sb3ItaW50ZXJwb2xhdGlvbiBjb2xvci1pbnRlcnBvbGF0aW9uLWZpbHRlcnMgY29sb3ItcHJvZmlsZSBjb2xvci1yZW5kZXJpbmcgZG9taW5hbnQtYmFzZWxpbmUgZW5hYmxlLWJhY2tncm91bmQgZmlsbC1vcGFjaXR5IGZpbGwtcnVsZSBmbG9vZC1jb2xvciBmbG9vZC1vcGFjaXR5IGZvbnQtZmFtaWx5IGZvbnQtc2l6ZSBmb250LXNpemUtYWRqdXN0IGZvbnQtc3RyZXRjaCBmb250LXN0eWxlIGZvbnQtdmFyaWFudCBmb250LXdlaWdodCBnbHlwaC1uYW1lIGdseXBoLW9yaWVudGF0aW9uLWhvcml6b250YWwgZ2x5cGgtb3JpZW50YXRpb24tdmVydGljYWwgaG9yaXotYWR2LXggaG9yaXotb3JpZ2luLXggaW1hZ2UtcmVuZGVyaW5nIGxldHRlci1zcGFjaW5nIGxpZ2h0aW5nLWNvbG9yIG1hcmtlci1lbmQgbWFya2VyLW1pZCBtYXJrZXItc3RhcnQgb3ZlcmxpbmUtcG9zaXRpb24gb3ZlcmxpbmUtdGhpY2tuZXNzIHBhaW50LW9yZGVyIHBhbm9zZS0xIHBvaW50ZXItZXZlbnRzIHJlbmRlcmluZy1pbnRlbnQgc2hhcGUtcmVuZGVyaW5nIHN0b3AtY29sb3Igc3RvcC1vcGFjaXR5IHN0cmlrZXRocm91Z2gtcG9zaXRpb24gc3RyaWtldGhyb3VnaC10aGlja25lc3Mgc3Ryb2tlLWRhc2hhcnJheSBzdHJva2UtZGFzaG9mZnNldCBzdHJva2UtbGluZWNhcCBzdHJva2UtbGluZWpvaW4gc3Ryb2tlLW1pdGVybGltaXQgc3Ryb2tlLW9wYWNpdHkgc3Ryb2tlLXdpZHRoIHRleHQtYW5jaG9yIHRleHQtZGVjb3JhdGlvbiB0ZXh0LXJlbmRlcmluZyB1bmRlcmxpbmUtcG9zaXRpb24gdW5kZXJsaW5lLXRoaWNrbmVzcyB1bmljb2RlLWJpZGkgdW5pY29kZS1yYW5nZSB1bml0cy1wZXItZW0gdi1hbHBoYWJldGljIHYtaGFuZ2luZyB2LWlkZW9ncmFwaGljIHYtbWF0aGVtYXRpY2FsIHZlY3Rvci1lZmZlY3QgdmVydC1hZHYteSB2ZXJ0LW9yaWdpbi14IHZlcnQtb3JpZ2luLXkgd29yZC1zcGFjaW5nIHdyaXRpbmctbW9kZSB4bWxuczp4bGluayB4LWhlaWdodCIuc3BsaXQoIiAiKS5mb3JFYWNoKGZ1bmN0aW9uKGUpe3ZhciB0PWUucmVwbGFjZShobSxwbSk7Q3RbdF09bmV3IFF0KHQsMSwhMSxlLG51bGwsITEsITEpfSk7InhsaW5rOmFjdHVhdGUgeGxpbms6YXJjcm9sZSB4bGluazpyb2xlIHhsaW5rOnNob3cgeGxpbms6dGl0bGUgeGxpbms6dHlwZSIuc3BsaXQoIiAiKS5mb3JFYWNoKGZ1bmN0aW9uKGUpe3ZhciB0PWUucmVwbGFjZShobSxwbSk7Q3RbdF09bmV3IFF0KHQsMSwhMSxlLCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiwhMSwhMSl9KTtbInhtbDpiYXNlIiwieG1sOmxhbmciLCJ4bWw6c3BhY2UiXS5mb3JFYWNoKGZ1bmN0aW9uKGUpe3ZhciB0PWUucmVwbGFjZShobSxwbSk7Q3RbdF09bmV3IFF0KHQsMSwhMSxlLCJodHRwOi8vd3d3LnczLm9yZy9YTUwvMTk5OC9uYW1lc3BhY2UiLCExLCExKX0pO1sidGFiSW5kZXgiLCJjcm9zc09yaWdpbiJdLmZvckVhY2goZnVuY3Rpb24oZSl7Q3RbZV09bmV3IFF0KGUsMSwhMSxlLnRvTG93ZXJDYXNlKCksbnVsbCwhMSwhMSl9KTtDdC54bGlua0hyZWY9bmV3IFF0KCJ4bGlua0hyZWYiLDEsITEsInhsaW5rOmhyZWYiLCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiwhMCwhMSk7WyJzcmMiLCJocmVmIiwiYWN0aW9uIiwiZm9ybUFjdGlvbiJdLmZvckVhY2goZnVuY3Rpb24oZSl7Q3RbZV09bmV3IFF0KGUsMSwhMSxlLnRvTG93ZXJDYXNlKCksbnVsbCwhMCwhMCl9KTtmdW5jdGlvbiBnbShlLHQscixuKXt2YXIgcz1DdC5oYXNPd25Qcm9wZXJ0eSh0KT9DdFt0XTpudWxsOyhzIT09bnVsbD9zLnR5cGUhPT0wOm58fCEoMjx0Lmxlbmd0aCl8fHRbMF0hPT0ibyImJnRbMF0hPT0iTyJ8fHRbMV0hPT0ibiImJnRbMV0hPT0iTiIpJiYobmoodCxyLHMsbikmJihyPW51bGwpLG58fHM9PT1udWxsP3RqKHQpJiYocj09PW51bGw/ZS5yZW1vdmVBdHRyaWJ1dGUodCk6ZS5zZXRBdHRyaWJ1dGUodCwiIityKSk6cy5tdXN0VXNlUHJvcGVydHk/ZVtzLnByb3BlcnR5TmFtZV09cj09PW51bGw/cy50eXBlPT09Mz8hMToiIjpyOih0PXMuYXR0cmlidXRlTmFtZSxuPXMuYXR0cmlidXRlTmFtZXNwYWNlLHI9PT1udWxsP2UucmVtb3ZlQXR0cmlidXRlKHQpOihzPXMudHlwZSxyPXM9PT0zfHxzPT09NCYmcj09PSEwPyIiOiIiK3Isbj9lLnNldEF0dHJpYnV0ZU5TKG4sdCxyKTplLnNldEF0dHJpYnV0ZSh0LHIpKSkpfXZhciAkbj1KYi5fX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRCxmbD1TeW1ib2wuZm9yKCJyZWFjdC5lbGVtZW50IiksTmk9U3ltYm9sLmZvcigicmVhY3QucG9ydGFsIiksU2k9U3ltYm9sLmZvcigicmVhY3QuZnJhZ21lbnQiKSx4bT1TeW1ib2wuZm9yKCJyZWFjdC5zdHJpY3RfbW9kZSIpLE9kPVN5bWJvbC5mb3IoInJlYWN0LnByb2ZpbGVyIiksJHg9U3ltYm9sLmZvcigicmVhY3QucHJvdmlkZXIiKSx6eD1TeW1ib2wuZm9yKCJyZWFjdC5jb250ZXh0Iiksdm09U3ltYm9sLmZvcigicmVhY3QuZm9yd2FyZF9yZWYiKSxGZD1TeW1ib2wuZm9yKCJyZWFjdC5zdXNwZW5zZSIpLElkPVN5bWJvbC5mb3IoInJlYWN0LnN1c3BlbnNlX2xpc3QiKSx5bT1TeW1ib2wuZm9yKCJyZWFjdC5tZW1vIiksUW49U3ltYm9sLmZvcigicmVhY3QubGF6eSIpLFZ4PVN5bWJvbC5mb3IoInJlYWN0Lm9mZnNjcmVlbiIpLEtoPVN5bWJvbC5pdGVyYXRvcjtmdW5jdGlvbiBBYShlKXtyZXR1cm4gZT09PW51bGx8fHR5cGVvZiBlIT0ib2JqZWN0Ij9udWxsOihlPUtoJiZlW0toXXx8ZVsiQEBpdGVyYXRvciJdLHR5cGVvZiBlPT0iZnVuY3Rpb24iP2U6bnVsbCl9dmFyIGF0PU9iamVjdC5hc3NpZ24sT3U7ZnVuY3Rpb24gSGEoZSl7aWYoT3U9PT12b2lkIDApdHJ5e3Rocm93IEVycm9yKCl9Y2F0Y2gocil7dmFyIHQ9ci5zdGFjay50cmltKCkubWF0Y2goL1xuKCAqKGF0ICk/KS8pO091PXQmJnRbMV18fCIifXJldHVybmAKYCtPdStlfXZhciBGdT0hMTtmdW5jdGlvbiBJdShlLHQpe2lmKCFlfHxGdSlyZXR1cm4iIjtGdT0hMDt2YXIgcj1FcnJvci5wcmVwYXJlU3RhY2tUcmFjZTtFcnJvci5wcmVwYXJlU3RhY2tUcmFjZT12b2lkIDA7dHJ5e2lmKHQpaWYodD1mdW5jdGlvbigpe3Rocm93IEVycm9yKCl9LE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LnByb3RvdHlwZSwicHJvcHMiLHtzZXQ6ZnVuY3Rpb24oKXt0aHJvdyBFcnJvcigpfX0pLHR5cGVvZiBSZWZsZWN0PT0ib2JqZWN0IiYmUmVmbGVjdC5jb25zdHJ1Y3Qpe3RyeXtSZWZsZWN0LmNvbnN0cnVjdCh0LFtdKX1jYXRjaCh1KXt2YXIgbj11fVJlZmxlY3QuY29uc3RydWN0KGUsW10sdCl9ZWxzZXt0cnl7dC5jYWxsKCl9Y2F0Y2godSl7bj11fWUuY2FsbCh0LnByb3RvdHlwZSl9ZWxzZXt0cnl7dGhyb3cgRXJyb3IoKX1jYXRjaCh1KXtuPXV9ZSgpfX1jYXRjaCh1KXtpZih1JiZuJiZ0eXBlb2YgdS5zdGFjaz09InN0cmluZyIpe2Zvcih2YXIgcz11LnN0YWNrLnNwbGl0KGAKYCksYT1uLnN0YWNrLnNwbGl0KGAKYCksbz1zLmxlbmd0aC0xLGw9YS5sZW5ndGgtMTsxPD1vJiYwPD1sJiZzW29dIT09YVtsXTspbC0tO2Zvcig7MTw9byYmMDw9bDtvLS0sbC0tKWlmKHNbb10hPT1hW2xdKXtpZihvIT09MXx8bCE9PTEpZG8gaWYoby0tLGwtLSwwPmx8fHNbb10hPT1hW2xdKXt2YXIgYz1gCmArc1tvXS5yZXBsYWNlKCIgYXQgbmV3ICIsIiBhdCAiKTtyZXR1cm4gZS5kaXNwbGF5TmFtZSYmYy5pbmNsdWRlcygiPGFub255bW91cz4iKSYmKGM9Yy5yZXBsYWNlKCI8YW5vbnltb3VzPiIsZS5kaXNwbGF5TmFtZSkpLGN9d2hpbGUoMTw9byYmMDw9bCk7YnJlYWt9fX1maW5hbGx5e0Z1PSExLEVycm9yLnByZXBhcmVTdGFja1RyYWNlPXJ9cmV0dXJuKGU9ZT9lLmRpc3BsYXlOYW1lfHxlLm5hbWU6IiIpP0hhKGUpOiIifWZ1bmN0aW9uIHNqKGUpe3N3aXRjaChlLnRhZyl7Y2FzZSA1OnJldHVybiBIYShlLnR5cGUpO2Nhc2UgMTY6cmV0dXJuIEhhKCJMYXp5Iik7Y2FzZSAxMzpyZXR1cm4gSGEoIlN1c3BlbnNlIik7Y2FzZSAxOTpyZXR1cm4gSGEoIlN1c3BlbnNlTGlzdCIpO2Nhc2UgMDpjYXNlIDI6Y2FzZSAxNTpyZXR1cm4gZT1JdShlLnR5cGUsITEpLGU7Y2FzZSAxMTpyZXR1cm4gZT1JdShlLnR5cGUucmVuZGVyLCExKSxlO2Nhc2UgMTpyZXR1cm4gZT1JdShlLnR5cGUsITApLGU7ZGVmYXVsdDpyZXR1cm4iIn19ZnVuY3Rpb24gTGQoZSl7aWYoZT09bnVsbClyZXR1cm4gbnVsbDtpZih0eXBlb2YgZT09ImZ1bmN0aW9uIilyZXR1cm4gZS5kaXNwbGF5TmFtZXx8ZS5uYW1lfHxudWxsO2lmKHR5cGVvZiBlPT0ic3RyaW5nIilyZXR1cm4gZTtzd2l0Y2goZSl7Y2FzZSBTaTpyZXR1cm4iRnJhZ21lbnQiO2Nhc2UgTmk6cmV0dXJuIlBvcnRhbCI7Y2FzZSBPZDpyZXR1cm4iUHJvZmlsZXIiO2Nhc2UgeG06cmV0dXJuIlN0cmljdE1vZGUiO2Nhc2UgRmQ6cmV0dXJuIlN1c3BlbnNlIjtjYXNlIElkOnJldHVybiJTdXNwZW5zZUxpc3QifWlmKHR5cGVvZiBlPT0ib2JqZWN0Iilzd2l0Y2goZS4kJHR5cGVvZil7Y2FzZSB6eDpyZXR1cm4oZS5kaXNwbGF5TmFtZXx8IkNvbnRleHQiKSsiLkNvbnN1bWVyIjtjYXNlICR4OnJldHVybihlLl9jb250ZXh0LmRpc3BsYXlOYW1lfHwiQ29udGV4dCIpKyIuUHJvdmlkZXIiO2Nhc2Ugdm06dmFyIHQ9ZS5yZW5kZXI7cmV0dXJuIGU9ZS5kaXNwbGF5TmFtZSxlfHwoZT10LmRpc3BsYXlOYW1lfHx0Lm5hbWV8fCIiLGU9ZSE9PSIiPyJGb3J3YXJkUmVmKCIrZSsiKSI6IkZvcndhcmRSZWYiKSxlO2Nhc2UgeW06cmV0dXJuIHQ9ZS5kaXNwbGF5TmFtZXx8bnVsbCx0IT09bnVsbD90OkxkKGUudHlwZSl8fCJNZW1vIjtjYXNlIFFuOnQ9ZS5fcGF5bG9hZCxlPWUuX2luaXQ7dHJ5e3JldHVybiBMZChlKHQpKX1jYXRjaHt9fXJldHVybiBudWxsfWZ1bmN0aW9uIGlqKGUpe3ZhciB0PWUudHlwZTtzd2l0Y2goZS50YWcpe2Nhc2UgMjQ6cmV0dXJuIkNhY2hlIjtjYXNlIDk6cmV0dXJuKHQuZGlzcGxheU5hbWV8fCJDb250ZXh0IikrIi5Db25zdW1lciI7Y2FzZSAxMDpyZXR1cm4odC5fY29udGV4dC5kaXNwbGF5TmFtZXx8IkNvbnRleHQiKSsiLlByb3ZpZGVyIjtjYXNlIDE4OnJldHVybiJEZWh5ZHJhdGVkRnJhZ21lbnQiO2Nhc2UgMTE6cmV0dXJuIGU9dC5yZW5kZXIsZT1lLmRpc3BsYXlOYW1lfHxlLm5hbWV8fCIiLHQuZGlzcGxheU5hbWV8fChlIT09IiI/IkZvcndhcmRSZWYoIitlKyIpIjoiRm9yd2FyZFJlZiIpO2Nhc2UgNzpyZXR1cm4iRnJhZ21lbnQiO2Nhc2UgNTpyZXR1cm4gdDtjYXNlIDQ6cmV0dXJuIlBvcnRhbCI7Y2FzZSAzOnJldHVybiJSb290IjtjYXNlIDY6cmV0dXJuIlRleHQiO2Nhc2UgMTY6cmV0dXJuIExkKHQpO2Nhc2UgODpyZXR1cm4gdD09PXhtPyJTdHJpY3RNb2RlIjoiTW9kZSI7Y2FzZSAyMjpyZXR1cm4iT2Zmc2NyZWVuIjtjYXNlIDEyOnJldHVybiJQcm9maWxlciI7Y2FzZSAyMTpyZXR1cm4iU2NvcGUiO2Nhc2UgMTM6cmV0dXJuIlN1c3BlbnNlIjtjYXNlIDE5OnJldHVybiJTdXNwZW5zZUxpc3QiO2Nhc2UgMjU6cmV0dXJuIlRyYWNpbmdNYXJrZXIiO2Nhc2UgMTpjYXNlIDA6Y2FzZSAxNzpjYXNlIDI6Y2FzZSAxNDpjYXNlIDE1OmlmKHR5cGVvZiB0PT0iZnVuY3Rpb24iKXJldHVybiB0LmRpc3BsYXlOYW1lfHx0Lm5hbWV8fG51bGw7aWYodHlwZW9mIHQ9PSJzdHJpbmciKXJldHVybiB0fXJldHVybiBudWxsfWZ1bmN0aW9uIHdzKGUpe3N3aXRjaCh0eXBlb2YgZSl7Y2FzZSJib29sZWFuIjpjYXNlIm51bWJlciI6Y2FzZSJzdHJpbmciOmNhc2UidW5kZWZpbmVkIjpyZXR1cm4gZTtjYXNlIm9iamVjdCI6cmV0dXJuIGU7ZGVmYXVsdDpyZXR1cm4iIn19ZnVuY3Rpb24gVXgoZSl7dmFyIHQ9ZS50eXBlO3JldHVybihlPWUubm9kZU5hbWUpJiZlLnRvTG93ZXJDYXNlKCk9PT0iaW5wdXQiJiYodD09PSJjaGVja2JveCJ8fHQ9PT0icmFkaW8iKX1mdW5jdGlvbiBhaihlKXt2YXIgdD1VeChlKT8iY2hlY2tlZCI6InZhbHVlIixyPU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoZS5jb25zdHJ1Y3Rvci5wcm90b3R5cGUsdCksbj0iIitlW3RdO2lmKCFlLmhhc093blByb3BlcnR5KHQpJiZ0eXBlb2YgcjwidSImJnR5cGVvZiByLmdldD09ImZ1bmN0aW9uIiYmdHlwZW9mIHIuc2V0PT0iZnVuY3Rpb24iKXt2YXIgcz1yLmdldCxhPXIuc2V0O3JldHVybiBPYmplY3QuZGVmaW5lUHJvcGVydHkoZSx0LHtjb25maWd1cmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHMuY2FsbCh0aGlzKX0sc2V0OmZ1bmN0aW9uKG8pe249IiIrbyxhLmNhbGwodGhpcyxvKX19KSxPYmplY3QuZGVmaW5lUHJvcGVydHkoZSx0LHtlbnVtZXJhYmxlOnIuZW51bWVyYWJsZX0pLHtnZXRWYWx1ZTpmdW5jdGlvbigpe3JldHVybiBufSxzZXRWYWx1ZTpmdW5jdGlvbihvKXtuPSIiK299LHN0b3BUcmFja2luZzpmdW5jdGlvbigpe2UuX3ZhbHVlVHJhY2tlcj1udWxsLGRlbGV0ZSBlW3RdfX19fWZ1bmN0aW9uIG1sKGUpe2UuX3ZhbHVlVHJhY2tlcnx8KGUuX3ZhbHVlVHJhY2tlcj1haihlKSl9ZnVuY3Rpb24gQngoZSl7aWYoIWUpcmV0dXJuITE7dmFyIHQ9ZS5fdmFsdWVUcmFja2VyO2lmKCF0KXJldHVybiEwO3ZhciByPXQuZ2V0VmFsdWUoKSxuPSIiO3JldHVybiBlJiYobj1VeChlKT9lLmNoZWNrZWQ/InRydWUiOiJmYWxzZSI6ZS52YWx1ZSksZT1uLGUhPT1yPyh0LnNldFZhbHVlKGUpLCEwKTohMX1mdW5jdGlvbiBuYyhlKXtpZihlPWV8fCh0eXBlb2YgZG9jdW1lbnQ8InUiP2RvY3VtZW50OnZvaWQgMCksdHlwZW9mIGU+InUiKXJldHVybiBudWxsO3RyeXtyZXR1cm4gZS5hY3RpdmVFbGVtZW50fHxlLmJvZHl9Y2F0Y2h7cmV0dXJuIGUuYm9keX19ZnVuY3Rpb24gRGQoZSx0KXt2YXIgcj10LmNoZWNrZWQ7cmV0dXJuIGF0KHt9LHQse2RlZmF1bHRDaGVja2VkOnZvaWQgMCxkZWZhdWx0VmFsdWU6dm9pZCAwLHZhbHVlOnZvaWQgMCxjaGVja2VkOnI/P2UuX3dyYXBwZXJTdGF0ZS5pbml0aWFsQ2hlY2tlZH0pfWZ1bmN0aW9uIFloKGUsdCl7dmFyIHI9dC5kZWZhdWx0VmFsdWU9PW51bGw/IiI6dC5kZWZhdWx0VmFsdWUsbj10LmNoZWNrZWQhPW51bGw/dC5jaGVja2VkOnQuZGVmYXVsdENoZWNrZWQ7cj13cyh0LnZhbHVlIT1udWxsP3QudmFsdWU6ciksZS5fd3JhcHBlclN0YXRlPXtpbml0aWFsQ2hlY2tlZDpuLGluaXRpYWxWYWx1ZTpyLGNvbnRyb2xsZWQ6dC50eXBlPT09ImNoZWNrYm94Inx8dC50eXBlPT09InJhZGlvIj90LmNoZWNrZWQhPW51bGw6dC52YWx1ZSE9bnVsbH19ZnVuY3Rpb24gSHgoZSx0KXt0PXQuY2hlY2tlZCx0IT1udWxsJiZnbShlLCJjaGVja2VkIix0LCExKX1mdW5jdGlvbiAkZChlLHQpe0h4KGUsdCk7dmFyIHI9d3ModC52YWx1ZSksbj10LnR5cGU7aWYociE9bnVsbCluPT09Im51bWJlciI/KHI9PT0wJiZlLnZhbHVlPT09IiJ8fGUudmFsdWUhPXIpJiYoZS52YWx1ZT0iIityKTplLnZhbHVlIT09IiIrciYmKGUudmFsdWU9IiIrcik7ZWxzZSBpZihuPT09InN1Ym1pdCJ8fG49PT0icmVzZXQiKXtlLnJlbW92ZUF0dHJpYnV0ZSgidmFsdWUiKTtyZXR1cm59dC5oYXNPd25Qcm9wZXJ0eSgidmFsdWUiKT96ZChlLHQudHlwZSxyKTp0Lmhhc093blByb3BlcnR5KCJkZWZhdWx0VmFsdWUiKSYmemQoZSx0LnR5cGUsd3ModC5kZWZhdWx0VmFsdWUpKSx0LmNoZWNrZWQ9PW51bGwmJnQuZGVmYXVsdENoZWNrZWQhPW51bGwmJihlLmRlZmF1bHRDaGVja2VkPSEhdC5kZWZhdWx0Q2hlY2tlZCl9ZnVuY3Rpb24gWGgoZSx0LHIpe2lmKHQuaGFzT3duUHJvcGVydHkoInZhbHVlIil8fHQuaGFzT3duUHJvcGVydHkoImRlZmF1bHRWYWx1ZSIpKXt2YXIgbj10LnR5cGU7aWYoIShuIT09InN1Ym1pdCImJm4hPT0icmVzZXQifHx0LnZhbHVlIT09dm9pZCAwJiZ0LnZhbHVlIT09bnVsbCkpcmV0dXJuO3Q9IiIrZS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZSxyfHx0PT09ZS52YWx1ZXx8KGUudmFsdWU9dCksZS5kZWZhdWx0VmFsdWU9dH1yPWUubmFtZSxyIT09IiImJihlLm5hbWU9IiIpLGUuZGVmYXVsdENoZWNrZWQ9ISFlLl93cmFwcGVyU3RhdGUuaW5pdGlhbENoZWNrZWQsciE9PSIiJiYoZS5uYW1lPXIpfWZ1bmN0aW9uIHpkKGUsdCxyKXsodCE9PSJudW1iZXIifHxuYyhlLm93bmVyRG9jdW1lbnQpIT09ZSkmJihyPT1udWxsP2UuZGVmYXVsdFZhbHVlPSIiK2UuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWU6ZS5kZWZhdWx0VmFsdWUhPT0iIityJiYoZS5kZWZhdWx0VmFsdWU9IiIrcikpfXZhciBXYT1BcnJheS5pc0FycmF5O2Z1bmN0aW9uIExpKGUsdCxyLG4pe2lmKGU9ZS5vcHRpb25zLHQpe3Q9e307Zm9yKHZhciBzPTA7czxyLmxlbmd0aDtzKyspdFsiJCIrcltzXV09ITA7Zm9yKHI9MDtyPGUubGVuZ3RoO3IrKylzPXQuaGFzT3duUHJvcGVydHkoIiQiK2Vbcl0udmFsdWUpLGVbcl0uc2VsZWN0ZWQhPT1zJiYoZVtyXS5zZWxlY3RlZD1zKSxzJiZuJiYoZVtyXS5kZWZhdWx0U2VsZWN0ZWQ9ITApfWVsc2V7Zm9yKHI9IiIrd3MociksdD1udWxsLHM9MDtzPGUubGVuZ3RoO3MrKyl7aWYoZVtzXS52YWx1ZT09PXIpe2Vbc10uc2VsZWN0ZWQ9ITAsbiYmKGVbc10uZGVmYXVsdFNlbGVjdGVkPSEwKTtyZXR1cm59dCE9PW51bGx8fGVbc10uZGlzYWJsZWR8fCh0PWVbc10pfXQhPT1udWxsJiYodC5zZWxlY3RlZD0hMCl9fWZ1bmN0aW9uIFZkKGUsdCl7aWYodC5kYW5nZXJvdXNseVNldElubmVySFRNTCE9bnVsbCl0aHJvdyBFcnJvcihCKDkxKSk7cmV0dXJuIGF0KHt9LHQse3ZhbHVlOnZvaWQgMCxkZWZhdWx0VmFsdWU6dm9pZCAwLGNoaWxkcmVuOiIiK2UuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWV9KX1mdW5jdGlvbiBKaChlLHQpe3ZhciByPXQudmFsdWU7aWYocj09bnVsbCl7aWYocj10LmNoaWxkcmVuLHQ9dC5kZWZhdWx0VmFsdWUsciE9bnVsbCl7aWYodCE9bnVsbCl0aHJvdyBFcnJvcihCKDkyKSk7aWYoV2Eocikpe2lmKDE8ci5sZW5ndGgpdGhyb3cgRXJyb3IoQig5MykpO3I9clswXX10PXJ9dD09bnVsbCYmKHQ9IiIpLHI9dH1lLl93cmFwcGVyU3RhdGU9e2luaXRpYWxWYWx1ZTp3cyhyKX19ZnVuY3Rpb24gV3goZSx0KXt2YXIgcj13cyh0LnZhbHVlKSxuPXdzKHQuZGVmYXVsdFZhbHVlKTtyIT1udWxsJiYocj0iIityLHIhPT1lLnZhbHVlJiYoZS52YWx1ZT1yKSx0LmRlZmF1bHRWYWx1ZT09bnVsbCYmZS5kZWZhdWx0VmFsdWUhPT1yJiYoZS5kZWZhdWx0VmFsdWU9cikpLG4hPW51bGwmJihlLmRlZmF1bHRWYWx1ZT0iIituKX1mdW5jdGlvbiBlcChlKXt2YXIgdD1lLnRleHRDb250ZW50O3Q9PT1lLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlJiZ0IT09IiImJnQhPT1udWxsJiYoZS52YWx1ZT10KX1mdW5jdGlvbiBxeChlKXtzd2l0Y2goZSl7Y2FzZSJzdmciOnJldHVybiJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyI7Y2FzZSJtYXRoIjpyZXR1cm4iaHR0cDovL3d3dy53My5vcmcvMTk5OC9NYXRoL01hdGhNTCI7ZGVmYXVsdDpyZXR1cm4iaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbCJ9fWZ1bmN0aW9uIFVkKGUsdCl7cmV0dXJuIGU9PW51bGx8fGU9PT0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbCI/cXgodCk6ZT09PSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyImJnQ9PT0iZm9yZWlnbk9iamVjdCI/Imh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWwiOmV9dmFyIGhsLEd4PWZ1bmN0aW9uKGUpe3JldHVybiB0eXBlb2YgTVNBcHA8InUiJiZNU0FwcC5leGVjVW5zYWZlTG9jYWxGdW5jdGlvbj9mdW5jdGlvbih0LHIsbixzKXtNU0FwcC5leGVjVW5zYWZlTG9jYWxGdW5jdGlvbihmdW5jdGlvbigpe3JldHVybiBlKHQscixuLHMpfSl9OmV9KGZ1bmN0aW9uKGUsdCl7aWYoZS5uYW1lc3BhY2VVUkkhPT0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcifHwiaW5uZXJIVE1MImluIGUpZS5pbm5lckhUTUw9dDtlbHNle2ZvcihobD1obHx8ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2IiksaGwuaW5uZXJIVE1MPSI8c3ZnPiIrdC52YWx1ZU9mKCkudG9TdHJpbmcoKSsiPC9zdmc+Iix0PWhsLmZpcnN0Q2hpbGQ7ZS5maXJzdENoaWxkOyllLnJlbW92ZUNoaWxkKGUuZmlyc3RDaGlsZCk7Zm9yKDt0LmZpcnN0Q2hpbGQ7KWUuYXBwZW5kQ2hpbGQodC5maXJzdENoaWxkKX19KTtmdW5jdGlvbiBjbyhlLHQpe2lmKHQpe3ZhciByPWUuZmlyc3RDaGlsZDtpZihyJiZyPT09ZS5sYXN0Q2hpbGQmJnIubm9kZVR5cGU9PT0zKXtyLm5vZGVWYWx1ZT10O3JldHVybn19ZS50ZXh0Q29udGVudD10fXZhciBYYT17YW5pbWF0aW9uSXRlcmF0aW9uQ291bnQ6ITAsYXNwZWN0UmF0aW86ITAsYm9yZGVySW1hZ2VPdXRzZXQ6ITAsYm9yZGVySW1hZ2VTbGljZTohMCxib3JkZXJJbWFnZVdpZHRoOiEwLGJveEZsZXg6ITAsYm94RmxleEdyb3VwOiEwLGJveE9yZGluYWxHcm91cDohMCxjb2x1bW5Db3VudDohMCxjb2x1bW5zOiEwLGZsZXg6ITAsZmxleEdyb3c6ITAsZmxleFBvc2l0aXZlOiEwLGZsZXhTaHJpbms6ITAsZmxleE5lZ2F0aXZlOiEwLGZsZXhPcmRlcjohMCxncmlkQXJlYTohMCxncmlkUm93OiEwLGdyaWRSb3dFbmQ6ITAsZ3JpZFJvd1NwYW46ITAsZ3JpZFJvd1N0YXJ0OiEwLGdyaWRDb2x1bW46ITAsZ3JpZENvbHVtbkVuZDohMCxncmlkQ29sdW1uU3BhbjohMCxncmlkQ29sdW1uU3RhcnQ6ITAsZm9udFdlaWdodDohMCxsaW5lQ2xhbXA6ITAsbGluZUhlaWdodDohMCxvcGFjaXR5OiEwLG9yZGVyOiEwLG9ycGhhbnM6ITAsdGFiU2l6ZTohMCx3aWRvd3M6ITAsekluZGV4OiEwLHpvb206ITAsZmlsbE9wYWNpdHk6ITAsZmxvb2RPcGFjaXR5OiEwLHN0b3BPcGFjaXR5OiEwLHN0cm9rZURhc2hhcnJheTohMCxzdHJva2VEYXNob2Zmc2V0OiEwLHN0cm9rZU1pdGVybGltaXQ6ITAsc3Ryb2tlT3BhY2l0eTohMCxzdHJva2VXaWR0aDohMH0sb2o9WyJXZWJraXQiLCJtcyIsIk1veiIsIk8iXTtPYmplY3Qua2V5cyhYYSkuZm9yRWFjaChmdW5jdGlvbihlKXtvai5mb3JFYWNoKGZ1bmN0aW9uKHQpe3Q9dCtlLmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpK2Uuc3Vic3RyaW5nKDEpLFhhW3RdPVhhW2VdfSl9KTtmdW5jdGlvbiBReChlLHQscil7cmV0dXJuIHQ9PW51bGx8fHR5cGVvZiB0PT0iYm9vbGVhbiJ8fHQ9PT0iIj8iIjpyfHx0eXBlb2YgdCE9Im51bWJlciJ8fHQ9PT0wfHxYYS5oYXNPd25Qcm9wZXJ0eShlKSYmWGFbZV0/KCIiK3QpLnRyaW0oKTp0KyJweCJ9ZnVuY3Rpb24gWngoZSx0KXtlPWUuc3R5bGU7Zm9yKHZhciByIGluIHQpaWYodC5oYXNPd25Qcm9wZXJ0eShyKSl7dmFyIG49ci5pbmRleE9mKCItLSIpPT09MCxzPVF4KHIsdFtyXSxuKTtyPT09ImZsb2F0IiYmKHI9ImNzc0Zsb2F0Iiksbj9lLnNldFByb3BlcnR5KHIscyk6ZVtyXT1zfX12YXIgbGo9YXQoe21lbnVpdGVtOiEwfSx7YXJlYTohMCxiYXNlOiEwLGJyOiEwLGNvbDohMCxlbWJlZDohMCxocjohMCxpbWc6ITAsaW5wdXQ6ITAsa2V5Z2VuOiEwLGxpbms6ITAsbWV0YTohMCxwYXJhbTohMCxzb3VyY2U6ITAsdHJhY2s6ITAsd2JyOiEwfSk7ZnVuY3Rpb24gQmQoZSx0KXtpZih0KXtpZihsaltlXSYmKHQuY2hpbGRyZW4hPW51bGx8fHQuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwhPW51bGwpKXRocm93IEVycm9yKEIoMTM3LGUpKTtpZih0LmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MIT1udWxsKXtpZih0LmNoaWxkcmVuIT1udWxsKXRocm93IEVycm9yKEIoNjApKTtpZih0eXBlb2YgdC5kYW5nZXJvdXNseVNldElubmVySFRNTCE9Im9iamVjdCJ8fCEoIl9faHRtbCJpbiB0LmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MKSl0aHJvdyBFcnJvcihCKDYxKSl9aWYodC5zdHlsZSE9bnVsbCYmdHlwZW9mIHQuc3R5bGUhPSJvYmplY3QiKXRocm93IEVycm9yKEIoNjIpKX19ZnVuY3Rpb24gSGQoZSx0KXtpZihlLmluZGV4T2YoIi0iKT09PS0xKXJldHVybiB0eXBlb2YgdC5pcz09InN0cmluZyI7c3dpdGNoKGUpe2Nhc2UiYW5ub3RhdGlvbi14bWwiOmNhc2UiY29sb3ItcHJvZmlsZSI6Y2FzZSJmb250LWZhY2UiOmNhc2UiZm9udC1mYWNlLXNyYyI6Y2FzZSJmb250LWZhY2UtdXJpIjpjYXNlImZvbnQtZmFjZS1mb3JtYXQiOmNhc2UiZm9udC1mYWNlLW5hbWUiOmNhc2UibWlzc2luZy1nbHlwaCI6cmV0dXJuITE7ZGVmYXVsdDpyZXR1cm4hMH19dmFyIFdkPW51bGw7ZnVuY3Rpb24gd20oZSl7cmV0dXJuIGU9ZS50YXJnZXR8fGUuc3JjRWxlbWVudHx8d2luZG93LGUuY29ycmVzcG9uZGluZ1VzZUVsZW1lbnQmJihlPWUuY29ycmVzcG9uZGluZ1VzZUVsZW1lbnQpLGUubm9kZVR5cGU9PT0zP2UucGFyZW50Tm9kZTplfXZhciBxZD1udWxsLERpPW51bGwsJGk9bnVsbDtmdW5jdGlvbiB0cChlKXtpZihlPUpvKGUpKXtpZih0eXBlb2YgcWQhPSJmdW5jdGlvbiIpdGhyb3cgRXJyb3IoQigyODApKTt2YXIgdD1lLnN0YXRlTm9kZTt0JiYodD1ldSh0KSxxZChlLnN0YXRlTm9kZSxlLnR5cGUsdCkpfX1mdW5jdGlvbiBLeChlKXtEaT8kaT8kaS5wdXNoKGUpOiRpPVtlXTpEaT1lfWZ1bmN0aW9uIFl4KCl7aWYoRGkpe3ZhciBlPURpLHQ9JGk7aWYoJGk9RGk9bnVsbCx0cChlKSx0KWZvcihlPTA7ZTx0Lmxlbmd0aDtlKyspdHAodFtlXSl9fWZ1bmN0aW9uIFh4KGUsdCl7cmV0dXJuIGUodCl9ZnVuY3Rpb24gSngoKXt9dmFyIEx1PSExO2Z1bmN0aW9uIGV2KGUsdCxyKXtpZihMdSlyZXR1cm4gZSh0LHIpO0x1PSEwO3RyeXtyZXR1cm4gWHgoZSx0LHIpfWZpbmFsbHl7THU9ITEsKERpIT09bnVsbHx8JGkhPT1udWxsKSYmKEp4KCksWXgoKSl9fWZ1bmN0aW9uIHVvKGUsdCl7dmFyIHI9ZS5zdGF0ZU5vZGU7aWYocj09PW51bGwpcmV0dXJuIG51bGw7dmFyIG49ZXUocik7aWYobj09PW51bGwpcmV0dXJuIG51bGw7cj1uW3RdO2U6c3dpdGNoKHQpe2Nhc2Uib25DbGljayI6Y2FzZSJvbkNsaWNrQ2FwdHVyZSI6Y2FzZSJvbkRvdWJsZUNsaWNrIjpjYXNlIm9uRG91YmxlQ2xpY2tDYXB0dXJlIjpjYXNlIm9uTW91c2VEb3duIjpjYXNlIm9uTW91c2VEb3duQ2FwdHVyZSI6Y2FzZSJvbk1vdXNlTW92ZSI6Y2FzZSJvbk1vdXNlTW92ZUNhcHR1cmUiOmNhc2Uib25Nb3VzZVVwIjpjYXNlIm9uTW91c2VVcENhcHR1cmUiOmNhc2Uib25Nb3VzZUVudGVyIjoobj0hbi5kaXNhYmxlZCl8fChlPWUudHlwZSxuPSEoZT09PSJidXR0b24ifHxlPT09ImlucHV0Inx8ZT09PSJzZWxlY3QifHxlPT09InRleHRhcmVhIikpLGU9IW47YnJlYWsgZTtkZWZhdWx0OmU9ITF9aWYoZSlyZXR1cm4gbnVsbDtpZihyJiZ0eXBlb2YgciE9ImZ1bmN0aW9uIil0aHJvdyBFcnJvcihCKDIzMSx0LHR5cGVvZiByKSk7cmV0dXJuIHJ9dmFyIEdkPSExO2lmKFJuKXRyeXt2YXIgTWE9e307T2JqZWN0LmRlZmluZVByb3BlcnR5KE1hLCJwYXNzaXZlIix7Z2V0OmZ1bmN0aW9uKCl7R2Q9ITB9fSksd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoInRlc3QiLE1hLE1hKSx3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcigidGVzdCIsTWEsTWEpfWNhdGNoe0dkPSExfWZ1bmN0aW9uIGNqKGUsdCxyLG4scyxhLG8sbCxjKXt2YXIgdT1BcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMsMyk7dHJ5e3QuYXBwbHkocix1KX1jYXRjaChkKXt0aGlzLm9uRXJyb3IoZCl9fXZhciBKYT0hMSxzYz1udWxsLGljPSExLFFkPW51bGwsdWo9e29uRXJyb3I6ZnVuY3Rpb24oZSl7SmE9ITAsc2M9ZX19O2Z1bmN0aW9uIGRqKGUsdCxyLG4scyxhLG8sbCxjKXtKYT0hMSxzYz1udWxsLGNqLmFwcGx5KHVqLGFyZ3VtZW50cyl9ZnVuY3Rpb24gZmooZSx0LHIsbixzLGEsbyxsLGMpe2lmKGRqLmFwcGx5KHRoaXMsYXJndW1lbnRzKSxKYSl7aWYoSmEpe3ZhciB1PXNjO0phPSExLHNjPW51bGx9ZWxzZSB0aHJvdyBFcnJvcihCKDE5OCkpO2ljfHwoaWM9ITAsUWQ9dSl9fWZ1bmN0aW9uIHBpKGUpe3ZhciB0PWUscj1lO2lmKGUuYWx0ZXJuYXRlKWZvcig7dC5yZXR1cm47KXQ9dC5yZXR1cm47ZWxzZXtlPXQ7ZG8gdD1lLHQuZmxhZ3MmNDA5OCYmKHI9dC5yZXR1cm4pLGU9dC5yZXR1cm47d2hpbGUoZSl9cmV0dXJuIHQudGFnPT09Mz9yOm51bGx9ZnVuY3Rpb24gdHYoZSl7aWYoZS50YWc9PT0xMyl7dmFyIHQ9ZS5tZW1vaXplZFN0YXRlO2lmKHQ9PT1udWxsJiYoZT1lLmFsdGVybmF0ZSxlIT09bnVsbCYmKHQ9ZS5tZW1vaXplZFN0YXRlKSksdCE9PW51bGwpcmV0dXJuIHQuZGVoeWRyYXRlZH1yZXR1cm4gbnVsbH1mdW5jdGlvbiBycChlKXtpZihwaShlKSE9PWUpdGhyb3cgRXJyb3IoQigxODgpKX1mdW5jdGlvbiBtaihlKXt2YXIgdD1lLmFsdGVybmF0ZTtpZighdCl7aWYodD1waShlKSx0PT09bnVsbCl0aHJvdyBFcnJvcihCKDE4OCkpO3JldHVybiB0IT09ZT9udWxsOmV9Zm9yKHZhciByPWUsbj10Ozspe3ZhciBzPXIucmV0dXJuO2lmKHM9PT1udWxsKWJyZWFrO3ZhciBhPXMuYWx0ZXJuYXRlO2lmKGE9PT1udWxsKXtpZihuPXMucmV0dXJuLG4hPT1udWxsKXtyPW47Y29udGludWV9YnJlYWt9aWYocy5jaGlsZD09PWEuY2hpbGQpe2ZvcihhPXMuY2hpbGQ7YTspe2lmKGE9PT1yKXJldHVybiBycChzKSxlO2lmKGE9PT1uKXJldHVybiBycChzKSx0O2E9YS5zaWJsaW5nfXRocm93IEVycm9yKEIoMTg4KSl9aWYoci5yZXR1cm4hPT1uLnJldHVybilyPXMsbj1hO2Vsc2V7Zm9yKHZhciBvPSExLGw9cy5jaGlsZDtsOyl7aWYobD09PXIpe289ITAscj1zLG49YTticmVha31pZihsPT09bil7bz0hMCxuPXMscj1hO2JyZWFrfWw9bC5zaWJsaW5nfWlmKCFvKXtmb3IobD1hLmNoaWxkO2w7KXtpZihsPT09cil7bz0hMCxyPWEsbj1zO2JyZWFrfWlmKGw9PT1uKXtvPSEwLG49YSxyPXM7YnJlYWt9bD1sLnNpYmxpbmd9aWYoIW8pdGhyb3cgRXJyb3IoQigxODkpKX19aWYoci5hbHRlcm5hdGUhPT1uKXRocm93IEVycm9yKEIoMTkwKSl9aWYoci50YWchPT0zKXRocm93IEVycm9yKEIoMTg4KSk7cmV0dXJuIHIuc3RhdGVOb2RlLmN1cnJlbnQ9PT1yP2U6dH1mdW5jdGlvbiBydihlKXtyZXR1cm4gZT1taihlKSxlIT09bnVsbD9udihlKTpudWxsfWZ1bmN0aW9uIG52KGUpe2lmKGUudGFnPT09NXx8ZS50YWc9PT02KXJldHVybiBlO2ZvcihlPWUuY2hpbGQ7ZSE9PW51bGw7KXt2YXIgdD1udihlKTtpZih0IT09bnVsbClyZXR1cm4gdDtlPWUuc2libGluZ31yZXR1cm4gbnVsbH12YXIgc3Y9aHIudW5zdGFibGVfc2NoZWR1bGVDYWxsYmFjayxucD1oci51bnN0YWJsZV9jYW5jZWxDYWxsYmFjayxoaj1oci51bnN0YWJsZV9zaG91bGRZaWVsZCxwaj1oci51bnN0YWJsZV9yZXF1ZXN0UGFpbnQsZnQ9aHIudW5zdGFibGVfbm93LGdqPWhyLnVuc3RhYmxlX2dldEN1cnJlbnRQcmlvcml0eUxldmVsLGJtPWhyLnVuc3RhYmxlX0ltbWVkaWF0ZVByaW9yaXR5LGl2PWhyLnVuc3RhYmxlX1VzZXJCbG9ja2luZ1ByaW9yaXR5LGFjPWhyLnVuc3RhYmxlX05vcm1hbFByaW9yaXR5LHhqPWhyLnVuc3RhYmxlX0xvd1ByaW9yaXR5LGF2PWhyLnVuc3RhYmxlX0lkbGVQcmlvcml0eSxLYz1udWxsLG9uPW51bGw7ZnVuY3Rpb24gdmooZSl7aWYob24mJnR5cGVvZiBvbi5vbkNvbW1pdEZpYmVyUm9vdD09ImZ1bmN0aW9uIil0cnl7b24ub25Db21taXRGaWJlclJvb3QoS2MsZSx2b2lkIDAsKGUuY3VycmVudC5mbGFncyYxMjgpPT09MTI4KX1jYXRjaHt9fXZhciBEcj1NYXRoLmNsejMyP01hdGguY2x6MzI6YmoseWo9TWF0aC5sb2csd2o9TWF0aC5MTjI7ZnVuY3Rpb24gYmooZSl7cmV0dXJuIGU+Pj49MCxlPT09MD8zMjozMS0oeWooZSkvd2p8MCl8MH12YXIgcGw9NjQsZ2w9NDE5NDMwNDtmdW5jdGlvbiBxYShlKXtzd2l0Y2goZSYtZSl7Y2FzZSAxOnJldHVybiAxO2Nhc2UgMjpyZXR1cm4gMjtjYXNlIDQ6cmV0dXJuIDQ7Y2FzZSA4OnJldHVybiA4O2Nhc2UgMTY6cmV0dXJuIDE2O2Nhc2UgMzI6cmV0dXJuIDMyO2Nhc2UgNjQ6Y2FzZSAxMjg6Y2FzZSAyNTY6Y2FzZSA1MTI6Y2FzZSAxMDI0OmNhc2UgMjA0ODpjYXNlIDQwOTY6Y2FzZSA4MTkyOmNhc2UgMTYzODQ6Y2FzZSAzMjc2ODpjYXNlIDY1NTM2OmNhc2UgMTMxMDcyOmNhc2UgMjYyMTQ0OmNhc2UgNTI0Mjg4OmNhc2UgMTA0ODU3NjpjYXNlIDIwOTcxNTI6cmV0dXJuIGUmNDE5NDI0MDtjYXNlIDQxOTQzMDQ6Y2FzZSA4Mzg4NjA4OmNhc2UgMTY3NzcyMTY6Y2FzZSAzMzU1NDQzMjpjYXNlIDY3MTA4ODY0OnJldHVybiBlJjEzMDAyMzQyNDtjYXNlIDEzNDIxNzcyODpyZXR1cm4gMTM0MjE3NzI4O2Nhc2UgMjY4NDM1NDU2OnJldHVybiAyNjg0MzU0NTY7Y2FzZSA1MzY4NzA5MTI6cmV0dXJuIDUzNjg3MDkxMjtjYXNlIDEwNzM3NDE4MjQ6cmV0dXJuIDEwNzM3NDE4MjQ7ZGVmYXVsdDpyZXR1cm4gZX19ZnVuY3Rpb24gb2MoZSx0KXt2YXIgcj1lLnBlbmRpbmdMYW5lcztpZihyPT09MClyZXR1cm4gMDt2YXIgbj0wLHM9ZS5zdXNwZW5kZWRMYW5lcyxhPWUucGluZ2VkTGFuZXMsbz1yJjI2ODQzNTQ1NTtpZihvIT09MCl7dmFyIGw9byZ+cztsIT09MD9uPXFhKGwpOihhJj1vLGEhPT0wJiYobj1xYShhKSkpfWVsc2Ugbz1yJn5zLG8hPT0wP249cWEobyk6YSE9PTAmJihuPXFhKGEpKTtpZihuPT09MClyZXR1cm4gMDtpZih0IT09MCYmdCE9PW4mJiEodCZzKSYmKHM9biYtbixhPXQmLXQscz49YXx8cz09PTE2JiYoYSY0MTk0MjQwKSE9PTApKXJldHVybiB0O2lmKG4mNCYmKG58PXImMTYpLHQ9ZS5lbnRhbmdsZWRMYW5lcyx0IT09MClmb3IoZT1lLmVudGFuZ2xlbWVudHMsdCY9bjswPHQ7KXI9MzEtRHIodCkscz0xPDxyLG58PWVbcl0sdCY9fnM7cmV0dXJuIG59ZnVuY3Rpb24gamooZSx0KXtzd2l0Y2goZSl7Y2FzZSAxOmNhc2UgMjpjYXNlIDQ6cmV0dXJuIHQrMjUwO2Nhc2UgODpjYXNlIDE2OmNhc2UgMzI6Y2FzZSA2NDpjYXNlIDEyODpjYXNlIDI1NjpjYXNlIDUxMjpjYXNlIDEwMjQ6Y2FzZSAyMDQ4OmNhc2UgNDA5NjpjYXNlIDgxOTI6Y2FzZSAxNjM4NDpjYXNlIDMyNzY4OmNhc2UgNjU1MzY6Y2FzZSAxMzEwNzI6Y2FzZSAyNjIxNDQ6Y2FzZSA1MjQyODg6Y2FzZSAxMDQ4NTc2OmNhc2UgMjA5NzE1MjpyZXR1cm4gdCs1ZTM7Y2FzZSA0MTk0MzA0OmNhc2UgODM4ODYwODpjYXNlIDE2Nzc3MjE2OmNhc2UgMzM1NTQ0MzI6Y2FzZSA2NzEwODg2NDpyZXR1cm4tMTtjYXNlIDEzNDIxNzcyODpjYXNlIDI2ODQzNTQ1NjpjYXNlIDUzNjg3MDkxMjpjYXNlIDEwNzM3NDE4MjQ6cmV0dXJuLTE7ZGVmYXVsdDpyZXR1cm4tMX19ZnVuY3Rpb24gTmooZSx0KXtmb3IodmFyIHI9ZS5zdXNwZW5kZWRMYW5lcyxuPWUucGluZ2VkTGFuZXMscz1lLmV4cGlyYXRpb25UaW1lcyxhPWUucGVuZGluZ0xhbmVzOzA8YTspe3ZhciBvPTMxLURyKGEpLGw9MTw8byxjPXNbb107Yz09PS0xPyghKGwmcil8fGwmbikmJihzW29dPWpqKGwsdCkpOmM8PXQmJihlLmV4cGlyZWRMYW5lc3w9bCksYSY9fmx9fWZ1bmN0aW9uIFpkKGUpe3JldHVybiBlPWUucGVuZGluZ0xhbmVzJi0xMDczNzQxODI1LGUhPT0wP2U6ZSYxMDczNzQxODI0PzEwNzM3NDE4MjQ6MH1mdW5jdGlvbiBvdigpe3ZhciBlPXBsO3JldHVybiBwbDw8PTEsIShwbCY0MTk0MjQwKSYmKHBsPTY0KSxlfWZ1bmN0aW9uIER1KGUpe2Zvcih2YXIgdD1bXSxyPTA7MzE+cjtyKyspdC5wdXNoKGUpO3JldHVybiB0fWZ1bmN0aW9uIFlvKGUsdCxyKXtlLnBlbmRpbmdMYW5lc3w9dCx0IT09NTM2ODcwOTEyJiYoZS5zdXNwZW5kZWRMYW5lcz0wLGUucGluZ2VkTGFuZXM9MCksZT1lLmV2ZW50VGltZXMsdD0zMS1Ecih0KSxlW3RdPXJ9ZnVuY3Rpb24gU2ooZSx0KXt2YXIgcj1lLnBlbmRpbmdMYW5lcyZ+dDtlLnBlbmRpbmdMYW5lcz10LGUuc3VzcGVuZGVkTGFuZXM9MCxlLnBpbmdlZExhbmVzPTAsZS5leHBpcmVkTGFuZXMmPXQsZS5tdXRhYmxlUmVhZExhbmVzJj10LGUuZW50YW5nbGVkTGFuZXMmPXQsdD1lLmVudGFuZ2xlbWVudHM7dmFyIG49ZS5ldmVudFRpbWVzO2ZvcihlPWUuZXhwaXJhdGlvblRpbWVzOzA8cjspe3ZhciBzPTMxLURyKHIpLGE9MTw8czt0W3NdPTAsbltzXT0tMSxlW3NdPS0xLHImPX5hfX1mdW5jdGlvbiBqbShlLHQpe3ZhciByPWUuZW50YW5nbGVkTGFuZXN8PXQ7Zm9yKGU9ZS5lbnRhbmdsZW1lbnRzO3I7KXt2YXIgbj0zMS1EcihyKSxzPTE8PG47cyZ0fGVbbl0mdCYmKGVbbl18PXQpLHImPX5zfX12YXIgJGU9MDtmdW5jdGlvbiBsdihlKXtyZXR1cm4gZSY9LWUsMTxlPzQ8ZT9lJjI2ODQzNTQ1NT8xNjo1MzY4NzA5MTI6NDoxfXZhciBjdixObSx1dixkdixmdixLZD0hMSx4bD1bXSx1cz1udWxsLGRzPW51bGwsZnM9bnVsbCxmbz1uZXcgTWFwLG1vPW5ldyBNYXAsS249W10sa2o9Im1vdXNlZG93biBtb3VzZXVwIHRvdWNoY2FuY2VsIHRvdWNoZW5kIHRvdWNoc3RhcnQgYXV4Y2xpY2sgZGJsY2xpY2sgcG9pbnRlcmNhbmNlbCBwb2ludGVyZG93biBwb2ludGVydXAgZHJhZ2VuZCBkcmFnc3RhcnQgZHJvcCBjb21wb3NpdGlvbmVuZCBjb21wb3NpdGlvbnN0YXJ0IGtleWRvd24ga2V5cHJlc3Mga2V5dXAgaW5wdXQgdGV4dElucHV0IGNvcHkgY3V0IHBhc3RlIGNsaWNrIGNoYW5nZSBjb250ZXh0bWVudSByZXNldCBzdWJtaXQiLnNwbGl0KCIgIik7ZnVuY3Rpb24gc3AoZSx0KXtzd2l0Y2goZSl7Y2FzZSJmb2N1c2luIjpjYXNlImZvY3Vzb3V0Ijp1cz1udWxsO2JyZWFrO2Nhc2UiZHJhZ2VudGVyIjpjYXNlImRyYWdsZWF2ZSI6ZHM9bnVsbDticmVhaztjYXNlIm1vdXNlb3ZlciI6Y2FzZSJtb3VzZW91dCI6ZnM9bnVsbDticmVhaztjYXNlInBvaW50ZXJvdmVyIjpjYXNlInBvaW50ZXJvdXQiOmZvLmRlbGV0ZSh0LnBvaW50ZXJJZCk7YnJlYWs7Y2FzZSJnb3Rwb2ludGVyY2FwdHVyZSI6Y2FzZSJsb3N0cG9pbnRlcmNhcHR1cmUiOm1vLmRlbGV0ZSh0LnBvaW50ZXJJZCl9fWZ1bmN0aW9uIE9hKGUsdCxyLG4scyxhKXtyZXR1cm4gZT09PW51bGx8fGUubmF0aXZlRXZlbnQhPT1hPyhlPXtibG9ja2VkT246dCxkb21FdmVudE5hbWU6cixldmVudFN5c3RlbUZsYWdzOm4sbmF0aXZlRXZlbnQ6YSx0YXJnZXRDb250YWluZXJzOltzXX0sdCE9PW51bGwmJih0PUpvKHQpLHQhPT1udWxsJiZObSh0KSksZSk6KGUuZXZlbnRTeXN0ZW1GbGFnc3w9bix0PWUudGFyZ2V0Q29udGFpbmVycyxzIT09bnVsbCYmdC5pbmRleE9mKHMpPT09LTEmJnQucHVzaChzKSxlKX1mdW5jdGlvbiBFaihlLHQscixuLHMpe3N3aXRjaCh0KXtjYXNlImZvY3VzaW4iOnJldHVybiB1cz1PYSh1cyxlLHQscixuLHMpLCEwO2Nhc2UiZHJhZ2VudGVyIjpyZXR1cm4gZHM9T2EoZHMsZSx0LHIsbixzKSwhMDtjYXNlIm1vdXNlb3ZlciI6cmV0dXJuIGZzPU9hKGZzLGUsdCxyLG4scyksITA7Y2FzZSJwb2ludGVyb3ZlciI6dmFyIGE9cy5wb2ludGVySWQ7cmV0dXJuIGZvLnNldChhLE9hKGZvLmdldChhKXx8bnVsbCxlLHQscixuLHMpKSwhMDtjYXNlImdvdHBvaW50ZXJjYXB0dXJlIjpyZXR1cm4gYT1zLnBvaW50ZXJJZCxtby5zZXQoYSxPYShtby5nZXQoYSl8fG51bGwsZSx0LHIsbixzKSksITB9cmV0dXJuITF9ZnVuY3Rpb24gbXYoZSl7dmFyIHQ9RHMoZS50YXJnZXQpO2lmKHQhPT1udWxsKXt2YXIgcj1waSh0KTtpZihyIT09bnVsbCl7aWYodD1yLnRhZyx0PT09MTMpe2lmKHQ9dHYociksdCE9PW51bGwpe2UuYmxvY2tlZE9uPXQsZnYoZS5wcmlvcml0eSxmdW5jdGlvbigpe3V2KHIpfSk7cmV0dXJufX1lbHNlIGlmKHQ9PT0zJiZyLnN0YXRlTm9kZS5jdXJyZW50Lm1lbW9pemVkU3RhdGUuaXNEZWh5ZHJhdGVkKXtlLmJsb2NrZWRPbj1yLnRhZz09PTM/ci5zdGF0ZU5vZGUuY29udGFpbmVySW5mbzpudWxsO3JldHVybn19fWUuYmxvY2tlZE9uPW51bGx9ZnVuY3Rpb24gJGwoZSl7aWYoZS5ibG9ja2VkT24hPT1udWxsKXJldHVybiExO2Zvcih2YXIgdD1lLnRhcmdldENvbnRhaW5lcnM7MDx0Lmxlbmd0aDspe3ZhciByPVlkKGUuZG9tRXZlbnROYW1lLGUuZXZlbnRTeXN0ZW1GbGFncyx0WzBdLGUubmF0aXZlRXZlbnQpO2lmKHI9PT1udWxsKXtyPWUubmF0aXZlRXZlbnQ7dmFyIG49bmV3IHIuY29uc3RydWN0b3Ioci50eXBlLHIpO1dkPW4sci50YXJnZXQuZGlzcGF0Y2hFdmVudChuKSxXZD1udWxsfWVsc2UgcmV0dXJuIHQ9Sm8ociksdCE9PW51bGwmJk5tKHQpLGUuYmxvY2tlZE9uPXIsITE7dC5zaGlmdCgpfXJldHVybiEwfWZ1bmN0aW9uIGlwKGUsdCxyKXskbChlKSYmci5kZWxldGUodCl9ZnVuY3Rpb24gQ2ooKXtLZD0hMSx1cyE9PW51bGwmJiRsKHVzKSYmKHVzPW51bGwpLGRzIT09bnVsbCYmJGwoZHMpJiYoZHM9bnVsbCksZnMhPT1udWxsJiYkbChmcykmJihmcz1udWxsKSxmby5mb3JFYWNoKGlwKSxtby5mb3JFYWNoKGlwKX1mdW5jdGlvbiBGYShlLHQpe2UuYmxvY2tlZE9uPT09dCYmKGUuYmxvY2tlZE9uPW51bGwsS2R8fChLZD0hMCxoci51bnN0YWJsZV9zY2hlZHVsZUNhbGxiYWNrKGhyLnVuc3RhYmxlX05vcm1hbFByaW9yaXR5LENqKSkpfWZ1bmN0aW9uIGhvKGUpe2Z1bmN0aW9uIHQocyl7cmV0dXJuIEZhKHMsZSl9aWYoMDx4bC5sZW5ndGgpe0ZhKHhsWzBdLGUpO2Zvcih2YXIgcj0xO3I8eGwubGVuZ3RoO3IrKyl7dmFyIG49eGxbcl07bi5ibG9ja2VkT249PT1lJiYobi5ibG9ja2VkT249bnVsbCl9fWZvcih1cyE9PW51bGwmJkZhKHVzLGUpLGRzIT09bnVsbCYmRmEoZHMsZSksZnMhPT1udWxsJiZGYShmcyxlKSxmby5mb3JFYWNoKHQpLG1vLmZvckVhY2godCkscj0wO3I8S24ubGVuZ3RoO3IrKyluPUtuW3JdLG4uYmxvY2tlZE9uPT09ZSYmKG4uYmxvY2tlZE9uPW51bGwpO2Zvcig7MDxLbi5sZW5ndGgmJihyPUtuWzBdLHIuYmxvY2tlZE9uPT09bnVsbCk7KW12KHIpLHIuYmxvY2tlZE9uPT09bnVsbCYmS24uc2hpZnQoKX12YXIgemk9JG4uUmVhY3RDdXJyZW50QmF0Y2hDb25maWcsbGM9ITA7ZnVuY3Rpb24gX2ooZSx0LHIsbil7dmFyIHM9JGUsYT16aS50cmFuc2l0aW9uO3ppLnRyYW5zaXRpb249bnVsbDt0cnl7JGU9MSxTbShlLHQscixuKX1maW5hbGx5eyRlPXMsemkudHJhbnNpdGlvbj1hfX1mdW5jdGlvbiBQaihlLHQscixuKXt2YXIgcz0kZSxhPXppLnRyYW5zaXRpb247emkudHJhbnNpdGlvbj1udWxsO3RyeXskZT00LFNtKGUsdCxyLG4pfWZpbmFsbHl7JGU9cyx6aS50cmFuc2l0aW9uPWF9fWZ1bmN0aW9uIFNtKGUsdCxyLG4pe2lmKGxjKXt2YXIgcz1ZZChlLHQscixuKTtpZihzPT09bnVsbClRdShlLHQsbixjYyxyKSxzcChlLG4pO2Vsc2UgaWYoRWoocyxlLHQscixuKSluLnN0b3BQcm9wYWdhdGlvbigpO2Vsc2UgaWYoc3AoZSxuKSx0JjQmJi0xPGtqLmluZGV4T2YoZSkpe2Zvcig7cyE9PW51bGw7KXt2YXIgYT1KbyhzKTtpZihhIT09bnVsbCYmY3YoYSksYT1ZZChlLHQscixuKSxhPT09bnVsbCYmUXUoZSx0LG4sY2MsciksYT09PXMpYnJlYWs7cz1hfXMhPT1udWxsJiZuLnN0b3BQcm9wYWdhdGlvbigpfWVsc2UgUXUoZSx0LG4sbnVsbCxyKX19dmFyIGNjPW51bGw7ZnVuY3Rpb24gWWQoZSx0LHIsbil7aWYoY2M9bnVsbCxlPXdtKG4pLGU9RHMoZSksZSE9PW51bGwpaWYodD1waShlKSx0PT09bnVsbCllPW51bGw7ZWxzZSBpZihyPXQudGFnLHI9PT0xMyl7aWYoZT10dih0KSxlIT09bnVsbClyZXR1cm4gZTtlPW51bGx9ZWxzZSBpZihyPT09Myl7aWYodC5zdGF0ZU5vZGUuY3VycmVudC5tZW1vaXplZFN0YXRlLmlzRGVoeWRyYXRlZClyZXR1cm4gdC50YWc9PT0zP3Quc3RhdGVOb2RlLmNvbnRhaW5lckluZm86bnVsbDtlPW51bGx9ZWxzZSB0IT09ZSYmKGU9bnVsbCk7cmV0dXJuIGNjPWUsbnVsbH1mdW5jdGlvbiBodihlKXtzd2l0Y2goZSl7Y2FzZSJjYW5jZWwiOmNhc2UiY2xpY2siOmNhc2UiY2xvc2UiOmNhc2UiY29udGV4dG1lbnUiOmNhc2UiY29weSI6Y2FzZSJjdXQiOmNhc2UiYXV4Y2xpY2siOmNhc2UiZGJsY2xpY2siOmNhc2UiZHJhZ2VuZCI6Y2FzZSJkcmFnc3RhcnQiOmNhc2UiZHJvcCI6Y2FzZSJmb2N1c2luIjpjYXNlImZvY3Vzb3V0IjpjYXNlImlucHV0IjpjYXNlImludmFsaWQiOmNhc2Uia2V5ZG93biI6Y2FzZSJrZXlwcmVzcyI6Y2FzZSJrZXl1cCI6Y2FzZSJtb3VzZWRvd24iOmNhc2UibW91c2V1cCI6Y2FzZSJwYXN0ZSI6Y2FzZSJwYXVzZSI6Y2FzZSJwbGF5IjpjYXNlInBvaW50ZXJjYW5jZWwiOmNhc2UicG9pbnRlcmRvd24iOmNhc2UicG9pbnRlcnVwIjpjYXNlInJhdGVjaGFuZ2UiOmNhc2UicmVzZXQiOmNhc2UicmVzaXplIjpjYXNlInNlZWtlZCI6Y2FzZSJzdWJtaXQiOmNhc2UidG91Y2hjYW5jZWwiOmNhc2UidG91Y2hlbmQiOmNhc2UidG91Y2hzdGFydCI6Y2FzZSJ2b2x1bWVjaGFuZ2UiOmNhc2UiY2hhbmdlIjpjYXNlInNlbGVjdGlvbmNoYW5nZSI6Y2FzZSJ0ZXh0SW5wdXQiOmNhc2UiY29tcG9zaXRpb25zdGFydCI6Y2FzZSJjb21wb3NpdGlvbmVuZCI6Y2FzZSJjb21wb3NpdGlvbnVwZGF0ZSI6Y2FzZSJiZWZvcmVibHVyIjpjYXNlImFmdGVyYmx1ciI6Y2FzZSJiZWZvcmVpbnB1dCI6Y2FzZSJibHVyIjpjYXNlImZ1bGxzY3JlZW5jaGFuZ2UiOmNhc2UiZm9jdXMiOmNhc2UiaGFzaGNoYW5nZSI6Y2FzZSJwb3BzdGF0ZSI6Y2FzZSJzZWxlY3QiOmNhc2Uic2VsZWN0c3RhcnQiOnJldHVybiAxO2Nhc2UiZHJhZyI6Y2FzZSJkcmFnZW50ZXIiOmNhc2UiZHJhZ2V4aXQiOmNhc2UiZHJhZ2xlYXZlIjpjYXNlImRyYWdvdmVyIjpjYXNlIm1vdXNlbW92ZSI6Y2FzZSJtb3VzZW91dCI6Y2FzZSJtb3VzZW92ZXIiOmNhc2UicG9pbnRlcm1vdmUiOmNhc2UicG9pbnRlcm91dCI6Y2FzZSJwb2ludGVyb3ZlciI6Y2FzZSJzY3JvbGwiOmNhc2UidG9nZ2xlIjpjYXNlInRvdWNobW92ZSI6Y2FzZSJ3aGVlbCI6Y2FzZSJtb3VzZWVudGVyIjpjYXNlIm1vdXNlbGVhdmUiOmNhc2UicG9pbnRlcmVudGVyIjpjYXNlInBvaW50ZXJsZWF2ZSI6cmV0dXJuIDQ7Y2FzZSJtZXNzYWdlIjpzd2l0Y2goZ2ooKSl7Y2FzZSBibTpyZXR1cm4gMTtjYXNlIGl2OnJldHVybiA0O2Nhc2UgYWM6Y2FzZSB4ajpyZXR1cm4gMTY7Y2FzZSBhdjpyZXR1cm4gNTM2ODcwOTEyO2RlZmF1bHQ6cmV0dXJuIDE2fWRlZmF1bHQ6cmV0dXJuIDE2fX12YXIgbHM9bnVsbCxrbT1udWxsLHpsPW51bGw7ZnVuY3Rpb24gcHYoKXtpZih6bClyZXR1cm4gemw7dmFyIGUsdD1rbSxyPXQubGVuZ3RoLG4scz0idmFsdWUiaW4gbHM/bHMudmFsdWU6bHMudGV4dENvbnRlbnQsYT1zLmxlbmd0aDtmb3IoZT0wO2U8ciYmdFtlXT09PXNbZV07ZSsrKTt2YXIgbz1yLWU7Zm9yKG49MTtuPD1vJiZ0W3Itbl09PT1zW2Etbl07bisrKTtyZXR1cm4gemw9cy5zbGljZShlLDE8bj8xLW46dm9pZCAwKX1mdW5jdGlvbiBWbChlKXt2YXIgdD1lLmtleUNvZGU7cmV0dXJuImNoYXJDb2RlImluIGU/KGU9ZS5jaGFyQ29kZSxlPT09MCYmdD09PTEzJiYoZT0xMykpOmU9dCxlPT09MTAmJihlPTEzKSwzMjw9ZXx8ZT09PTEzP2U6MH1mdW5jdGlvbiB2bCgpe3JldHVybiEwfWZ1bmN0aW9uIGFwKCl7cmV0dXJuITF9ZnVuY3Rpb24geHIoZSl7ZnVuY3Rpb24gdChyLG4scyxhLG8pe3RoaXMuX3JlYWN0TmFtZT1yLHRoaXMuX3RhcmdldEluc3Q9cyx0aGlzLnR5cGU9bix0aGlzLm5hdGl2ZUV2ZW50PWEsdGhpcy50YXJnZXQ9byx0aGlzLmN1cnJlbnRUYXJnZXQ9bnVsbDtmb3IodmFyIGwgaW4gZSllLmhhc093blByb3BlcnR5KGwpJiYocj1lW2xdLHRoaXNbbF09cj9yKGEpOmFbbF0pO3JldHVybiB0aGlzLmlzRGVmYXVsdFByZXZlbnRlZD0oYS5kZWZhdWx0UHJldmVudGVkIT1udWxsP2EuZGVmYXVsdFByZXZlbnRlZDphLnJldHVyblZhbHVlPT09ITEpP3ZsOmFwLHRoaXMuaXNQcm9wYWdhdGlvblN0b3BwZWQ9YXAsdGhpc31yZXR1cm4gYXQodC5wcm90b3R5cGUse3ByZXZlbnREZWZhdWx0OmZ1bmN0aW9uKCl7dGhpcy5kZWZhdWx0UHJldmVudGVkPSEwO3ZhciByPXRoaXMubmF0aXZlRXZlbnQ7ciYmKHIucHJldmVudERlZmF1bHQ/ci5wcmV2ZW50RGVmYXVsdCgpOnR5cGVvZiByLnJldHVyblZhbHVlIT0idW5rbm93biImJihyLnJldHVyblZhbHVlPSExKSx0aGlzLmlzRGVmYXVsdFByZXZlbnRlZD12bCl9LHN0b3BQcm9wYWdhdGlvbjpmdW5jdGlvbigpe3ZhciByPXRoaXMubmF0aXZlRXZlbnQ7ciYmKHIuc3RvcFByb3BhZ2F0aW9uP3Iuc3RvcFByb3BhZ2F0aW9uKCk6dHlwZW9mIHIuY2FuY2VsQnViYmxlIT0idW5rbm93biImJihyLmNhbmNlbEJ1YmJsZT0hMCksdGhpcy5pc1Byb3BhZ2F0aW9uU3RvcHBlZD12bCl9LHBlcnNpc3Q6ZnVuY3Rpb24oKXt9LGlzUGVyc2lzdGVudDp2bH0pLHR9dmFyIFNhPXtldmVudFBoYXNlOjAsYnViYmxlczowLGNhbmNlbGFibGU6MCx0aW1lU3RhbXA6ZnVuY3Rpb24oZSl7cmV0dXJuIGUudGltZVN0YW1wfHxEYXRlLm5vdygpfSxkZWZhdWx0UHJldmVudGVkOjAsaXNUcnVzdGVkOjB9LEVtPXhyKFNhKSxYbz1hdCh7fSxTYSx7dmlldzowLGRldGFpbDowfSksVGo9eHIoWG8pLCR1LHp1LElhLFljPWF0KHt9LFhvLHtzY3JlZW5YOjAsc2NyZWVuWTowLGNsaWVudFg6MCxjbGllbnRZOjAscGFnZVg6MCxwYWdlWTowLGN0cmxLZXk6MCxzaGlmdEtleTowLGFsdEtleTowLG1ldGFLZXk6MCxnZXRNb2RpZmllclN0YXRlOkNtLGJ1dHRvbjowLGJ1dHRvbnM6MCxyZWxhdGVkVGFyZ2V0OmZ1bmN0aW9uKGUpe3JldHVybiBlLnJlbGF0ZWRUYXJnZXQ9PT12b2lkIDA/ZS5mcm9tRWxlbWVudD09PWUuc3JjRWxlbWVudD9lLnRvRWxlbWVudDplLmZyb21FbGVtZW50OmUucmVsYXRlZFRhcmdldH0sbW92ZW1lbnRYOmZ1bmN0aW9uKGUpe3JldHVybiJtb3ZlbWVudFgiaW4gZT9lLm1vdmVtZW50WDooZSE9PUlhJiYoSWEmJmUudHlwZT09PSJtb3VzZW1vdmUiPygkdT1lLnNjcmVlblgtSWEuc2NyZWVuWCx6dT1lLnNjcmVlblktSWEuc2NyZWVuWSk6enU9JHU9MCxJYT1lKSwkdSl9LG1vdmVtZW50WTpmdW5jdGlvbihlKXtyZXR1cm4ibW92ZW1lbnRZImluIGU/ZS5tb3ZlbWVudFk6enV9fSksb3A9eHIoWWMpLFJqPWF0KHt9LFljLHtkYXRhVHJhbnNmZXI6MH0pLEFqPXhyKFJqKSxNaj1hdCh7fSxYbyx7cmVsYXRlZFRhcmdldDowfSksVnU9eHIoTWopLE9qPWF0KHt9LFNhLHthbmltYXRpb25OYW1lOjAsZWxhcHNlZFRpbWU6MCxwc2V1ZG9FbGVtZW50OjB9KSxGaj14cihPaiksSWo9YXQoe30sU2Ese2NsaXBib2FyZERhdGE6ZnVuY3Rpb24oZSl7cmV0dXJuImNsaXBib2FyZERhdGEiaW4gZT9lLmNsaXBib2FyZERhdGE6d2luZG93LmNsaXBib2FyZERhdGF9fSksTGo9eHIoSWopLERqPWF0KHt9LFNhLHtkYXRhOjB9KSxscD14cihEaiksJGo9e0VzYzoiRXNjYXBlIixTcGFjZWJhcjoiICIsTGVmdDoiQXJyb3dMZWZ0IixVcDoiQXJyb3dVcCIsUmlnaHQ6IkFycm93UmlnaHQiLERvd246IkFycm93RG93biIsRGVsOiJEZWxldGUiLFdpbjoiT1MiLE1lbnU6IkNvbnRleHRNZW51IixBcHBzOiJDb250ZXh0TWVudSIsU2Nyb2xsOiJTY3JvbGxMb2NrIixNb3pQcmludGFibGVLZXk6IlVuaWRlbnRpZmllZCJ9LHpqPXs4OiJCYWNrc3BhY2UiLDk6IlRhYiIsMTI6IkNsZWFyIiwxMzoiRW50ZXIiLDE2OiJTaGlmdCIsMTc6IkNvbnRyb2wiLDE4OiJBbHQiLDE5OiJQYXVzZSIsMjA6IkNhcHNMb2NrIiwyNzoiRXNjYXBlIiwzMjoiICIsMzM6IlBhZ2VVcCIsMzQ6IlBhZ2VEb3duIiwzNToiRW5kIiwzNjoiSG9tZSIsMzc6IkFycm93TGVmdCIsMzg6IkFycm93VXAiLDM5OiJBcnJvd1JpZ2h0Iiw0MDoiQXJyb3dEb3duIiw0NToiSW5zZXJ0Iiw0NjoiRGVsZXRlIiwxMTI6IkYxIiwxMTM6IkYyIiwxMTQ6IkYzIiwxMTU6IkY0IiwxMTY6IkY1IiwxMTc6IkY2IiwxMTg6IkY3IiwxMTk6IkY4IiwxMjA6IkY5IiwxMjE6IkYxMCIsMTIyOiJGMTEiLDEyMzoiRjEyIiwxNDQ6Ik51bUxvY2siLDE0NToiU2Nyb2xsTG9jayIsMjI0OiJNZXRhIn0sVmo9e0FsdDoiYWx0S2V5IixDb250cm9sOiJjdHJsS2V5IixNZXRhOiJtZXRhS2V5IixTaGlmdDoic2hpZnRLZXkifTtmdW5jdGlvbiBVaihlKXt2YXIgdD10aGlzLm5hdGl2ZUV2ZW50O3JldHVybiB0LmdldE1vZGlmaWVyU3RhdGU/dC5nZXRNb2RpZmllclN0YXRlKGUpOihlPVZqW2VdKT8hIXRbZV06ITF9ZnVuY3Rpb24gQ20oKXtyZXR1cm4gVWp9dmFyIEJqPWF0KHt9LFhvLHtrZXk6ZnVuY3Rpb24oZSl7aWYoZS5rZXkpe3ZhciB0PSRqW2Uua2V5XXx8ZS5rZXk7aWYodCE9PSJVbmlkZW50aWZpZWQiKXJldHVybiB0fXJldHVybiBlLnR5cGU9PT0ia2V5cHJlc3MiPyhlPVZsKGUpLGU9PT0xMz8iRW50ZXIiOlN0cmluZy5mcm9tQ2hhckNvZGUoZSkpOmUudHlwZT09PSJrZXlkb3duInx8ZS50eXBlPT09ImtleXVwIj96altlLmtleUNvZGVdfHwiVW5pZGVudGlmaWVkIjoiIn0sY29kZTowLGxvY2F0aW9uOjAsY3RybEtleTowLHNoaWZ0S2V5OjAsYWx0S2V5OjAsbWV0YUtleTowLHJlcGVhdDowLGxvY2FsZTowLGdldE1vZGlmaWVyU3RhdGU6Q20sY2hhckNvZGU6ZnVuY3Rpb24oZSl7cmV0dXJuIGUudHlwZT09PSJrZXlwcmVzcyI/VmwoZSk6MH0sa2V5Q29kZTpmdW5jdGlvbihlKXtyZXR1cm4gZS50eXBlPT09ImtleWRvd24ifHxlLnR5cGU9PT0ia2V5dXAiP2Uua2V5Q29kZTowfSx3aGljaDpmdW5jdGlvbihlKXtyZXR1cm4gZS50eXBlPT09ImtleXByZXNzIj9WbChlKTplLnR5cGU9PT0ia2V5ZG93biJ8fGUudHlwZT09PSJrZXl1cCI/ZS5rZXlDb2RlOjB9fSksSGo9eHIoQmopLFdqPWF0KHt9LFljLHtwb2ludGVySWQ6MCx3aWR0aDowLGhlaWdodDowLHByZXNzdXJlOjAsdGFuZ2VudGlhbFByZXNzdXJlOjAsdGlsdFg6MCx0aWx0WTowLHR3aXN0OjAscG9pbnRlclR5cGU6MCxpc1ByaW1hcnk6MH0pLGNwPXhyKFdqKSxxaj1hdCh7fSxYbyx7dG91Y2hlczowLHRhcmdldFRvdWNoZXM6MCxjaGFuZ2VkVG91Y2hlczowLGFsdEtleTowLG1ldGFLZXk6MCxjdHJsS2V5OjAsc2hpZnRLZXk6MCxnZXRNb2RpZmllclN0YXRlOkNtfSksR2o9eHIocWopLFFqPWF0KHt9LFNhLHtwcm9wZXJ0eU5hbWU6MCxlbGFwc2VkVGltZTowLHBzZXVkb0VsZW1lbnQ6MH0pLFpqPXhyKFFqKSxLaj1hdCh7fSxZYyx7ZGVsdGFYOmZ1bmN0aW9uKGUpe3JldHVybiJkZWx0YVgiaW4gZT9lLmRlbHRhWDoid2hlZWxEZWx0YVgiaW4gZT8tZS53aGVlbERlbHRhWDowfSxkZWx0YVk6ZnVuY3Rpb24oZSl7cmV0dXJuImRlbHRhWSJpbiBlP2UuZGVsdGFZOiJ3aGVlbERlbHRhWSJpbiBlPy1lLndoZWVsRGVsdGFZOiJ3aGVlbERlbHRhImluIGU/LWUud2hlZWxEZWx0YTowfSxkZWx0YVo6MCxkZWx0YU1vZGU6MH0pLFlqPXhyKEtqKSxYaj1bOSwxMywyNywzMl0sX209Um4mJiJDb21wb3NpdGlvbkV2ZW50ImluIHdpbmRvdyxlbz1udWxsO1JuJiYiZG9jdW1lbnRNb2RlImluIGRvY3VtZW50JiYoZW89ZG9jdW1lbnQuZG9jdW1lbnRNb2RlKTt2YXIgSmo9Um4mJiJUZXh0RXZlbnQiaW4gd2luZG93JiYhZW8sZ3Y9Um4mJighX218fGVvJiY4PGVvJiYxMT49ZW8pLHVwPSIgIixkcD0hMTtmdW5jdGlvbiB4dihlLHQpe3N3aXRjaChlKXtjYXNlImtleXVwIjpyZXR1cm4gWGouaW5kZXhPZih0LmtleUNvZGUpIT09LTE7Y2FzZSJrZXlkb3duIjpyZXR1cm4gdC5rZXlDb2RlIT09MjI5O2Nhc2Uia2V5cHJlc3MiOmNhc2UibW91c2Vkb3duIjpjYXNlImZvY3Vzb3V0IjpyZXR1cm4hMDtkZWZhdWx0OnJldHVybiExfX1mdW5jdGlvbiB2dihlKXtyZXR1cm4gZT1lLmRldGFpbCx0eXBlb2YgZT09Im9iamVjdCImJiJkYXRhImluIGU/ZS5kYXRhOm51bGx9dmFyIGtpPSExO2Z1bmN0aW9uIGVOKGUsdCl7c3dpdGNoKGUpe2Nhc2UiY29tcG9zaXRpb25lbmQiOnJldHVybiB2dih0KTtjYXNlImtleXByZXNzIjpyZXR1cm4gdC53aGljaCE9PTMyP251bGw6KGRwPSEwLHVwKTtjYXNlInRleHRJbnB1dCI6cmV0dXJuIGU9dC5kYXRhLGU9PT11cCYmZHA/bnVsbDplO2RlZmF1bHQ6cmV0dXJuIG51bGx9fWZ1bmN0aW9uIHROKGUsdCl7aWYoa2kpcmV0dXJuIGU9PT0iY29tcG9zaXRpb25lbmQifHwhX20mJnh2KGUsdCk/KGU9cHYoKSx6bD1rbT1scz1udWxsLGtpPSExLGUpOm51bGw7c3dpdGNoKGUpe2Nhc2UicGFzdGUiOnJldHVybiBudWxsO2Nhc2Uia2V5cHJlc3MiOmlmKCEodC5jdHJsS2V5fHx0LmFsdEtleXx8dC5tZXRhS2V5KXx8dC5jdHJsS2V5JiZ0LmFsdEtleSl7aWYodC5jaGFyJiYxPHQuY2hhci5sZW5ndGgpcmV0dXJuIHQuY2hhcjtpZih0LndoaWNoKXJldHVybiBTdHJpbmcuZnJvbUNoYXJDb2RlKHQud2hpY2gpfXJldHVybiBudWxsO2Nhc2UiY29tcG9zaXRpb25lbmQiOnJldHVybiBndiYmdC5sb2NhbGUhPT0ia28iP251bGw6dC5kYXRhO2RlZmF1bHQ6cmV0dXJuIG51bGx9fXZhciByTj17Y29sb3I6ITAsZGF0ZTohMCxkYXRldGltZTohMCwiZGF0ZXRpbWUtbG9jYWwiOiEwLGVtYWlsOiEwLG1vbnRoOiEwLG51bWJlcjohMCxwYXNzd29yZDohMCxyYW5nZTohMCxzZWFyY2g6ITAsdGVsOiEwLHRleHQ6ITAsdGltZTohMCx1cmw6ITAsd2VlazohMH07ZnVuY3Rpb24gZnAoZSl7dmFyIHQ9ZSYmZS5ub2RlTmFtZSYmZS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO3JldHVybiB0PT09ImlucHV0Ij8hIXJOW2UudHlwZV06dD09PSJ0ZXh0YXJlYSJ9ZnVuY3Rpb24geXYoZSx0LHIsbil7S3gobiksdD11Yyh0LCJvbkNoYW5nZSIpLDA8dC5sZW5ndGgmJihyPW5ldyBFbSgib25DaGFuZ2UiLCJjaGFuZ2UiLG51bGwscixuKSxlLnB1c2goe2V2ZW50OnIsbGlzdGVuZXJzOnR9KSl9dmFyIHRvPW51bGwscG89bnVsbDtmdW5jdGlvbiBuTihlKXtUdihlLDApfWZ1bmN0aW9uIFhjKGUpe3ZhciB0PV9pKGUpO2lmKEJ4KHQpKXJldHVybiBlfWZ1bmN0aW9uIHNOKGUsdCl7aWYoZT09PSJjaGFuZ2UiKXJldHVybiB0fXZhciB3dj0hMTtpZihSbil7dmFyIFV1O2lmKFJuKXt2YXIgQnU9Im9uaW5wdXQiaW4gZG9jdW1lbnQ7aWYoIUJ1KXt2YXIgbXA9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2Iik7bXAuc2V0QXR0cmlidXRlKCJvbmlucHV0IiwicmV0dXJuOyIpLEJ1PXR5cGVvZiBtcC5vbmlucHV0PT0iZnVuY3Rpb24ifVV1PUJ1fWVsc2UgVXU9ITE7d3Y9VXUmJighZG9jdW1lbnQuZG9jdW1lbnRNb2RlfHw5PGRvY3VtZW50LmRvY3VtZW50TW9kZSl9ZnVuY3Rpb24gaHAoKXt0byYmKHRvLmRldGFjaEV2ZW50KCJvbnByb3BlcnR5Y2hhbmdlIixidikscG89dG89bnVsbCl9ZnVuY3Rpb24gYnYoZSl7aWYoZS5wcm9wZXJ0eU5hbWU9PT0idmFsdWUiJiZYYyhwbykpe3ZhciB0PVtdO3l2KHQscG8sZSx3bShlKSksZXYobk4sdCl9fWZ1bmN0aW9uIGlOKGUsdCxyKXtlPT09ImZvY3VzaW4iPyhocCgpLHRvPXQscG89cix0by5hdHRhY2hFdmVudCgib25wcm9wZXJ0eWNoYW5nZSIsYnYpKTplPT09ImZvY3Vzb3V0IiYmaHAoKX1mdW5jdGlvbiBhTihlKXtpZihlPT09InNlbGVjdGlvbmNoYW5nZSJ8fGU9PT0ia2V5dXAifHxlPT09ImtleWRvd24iKXJldHVybiBYYyhwbyl9ZnVuY3Rpb24gb04oZSx0KXtpZihlPT09ImNsaWNrIilyZXR1cm4gWGModCl9ZnVuY3Rpb24gbE4oZSx0KXtpZihlPT09ImlucHV0Inx8ZT09PSJjaGFuZ2UiKXJldHVybiBYYyh0KX1mdW5jdGlvbiBjTihlLHQpe3JldHVybiBlPT09dCYmKGUhPT0wfHwxL2U9PT0xL3QpfHxlIT09ZSYmdCE9PXR9dmFyIFZyPXR5cGVvZiBPYmplY3QuaXM9PSJmdW5jdGlvbiI/T2JqZWN0LmlzOmNOO2Z1bmN0aW9uIGdvKGUsdCl7aWYoVnIoZSx0KSlyZXR1cm4hMDtpZih0eXBlb2YgZSE9Im9iamVjdCJ8fGU9PT1udWxsfHx0eXBlb2YgdCE9Im9iamVjdCJ8fHQ9PT1udWxsKXJldHVybiExO3ZhciByPU9iamVjdC5rZXlzKGUpLG49T2JqZWN0LmtleXModCk7aWYoci5sZW5ndGghPT1uLmxlbmd0aClyZXR1cm4hMTtmb3Iobj0wO248ci5sZW5ndGg7bisrKXt2YXIgcz1yW25dO2lmKCFNZC5jYWxsKHQscyl8fCFWcihlW3NdLHRbc10pKXJldHVybiExfXJldHVybiEwfWZ1bmN0aW9uIHBwKGUpe2Zvcig7ZSYmZS5maXJzdENoaWxkOyllPWUuZmlyc3RDaGlsZDtyZXR1cm4gZX1mdW5jdGlvbiBncChlLHQpe3ZhciByPXBwKGUpO2U9MDtmb3IodmFyIG47cjspe2lmKHIubm9kZVR5cGU9PT0zKXtpZihuPWUrci50ZXh0Q29udGVudC5sZW5ndGgsZTw9dCYmbj49dClyZXR1cm57bm9kZTpyLG9mZnNldDp0LWV9O2U9bn1lOntmb3IoO3I7KXtpZihyLm5leHRTaWJsaW5nKXtyPXIubmV4dFNpYmxpbmc7YnJlYWsgZX1yPXIucGFyZW50Tm9kZX1yPXZvaWQgMH1yPXBwKHIpfX1mdW5jdGlvbiBqdihlLHQpe3JldHVybiBlJiZ0P2U9PT10PyEwOmUmJmUubm9kZVR5cGU9PT0zPyExOnQmJnQubm9kZVR5cGU9PT0zP2p2KGUsdC5wYXJlbnROb2RlKToiY29udGFpbnMiaW4gZT9lLmNvbnRhaW5zKHQpOmUuY29tcGFyZURvY3VtZW50UG9zaXRpb24/ISEoZS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbih0KSYxNik6ITE6ITF9ZnVuY3Rpb24gTnYoKXtmb3IodmFyIGU9d2luZG93LHQ9bmMoKTt0IGluc3RhbmNlb2YgZS5IVE1MSUZyYW1lRWxlbWVudDspe3RyeXt2YXIgcj10eXBlb2YgdC5jb250ZW50V2luZG93LmxvY2F0aW9uLmhyZWY9PSJzdHJpbmcifWNhdGNoe3I9ITF9aWYocillPXQuY29udGVudFdpbmRvdztlbHNlIGJyZWFrO3Q9bmMoZS5kb2N1bWVudCl9cmV0dXJuIHR9ZnVuY3Rpb24gUG0oZSl7dmFyIHQ9ZSYmZS5ub2RlTmFtZSYmZS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO3JldHVybiB0JiYodD09PSJpbnB1dCImJihlLnR5cGU9PT0idGV4dCJ8fGUudHlwZT09PSJzZWFyY2gifHxlLnR5cGU9PT0idGVsInx8ZS50eXBlPT09InVybCJ8fGUudHlwZT09PSJwYXNzd29yZCIpfHx0PT09InRleHRhcmVhInx8ZS5jb250ZW50RWRpdGFibGU9PT0idHJ1ZSIpfWZ1bmN0aW9uIHVOKGUpe3ZhciB0PU52KCkscj1lLmZvY3VzZWRFbGVtLG49ZS5zZWxlY3Rpb25SYW5nZTtpZih0IT09ciYmciYmci5vd25lckRvY3VtZW50JiZqdihyLm93bmVyRG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LHIpKXtpZihuIT09bnVsbCYmUG0ocikpe2lmKHQ9bi5zdGFydCxlPW4uZW5kLGU9PT12b2lkIDAmJihlPXQpLCJzZWxlY3Rpb25TdGFydCJpbiByKXIuc2VsZWN0aW9uU3RhcnQ9dCxyLnNlbGVjdGlvbkVuZD1NYXRoLm1pbihlLHIudmFsdWUubGVuZ3RoKTtlbHNlIGlmKGU9KHQ9ci5vd25lckRvY3VtZW50fHxkb2N1bWVudCkmJnQuZGVmYXVsdFZpZXd8fHdpbmRvdyxlLmdldFNlbGVjdGlvbil7ZT1lLmdldFNlbGVjdGlvbigpO3ZhciBzPXIudGV4dENvbnRlbnQubGVuZ3RoLGE9TWF0aC5taW4obi5zdGFydCxzKTtuPW4uZW5kPT09dm9pZCAwP2E6TWF0aC5taW4obi5lbmQscyksIWUuZXh0ZW5kJiZhPm4mJihzPW4sbj1hLGE9cykscz1ncChyLGEpO3ZhciBvPWdwKHIsbik7cyYmbyYmKGUucmFuZ2VDb3VudCE9PTF8fGUuYW5jaG9yTm9kZSE9PXMubm9kZXx8ZS5hbmNob3JPZmZzZXQhPT1zLm9mZnNldHx8ZS5mb2N1c05vZGUhPT1vLm5vZGV8fGUuZm9jdXNPZmZzZXQhPT1vLm9mZnNldCkmJih0PXQuY3JlYXRlUmFuZ2UoKSx0LnNldFN0YXJ0KHMubm9kZSxzLm9mZnNldCksZS5yZW1vdmVBbGxSYW5nZXMoKSxhPm4/KGUuYWRkUmFuZ2UodCksZS5leHRlbmQoby5ub2RlLG8ub2Zmc2V0KSk6KHQuc2V0RW5kKG8ubm9kZSxvLm9mZnNldCksZS5hZGRSYW5nZSh0KSkpfX1mb3IodD1bXSxlPXI7ZT1lLnBhcmVudE5vZGU7KWUubm9kZVR5cGU9PT0xJiZ0LnB1c2goe2VsZW1lbnQ6ZSxsZWZ0OmUuc2Nyb2xsTGVmdCx0b3A6ZS5zY3JvbGxUb3B9KTtmb3IodHlwZW9mIHIuZm9jdXM9PSJmdW5jdGlvbiImJnIuZm9jdXMoKSxyPTA7cjx0Lmxlbmd0aDtyKyspZT10W3JdLGUuZWxlbWVudC5zY3JvbGxMZWZ0PWUubGVmdCxlLmVsZW1lbnQuc2Nyb2xsVG9wPWUudG9wfX12YXIgZE49Um4mJiJkb2N1bWVudE1vZGUiaW4gZG9jdW1lbnQmJjExPj1kb2N1bWVudC5kb2N1bWVudE1vZGUsRWk9bnVsbCxYZD1udWxsLHJvPW51bGwsSmQ9ITE7ZnVuY3Rpb24geHAoZSx0LHIpe3ZhciBuPXIud2luZG93PT09cj9yLmRvY3VtZW50OnIubm9kZVR5cGU9PT05P3I6ci5vd25lckRvY3VtZW50O0pkfHxFaT09bnVsbHx8RWkhPT1uYyhuKXx8KG49RWksInNlbGVjdGlvblN0YXJ0ImluIG4mJlBtKG4pP249e3N0YXJ0Om4uc2VsZWN0aW9uU3RhcnQsZW5kOm4uc2VsZWN0aW9uRW5kfToobj0obi5vd25lckRvY3VtZW50JiZuLm93bmVyRG9jdW1lbnQuZGVmYXVsdFZpZXd8fHdpbmRvdykuZ2V0U2VsZWN0aW9uKCksbj17YW5jaG9yTm9kZTpuLmFuY2hvck5vZGUsYW5jaG9yT2Zmc2V0Om4uYW5jaG9yT2Zmc2V0LGZvY3VzTm9kZTpuLmZvY3VzTm9kZSxmb2N1c09mZnNldDpuLmZvY3VzT2Zmc2V0fSkscm8mJmdvKHJvLG4pfHwocm89bixuPXVjKFhkLCJvblNlbGVjdCIpLDA8bi5sZW5ndGgmJih0PW5ldyBFbSgib25TZWxlY3QiLCJzZWxlY3QiLG51bGwsdCxyKSxlLnB1c2goe2V2ZW50OnQsbGlzdGVuZXJzOm59KSx0LnRhcmdldD1FaSkpKX1mdW5jdGlvbiB5bChlLHQpe3ZhciByPXt9O3JldHVybiByW2UudG9Mb3dlckNhc2UoKV09dC50b0xvd2VyQ2FzZSgpLHJbIldlYmtpdCIrZV09IndlYmtpdCIrdCxyWyJNb3oiK2VdPSJtb3oiK3Qscn12YXIgQ2k9e2FuaW1hdGlvbmVuZDp5bCgiQW5pbWF0aW9uIiwiQW5pbWF0aW9uRW5kIiksYW5pbWF0aW9uaXRlcmF0aW9uOnlsKCJBbmltYXRpb24iLCJBbmltYXRpb25JdGVyYXRpb24iKSxhbmltYXRpb25zdGFydDp5bCgiQW5pbWF0aW9uIiwiQW5pbWF0aW9uU3RhcnQiKSx0cmFuc2l0aW9uZW5kOnlsKCJUcmFuc2l0aW9uIiwiVHJhbnNpdGlvbkVuZCIpfSxIdT17fSxTdj17fTtSbiYmKFN2PWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpLnN0eWxlLCJBbmltYXRpb25FdmVudCJpbiB3aW5kb3d8fChkZWxldGUgQ2kuYW5pbWF0aW9uZW5kLmFuaW1hdGlvbixkZWxldGUgQ2kuYW5pbWF0aW9uaXRlcmF0aW9uLmFuaW1hdGlvbixkZWxldGUgQ2kuYW5pbWF0aW9uc3RhcnQuYW5pbWF0aW9uKSwiVHJhbnNpdGlvbkV2ZW50ImluIHdpbmRvd3x8ZGVsZXRlIENpLnRyYW5zaXRpb25lbmQudHJhbnNpdGlvbik7ZnVuY3Rpb24gSmMoZSl7aWYoSHVbZV0pcmV0dXJuIEh1W2VdO2lmKCFDaVtlXSlyZXR1cm4gZTt2YXIgdD1DaVtlXSxyO2ZvcihyIGluIHQpaWYodC5oYXNPd25Qcm9wZXJ0eShyKSYmciBpbiBTdilyZXR1cm4gSHVbZV09dFtyXTtyZXR1cm4gZX12YXIga3Y9SmMoImFuaW1hdGlvbmVuZCIpLEV2PUpjKCJhbmltYXRpb25pdGVyYXRpb24iKSxDdj1KYygiYW5pbWF0aW9uc3RhcnQiKSxfdj1KYygidHJhbnNpdGlvbmVuZCIpLFB2PW5ldyBNYXAsdnA9ImFib3J0IGF1eENsaWNrIGNhbmNlbCBjYW5QbGF5IGNhblBsYXlUaHJvdWdoIGNsaWNrIGNsb3NlIGNvbnRleHRNZW51IGNvcHkgY3V0IGRyYWcgZHJhZ0VuZCBkcmFnRW50ZXIgZHJhZ0V4aXQgZHJhZ0xlYXZlIGRyYWdPdmVyIGRyYWdTdGFydCBkcm9wIGR1cmF0aW9uQ2hhbmdlIGVtcHRpZWQgZW5jcnlwdGVkIGVuZGVkIGVycm9yIGdvdFBvaW50ZXJDYXB0dXJlIGlucHV0IGludmFsaWQga2V5RG93biBrZXlQcmVzcyBrZXlVcCBsb2FkIGxvYWRlZERhdGEgbG9hZGVkTWV0YWRhdGEgbG9hZFN0YXJ0IGxvc3RQb2ludGVyQ2FwdHVyZSBtb3VzZURvd24gbW91c2VNb3ZlIG1vdXNlT3V0IG1vdXNlT3ZlciBtb3VzZVVwIHBhc3RlIHBhdXNlIHBsYXkgcGxheWluZyBwb2ludGVyQ2FuY2VsIHBvaW50ZXJEb3duIHBvaW50ZXJNb3ZlIHBvaW50ZXJPdXQgcG9pbnRlck92ZXIgcG9pbnRlclVwIHByb2dyZXNzIHJhdGVDaGFuZ2UgcmVzZXQgcmVzaXplIHNlZWtlZCBzZWVraW5nIHN0YWxsZWQgc3VibWl0IHN1c3BlbmQgdGltZVVwZGF0ZSB0b3VjaENhbmNlbCB0b3VjaEVuZCB0b3VjaFN0YXJ0IHZvbHVtZUNoYW5nZSBzY3JvbGwgdG9nZ2xlIHRvdWNoTW92ZSB3YWl0aW5nIHdoZWVsIi5zcGxpdCgiICIpO2Z1bmN0aW9uIFBzKGUsdCl7UHYuc2V0KGUsdCksaGkodCxbZV0pfWZvcih2YXIgV3U9MDtXdTx2cC5sZW5ndGg7V3UrKyl7dmFyIHF1PXZwW1d1XSxmTj1xdS50b0xvd2VyQ2FzZSgpLG1OPXF1WzBdLnRvVXBwZXJDYXNlKCkrcXUuc2xpY2UoMSk7UHMoZk4sIm9uIittTil9UHMoa3YsIm9uQW5pbWF0aW9uRW5kIik7UHMoRXYsIm9uQW5pbWF0aW9uSXRlcmF0aW9uIik7UHMoQ3YsIm9uQW5pbWF0aW9uU3RhcnQiKTtQcygiZGJsY2xpY2siLCJvbkRvdWJsZUNsaWNrIik7UHMoImZvY3VzaW4iLCJvbkZvY3VzIik7UHMoImZvY3Vzb3V0Iiwib25CbHVyIik7UHMoX3YsIm9uVHJhbnNpdGlvbkVuZCIpO2xhKCJvbk1vdXNlRW50ZXIiLFsibW91c2VvdXQiLCJtb3VzZW92ZXIiXSk7bGEoIm9uTW91c2VMZWF2ZSIsWyJtb3VzZW91dCIsIm1vdXNlb3ZlciJdKTtsYSgib25Qb2ludGVyRW50ZXIiLFsicG9pbnRlcm91dCIsInBvaW50ZXJvdmVyIl0pO2xhKCJvblBvaW50ZXJMZWF2ZSIsWyJwb2ludGVyb3V0IiwicG9pbnRlcm92ZXIiXSk7aGkoIm9uQ2hhbmdlIiwiY2hhbmdlIGNsaWNrIGZvY3VzaW4gZm9jdXNvdXQgaW5wdXQga2V5ZG93biBrZXl1cCBzZWxlY3Rpb25jaGFuZ2UiLnNwbGl0KCIgIikpO2hpKCJvblNlbGVjdCIsImZvY3Vzb3V0IGNvbnRleHRtZW51IGRyYWdlbmQgZm9jdXNpbiBrZXlkb3duIGtleXVwIG1vdXNlZG93biBtb3VzZXVwIHNlbGVjdGlvbmNoYW5nZSIuc3BsaXQoIiAiKSk7aGkoIm9uQmVmb3JlSW5wdXQiLFsiY29tcG9zaXRpb25lbmQiLCJrZXlwcmVzcyIsInRleHRJbnB1dCIsInBhc3RlIl0pO2hpKCJvbkNvbXBvc2l0aW9uRW5kIiwiY29tcG9zaXRpb25lbmQgZm9jdXNvdXQga2V5ZG93biBrZXlwcmVzcyBrZXl1cCBtb3VzZWRvd24iLnNwbGl0KCIgIikpO2hpKCJvbkNvbXBvc2l0aW9uU3RhcnQiLCJjb21wb3NpdGlvbnN0YXJ0IGZvY3Vzb3V0IGtleWRvd24ga2V5cHJlc3Mga2V5dXAgbW91c2Vkb3duIi5zcGxpdCgiICIpKTtoaSgib25Db21wb3NpdGlvblVwZGF0ZSIsImNvbXBvc2l0aW9udXBkYXRlIGZvY3Vzb3V0IGtleWRvd24ga2V5cHJlc3Mga2V5dXAgbW91c2Vkb3duIi5zcGxpdCgiICIpKTt2YXIgR2E9ImFib3J0IGNhbnBsYXkgY2FucGxheXRocm91Z2ggZHVyYXRpb25jaGFuZ2UgZW1wdGllZCBlbmNyeXB0ZWQgZW5kZWQgZXJyb3IgbG9hZGVkZGF0YSBsb2FkZWRtZXRhZGF0YSBsb2Fkc3RhcnQgcGF1c2UgcGxheSBwbGF5aW5nIHByb2dyZXNzIHJhdGVjaGFuZ2UgcmVzaXplIHNlZWtlZCBzZWVraW5nIHN0YWxsZWQgc3VzcGVuZCB0aW1ldXBkYXRlIHZvbHVtZWNoYW5nZSB3YWl0aW5nIi5zcGxpdCgiICIpLGhOPW5ldyBTZXQoImNhbmNlbCBjbG9zZSBpbnZhbGlkIGxvYWQgc2Nyb2xsIHRvZ2dsZSIuc3BsaXQoIiAiKS5jb25jYXQoR2EpKTtmdW5jdGlvbiB5cChlLHQscil7dmFyIG49ZS50eXBlfHwidW5rbm93bi1ldmVudCI7ZS5jdXJyZW50VGFyZ2V0PXIsZmoobix0LHZvaWQgMCxlKSxlLmN1cnJlbnRUYXJnZXQ9bnVsbH1mdW5jdGlvbiBUdihlLHQpe3Q9KHQmNCkhPT0wO2Zvcih2YXIgcj0wO3I8ZS5sZW5ndGg7cisrKXt2YXIgbj1lW3JdLHM9bi5ldmVudDtuPW4ubGlzdGVuZXJzO2U6e3ZhciBhPXZvaWQgMDtpZih0KWZvcih2YXIgbz1uLmxlbmd0aC0xOzA8PW87by0tKXt2YXIgbD1uW29dLGM9bC5pbnN0YW5jZSx1PWwuY3VycmVudFRhcmdldDtpZihsPWwubGlzdGVuZXIsYyE9PWEmJnMuaXNQcm9wYWdhdGlvblN0b3BwZWQoKSlicmVhayBlO3lwKHMsbCx1KSxhPWN9ZWxzZSBmb3Iobz0wO288bi5sZW5ndGg7bysrKXtpZihsPW5bb10sYz1sLmluc3RhbmNlLHU9bC5jdXJyZW50VGFyZ2V0LGw9bC5saXN0ZW5lcixjIT09YSYmcy5pc1Byb3BhZ2F0aW9uU3RvcHBlZCgpKWJyZWFrIGU7eXAocyxsLHUpLGE9Y319fWlmKGljKXRocm93IGU9UWQsaWM9ITEsUWQ9bnVsbCxlfWZ1bmN0aW9uIEhlKGUsdCl7dmFyIHI9dFtzZl07cj09PXZvaWQgMCYmKHI9dFtzZl09bmV3IFNldCk7dmFyIG49ZSsiX19idWJibGUiO3IuaGFzKG4pfHwoUnYodCxlLDIsITEpLHIuYWRkKG4pKX1mdW5jdGlvbiBHdShlLHQscil7dmFyIG49MDt0JiYobnw9NCksUnYocixlLG4sdCl9dmFyIHdsPSJfcmVhY3RMaXN0ZW5pbmciK01hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnNsaWNlKDIpO2Z1bmN0aW9uIHhvKGUpe2lmKCFlW3dsXSl7ZVt3bF09ITAsRHguZm9yRWFjaChmdW5jdGlvbihyKXtyIT09InNlbGVjdGlvbmNoYW5nZSImJihoTi5oYXMocil8fEd1KHIsITEsZSksR3UociwhMCxlKSl9KTt2YXIgdD1lLm5vZGVUeXBlPT09OT9lOmUub3duZXJEb2N1bWVudDt0PT09bnVsbHx8dFt3bF18fCh0W3dsXT0hMCxHdSgic2VsZWN0aW9uY2hhbmdlIiwhMSx0KSl9fWZ1bmN0aW9uIFJ2KGUsdCxyLG4pe3N3aXRjaChodih0KSl7Y2FzZSAxOnZhciBzPV9qO2JyZWFrO2Nhc2UgNDpzPVBqO2JyZWFrO2RlZmF1bHQ6cz1TbX1yPXMuYmluZChudWxsLHQscixlKSxzPXZvaWQgMCwhR2R8fHQhPT0idG91Y2hzdGFydCImJnQhPT0idG91Y2htb3ZlIiYmdCE9PSJ3aGVlbCJ8fChzPSEwKSxuP3MhPT12b2lkIDA/ZS5hZGRFdmVudExpc3RlbmVyKHQscix7Y2FwdHVyZTohMCxwYXNzaXZlOnN9KTplLmFkZEV2ZW50TGlzdGVuZXIodCxyLCEwKTpzIT09dm9pZCAwP2UuYWRkRXZlbnRMaXN0ZW5lcih0LHIse3Bhc3NpdmU6c30pOmUuYWRkRXZlbnRMaXN0ZW5lcih0LHIsITEpfWZ1bmN0aW9uIFF1KGUsdCxyLG4scyl7dmFyIGE9bjtpZighKHQmMSkmJiEodCYyKSYmbiE9PW51bGwpZTpmb3IoOzspe2lmKG49PT1udWxsKXJldHVybjt2YXIgbz1uLnRhZztpZihvPT09M3x8bz09PTQpe3ZhciBsPW4uc3RhdGVOb2RlLmNvbnRhaW5lckluZm87aWYobD09PXN8fGwubm9kZVR5cGU9PT04JiZsLnBhcmVudE5vZGU9PT1zKWJyZWFrO2lmKG89PT00KWZvcihvPW4ucmV0dXJuO28hPT1udWxsOyl7dmFyIGM9by50YWc7aWYoKGM9PT0zfHxjPT09NCkmJihjPW8uc3RhdGVOb2RlLmNvbnRhaW5lckluZm8sYz09PXN8fGMubm9kZVR5cGU9PT04JiZjLnBhcmVudE5vZGU9PT1zKSlyZXR1cm47bz1vLnJldHVybn1mb3IoO2whPT1udWxsOyl7aWYobz1EcyhsKSxvPT09bnVsbClyZXR1cm47aWYoYz1vLnRhZyxjPT09NXx8Yz09PTYpe249YT1vO2NvbnRpbnVlIGV9bD1sLnBhcmVudE5vZGV9fW49bi5yZXR1cm59ZXYoZnVuY3Rpb24oKXt2YXIgdT1hLGQ9d20ociksZj1bXTtlOnt2YXIgcD1Qdi5nZXQoZSk7aWYocCE9PXZvaWQgMCl7dmFyIHg9RW0sdj1lO3N3aXRjaChlKXtjYXNlImtleXByZXNzIjppZihWbChyKT09PTApYnJlYWsgZTtjYXNlImtleWRvd24iOmNhc2Uia2V5dXAiOng9SGo7YnJlYWs7Y2FzZSJmb2N1c2luIjp2PSJmb2N1cyIseD1WdTticmVhaztjYXNlImZvY3Vzb3V0Ijp2PSJibHVyIix4PVZ1O2JyZWFrO2Nhc2UiYmVmb3JlYmx1ciI6Y2FzZSJhZnRlcmJsdXIiOng9VnU7YnJlYWs7Y2FzZSJjbGljayI6aWYoci5idXR0b249PT0yKWJyZWFrIGU7Y2FzZSJhdXhjbGljayI6Y2FzZSJkYmxjbGljayI6Y2FzZSJtb3VzZWRvd24iOmNhc2UibW91c2Vtb3ZlIjpjYXNlIm1vdXNldXAiOmNhc2UibW91c2VvdXQiOmNhc2UibW91c2VvdmVyIjpjYXNlImNvbnRleHRtZW51Ijp4PW9wO2JyZWFrO2Nhc2UiZHJhZyI6Y2FzZSJkcmFnZW5kIjpjYXNlImRyYWdlbnRlciI6Y2FzZSJkcmFnZXhpdCI6Y2FzZSJkcmFnbGVhdmUiOmNhc2UiZHJhZ292ZXIiOmNhc2UiZHJhZ3N0YXJ0IjpjYXNlImRyb3AiOng9QWo7YnJlYWs7Y2FzZSJ0b3VjaGNhbmNlbCI6Y2FzZSJ0b3VjaGVuZCI6Y2FzZSJ0b3VjaG1vdmUiOmNhc2UidG91Y2hzdGFydCI6eD1HajticmVhaztjYXNlIGt2OmNhc2UgRXY6Y2FzZSBDdjp4PUZqO2JyZWFrO2Nhc2UgX3Y6eD1aajticmVhaztjYXNlInNjcm9sbCI6eD1UajticmVhaztjYXNlIndoZWVsIjp4PVlqO2JyZWFrO2Nhc2UiY29weSI6Y2FzZSJjdXQiOmNhc2UicGFzdGUiOng9TGo7YnJlYWs7Y2FzZSJnb3Rwb2ludGVyY2FwdHVyZSI6Y2FzZSJsb3N0cG9pbnRlcmNhcHR1cmUiOmNhc2UicG9pbnRlcmNhbmNlbCI6Y2FzZSJwb2ludGVyZG93biI6Y2FzZSJwb2ludGVybW92ZSI6Y2FzZSJwb2ludGVyb3V0IjpjYXNlInBvaW50ZXJvdmVyIjpjYXNlInBvaW50ZXJ1cCI6eD1jcH12YXIgbT0odCY0KSE9PTAsdz0hbSYmZT09PSJzY3JvbGwiLGg9bT9wIT09bnVsbD9wKyJDYXB0dXJlIjpudWxsOnA7bT1bXTtmb3IodmFyIGc9dSxiO2chPT1udWxsOyl7Yj1nO3ZhciBOPWIuc3RhdGVOb2RlO2lmKGIudGFnPT09NSYmTiE9PW51bGwmJihiPU4saCE9PW51bGwmJihOPXVvKGcsaCksTiE9bnVsbCYmbS5wdXNoKHZvKGcsTixiKSkpKSx3KWJyZWFrO2c9Zy5yZXR1cm59MDxtLmxlbmd0aCYmKHA9bmV3IHgocCx2LG51bGwscixkKSxmLnB1c2goe2V2ZW50OnAsbGlzdGVuZXJzOm19KSl9fWlmKCEodCY3KSl7ZTp7aWYocD1lPT09Im1vdXNlb3ZlciJ8fGU9PT0icG9pbnRlcm92ZXIiLHg9ZT09PSJtb3VzZW91dCJ8fGU9PT0icG9pbnRlcm91dCIscCYmciE9PVdkJiYodj1yLnJlbGF0ZWRUYXJnZXR8fHIuZnJvbUVsZW1lbnQpJiYoRHModil8fHZbQW5dKSlicmVhayBlO2lmKCh4fHxwKSYmKHA9ZC53aW5kb3c9PT1kP2Q6KHA9ZC5vd25lckRvY3VtZW50KT9wLmRlZmF1bHRWaWV3fHxwLnBhcmVudFdpbmRvdzp3aW5kb3cseD8odj1yLnJlbGF0ZWRUYXJnZXR8fHIudG9FbGVtZW50LHg9dSx2PXY/RHModik6bnVsbCx2IT09bnVsbCYmKHc9cGkodiksdiE9PXd8fHYudGFnIT09NSYmdi50YWchPT02KSYmKHY9bnVsbCkpOih4PW51bGwsdj11KSx4IT09dikpe2lmKG09b3AsTj0ib25Nb3VzZUxlYXZlIixoPSJvbk1vdXNlRW50ZXIiLGc9Im1vdXNlIiwoZT09PSJwb2ludGVyb3V0Inx8ZT09PSJwb2ludGVyb3ZlciIpJiYobT1jcCxOPSJvblBvaW50ZXJMZWF2ZSIsaD0ib25Qb2ludGVyRW50ZXIiLGc9InBvaW50ZXIiKSx3PXg9PW51bGw/cDpfaSh4KSxiPXY9PW51bGw/cDpfaSh2KSxwPW5ldyBtKE4sZysibGVhdmUiLHgscixkKSxwLnRhcmdldD13LHAucmVsYXRlZFRhcmdldD1iLE49bnVsbCxEcyhkKT09PXUmJihtPW5ldyBtKGgsZysiZW50ZXIiLHYscixkKSxtLnRhcmdldD1iLG0ucmVsYXRlZFRhcmdldD13LE49bSksdz1OLHgmJnYpdDp7Zm9yKG09eCxoPXYsZz0wLGI9bTtiO2I9eGkoYikpZysrO2ZvcihiPTAsTj1oO047Tj14aShOKSliKys7Zm9yKDswPGctYjspbT14aShtKSxnLS07Zm9yKDswPGItZzspaD14aShoKSxiLS07Zm9yKDtnLS07KXtpZihtPT09aHx8aCE9PW51bGwmJm09PT1oLmFsdGVybmF0ZSlicmVhayB0O209eGkobSksaD14aShoKX1tPW51bGx9ZWxzZSBtPW51bGw7eCE9PW51bGwmJndwKGYscCx4LG0sITEpLHYhPT1udWxsJiZ3IT09bnVsbCYmd3AoZix3LHYsbSwhMCl9fWU6e2lmKHA9dT9faSh1KTp3aW5kb3cseD1wLm5vZGVOYW1lJiZwLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkseD09PSJzZWxlY3QifHx4PT09ImlucHV0IiYmcC50eXBlPT09ImZpbGUiKXZhciBTPXNOO2Vsc2UgaWYoZnAocCkpaWYod3YpUz1sTjtlbHNle1M9YU47dmFyIF89aU59ZWxzZSh4PXAubm9kZU5hbWUpJiZ4LnRvTG93ZXJDYXNlKCk9PT0iaW5wdXQiJiYocC50eXBlPT09ImNoZWNrYm94Inx8cC50eXBlPT09InJhZGlvIikmJihTPW9OKTtpZihTJiYoUz1TKGUsdSkpKXt5dihmLFMscixkKTticmVhayBlfV8mJl8oZSxwLHUpLGU9PT0iZm9jdXNvdXQiJiYoXz1wLl93cmFwcGVyU3RhdGUpJiZfLmNvbnRyb2xsZWQmJnAudHlwZT09PSJudW1iZXIiJiZ6ZChwLCJudW1iZXIiLHAudmFsdWUpfXN3aXRjaChfPXU/X2kodSk6d2luZG93LGUpe2Nhc2UiZm9jdXNpbiI6KGZwKF8pfHxfLmNvbnRlbnRFZGl0YWJsZT09PSJ0cnVlIikmJihFaT1fLFhkPXUscm89bnVsbCk7YnJlYWs7Y2FzZSJmb2N1c291dCI6cm89WGQ9RWk9bnVsbDticmVhaztjYXNlIm1vdXNlZG93biI6SmQ9ITA7YnJlYWs7Y2FzZSJjb250ZXh0bWVudSI6Y2FzZSJtb3VzZXVwIjpjYXNlImRyYWdlbmQiOkpkPSExLHhwKGYscixkKTticmVhaztjYXNlInNlbGVjdGlvbmNoYW5nZSI6aWYoZE4pYnJlYWs7Y2FzZSJrZXlkb3duIjpjYXNlImtleXVwIjp4cChmLHIsZCl9dmFyIGs7aWYoX20pZTp7c3dpdGNoKGUpe2Nhc2UiY29tcG9zaXRpb25zdGFydCI6dmFyIFQ9Im9uQ29tcG9zaXRpb25TdGFydCI7YnJlYWsgZTtjYXNlImNvbXBvc2l0aW9uZW5kIjpUPSJvbkNvbXBvc2l0aW9uRW5kIjticmVhayBlO2Nhc2UiY29tcG9zaXRpb251cGRhdGUiOlQ9Im9uQ29tcG9zaXRpb25VcGRhdGUiO2JyZWFrIGV9VD12b2lkIDB9ZWxzZSBraT94dihlLHIpJiYoVD0ib25Db21wb3NpdGlvbkVuZCIpOmU9PT0ia2V5ZG93biImJnIua2V5Q29kZT09PTIyOSYmKFQ9Im9uQ29tcG9zaXRpb25TdGFydCIpO1QmJihndiYmci5sb2NhbGUhPT0ia28iJiYoa2l8fFQhPT0ib25Db21wb3NpdGlvblN0YXJ0Ij9UPT09Im9uQ29tcG9zaXRpb25FbmQiJiZraSYmKGs9cHYoKSk6KGxzPWQsa209InZhbHVlImluIGxzP2xzLnZhbHVlOmxzLnRleHRDb250ZW50LGtpPSEwKSksXz11Yyh1LFQpLDA8Xy5sZW5ndGgmJihUPW5ldyBscChULGUsbnVsbCxyLGQpLGYucHVzaCh7ZXZlbnQ6VCxsaXN0ZW5lcnM6X30pLGs/VC5kYXRhPWs6KGs9dnYociksayE9PW51bGwmJihULmRhdGE9aykpKSksKGs9Smo/ZU4oZSxyKTp0TihlLHIpKSYmKHU9dWModSwib25CZWZvcmVJbnB1dCIpLDA8dS5sZW5ndGgmJihkPW5ldyBscCgib25CZWZvcmVJbnB1dCIsImJlZm9yZWlucHV0IixudWxsLHIsZCksZi5wdXNoKHtldmVudDpkLGxpc3RlbmVyczp1fSksZC5kYXRhPWspKX1UdihmLHQpfSl9ZnVuY3Rpb24gdm8oZSx0LHIpe3JldHVybntpbnN0YW5jZTplLGxpc3RlbmVyOnQsY3VycmVudFRhcmdldDpyfX1mdW5jdGlvbiB1YyhlLHQpe2Zvcih2YXIgcj10KyJDYXB0dXJlIixuPVtdO2UhPT1udWxsOyl7dmFyIHM9ZSxhPXMuc3RhdGVOb2RlO3MudGFnPT09NSYmYSE9PW51bGwmJihzPWEsYT11byhlLHIpLGEhPW51bGwmJm4udW5zaGlmdCh2byhlLGEscykpLGE9dW8oZSx0KSxhIT1udWxsJiZuLnB1c2godm8oZSxhLHMpKSksZT1lLnJldHVybn1yZXR1cm4gbn1mdW5jdGlvbiB4aShlKXtpZihlPT09bnVsbClyZXR1cm4gbnVsbDtkbyBlPWUucmV0dXJuO3doaWxlKGUmJmUudGFnIT09NSk7cmV0dXJuIGV8fG51bGx9ZnVuY3Rpb24gd3AoZSx0LHIsbixzKXtmb3IodmFyIGE9dC5fcmVhY3ROYW1lLG89W107ciE9PW51bGwmJnIhPT1uOyl7dmFyIGw9cixjPWwuYWx0ZXJuYXRlLHU9bC5zdGF0ZU5vZGU7aWYoYyE9PW51bGwmJmM9PT1uKWJyZWFrO2wudGFnPT09NSYmdSE9PW51bGwmJihsPXUscz8oYz11byhyLGEpLGMhPW51bGwmJm8udW5zaGlmdCh2byhyLGMsbCkpKTpzfHwoYz11byhyLGEpLGMhPW51bGwmJm8ucHVzaCh2byhyLGMsbCkpKSkscj1yLnJldHVybn1vLmxlbmd0aCE9PTAmJmUucHVzaCh7ZXZlbnQ6dCxsaXN0ZW5lcnM6b30pfXZhciBwTj0vXHJcbj8vZyxnTj0vXHUwMDAwfFx1RkZGRC9nO2Z1bmN0aW9uIGJwKGUpe3JldHVybih0eXBlb2YgZT09InN0cmluZyI/ZToiIitlKS5yZXBsYWNlKHBOLGAKYCkucmVwbGFjZShnTiwiIil9ZnVuY3Rpb24gYmwoZSx0LHIpe2lmKHQ9YnAodCksYnAoZSkhPT10JiZyKXRocm93IEVycm9yKEIoNDI1KSl9ZnVuY3Rpb24gZGMoKXt9dmFyIGVmPW51bGwsdGY9bnVsbDtmdW5jdGlvbiByZihlLHQpe3JldHVybiBlPT09InRleHRhcmVhInx8ZT09PSJub3NjcmlwdCJ8fHR5cGVvZiB0LmNoaWxkcmVuPT0ic3RyaW5nInx8dHlwZW9mIHQuY2hpbGRyZW49PSJudW1iZXIifHx0eXBlb2YgdC5kYW5nZXJvdXNseVNldElubmVySFRNTD09Im9iamVjdCImJnQuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwhPT1udWxsJiZ0LmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MLl9faHRtbCE9bnVsbH12YXIgbmY9dHlwZW9mIHNldFRpbWVvdXQ9PSJmdW5jdGlvbiI/c2V0VGltZW91dDp2b2lkIDAseE49dHlwZW9mIGNsZWFyVGltZW91dD09ImZ1bmN0aW9uIj9jbGVhclRpbWVvdXQ6dm9pZCAwLGpwPXR5cGVvZiBQcm9taXNlPT0iZnVuY3Rpb24iP1Byb21pc2U6dm9pZCAwLHZOPXR5cGVvZiBxdWV1ZU1pY3JvdGFzaz09ImZ1bmN0aW9uIj9xdWV1ZU1pY3JvdGFzazp0eXBlb2YganA8InUiP2Z1bmN0aW9uKGUpe3JldHVybiBqcC5yZXNvbHZlKG51bGwpLnRoZW4oZSkuY2F0Y2goeU4pfTpuZjtmdW5jdGlvbiB5TihlKXtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7dGhyb3cgZX0pfWZ1bmN0aW9uIFp1KGUsdCl7dmFyIHI9dCxuPTA7ZG97dmFyIHM9ci5uZXh0U2libGluZztpZihlLnJlbW92ZUNoaWxkKHIpLHMmJnMubm9kZVR5cGU9PT04KWlmKHI9cy5kYXRhLHI9PT0iLyQiKXtpZihuPT09MCl7ZS5yZW1vdmVDaGlsZChzKSxobyh0KTtyZXR1cm59bi0tfWVsc2UgciE9PSIkIiYmciE9PSIkPyImJnIhPT0iJCEifHxuKys7cj1zfXdoaWxlKHIpO2hvKHQpfWZ1bmN0aW9uIG1zKGUpe2Zvcig7ZSE9bnVsbDtlPWUubmV4dFNpYmxpbmcpe3ZhciB0PWUubm9kZVR5cGU7aWYodD09PTF8fHQ9PT0zKWJyZWFrO2lmKHQ9PT04KXtpZih0PWUuZGF0YSx0PT09IiQifHx0PT09IiQhInx8dD09PSIkPyIpYnJlYWs7aWYodD09PSIvJCIpcmV0dXJuIG51bGx9fXJldHVybiBlfWZ1bmN0aW9uIE5wKGUpe2U9ZS5wcmV2aW91c1NpYmxpbmc7Zm9yKHZhciB0PTA7ZTspe2lmKGUubm9kZVR5cGU9PT04KXt2YXIgcj1lLmRhdGE7aWYocj09PSIkInx8cj09PSIkISJ8fHI9PT0iJD8iKXtpZih0PT09MClyZXR1cm4gZTt0LS19ZWxzZSByPT09Ii8kIiYmdCsrfWU9ZS5wcmV2aW91c1NpYmxpbmd9cmV0dXJuIG51bGx9dmFyIGthPU1hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnNsaWNlKDIpLHRuPSJfX3JlYWN0RmliZXIkIitrYSx5bz0iX19yZWFjdFByb3BzJCIra2EsQW49Il9fcmVhY3RDb250YWluZXIkIitrYSxzZj0iX19yZWFjdEV2ZW50cyQiK2thLHdOPSJfX3JlYWN0TGlzdGVuZXJzJCIra2EsYk49Il9fcmVhY3RIYW5kbGVzJCIra2E7ZnVuY3Rpb24gRHMoZSl7dmFyIHQ9ZVt0bl07aWYodClyZXR1cm4gdDtmb3IodmFyIHI9ZS5wYXJlbnROb2RlO3I7KXtpZih0PXJbQW5dfHxyW3RuXSl7aWYocj10LmFsdGVybmF0ZSx0LmNoaWxkIT09bnVsbHx8ciE9PW51bGwmJnIuY2hpbGQhPT1udWxsKWZvcihlPU5wKGUpO2UhPT1udWxsOyl7aWYocj1lW3RuXSlyZXR1cm4gcjtlPU5wKGUpfXJldHVybiB0fWU9cixyPWUucGFyZW50Tm9kZX1yZXR1cm4gbnVsbH1mdW5jdGlvbiBKbyhlKXtyZXR1cm4gZT1lW3RuXXx8ZVtBbl0sIWV8fGUudGFnIT09NSYmZS50YWchPT02JiZlLnRhZyE9PTEzJiZlLnRhZyE9PTM/bnVsbDplfWZ1bmN0aW9uIF9pKGUpe2lmKGUudGFnPT09NXx8ZS50YWc9PT02KXJldHVybiBlLnN0YXRlTm9kZTt0aHJvdyBFcnJvcihCKDMzKSl9ZnVuY3Rpb24gZXUoZSl7cmV0dXJuIGVbeW9dfHxudWxsfXZhciBhZj1bXSxQaT0tMTtmdW5jdGlvbiBUcyhlKXtyZXR1cm57Y3VycmVudDplfX1mdW5jdGlvbiBRZShlKXswPlBpfHwoZS5jdXJyZW50PWFmW1BpXSxhZltQaV09bnVsbCxQaS0tKX1mdW5jdGlvbiBVZShlLHQpe1BpKyssYWZbUGldPWUuY3VycmVudCxlLmN1cnJlbnQ9dH12YXIgYnM9e30sTHQ9VHMoYnMpLHRyPVRzKCExKSxlaT1icztmdW5jdGlvbiBjYShlLHQpe3ZhciByPWUudHlwZS5jb250ZXh0VHlwZXM7aWYoIXIpcmV0dXJuIGJzO3ZhciBuPWUuc3RhdGVOb2RlO2lmKG4mJm4uX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dD09PXQpcmV0dXJuIG4uX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQ7dmFyIHM9e30sYTtmb3IoYSBpbiByKXNbYV09dFthXTtyZXR1cm4gbiYmKGU9ZS5zdGF0ZU5vZGUsZS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0PXQsZS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dD1zKSxzfWZ1bmN0aW9uIHJyKGUpe3JldHVybiBlPWUuY2hpbGRDb250ZXh0VHlwZXMsZSE9bnVsbH1mdW5jdGlvbiBmYygpe1FlKHRyKSxRZShMdCl9ZnVuY3Rpb24gU3AoZSx0LHIpe2lmKEx0LmN1cnJlbnQhPT1icyl0aHJvdyBFcnJvcihCKDE2OCkpO1VlKEx0LHQpLFVlKHRyLHIpfWZ1bmN0aW9uIEF2KGUsdCxyKXt2YXIgbj1lLnN0YXRlTm9kZTtpZih0PXQuY2hpbGRDb250ZXh0VHlwZXMsdHlwZW9mIG4uZ2V0Q2hpbGRDb250ZXh0IT0iZnVuY3Rpb24iKXJldHVybiByO249bi5nZXRDaGlsZENvbnRleHQoKTtmb3IodmFyIHMgaW4gbilpZighKHMgaW4gdCkpdGhyb3cgRXJyb3IoQigxMDgsaWooZSl8fCJVbmtub3duIixzKSk7cmV0dXJuIGF0KHt9LHIsbil9ZnVuY3Rpb24gbWMoZSl7cmV0dXJuIGU9KGU9ZS5zdGF0ZU5vZGUpJiZlLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0fHxicyxlaT1MdC5jdXJyZW50LFVlKEx0LGUpLFVlKHRyLHRyLmN1cnJlbnQpLCEwfWZ1bmN0aW9uIGtwKGUsdCxyKXt2YXIgbj1lLnN0YXRlTm9kZTtpZighbil0aHJvdyBFcnJvcihCKDE2OSkpO3I/KGU9QXYoZSx0LGVpKSxuLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0PWUsUWUodHIpLFFlKEx0KSxVZShMdCxlKSk6UWUodHIpLFVlKHRyLHIpfXZhciBibj1udWxsLHR1PSExLEt1PSExO2Z1bmN0aW9uIE12KGUpe2JuPT09bnVsbD9ibj1bZV06Ym4ucHVzaChlKX1mdW5jdGlvbiBqTihlKXt0dT0hMCxNdihlKX1mdW5jdGlvbiBScygpe2lmKCFLdSYmYm4hPT1udWxsKXtLdT0hMDt2YXIgZT0wLHQ9JGU7dHJ5e3ZhciByPWJuO2ZvcigkZT0xO2U8ci5sZW5ndGg7ZSsrKXt2YXIgbj1yW2VdO2RvIG49bighMCk7d2hpbGUobiE9PW51bGwpfWJuPW51bGwsdHU9ITF9Y2F0Y2gocyl7dGhyb3cgYm4hPT1udWxsJiYoYm49Ym4uc2xpY2UoZSsxKSksc3YoYm0sUnMpLHN9ZmluYWxseXskZT10LEt1PSExfX1yZXR1cm4gbnVsbH12YXIgVGk9W10sUmk9MCxoYz1udWxsLHBjPTAsd3I9W10sYnI9MCx0aT1udWxsLEVuPTEsQ249IiI7ZnVuY3Rpb24gSXMoZSx0KXtUaVtSaSsrXT1wYyxUaVtSaSsrXT1oYyxoYz1lLHBjPXR9ZnVuY3Rpb24gT3YoZSx0LHIpe3dyW2JyKytdPUVuLHdyW2JyKytdPUNuLHdyW2JyKytdPXRpLHRpPWU7dmFyIG49RW47ZT1Dbjt2YXIgcz0zMi1EcihuKS0xO24mPX4oMTw8cykscis9MTt2YXIgYT0zMi1Ecih0KStzO2lmKDMwPGEpe3ZhciBvPXMtcyU1O2E9KG4mKDE8PG8pLTEpLnRvU3RyaW5nKDMyKSxuPj49byxzLT1vLEVuPTE8PDMyLURyKHQpK3N8cjw8c3xuLENuPWErZX1lbHNlIEVuPTE8PGF8cjw8c3xuLENuPWV9ZnVuY3Rpb24gVG0oZSl7ZS5yZXR1cm4hPT1udWxsJiYoSXMoZSwxKSxPdihlLDEsMCkpfWZ1bmN0aW9uIFJtKGUpe2Zvcig7ZT09PWhjOyloYz1UaVstLVJpXSxUaVtSaV09bnVsbCxwYz1UaVstLVJpXSxUaVtSaV09bnVsbDtmb3IoO2U9PT10aTspdGk9d3JbLS1icl0sd3JbYnJdPW51bGwsQ249d3JbLS1icl0sd3JbYnJdPW51bGwsRW49d3JbLS1icl0sd3JbYnJdPW51bGx9dmFyIGRyPW51bGwsdXI9bnVsbCxYZT0hMSxPcj1udWxsO2Z1bmN0aW9uIEZ2KGUsdCl7dmFyIHI9U3IoNSxudWxsLG51bGwsMCk7ci5lbGVtZW50VHlwZT0iREVMRVRFRCIsci5zdGF0ZU5vZGU9dCxyLnJldHVybj1lLHQ9ZS5kZWxldGlvbnMsdD09PW51bGw/KGUuZGVsZXRpb25zPVtyXSxlLmZsYWdzfD0xNik6dC5wdXNoKHIpfWZ1bmN0aW9uIEVwKGUsdCl7c3dpdGNoKGUudGFnKXtjYXNlIDU6dmFyIHI9ZS50eXBlO3JldHVybiB0PXQubm9kZVR5cGUhPT0xfHxyLnRvTG93ZXJDYXNlKCkhPT10Lm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk/bnVsbDp0LHQhPT1udWxsPyhlLnN0YXRlTm9kZT10LGRyPWUsdXI9bXModC5maXJzdENoaWxkKSwhMCk6ITE7Y2FzZSA2OnJldHVybiB0PWUucGVuZGluZ1Byb3BzPT09IiJ8fHQubm9kZVR5cGUhPT0zP251bGw6dCx0IT09bnVsbD8oZS5zdGF0ZU5vZGU9dCxkcj1lLHVyPW51bGwsITApOiExO2Nhc2UgMTM6cmV0dXJuIHQ9dC5ub2RlVHlwZSE9PTg/bnVsbDp0LHQhPT1udWxsPyhyPXRpIT09bnVsbD97aWQ6RW4sb3ZlcmZsb3c6Q259Om51bGwsZS5tZW1vaXplZFN0YXRlPXtkZWh5ZHJhdGVkOnQsdHJlZUNvbnRleHQ6cixyZXRyeUxhbmU6MTA3Mzc0MTgyNH0scj1TcigxOCxudWxsLG51bGwsMCksci5zdGF0ZU5vZGU9dCxyLnJldHVybj1lLGUuY2hpbGQ9cixkcj1lLHVyPW51bGwsITApOiExO2RlZmF1bHQ6cmV0dXJuITF9fWZ1bmN0aW9uIG9mKGUpe3JldHVybihlLm1vZGUmMSkhPT0wJiYoZS5mbGFncyYxMjgpPT09MH1mdW5jdGlvbiBsZihlKXtpZihYZSl7dmFyIHQ9dXI7aWYodCl7dmFyIHI9dDtpZighRXAoZSx0KSl7aWYob2YoZSkpdGhyb3cgRXJyb3IoQig0MTgpKTt0PW1zKHIubmV4dFNpYmxpbmcpO3ZhciBuPWRyO3QmJkVwKGUsdCk/RnYobixyKTooZS5mbGFncz1lLmZsYWdzJi00MDk3fDIsWGU9ITEsZHI9ZSl9fWVsc2V7aWYob2YoZSkpdGhyb3cgRXJyb3IoQig0MTgpKTtlLmZsYWdzPWUuZmxhZ3MmLTQwOTd8MixYZT0hMSxkcj1lfX19ZnVuY3Rpb24gQ3AoZSl7Zm9yKGU9ZS5yZXR1cm47ZSE9PW51bGwmJmUudGFnIT09NSYmZS50YWchPT0zJiZlLnRhZyE9PTEzOyllPWUucmV0dXJuO2RyPWV9ZnVuY3Rpb24gamwoZSl7aWYoZSE9PWRyKXJldHVybiExO2lmKCFYZSlyZXR1cm4gQ3AoZSksWGU9ITAsITE7dmFyIHQ7aWYoKHQ9ZS50YWchPT0zKSYmISh0PWUudGFnIT09NSkmJih0PWUudHlwZSx0PXQhPT0iaGVhZCImJnQhPT0iYm9keSImJiFyZihlLnR5cGUsZS5tZW1vaXplZFByb3BzKSksdCYmKHQ9dXIpKXtpZihvZihlKSl0aHJvdyBJdigpLEVycm9yKEIoNDE4KSk7Zm9yKDt0OylGdihlLHQpLHQ9bXModC5uZXh0U2libGluZyl9aWYoQ3AoZSksZS50YWc9PT0xMyl7aWYoZT1lLm1lbW9pemVkU3RhdGUsZT1lIT09bnVsbD9lLmRlaHlkcmF0ZWQ6bnVsbCwhZSl0aHJvdyBFcnJvcihCKDMxNykpO2U6e2ZvcihlPWUubmV4dFNpYmxpbmcsdD0wO2U7KXtpZihlLm5vZGVUeXBlPT09OCl7dmFyIHI9ZS5kYXRhO2lmKHI9PT0iLyQiKXtpZih0PT09MCl7dXI9bXMoZS5uZXh0U2libGluZyk7YnJlYWsgZX10LS19ZWxzZSByIT09IiQiJiZyIT09IiQhIiYmciE9PSIkPyJ8fHQrK31lPWUubmV4dFNpYmxpbmd9dXI9bnVsbH19ZWxzZSB1cj1kcj9tcyhlLnN0YXRlTm9kZS5uZXh0U2libGluZyk6bnVsbDtyZXR1cm4hMH1mdW5jdGlvbiBJdigpe2Zvcih2YXIgZT11cjtlOyllPW1zKGUubmV4dFNpYmxpbmcpfWZ1bmN0aW9uIHVhKCl7dXI9ZHI9bnVsbCxYZT0hMX1mdW5jdGlvbiBBbShlKXtPcj09PW51bGw/T3I9W2VdOk9yLnB1c2goZSl9dmFyIE5OPSRuLlJlYWN0Q3VycmVudEJhdGNoQ29uZmlnO2Z1bmN0aW9uIExhKGUsdCxyKXtpZihlPXIucmVmLGUhPT1udWxsJiZ0eXBlb2YgZSE9ImZ1bmN0aW9uIiYmdHlwZW9mIGUhPSJvYmplY3QiKXtpZihyLl9vd25lcil7aWYocj1yLl9vd25lcixyKXtpZihyLnRhZyE9PTEpdGhyb3cgRXJyb3IoQigzMDkpKTt2YXIgbj1yLnN0YXRlTm9kZX1pZighbil0aHJvdyBFcnJvcihCKDE0NyxlKSk7dmFyIHM9bixhPSIiK2U7cmV0dXJuIHQhPT1udWxsJiZ0LnJlZiE9PW51bGwmJnR5cGVvZiB0LnJlZj09ImZ1bmN0aW9uIiYmdC5yZWYuX3N0cmluZ1JlZj09PWE/dC5yZWY6KHQ9ZnVuY3Rpb24obyl7dmFyIGw9cy5yZWZzO289PT1udWxsP2RlbGV0ZSBsW2FdOmxbYV09b30sdC5fc3RyaW5nUmVmPWEsdCl9aWYodHlwZW9mIGUhPSJzdHJpbmciKXRocm93IEVycm9yKEIoMjg0KSk7aWYoIXIuX293bmVyKXRocm93IEVycm9yKEIoMjkwLGUpKX1yZXR1cm4gZX1mdW5jdGlvbiBObChlLHQpe3Rocm93IGU9T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHQpLEVycm9yKEIoMzEsZT09PSJbb2JqZWN0IE9iamVjdF0iPyJvYmplY3Qgd2l0aCBrZXlzIHsiK09iamVjdC5rZXlzKHQpLmpvaW4oIiwgIikrIn0iOmUpKX1mdW5jdGlvbiBfcChlKXt2YXIgdD1lLl9pbml0O3JldHVybiB0KGUuX3BheWxvYWQpfWZ1bmN0aW9uIEx2KGUpe2Z1bmN0aW9uIHQoaCxnKXtpZihlKXt2YXIgYj1oLmRlbGV0aW9ucztiPT09bnVsbD8oaC5kZWxldGlvbnM9W2ddLGguZmxhZ3N8PTE2KTpiLnB1c2goZyl9fWZ1bmN0aW9uIHIoaCxnKXtpZighZSlyZXR1cm4gbnVsbDtmb3IoO2chPT1udWxsOyl0KGgsZyksZz1nLnNpYmxpbmc7cmV0dXJuIG51bGx9ZnVuY3Rpb24gbihoLGcpe2ZvcihoPW5ldyBNYXA7ZyE9PW51bGw7KWcua2V5IT09bnVsbD9oLnNldChnLmtleSxnKTpoLnNldChnLmluZGV4LGcpLGc9Zy5zaWJsaW5nO3JldHVybiBofWZ1bmN0aW9uIHMoaCxnKXtyZXR1cm4gaD14cyhoLGcpLGguaW5kZXg9MCxoLnNpYmxpbmc9bnVsbCxofWZ1bmN0aW9uIGEoaCxnLGIpe3JldHVybiBoLmluZGV4PWIsZT8oYj1oLmFsdGVybmF0ZSxiIT09bnVsbD8oYj1iLmluZGV4LGI8Zz8oaC5mbGFnc3w9MixnKTpiKTooaC5mbGFnc3w9MixnKSk6KGguZmxhZ3N8PTEwNDg1NzYsZyl9ZnVuY3Rpb24gbyhoKXtyZXR1cm4gZSYmaC5hbHRlcm5hdGU9PT1udWxsJiYoaC5mbGFnc3w9MiksaH1mdW5jdGlvbiBsKGgsZyxiLE4pe3JldHVybiBnPT09bnVsbHx8Zy50YWchPT02PyhnPW5kKGIsaC5tb2RlLE4pLGcucmV0dXJuPWgsZyk6KGc9cyhnLGIpLGcucmV0dXJuPWgsZyl9ZnVuY3Rpb24gYyhoLGcsYixOKXt2YXIgUz1iLnR5cGU7cmV0dXJuIFM9PT1TaT9kKGgsZyxiLnByb3BzLmNoaWxkcmVuLE4sYi5rZXkpOmchPT1udWxsJiYoZy5lbGVtZW50VHlwZT09PVN8fHR5cGVvZiBTPT0ib2JqZWN0IiYmUyE9PW51bGwmJlMuJCR0eXBlb2Y9PT1RbiYmX3AoUyk9PT1nLnR5cGUpPyhOPXMoZyxiLnByb3BzKSxOLnJlZj1MYShoLGcsYiksTi5yZXR1cm49aCxOKTooTj1RbChiLnR5cGUsYi5rZXksYi5wcm9wcyxudWxsLGgubW9kZSxOKSxOLnJlZj1MYShoLGcsYiksTi5yZXR1cm49aCxOKX1mdW5jdGlvbiB1KGgsZyxiLE4pe3JldHVybiBnPT09bnVsbHx8Zy50YWchPT00fHxnLnN0YXRlTm9kZS5jb250YWluZXJJbmZvIT09Yi5jb250YWluZXJJbmZvfHxnLnN0YXRlTm9kZS5pbXBsZW1lbnRhdGlvbiE9PWIuaW1wbGVtZW50YXRpb24/KGc9c2QoYixoLm1vZGUsTiksZy5yZXR1cm49aCxnKTooZz1zKGcsYi5jaGlsZHJlbnx8W10pLGcucmV0dXJuPWgsZyl9ZnVuY3Rpb24gZChoLGcsYixOLFMpe3JldHVybiBnPT09bnVsbHx8Zy50YWchPT03PyhnPUtzKGIsaC5tb2RlLE4sUyksZy5yZXR1cm49aCxnKTooZz1zKGcsYiksZy5yZXR1cm49aCxnKX1mdW5jdGlvbiBmKGgsZyxiKXtpZih0eXBlb2YgZz09InN0cmluZyImJmchPT0iInx8dHlwZW9mIGc9PSJudW1iZXIiKXJldHVybiBnPW5kKCIiK2csaC5tb2RlLGIpLGcucmV0dXJuPWgsZztpZih0eXBlb2YgZz09Im9iamVjdCImJmchPT1udWxsKXtzd2l0Y2goZy4kJHR5cGVvZil7Y2FzZSBmbDpyZXR1cm4gYj1RbChnLnR5cGUsZy5rZXksZy5wcm9wcyxudWxsLGgubW9kZSxiKSxiLnJlZj1MYShoLG51bGwsZyksYi5yZXR1cm49aCxiO2Nhc2UgTmk6cmV0dXJuIGc9c2QoZyxoLm1vZGUsYiksZy5yZXR1cm49aCxnO2Nhc2UgUW46dmFyIE49Zy5faW5pdDtyZXR1cm4gZihoLE4oZy5fcGF5bG9hZCksYil9aWYoV2EoZyl8fEFhKGcpKXJldHVybiBnPUtzKGcsaC5tb2RlLGIsbnVsbCksZy5yZXR1cm49aCxnO05sKGgsZyl9cmV0dXJuIG51bGx9ZnVuY3Rpb24gcChoLGcsYixOKXt2YXIgUz1nIT09bnVsbD9nLmtleTpudWxsO2lmKHR5cGVvZiBiPT0ic3RyaW5nIiYmYiE9PSIifHx0eXBlb2YgYj09Im51bWJlciIpcmV0dXJuIFMhPT1udWxsP251bGw6bChoLGcsIiIrYixOKTtpZih0eXBlb2YgYj09Im9iamVjdCImJmIhPT1udWxsKXtzd2l0Y2goYi4kJHR5cGVvZil7Y2FzZSBmbDpyZXR1cm4gYi5rZXk9PT1TP2MoaCxnLGIsTik6bnVsbDtjYXNlIE5pOnJldHVybiBiLmtleT09PVM/dShoLGcsYixOKTpudWxsO2Nhc2UgUW46cmV0dXJuIFM9Yi5faW5pdCxwKGgsZyxTKGIuX3BheWxvYWQpLE4pfWlmKFdhKGIpfHxBYShiKSlyZXR1cm4gUyE9PW51bGw/bnVsbDpkKGgsZyxiLE4sbnVsbCk7TmwoaCxiKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiB4KGgsZyxiLE4sUyl7aWYodHlwZW9mIE49PSJzdHJpbmciJiZOIT09IiJ8fHR5cGVvZiBOPT0ibnVtYmVyIilyZXR1cm4gaD1oLmdldChiKXx8bnVsbCxsKGcsaCwiIitOLFMpO2lmKHR5cGVvZiBOPT0ib2JqZWN0IiYmTiE9PW51bGwpe3N3aXRjaChOLiQkdHlwZW9mKXtjYXNlIGZsOnJldHVybiBoPWguZ2V0KE4ua2V5PT09bnVsbD9iOk4ua2V5KXx8bnVsbCxjKGcsaCxOLFMpO2Nhc2UgTmk6cmV0dXJuIGg9aC5nZXQoTi5rZXk9PT1udWxsP2I6Ti5rZXkpfHxudWxsLHUoZyxoLE4sUyk7Y2FzZSBRbjp2YXIgXz1OLl9pbml0O3JldHVybiB4KGgsZyxiLF8oTi5fcGF5bG9hZCksUyl9aWYoV2EoTil8fEFhKE4pKXJldHVybiBoPWguZ2V0KGIpfHxudWxsLGQoZyxoLE4sUyxudWxsKTtObChnLE4pfXJldHVybiBudWxsfWZ1bmN0aW9uIHYoaCxnLGIsTil7Zm9yKHZhciBTPW51bGwsXz1udWxsLGs9ZyxUPWc9MCxMPW51bGw7ayE9PW51bGwmJlQ8Yi5sZW5ndGg7VCsrKXtrLmluZGV4PlQ/KEw9ayxrPW51bGwpOkw9ay5zaWJsaW5nO3ZhciBQPXAoaCxrLGJbVF0sTik7aWYoUD09PW51bGwpe2s9PT1udWxsJiYoaz1MKTticmVha31lJiZrJiZQLmFsdGVybmF0ZT09PW51bGwmJnQoaCxrKSxnPWEoUCxnLFQpLF89PT1udWxsP1M9UDpfLnNpYmxpbmc9UCxfPVAsaz1MfWlmKFQ9PT1iLmxlbmd0aClyZXR1cm4gcihoLGspLFhlJiZJcyhoLFQpLFM7aWYoaz09PW51bGwpe2Zvcig7VDxiLmxlbmd0aDtUKyspaz1mKGgsYltUXSxOKSxrIT09bnVsbCYmKGc9YShrLGcsVCksXz09PW51bGw/Uz1rOl8uc2libGluZz1rLF89ayk7cmV0dXJuIFhlJiZJcyhoLFQpLFN9Zm9yKGs9bihoLGspO1Q8Yi5sZW5ndGg7VCsrKUw9eChrLGgsVCxiW1RdLE4pLEwhPT1udWxsJiYoZSYmTC5hbHRlcm5hdGUhPT1udWxsJiZrLmRlbGV0ZShMLmtleT09PW51bGw/VDpMLmtleSksZz1hKEwsZyxUKSxfPT09bnVsbD9TPUw6Xy5zaWJsaW5nPUwsXz1MKTtyZXR1cm4gZSYmay5mb3JFYWNoKGZ1bmN0aW9uKGope3JldHVybiB0KGgsail9KSxYZSYmSXMoaCxUKSxTfWZ1bmN0aW9uIG0oaCxnLGIsTil7dmFyIFM9QWEoYik7aWYodHlwZW9mIFMhPSJmdW5jdGlvbiIpdGhyb3cgRXJyb3IoQigxNTApKTtpZihiPVMuY2FsbChiKSxiPT1udWxsKXRocm93IEVycm9yKEIoMTUxKSk7Zm9yKHZhciBfPVM9bnVsbCxrPWcsVD1nPTAsTD1udWxsLFA9Yi5uZXh0KCk7ayE9PW51bGwmJiFQLmRvbmU7VCsrLFA9Yi5uZXh0KCkpe2suaW5kZXg+VD8oTD1rLGs9bnVsbCk6TD1rLnNpYmxpbmc7dmFyIGo9cChoLGssUC52YWx1ZSxOKTtpZihqPT09bnVsbCl7az09PW51bGwmJihrPUwpO2JyZWFrfWUmJmsmJmouYWx0ZXJuYXRlPT09bnVsbCYmdChoLGspLGc9YShqLGcsVCksXz09PW51bGw/Uz1qOl8uc2libGluZz1qLF89aixrPUx9aWYoUC5kb25lKXJldHVybiByKGgsayksWGUmJklzKGgsVCksUztpZihrPT09bnVsbCl7Zm9yKDshUC5kb25lO1QrKyxQPWIubmV4dCgpKVA9ZihoLFAudmFsdWUsTiksUCE9PW51bGwmJihnPWEoUCxnLFQpLF89PT1udWxsP1M9UDpfLnNpYmxpbmc9UCxfPVApO3JldHVybiBYZSYmSXMoaCxUKSxTfWZvcihrPW4oaCxrKTshUC5kb25lO1QrKyxQPWIubmV4dCgpKVA9eChrLGgsVCxQLnZhbHVlLE4pLFAhPT1udWxsJiYoZSYmUC5hbHRlcm5hdGUhPT1udWxsJiZrLmRlbGV0ZShQLmtleT09PW51bGw/VDpQLmtleSksZz1hKFAsZyxUKSxfPT09bnVsbD9TPVA6Xy5zaWJsaW5nPVAsXz1QKTtyZXR1cm4gZSYmay5mb3JFYWNoKGZ1bmN0aW9uKEkpe3JldHVybiB0KGgsSSl9KSxYZSYmSXMoaCxUKSxTfWZ1bmN0aW9uIHcoaCxnLGIsTil7aWYodHlwZW9mIGI9PSJvYmplY3QiJiZiIT09bnVsbCYmYi50eXBlPT09U2kmJmIua2V5PT09bnVsbCYmKGI9Yi5wcm9wcy5jaGlsZHJlbiksdHlwZW9mIGI9PSJvYmplY3QiJiZiIT09bnVsbCl7c3dpdGNoKGIuJCR0eXBlb2Ype2Nhc2UgZmw6ZTp7Zm9yKHZhciBTPWIua2V5LF89ZztfIT09bnVsbDspe2lmKF8ua2V5PT09Uyl7aWYoUz1iLnR5cGUsUz09PVNpKXtpZihfLnRhZz09PTcpe3IoaCxfLnNpYmxpbmcpLGc9cyhfLGIucHJvcHMuY2hpbGRyZW4pLGcucmV0dXJuPWgsaD1nO2JyZWFrIGV9fWVsc2UgaWYoXy5lbGVtZW50VHlwZT09PVN8fHR5cGVvZiBTPT0ib2JqZWN0IiYmUyE9PW51bGwmJlMuJCR0eXBlb2Y9PT1RbiYmX3AoUyk9PT1fLnR5cGUpe3IoaCxfLnNpYmxpbmcpLGc9cyhfLGIucHJvcHMpLGcucmVmPUxhKGgsXyxiKSxnLnJldHVybj1oLGg9ZzticmVhayBlfXIoaCxfKTticmVha31lbHNlIHQoaCxfKTtfPV8uc2libGluZ31iLnR5cGU9PT1TaT8oZz1LcyhiLnByb3BzLmNoaWxkcmVuLGgubW9kZSxOLGIua2V5KSxnLnJldHVybj1oLGg9Zyk6KE49UWwoYi50eXBlLGIua2V5LGIucHJvcHMsbnVsbCxoLm1vZGUsTiksTi5yZWY9TGEoaCxnLGIpLE4ucmV0dXJuPWgsaD1OKX1yZXR1cm4gbyhoKTtjYXNlIE5pOmU6e2ZvcihfPWIua2V5O2chPT1udWxsOyl7aWYoZy5rZXk9PT1fKWlmKGcudGFnPT09NCYmZy5zdGF0ZU5vZGUuY29udGFpbmVySW5mbz09PWIuY29udGFpbmVySW5mbyYmZy5zdGF0ZU5vZGUuaW1wbGVtZW50YXRpb249PT1iLmltcGxlbWVudGF0aW9uKXtyKGgsZy5zaWJsaW5nKSxnPXMoZyxiLmNoaWxkcmVufHxbXSksZy5yZXR1cm49aCxoPWc7YnJlYWsgZX1lbHNle3IoaCxnKTticmVha31lbHNlIHQoaCxnKTtnPWcuc2libGluZ31nPXNkKGIsaC5tb2RlLE4pLGcucmV0dXJuPWgsaD1nfXJldHVybiBvKGgpO2Nhc2UgUW46cmV0dXJuIF89Yi5faW5pdCx3KGgsZyxfKGIuX3BheWxvYWQpLE4pfWlmKFdhKGIpKXJldHVybiB2KGgsZyxiLE4pO2lmKEFhKGIpKXJldHVybiBtKGgsZyxiLE4pO05sKGgsYil9cmV0dXJuIHR5cGVvZiBiPT0ic3RyaW5nIiYmYiE9PSIifHx0eXBlb2YgYj09Im51bWJlciI/KGI9IiIrYixnIT09bnVsbCYmZy50YWc9PT02PyhyKGgsZy5zaWJsaW5nKSxnPXMoZyxiKSxnLnJldHVybj1oLGg9Zyk6KHIoaCxnKSxnPW5kKGIsaC5tb2RlLE4pLGcucmV0dXJuPWgsaD1nKSxvKGgpKTpyKGgsZyl9cmV0dXJuIHd9dmFyIGRhPUx2KCEwKSxEdj1MdighMSksZ2M9VHMobnVsbCkseGM9bnVsbCxBaT1udWxsLE1tPW51bGw7ZnVuY3Rpb24gT20oKXtNbT1BaT14Yz1udWxsfWZ1bmN0aW9uIEZtKGUpe3ZhciB0PWdjLmN1cnJlbnQ7UWUoZ2MpLGUuX2N1cnJlbnRWYWx1ZT10fWZ1bmN0aW9uIGNmKGUsdCxyKXtmb3IoO2UhPT1udWxsOyl7dmFyIG49ZS5hbHRlcm5hdGU7aWYoKGUuY2hpbGRMYW5lcyZ0KSE9PXQ/KGUuY2hpbGRMYW5lc3w9dCxuIT09bnVsbCYmKG4uY2hpbGRMYW5lc3w9dCkpOm4hPT1udWxsJiYobi5jaGlsZExhbmVzJnQpIT09dCYmKG4uY2hpbGRMYW5lc3w9dCksZT09PXIpYnJlYWs7ZT1lLnJldHVybn19ZnVuY3Rpb24gVmkoZSx0KXt4Yz1lLE1tPUFpPW51bGwsZT1lLmRlcGVuZGVuY2llcyxlIT09bnVsbCYmZS5maXJzdENvbnRleHQhPT1udWxsJiYoZS5sYW5lcyZ0JiYoWHQ9ITApLGUuZmlyc3RDb250ZXh0PW51bGwpfWZ1bmN0aW9uIEVyKGUpe3ZhciB0PWUuX2N1cnJlbnRWYWx1ZTtpZihNbSE9PWUpaWYoZT17Y29udGV4dDplLG1lbW9pemVkVmFsdWU6dCxuZXh0Om51bGx9LEFpPT09bnVsbCl7aWYoeGM9PT1udWxsKXRocm93IEVycm9yKEIoMzA4KSk7QWk9ZSx4Yy5kZXBlbmRlbmNpZXM9e2xhbmVzOjAsZmlyc3RDb250ZXh0OmV9fWVsc2UgQWk9QWkubmV4dD1lO3JldHVybiB0fXZhciAkcz1udWxsO2Z1bmN0aW9uIEltKGUpeyRzPT09bnVsbD8kcz1bZV06JHMucHVzaChlKX1mdW5jdGlvbiAkdihlLHQscixuKXt2YXIgcz10LmludGVybGVhdmVkO3JldHVybiBzPT09bnVsbD8oci5uZXh0PXIsSW0odCkpOihyLm5leHQ9cy5uZXh0LHMubmV4dD1yKSx0LmludGVybGVhdmVkPXIsTW4oZSxuKX1mdW5jdGlvbiBNbihlLHQpe2UubGFuZXN8PXQ7dmFyIHI9ZS5hbHRlcm5hdGU7Zm9yKHIhPT1udWxsJiYoci5sYW5lc3w9dCkscj1lLGU9ZS5yZXR1cm47ZSE9PW51bGw7KWUuY2hpbGRMYW5lc3w9dCxyPWUuYWx0ZXJuYXRlLHIhPT1udWxsJiYoci5jaGlsZExhbmVzfD10KSxyPWUsZT1lLnJldHVybjtyZXR1cm4gci50YWc9PT0zP3Iuc3RhdGVOb2RlOm51bGx9dmFyIFpuPSExO2Z1bmN0aW9uIExtKGUpe2UudXBkYXRlUXVldWU9e2Jhc2VTdGF0ZTplLm1lbW9pemVkU3RhdGUsZmlyc3RCYXNlVXBkYXRlOm51bGwsbGFzdEJhc2VVcGRhdGU6bnVsbCxzaGFyZWQ6e3BlbmRpbmc6bnVsbCxpbnRlcmxlYXZlZDpudWxsLGxhbmVzOjB9LGVmZmVjdHM6bnVsbH19ZnVuY3Rpb24genYoZSx0KXtlPWUudXBkYXRlUXVldWUsdC51cGRhdGVRdWV1ZT09PWUmJih0LnVwZGF0ZVF1ZXVlPXtiYXNlU3RhdGU6ZS5iYXNlU3RhdGUsZmlyc3RCYXNlVXBkYXRlOmUuZmlyc3RCYXNlVXBkYXRlLGxhc3RCYXNlVXBkYXRlOmUubGFzdEJhc2VVcGRhdGUsc2hhcmVkOmUuc2hhcmVkLGVmZmVjdHM6ZS5lZmZlY3RzfSl9ZnVuY3Rpb24gUG4oZSx0KXtyZXR1cm57ZXZlbnRUaW1lOmUsbGFuZTp0LHRhZzowLHBheWxvYWQ6bnVsbCxjYWxsYmFjazpudWxsLG5leHQ6bnVsbH19ZnVuY3Rpb24gaHMoZSx0LHIpe3ZhciBuPWUudXBkYXRlUXVldWU7aWYobj09PW51bGwpcmV0dXJuIG51bGw7aWYobj1uLnNoYXJlZCxUZSYyKXt2YXIgcz1uLnBlbmRpbmc7cmV0dXJuIHM9PT1udWxsP3QubmV4dD10Oih0Lm5leHQ9cy5uZXh0LHMubmV4dD10KSxuLnBlbmRpbmc9dCxNbihlLHIpfXJldHVybiBzPW4uaW50ZXJsZWF2ZWQscz09PW51bGw/KHQubmV4dD10LEltKG4pKToodC5uZXh0PXMubmV4dCxzLm5leHQ9dCksbi5pbnRlcmxlYXZlZD10LE1uKGUscil9ZnVuY3Rpb24gVWwoZSx0LHIpe2lmKHQ9dC51cGRhdGVRdWV1ZSx0IT09bnVsbCYmKHQ9dC5zaGFyZWQsKHImNDE5NDI0MCkhPT0wKSl7dmFyIG49dC5sYW5lcztuJj1lLnBlbmRpbmdMYW5lcyxyfD1uLHQubGFuZXM9cixqbShlLHIpfX1mdW5jdGlvbiBQcChlLHQpe3ZhciByPWUudXBkYXRlUXVldWUsbj1lLmFsdGVybmF0ZTtpZihuIT09bnVsbCYmKG49bi51cGRhdGVRdWV1ZSxyPT09bikpe3ZhciBzPW51bGwsYT1udWxsO2lmKHI9ci5maXJzdEJhc2VVcGRhdGUsciE9PW51bGwpe2Rve3ZhciBvPXtldmVudFRpbWU6ci5ldmVudFRpbWUsbGFuZTpyLmxhbmUsdGFnOnIudGFnLHBheWxvYWQ6ci5wYXlsb2FkLGNhbGxiYWNrOnIuY2FsbGJhY2ssbmV4dDpudWxsfTthPT09bnVsbD9zPWE9bzphPWEubmV4dD1vLHI9ci5uZXh0fXdoaWxlKHIhPT1udWxsKTthPT09bnVsbD9zPWE9dDphPWEubmV4dD10fWVsc2Ugcz1hPXQ7cj17YmFzZVN0YXRlOm4uYmFzZVN0YXRlLGZpcnN0QmFzZVVwZGF0ZTpzLGxhc3RCYXNlVXBkYXRlOmEsc2hhcmVkOm4uc2hhcmVkLGVmZmVjdHM6bi5lZmZlY3RzfSxlLnVwZGF0ZVF1ZXVlPXI7cmV0dXJufWU9ci5sYXN0QmFzZVVwZGF0ZSxlPT09bnVsbD9yLmZpcnN0QmFzZVVwZGF0ZT10OmUubmV4dD10LHIubGFzdEJhc2VVcGRhdGU9dH1mdW5jdGlvbiB2YyhlLHQscixuKXt2YXIgcz1lLnVwZGF0ZVF1ZXVlO1puPSExO3ZhciBhPXMuZmlyc3RCYXNlVXBkYXRlLG89cy5sYXN0QmFzZVVwZGF0ZSxsPXMuc2hhcmVkLnBlbmRpbmc7aWYobCE9PW51bGwpe3Muc2hhcmVkLnBlbmRpbmc9bnVsbDt2YXIgYz1sLHU9Yy5uZXh0O2MubmV4dD1udWxsLG89PT1udWxsP2E9dTpvLm5leHQ9dSxvPWM7dmFyIGQ9ZS5hbHRlcm5hdGU7ZCE9PW51bGwmJihkPWQudXBkYXRlUXVldWUsbD1kLmxhc3RCYXNlVXBkYXRlLGwhPT1vJiYobD09PW51bGw/ZC5maXJzdEJhc2VVcGRhdGU9dTpsLm5leHQ9dSxkLmxhc3RCYXNlVXBkYXRlPWMpKX1pZihhIT09bnVsbCl7dmFyIGY9cy5iYXNlU3RhdGU7bz0wLGQ9dT1jPW51bGwsbD1hO2Rve3ZhciBwPWwubGFuZSx4PWwuZXZlbnRUaW1lO2lmKChuJnApPT09cCl7ZCE9PW51bGwmJihkPWQubmV4dD17ZXZlbnRUaW1lOngsbGFuZTowLHRhZzpsLnRhZyxwYXlsb2FkOmwucGF5bG9hZCxjYWxsYmFjazpsLmNhbGxiYWNrLG5leHQ6bnVsbH0pO2U6e3ZhciB2PWUsbT1sO3N3aXRjaChwPXQseD1yLG0udGFnKXtjYXNlIDE6aWYodj1tLnBheWxvYWQsdHlwZW9mIHY9PSJmdW5jdGlvbiIpe2Y9di5jYWxsKHgsZixwKTticmVhayBlfWY9djticmVhayBlO2Nhc2UgMzp2LmZsYWdzPXYuZmxhZ3MmLTY1NTM3fDEyODtjYXNlIDA6aWYodj1tLnBheWxvYWQscD10eXBlb2Ygdj09ImZ1bmN0aW9uIj92LmNhbGwoeCxmLHApOnYscD09bnVsbClicmVhayBlO2Y9YXQoe30sZixwKTticmVhayBlO2Nhc2UgMjpabj0hMH19bC5jYWxsYmFjayE9PW51bGwmJmwubGFuZSE9PTAmJihlLmZsYWdzfD02NCxwPXMuZWZmZWN0cyxwPT09bnVsbD9zLmVmZmVjdHM9W2xdOnAucHVzaChsKSl9ZWxzZSB4PXtldmVudFRpbWU6eCxsYW5lOnAsdGFnOmwudGFnLHBheWxvYWQ6bC5wYXlsb2FkLGNhbGxiYWNrOmwuY2FsbGJhY2ssbmV4dDpudWxsfSxkPT09bnVsbD8odT1kPXgsYz1mKTpkPWQubmV4dD14LG98PXA7aWYobD1sLm5leHQsbD09PW51bGwpe2lmKGw9cy5zaGFyZWQucGVuZGluZyxsPT09bnVsbClicmVhaztwPWwsbD1wLm5leHQscC5uZXh0PW51bGwscy5sYXN0QmFzZVVwZGF0ZT1wLHMuc2hhcmVkLnBlbmRpbmc9bnVsbH19d2hpbGUoITApO2lmKGQ9PT1udWxsJiYoYz1mKSxzLmJhc2VTdGF0ZT1jLHMuZmlyc3RCYXNlVXBkYXRlPXUscy5sYXN0QmFzZVVwZGF0ZT1kLHQ9cy5zaGFyZWQuaW50ZXJsZWF2ZWQsdCE9PW51bGwpe3M9dDtkbyBvfD1zLmxhbmUscz1zLm5leHQ7d2hpbGUocyE9PXQpfWVsc2UgYT09PW51bGwmJihzLnNoYXJlZC5sYW5lcz0wKTtuaXw9byxlLmxhbmVzPW8sZS5tZW1vaXplZFN0YXRlPWZ9fWZ1bmN0aW9uIFRwKGUsdCxyKXtpZihlPXQuZWZmZWN0cyx0LmVmZmVjdHM9bnVsbCxlIT09bnVsbClmb3IodD0wO3Q8ZS5sZW5ndGg7dCsrKXt2YXIgbj1lW3RdLHM9bi5jYWxsYmFjaztpZihzIT09bnVsbCl7aWYobi5jYWxsYmFjaz1udWxsLG49cix0eXBlb2YgcyE9ImZ1bmN0aW9uIil0aHJvdyBFcnJvcihCKDE5MSxzKSk7cy5jYWxsKG4pfX19dmFyIGVsPXt9LGxuPVRzKGVsKSx3bz1UcyhlbCksYm89VHMoZWwpO2Z1bmN0aW9uIHpzKGUpe2lmKGU9PT1lbCl0aHJvdyBFcnJvcihCKDE3NCkpO3JldHVybiBlfWZ1bmN0aW9uIERtKGUsdCl7c3dpdGNoKFVlKGJvLHQpLFVlKHdvLGUpLFVlKGxuLGVsKSxlPXQubm9kZVR5cGUsZSl7Y2FzZSA5OmNhc2UgMTE6dD0odD10LmRvY3VtZW50RWxlbWVudCk/dC5uYW1lc3BhY2VVUkk6VWQobnVsbCwiIik7YnJlYWs7ZGVmYXVsdDplPWU9PT04P3QucGFyZW50Tm9kZTp0LHQ9ZS5uYW1lc3BhY2VVUkl8fG51bGwsZT1lLnRhZ05hbWUsdD1VZCh0LGUpfVFlKGxuKSxVZShsbix0KX1mdW5jdGlvbiBmYSgpe1FlKGxuKSxRZSh3byksUWUoYm8pfWZ1bmN0aW9uIFZ2KGUpe3pzKGJvLmN1cnJlbnQpO3ZhciB0PXpzKGxuLmN1cnJlbnQpLHI9VWQodCxlLnR5cGUpO3QhPT1yJiYoVWUod28sZSksVWUobG4scikpfWZ1bmN0aW9uICRtKGUpe3dvLmN1cnJlbnQ9PT1lJiYoUWUobG4pLFFlKHdvKSl9dmFyIHN0PVRzKDApO2Z1bmN0aW9uIHljKGUpe2Zvcih2YXIgdD1lO3QhPT1udWxsOyl7aWYodC50YWc9PT0xMyl7dmFyIHI9dC5tZW1vaXplZFN0YXRlO2lmKHIhPT1udWxsJiYocj1yLmRlaHlkcmF0ZWQscj09PW51bGx8fHIuZGF0YT09PSIkPyJ8fHIuZGF0YT09PSIkISIpKXJldHVybiB0fWVsc2UgaWYodC50YWc9PT0xOSYmdC5tZW1vaXplZFByb3BzLnJldmVhbE9yZGVyIT09dm9pZCAwKXtpZih0LmZsYWdzJjEyOClyZXR1cm4gdH1lbHNlIGlmKHQuY2hpbGQhPT1udWxsKXt0LmNoaWxkLnJldHVybj10LHQ9dC5jaGlsZDtjb250aW51ZX1pZih0PT09ZSlicmVhaztmb3IoO3Quc2libGluZz09PW51bGw7KXtpZih0LnJldHVybj09PW51bGx8fHQucmV0dXJuPT09ZSlyZXR1cm4gbnVsbDt0PXQucmV0dXJufXQuc2libGluZy5yZXR1cm49dC5yZXR1cm4sdD10LnNpYmxpbmd9cmV0dXJuIG51bGx9dmFyIFl1PVtdO2Z1bmN0aW9uIHptKCl7Zm9yKHZhciBlPTA7ZTxZdS5sZW5ndGg7ZSsrKVl1W2VdLl93b3JrSW5Qcm9ncmVzc1ZlcnNpb25QcmltYXJ5PW51bGw7WXUubGVuZ3RoPTB9dmFyIEJsPSRuLlJlYWN0Q3VycmVudERpc3BhdGNoZXIsWHU9JG4uUmVhY3RDdXJyZW50QmF0Y2hDb25maWcscmk9MCxpdD1udWxsLHZ0PW51bGwsanQ9bnVsbCx3Yz0hMSxubz0hMSxqbz0wLFNOPTA7ZnVuY3Rpb24gVHQoKXt0aHJvdyBFcnJvcihCKDMyMSkpfWZ1bmN0aW9uIFZtKGUsdCl7aWYodD09PW51bGwpcmV0dXJuITE7Zm9yKHZhciByPTA7cjx0Lmxlbmd0aCYmcjxlLmxlbmd0aDtyKyspaWYoIVZyKGVbcl0sdFtyXSkpcmV0dXJuITE7cmV0dXJuITB9ZnVuY3Rpb24gVW0oZSx0LHIsbixzLGEpe2lmKHJpPWEsaXQ9dCx0Lm1lbW9pemVkU3RhdGU9bnVsbCx0LnVwZGF0ZVF1ZXVlPW51bGwsdC5sYW5lcz0wLEJsLmN1cnJlbnQ9ZT09PW51bGx8fGUubWVtb2l6ZWRTdGF0ZT09PW51bGw/X046UE4sZT1yKG4scyksbm8pe2E9MDtkb3tpZihubz0hMSxqbz0wLDI1PD1hKXRocm93IEVycm9yKEIoMzAxKSk7YSs9MSxqdD12dD1udWxsLHQudXBkYXRlUXVldWU9bnVsbCxCbC5jdXJyZW50PVROLGU9cihuLHMpfXdoaWxlKG5vKX1pZihCbC5jdXJyZW50PWJjLHQ9dnQhPT1udWxsJiZ2dC5uZXh0IT09bnVsbCxyaT0wLGp0PXZ0PWl0PW51bGwsd2M9ITEsdCl0aHJvdyBFcnJvcihCKDMwMCkpO3JldHVybiBlfWZ1bmN0aW9uIEJtKCl7dmFyIGU9am8hPT0wO3JldHVybiBqbz0wLGV9ZnVuY3Rpb24gR3IoKXt2YXIgZT17bWVtb2l6ZWRTdGF0ZTpudWxsLGJhc2VTdGF0ZTpudWxsLGJhc2VRdWV1ZTpudWxsLHF1ZXVlOm51bGwsbmV4dDpudWxsfTtyZXR1cm4ganQ9PT1udWxsP2l0Lm1lbW9pemVkU3RhdGU9anQ9ZTpqdD1qdC5uZXh0PWUsanR9ZnVuY3Rpb24gQ3IoKXtpZih2dD09PW51bGwpe3ZhciBlPWl0LmFsdGVybmF0ZTtlPWUhPT1udWxsP2UubWVtb2l6ZWRTdGF0ZTpudWxsfWVsc2UgZT12dC5uZXh0O3ZhciB0PWp0PT09bnVsbD9pdC5tZW1vaXplZFN0YXRlOmp0Lm5leHQ7aWYodCE9PW51bGwpanQ9dCx2dD1lO2Vsc2V7aWYoZT09PW51bGwpdGhyb3cgRXJyb3IoQigzMTApKTt2dD1lLGU9e21lbW9pemVkU3RhdGU6dnQubWVtb2l6ZWRTdGF0ZSxiYXNlU3RhdGU6dnQuYmFzZVN0YXRlLGJhc2VRdWV1ZTp2dC5iYXNlUXVldWUscXVldWU6dnQucXVldWUsbmV4dDpudWxsfSxqdD09PW51bGw/aXQubWVtb2l6ZWRTdGF0ZT1qdD1lOmp0PWp0Lm5leHQ9ZX1yZXR1cm4ganR9ZnVuY3Rpb24gTm8oZSx0KXtyZXR1cm4gdHlwZW9mIHQ9PSJmdW5jdGlvbiI/dChlKTp0fWZ1bmN0aW9uIEp1KGUpe3ZhciB0PUNyKCkscj10LnF1ZXVlO2lmKHI9PT1udWxsKXRocm93IEVycm9yKEIoMzExKSk7ci5sYXN0UmVuZGVyZWRSZWR1Y2VyPWU7dmFyIG49dnQscz1uLmJhc2VRdWV1ZSxhPXIucGVuZGluZztpZihhIT09bnVsbCl7aWYocyE9PW51bGwpe3ZhciBvPXMubmV4dDtzLm5leHQ9YS5uZXh0LGEubmV4dD1vfW4uYmFzZVF1ZXVlPXM9YSxyLnBlbmRpbmc9bnVsbH1pZihzIT09bnVsbCl7YT1zLm5leHQsbj1uLmJhc2VTdGF0ZTt2YXIgbD1vPW51bGwsYz1udWxsLHU9YTtkb3t2YXIgZD11LmxhbmU7aWYoKHJpJmQpPT09ZCljIT09bnVsbCYmKGM9Yy5uZXh0PXtsYW5lOjAsYWN0aW9uOnUuYWN0aW9uLGhhc0VhZ2VyU3RhdGU6dS5oYXNFYWdlclN0YXRlLGVhZ2VyU3RhdGU6dS5lYWdlclN0YXRlLG5leHQ6bnVsbH0pLG49dS5oYXNFYWdlclN0YXRlP3UuZWFnZXJTdGF0ZTplKG4sdS5hY3Rpb24pO2Vsc2V7dmFyIGY9e2xhbmU6ZCxhY3Rpb246dS5hY3Rpb24saGFzRWFnZXJTdGF0ZTp1Lmhhc0VhZ2VyU3RhdGUsZWFnZXJTdGF0ZTp1LmVhZ2VyU3RhdGUsbmV4dDpudWxsfTtjPT09bnVsbD8obD1jPWYsbz1uKTpjPWMubmV4dD1mLGl0LmxhbmVzfD1kLG5pfD1kfXU9dS5uZXh0fXdoaWxlKHUhPT1udWxsJiZ1IT09YSk7Yz09PW51bGw/bz1uOmMubmV4dD1sLFZyKG4sdC5tZW1vaXplZFN0YXRlKXx8KFh0PSEwKSx0Lm1lbW9pemVkU3RhdGU9bix0LmJhc2VTdGF0ZT1vLHQuYmFzZVF1ZXVlPWMsci5sYXN0UmVuZGVyZWRTdGF0ZT1ufWlmKGU9ci5pbnRlcmxlYXZlZCxlIT09bnVsbCl7cz1lO2RvIGE9cy5sYW5lLGl0LmxhbmVzfD1hLG5pfD1hLHM9cy5uZXh0O3doaWxlKHMhPT1lKX1lbHNlIHM9PT1udWxsJiYoci5sYW5lcz0wKTtyZXR1cm5bdC5tZW1vaXplZFN0YXRlLHIuZGlzcGF0Y2hdfWZ1bmN0aW9uIGVkKGUpe3ZhciB0PUNyKCkscj10LnF1ZXVlO2lmKHI9PT1udWxsKXRocm93IEVycm9yKEIoMzExKSk7ci5sYXN0UmVuZGVyZWRSZWR1Y2VyPWU7dmFyIG49ci5kaXNwYXRjaCxzPXIucGVuZGluZyxhPXQubWVtb2l6ZWRTdGF0ZTtpZihzIT09bnVsbCl7ci5wZW5kaW5nPW51bGw7dmFyIG89cz1zLm5leHQ7ZG8gYT1lKGEsby5hY3Rpb24pLG89by5uZXh0O3doaWxlKG8hPT1zKTtWcihhLHQubWVtb2l6ZWRTdGF0ZSl8fChYdD0hMCksdC5tZW1vaXplZFN0YXRlPWEsdC5iYXNlUXVldWU9PT1udWxsJiYodC5iYXNlU3RhdGU9YSksci5sYXN0UmVuZGVyZWRTdGF0ZT1hfXJldHVyblthLG5dfWZ1bmN0aW9uIFV2KCl7fWZ1bmN0aW9uIEJ2KGUsdCl7dmFyIHI9aXQsbj1DcigpLHM9dCgpLGE9IVZyKG4ubWVtb2l6ZWRTdGF0ZSxzKTtpZihhJiYobi5tZW1vaXplZFN0YXRlPXMsWHQ9ITApLG49bi5xdWV1ZSxIbShxdi5iaW5kKG51bGwscixuLGUpLFtlXSksbi5nZXRTbmFwc2hvdCE9PXR8fGF8fGp0IT09bnVsbCYmanQubWVtb2l6ZWRTdGF0ZS50YWcmMSl7aWYoci5mbGFnc3w9MjA0OCxTbyg5LFd2LmJpbmQobnVsbCxyLG4scyx0KSx2b2lkIDAsbnVsbCksTnQ9PT1udWxsKXRocm93IEVycm9yKEIoMzQ5KSk7cmkmMzB8fEh2KHIsdCxzKX1yZXR1cm4gc31mdW5jdGlvbiBIdihlLHQscil7ZS5mbGFnc3w9MTYzODQsZT17Z2V0U25hcHNob3Q6dCx2YWx1ZTpyfSx0PWl0LnVwZGF0ZVF1ZXVlLHQ9PT1udWxsPyh0PXtsYXN0RWZmZWN0Om51bGwsc3RvcmVzOm51bGx9LGl0LnVwZGF0ZVF1ZXVlPXQsdC5zdG9yZXM9W2VdKToocj10LnN0b3JlcyxyPT09bnVsbD90LnN0b3Jlcz1bZV06ci5wdXNoKGUpKX1mdW5jdGlvbiBXdihlLHQscixuKXt0LnZhbHVlPXIsdC5nZXRTbmFwc2hvdD1uLEd2KHQpJiZRdihlKX1mdW5jdGlvbiBxdihlLHQscil7cmV0dXJuIHIoZnVuY3Rpb24oKXtHdih0KSYmUXYoZSl9KX1mdW5jdGlvbiBHdihlKXt2YXIgdD1lLmdldFNuYXBzaG90O2U9ZS52YWx1ZTt0cnl7dmFyIHI9dCgpO3JldHVybiFWcihlLHIpfWNhdGNoe3JldHVybiEwfX1mdW5jdGlvbiBRdihlKXt2YXIgdD1NbihlLDEpO3QhPT1udWxsJiYkcih0LGUsMSwtMSl9ZnVuY3Rpb24gUnAoZSl7dmFyIHQ9R3IoKTtyZXR1cm4gdHlwZW9mIGU9PSJmdW5jdGlvbiImJihlPWUoKSksdC5tZW1vaXplZFN0YXRlPXQuYmFzZVN0YXRlPWUsZT17cGVuZGluZzpudWxsLGludGVybGVhdmVkOm51bGwsbGFuZXM6MCxkaXNwYXRjaDpudWxsLGxhc3RSZW5kZXJlZFJlZHVjZXI6Tm8sbGFzdFJlbmRlcmVkU3RhdGU6ZX0sdC5xdWV1ZT1lLGU9ZS5kaXNwYXRjaD1DTi5iaW5kKG51bGwsaXQsZSksW3QubWVtb2l6ZWRTdGF0ZSxlXX1mdW5jdGlvbiBTbyhlLHQscixuKXtyZXR1cm4gZT17dGFnOmUsY3JlYXRlOnQsZGVzdHJveTpyLGRlcHM6bixuZXh0Om51bGx9LHQ9aXQudXBkYXRlUXVldWUsdD09PW51bGw/KHQ9e2xhc3RFZmZlY3Q6bnVsbCxzdG9yZXM6bnVsbH0saXQudXBkYXRlUXVldWU9dCx0Lmxhc3RFZmZlY3Q9ZS5uZXh0PWUpOihyPXQubGFzdEVmZmVjdCxyPT09bnVsbD90Lmxhc3RFZmZlY3Q9ZS5uZXh0PWU6KG49ci5uZXh0LHIubmV4dD1lLGUubmV4dD1uLHQubGFzdEVmZmVjdD1lKSksZX1mdW5jdGlvbiBadigpe3JldHVybiBDcigpLm1lbW9pemVkU3RhdGV9ZnVuY3Rpb24gSGwoZSx0LHIsbil7dmFyIHM9R3IoKTtpdC5mbGFnc3w9ZSxzLm1lbW9pemVkU3RhdGU9U28oMXx0LHIsdm9pZCAwLG49PT12b2lkIDA/bnVsbDpuKX1mdW5jdGlvbiBydShlLHQscixuKXt2YXIgcz1DcigpO249bj09PXZvaWQgMD9udWxsOm47dmFyIGE9dm9pZCAwO2lmKHZ0IT09bnVsbCl7dmFyIG89dnQubWVtb2l6ZWRTdGF0ZTtpZihhPW8uZGVzdHJveSxuIT09bnVsbCYmVm0obixvLmRlcHMpKXtzLm1lbW9pemVkU3RhdGU9U28odCxyLGEsbik7cmV0dXJufX1pdC5mbGFnc3w9ZSxzLm1lbW9pemVkU3RhdGU9U28oMXx0LHIsYSxuKX1mdW5jdGlvbiBBcChlLHQpe3JldHVybiBIbCg4MzkwNjU2LDgsZSx0KX1mdW5jdGlvbiBIbShlLHQpe3JldHVybiBydSgyMDQ4LDgsZSx0KX1mdW5jdGlvbiBLdihlLHQpe3JldHVybiBydSg0LDIsZSx0KX1mdW5jdGlvbiBZdihlLHQpe3JldHVybiBydSg0LDQsZSx0KX1mdW5jdGlvbiBYdihlLHQpe2lmKHR5cGVvZiB0PT0iZnVuY3Rpb24iKXJldHVybiBlPWUoKSx0KGUpLGZ1bmN0aW9uKCl7dChudWxsKX07aWYodCE9bnVsbClyZXR1cm4gZT1lKCksdC5jdXJyZW50PWUsZnVuY3Rpb24oKXt0LmN1cnJlbnQ9bnVsbH19ZnVuY3Rpb24gSnYoZSx0LHIpe3JldHVybiByPXIhPW51bGw/ci5jb25jYXQoW2VdKTpudWxsLHJ1KDQsNCxYdi5iaW5kKG51bGwsdCxlKSxyKX1mdW5jdGlvbiBXbSgpe31mdW5jdGlvbiBleShlLHQpe3ZhciByPUNyKCk7dD10PT09dm9pZCAwP251bGw6dDt2YXIgbj1yLm1lbW9pemVkU3RhdGU7cmV0dXJuIG4hPT1udWxsJiZ0IT09bnVsbCYmVm0odCxuWzFdKT9uWzBdOihyLm1lbW9pemVkU3RhdGU9W2UsdF0sZSl9ZnVuY3Rpb24gdHkoZSx0KXt2YXIgcj1DcigpO3Q9dD09PXZvaWQgMD9udWxsOnQ7dmFyIG49ci5tZW1vaXplZFN0YXRlO3JldHVybiBuIT09bnVsbCYmdCE9PW51bGwmJlZtKHQsblsxXSk/blswXTooZT1lKCksci5tZW1vaXplZFN0YXRlPVtlLHRdLGUpfWZ1bmN0aW9uIHJ5KGUsdCxyKXtyZXR1cm4gcmkmMjE/KFZyKHIsdCl8fChyPW92KCksaXQubGFuZXN8PXIsbml8PXIsZS5iYXNlU3RhdGU9ITApLHQpOihlLmJhc2VTdGF0ZSYmKGUuYmFzZVN0YXRlPSExLFh0PSEwKSxlLm1lbW9pemVkU3RhdGU9cil9ZnVuY3Rpb24ga04oZSx0KXt2YXIgcj0kZTskZT1yIT09MCYmND5yP3I6NCxlKCEwKTt2YXIgbj1YdS50cmFuc2l0aW9uO1h1LnRyYW5zaXRpb249e307dHJ5e2UoITEpLHQoKX1maW5hbGx5eyRlPXIsWHUudHJhbnNpdGlvbj1ufX1mdW5jdGlvbiBueSgpe3JldHVybiBDcigpLm1lbW9pemVkU3RhdGV9ZnVuY3Rpb24gRU4oZSx0LHIpe3ZhciBuPWdzKGUpO2lmKHI9e2xhbmU6bixhY3Rpb246cixoYXNFYWdlclN0YXRlOiExLGVhZ2VyU3RhdGU6bnVsbCxuZXh0Om51bGx9LHN5KGUpKWl5KHQscik7ZWxzZSBpZihyPSR2KGUsdCxyLG4pLHIhPT1udWxsKXt2YXIgcz1XdCgpOyRyKHIsZSxuLHMpLGF5KHIsdCxuKX19ZnVuY3Rpb24gQ04oZSx0LHIpe3ZhciBuPWdzKGUpLHM9e2xhbmU6bixhY3Rpb246cixoYXNFYWdlclN0YXRlOiExLGVhZ2VyU3RhdGU6bnVsbCxuZXh0Om51bGx9O2lmKHN5KGUpKWl5KHQscyk7ZWxzZXt2YXIgYT1lLmFsdGVybmF0ZTtpZihlLmxhbmVzPT09MCYmKGE9PT1udWxsfHxhLmxhbmVzPT09MCkmJihhPXQubGFzdFJlbmRlcmVkUmVkdWNlcixhIT09bnVsbCkpdHJ5e3ZhciBvPXQubGFzdFJlbmRlcmVkU3RhdGUsbD1hKG8scik7aWYocy5oYXNFYWdlclN0YXRlPSEwLHMuZWFnZXJTdGF0ZT1sLFZyKGwsbykpe3ZhciBjPXQuaW50ZXJsZWF2ZWQ7Yz09PW51bGw/KHMubmV4dD1zLEltKHQpKToocy5uZXh0PWMubmV4dCxjLm5leHQ9cyksdC5pbnRlcmxlYXZlZD1zO3JldHVybn19Y2F0Y2h7fWZpbmFsbHl7fXI9JHYoZSx0LHMsbiksciE9PW51bGwmJihzPVd0KCksJHIocixlLG4scyksYXkocix0LG4pKX19ZnVuY3Rpb24gc3koZSl7dmFyIHQ9ZS5hbHRlcm5hdGU7cmV0dXJuIGU9PT1pdHx8dCE9PW51bGwmJnQ9PT1pdH1mdW5jdGlvbiBpeShlLHQpe25vPXdjPSEwO3ZhciByPWUucGVuZGluZztyPT09bnVsbD90Lm5leHQ9dDoodC5uZXh0PXIubmV4dCxyLm5leHQ9dCksZS5wZW5kaW5nPXR9ZnVuY3Rpb24gYXkoZSx0LHIpe2lmKHImNDE5NDI0MCl7dmFyIG49dC5sYW5lcztuJj1lLnBlbmRpbmdMYW5lcyxyfD1uLHQubGFuZXM9cixqbShlLHIpfX12YXIgYmM9e3JlYWRDb250ZXh0OkVyLHVzZUNhbGxiYWNrOlR0LHVzZUNvbnRleHQ6VHQsdXNlRWZmZWN0OlR0LHVzZUltcGVyYXRpdmVIYW5kbGU6VHQsdXNlSW5zZXJ0aW9uRWZmZWN0OlR0LHVzZUxheW91dEVmZmVjdDpUdCx1c2VNZW1vOlR0LHVzZVJlZHVjZXI6VHQsdXNlUmVmOlR0LHVzZVN0YXRlOlR0LHVzZURlYnVnVmFsdWU6VHQsdXNlRGVmZXJyZWRWYWx1ZTpUdCx1c2VUcmFuc2l0aW9uOlR0LHVzZU11dGFibGVTb3VyY2U6VHQsdXNlU3luY0V4dGVybmFsU3RvcmU6VHQsdXNlSWQ6VHQsdW5zdGFibGVfaXNOZXdSZWNvbmNpbGVyOiExfSxfTj17cmVhZENvbnRleHQ6RXIsdXNlQ2FsbGJhY2s6ZnVuY3Rpb24oZSx0KXtyZXR1cm4gR3IoKS5tZW1vaXplZFN0YXRlPVtlLHQ9PT12b2lkIDA/bnVsbDp0XSxlfSx1c2VDb250ZXh0OkVyLHVzZUVmZmVjdDpBcCx1c2VJbXBlcmF0aXZlSGFuZGxlOmZ1bmN0aW9uKGUsdCxyKXtyZXR1cm4gcj1yIT1udWxsP3IuY29uY2F0KFtlXSk6bnVsbCxIbCg0MTk0MzA4LDQsWHYuYmluZChudWxsLHQsZSkscil9LHVzZUxheW91dEVmZmVjdDpmdW5jdGlvbihlLHQpe3JldHVybiBIbCg0MTk0MzA4LDQsZSx0KX0sdXNlSW5zZXJ0aW9uRWZmZWN0OmZ1bmN0aW9uKGUsdCl7cmV0dXJuIEhsKDQsMixlLHQpfSx1c2VNZW1vOmZ1bmN0aW9uKGUsdCl7dmFyIHI9R3IoKTtyZXR1cm4gdD10PT09dm9pZCAwP251bGw6dCxlPWUoKSxyLm1lbW9pemVkU3RhdGU9W2UsdF0sZX0sdXNlUmVkdWNlcjpmdW5jdGlvbihlLHQscil7dmFyIG49R3IoKTtyZXR1cm4gdD1yIT09dm9pZCAwP3IodCk6dCxuLm1lbW9pemVkU3RhdGU9bi5iYXNlU3RhdGU9dCxlPXtwZW5kaW5nOm51bGwsaW50ZXJsZWF2ZWQ6bnVsbCxsYW5lczowLGRpc3BhdGNoOm51bGwsbGFzdFJlbmRlcmVkUmVkdWNlcjplLGxhc3RSZW5kZXJlZFN0YXRlOnR9LG4ucXVldWU9ZSxlPWUuZGlzcGF0Y2g9RU4uYmluZChudWxsLGl0LGUpLFtuLm1lbW9pemVkU3RhdGUsZV19LHVzZVJlZjpmdW5jdGlvbihlKXt2YXIgdD1HcigpO3JldHVybiBlPXtjdXJyZW50OmV9LHQubWVtb2l6ZWRTdGF0ZT1lfSx1c2VTdGF0ZTpScCx1c2VEZWJ1Z1ZhbHVlOldtLHVzZURlZmVycmVkVmFsdWU6ZnVuY3Rpb24oZSl7cmV0dXJuIEdyKCkubWVtb2l6ZWRTdGF0ZT1lfSx1c2VUcmFuc2l0aW9uOmZ1bmN0aW9uKCl7dmFyIGU9UnAoITEpLHQ9ZVswXTtyZXR1cm4gZT1rTi5iaW5kKG51bGwsZVsxXSksR3IoKS5tZW1vaXplZFN0YXRlPWUsW3QsZV19LHVzZU11dGFibGVTb3VyY2U6ZnVuY3Rpb24oKXt9LHVzZVN5bmNFeHRlcm5hbFN0b3JlOmZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1pdCxzPUdyKCk7aWYoWGUpe2lmKHI9PT12b2lkIDApdGhyb3cgRXJyb3IoQig0MDcpKTtyPXIoKX1lbHNle2lmKHI9dCgpLE50PT09bnVsbCl0aHJvdyBFcnJvcihCKDM0OSkpO3JpJjMwfHxIdihuLHQscil9cy5tZW1vaXplZFN0YXRlPXI7dmFyIGE9e3ZhbHVlOnIsZ2V0U25hcHNob3Q6dH07cmV0dXJuIHMucXVldWU9YSxBcChxdi5iaW5kKG51bGwsbixhLGUpLFtlXSksbi5mbGFnc3w9MjA0OCxTbyg5LFd2LmJpbmQobnVsbCxuLGEscix0KSx2b2lkIDAsbnVsbCkscn0sdXNlSWQ6ZnVuY3Rpb24oKXt2YXIgZT1HcigpLHQ9TnQuaWRlbnRpZmllclByZWZpeDtpZihYZSl7dmFyIHI9Q24sbj1FbjtyPShuJn4oMTw8MzItRHIobiktMSkpLnRvU3RyaW5nKDMyKStyLHQ9IjoiK3QrIlIiK3Iscj1qbysrLDA8ciYmKHQrPSJIIityLnRvU3RyaW5nKDMyKSksdCs9IjoifWVsc2Ugcj1TTisrLHQ9IjoiK3QrInIiK3IudG9TdHJpbmcoMzIpKyI6IjtyZXR1cm4gZS5tZW1vaXplZFN0YXRlPXR9LHVuc3RhYmxlX2lzTmV3UmVjb25jaWxlcjohMX0sUE49e3JlYWRDb250ZXh0OkVyLHVzZUNhbGxiYWNrOmV5LHVzZUNvbnRleHQ6RXIsdXNlRWZmZWN0OkhtLHVzZUltcGVyYXRpdmVIYW5kbGU6SnYsdXNlSW5zZXJ0aW9uRWZmZWN0Okt2LHVzZUxheW91dEVmZmVjdDpZdix1c2VNZW1vOnR5LHVzZVJlZHVjZXI6SnUsdXNlUmVmOlp2LHVzZVN0YXRlOmZ1bmN0aW9uKCl7cmV0dXJuIEp1KE5vKX0sdXNlRGVidWdWYWx1ZTpXbSx1c2VEZWZlcnJlZFZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PUNyKCk7cmV0dXJuIHJ5KHQsdnQubWVtb2l6ZWRTdGF0ZSxlKX0sdXNlVHJhbnNpdGlvbjpmdW5jdGlvbigpe3ZhciBlPUp1KE5vKVswXSx0PUNyKCkubWVtb2l6ZWRTdGF0ZTtyZXR1cm5bZSx0XX0sdXNlTXV0YWJsZVNvdXJjZTpVdix1c2VTeW5jRXh0ZXJuYWxTdG9yZTpCdix1c2VJZDpueSx1bnN0YWJsZV9pc05ld1JlY29uY2lsZXI6ITF9LFROPXtyZWFkQ29udGV4dDpFcix1c2VDYWxsYmFjazpleSx1c2VDb250ZXh0OkVyLHVzZUVmZmVjdDpIbSx1c2VJbXBlcmF0aXZlSGFuZGxlOkp2LHVzZUluc2VydGlvbkVmZmVjdDpLdix1c2VMYXlvdXRFZmZlY3Q6WXYsdXNlTWVtbzp0eSx1c2VSZWR1Y2VyOmVkLHVzZVJlZjpadix1c2VTdGF0ZTpmdW5jdGlvbigpe3JldHVybiBlZChObyl9LHVzZURlYnVnVmFsdWU6V20sdXNlRGVmZXJyZWRWYWx1ZTpmdW5jdGlvbihlKXt2YXIgdD1DcigpO3JldHVybiB2dD09PW51bGw/dC5tZW1vaXplZFN0YXRlPWU6cnkodCx2dC5tZW1vaXplZFN0YXRlLGUpfSx1c2VUcmFuc2l0aW9uOmZ1bmN0aW9uKCl7dmFyIGU9ZWQoTm8pWzBdLHQ9Q3IoKS5tZW1vaXplZFN0YXRlO3JldHVybltlLHRdfSx1c2VNdXRhYmxlU291cmNlOlV2LHVzZVN5bmNFeHRlcm5hbFN0b3JlOkJ2LHVzZUlkOm55LHVuc3RhYmxlX2lzTmV3UmVjb25jaWxlcjohMX07ZnVuY3Rpb24gUnIoZSx0KXtpZihlJiZlLmRlZmF1bHRQcm9wcyl7dD1hdCh7fSx0KSxlPWUuZGVmYXVsdFByb3BzO2Zvcih2YXIgciBpbiBlKXRbcl09PT12b2lkIDAmJih0W3JdPWVbcl0pO3JldHVybiB0fXJldHVybiB0fWZ1bmN0aW9uIHVmKGUsdCxyLG4pe3Q9ZS5tZW1vaXplZFN0YXRlLHI9cihuLHQpLHI9cj09bnVsbD90OmF0KHt9LHQsciksZS5tZW1vaXplZFN0YXRlPXIsZS5sYW5lcz09PTAmJihlLnVwZGF0ZVF1ZXVlLmJhc2VTdGF0ZT1yKX12YXIgbnU9e2lzTW91bnRlZDpmdW5jdGlvbihlKXtyZXR1cm4oZT1lLl9yZWFjdEludGVybmFscyk/cGkoZSk9PT1lOiExfSxlbnF1ZXVlU2V0U3RhdGU6ZnVuY3Rpb24oZSx0LHIpe2U9ZS5fcmVhY3RJbnRlcm5hbHM7dmFyIG49V3QoKSxzPWdzKGUpLGE9UG4obixzKTthLnBheWxvYWQ9dCxyIT1udWxsJiYoYS5jYWxsYmFjaz1yKSx0PWhzKGUsYSxzKSx0IT09bnVsbCYmKCRyKHQsZSxzLG4pLFVsKHQsZSxzKSl9LGVucXVldWVSZXBsYWNlU3RhdGU6ZnVuY3Rpb24oZSx0LHIpe2U9ZS5fcmVhY3RJbnRlcm5hbHM7dmFyIG49V3QoKSxzPWdzKGUpLGE9UG4obixzKTthLnRhZz0xLGEucGF5bG9hZD10LHIhPW51bGwmJihhLmNhbGxiYWNrPXIpLHQ9aHMoZSxhLHMpLHQhPT1udWxsJiYoJHIodCxlLHMsbiksVWwodCxlLHMpKX0sZW5xdWV1ZUZvcmNlVXBkYXRlOmZ1bmN0aW9uKGUsdCl7ZT1lLl9yZWFjdEludGVybmFsczt2YXIgcj1XdCgpLG49Z3MoZSkscz1QbihyLG4pO3MudGFnPTIsdCE9bnVsbCYmKHMuY2FsbGJhY2s9dCksdD1ocyhlLHMsbiksdCE9PW51bGwmJigkcih0LGUsbixyKSxVbCh0LGUsbikpfX07ZnVuY3Rpb24gTXAoZSx0LHIsbixzLGEsbyl7cmV0dXJuIGU9ZS5zdGF0ZU5vZGUsdHlwZW9mIGUuc2hvdWxkQ29tcG9uZW50VXBkYXRlPT0iZnVuY3Rpb24iP2Uuc2hvdWxkQ29tcG9uZW50VXBkYXRlKG4sYSxvKTp0LnByb3RvdHlwZSYmdC5wcm90b3R5cGUuaXNQdXJlUmVhY3RDb21wb25lbnQ/IWdvKHIsbil8fCFnbyhzLGEpOiEwfWZ1bmN0aW9uIG95KGUsdCxyKXt2YXIgbj0hMSxzPWJzLGE9dC5jb250ZXh0VHlwZTtyZXR1cm4gdHlwZW9mIGE9PSJvYmplY3QiJiZhIT09bnVsbD9hPUVyKGEpOihzPXJyKHQpP2VpOkx0LmN1cnJlbnQsbj10LmNvbnRleHRUeXBlcyxhPShuPW4hPW51bGwpP2NhKGUscyk6YnMpLHQ9bmV3IHQocixhKSxlLm1lbW9pemVkU3RhdGU9dC5zdGF0ZSE9PW51bGwmJnQuc3RhdGUhPT12b2lkIDA/dC5zdGF0ZTpudWxsLHQudXBkYXRlcj1udSxlLnN0YXRlTm9kZT10LHQuX3JlYWN0SW50ZXJuYWxzPWUsbiYmKGU9ZS5zdGF0ZU5vZGUsZS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0PXMsZS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dD1hKSx0fWZ1bmN0aW9uIE9wKGUsdCxyLG4pe2U9dC5zdGF0ZSx0eXBlb2YgdC5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzPT0iZnVuY3Rpb24iJiZ0LmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMocixuKSx0eXBlb2YgdC5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcz09ImZ1bmN0aW9uIiYmdC5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhyLG4pLHQuc3RhdGUhPT1lJiZudS5lbnF1ZXVlUmVwbGFjZVN0YXRlKHQsdC5zdGF0ZSxudWxsKX1mdW5jdGlvbiBkZihlLHQscixuKXt2YXIgcz1lLnN0YXRlTm9kZTtzLnByb3BzPXIscy5zdGF0ZT1lLm1lbW9pemVkU3RhdGUscy5yZWZzPXt9LExtKGUpO3ZhciBhPXQuY29udGV4dFR5cGU7dHlwZW9mIGE9PSJvYmplY3QiJiZhIT09bnVsbD9zLmNvbnRleHQ9RXIoYSk6KGE9cnIodCk/ZWk6THQuY3VycmVudCxzLmNvbnRleHQ9Y2EoZSxhKSkscy5zdGF0ZT1lLm1lbW9pemVkU3RhdGUsYT10LmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcyx0eXBlb2YgYT09ImZ1bmN0aW9uIiYmKHVmKGUsdCxhLHIpLHMuc3RhdGU9ZS5tZW1vaXplZFN0YXRlKSx0eXBlb2YgdC5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHM9PSJmdW5jdGlvbiJ8fHR5cGVvZiBzLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlPT0iZnVuY3Rpb24ifHx0eXBlb2Ygcy5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50IT0iZnVuY3Rpb24iJiZ0eXBlb2Ygcy5jb21wb25lbnRXaWxsTW91bnQhPSJmdW5jdGlvbiJ8fCh0PXMuc3RhdGUsdHlwZW9mIHMuY29tcG9uZW50V2lsbE1vdW50PT0iZnVuY3Rpb24iJiZzLmNvbXBvbmVudFdpbGxNb3VudCgpLHR5cGVvZiBzLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQ9PSJmdW5jdGlvbiImJnMuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCgpLHQhPT1zLnN0YXRlJiZudS5lbnF1ZXVlUmVwbGFjZVN0YXRlKHMscy5zdGF0ZSxudWxsKSx2YyhlLHIscyxuKSxzLnN0YXRlPWUubWVtb2l6ZWRTdGF0ZSksdHlwZW9mIHMuY29tcG9uZW50RGlkTW91bnQ9PSJmdW5jdGlvbiImJihlLmZsYWdzfD00MTk0MzA4KX1mdW5jdGlvbiBtYShlLHQpe3RyeXt2YXIgcj0iIixuPXQ7ZG8gcis9c2oobiksbj1uLnJldHVybjt3aGlsZShuKTt2YXIgcz1yfWNhdGNoKGEpe3M9YApFcnJvciBnZW5lcmF0aW5nIHN0YWNrOiBgK2EubWVzc2FnZStgCmArYS5zdGFja31yZXR1cm57dmFsdWU6ZSxzb3VyY2U6dCxzdGFjazpzLGRpZ2VzdDpudWxsfX1mdW5jdGlvbiB0ZChlLHQscil7cmV0dXJue3ZhbHVlOmUsc291cmNlOm51bGwsc3RhY2s6cj8/bnVsbCxkaWdlc3Q6dD8/bnVsbH19ZnVuY3Rpb24gZmYoZSx0KXt0cnl7Y29uc29sZS5lcnJvcih0LnZhbHVlKX1jYXRjaChyKXtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7dGhyb3cgcn0pfX12YXIgUk49dHlwZW9mIFdlYWtNYXA9PSJmdW5jdGlvbiI/V2Vha01hcDpNYXA7ZnVuY3Rpb24gbHkoZSx0LHIpe3I9UG4oLTEsciksci50YWc9MyxyLnBheWxvYWQ9e2VsZW1lbnQ6bnVsbH07dmFyIG49dC52YWx1ZTtyZXR1cm4gci5jYWxsYmFjaz1mdW5jdGlvbigpe05jfHwoTmM9ITAsamY9biksZmYoZSx0KX0scn1mdW5jdGlvbiBjeShlLHQscil7cj1QbigtMSxyKSxyLnRhZz0zO3ZhciBuPWUudHlwZS5nZXREZXJpdmVkU3RhdGVGcm9tRXJyb3I7aWYodHlwZW9mIG49PSJmdW5jdGlvbiIpe3ZhciBzPXQudmFsdWU7ci5wYXlsb2FkPWZ1bmN0aW9uKCl7cmV0dXJuIG4ocyl9LHIuY2FsbGJhY2s9ZnVuY3Rpb24oKXtmZihlLHQpfX12YXIgYT1lLnN0YXRlTm9kZTtyZXR1cm4gYSE9PW51bGwmJnR5cGVvZiBhLmNvbXBvbmVudERpZENhdGNoPT0iZnVuY3Rpb24iJiYoci5jYWxsYmFjaz1mdW5jdGlvbigpe2ZmKGUsdCksdHlwZW9mIG4hPSJmdW5jdGlvbiImJihwcz09PW51bGw/cHM9bmV3IFNldChbdGhpc10pOnBzLmFkZCh0aGlzKSk7dmFyIG89dC5zdGFjazt0aGlzLmNvbXBvbmVudERpZENhdGNoKHQudmFsdWUse2NvbXBvbmVudFN0YWNrOm8hPT1udWxsP286IiJ9KX0pLHJ9ZnVuY3Rpb24gRnAoZSx0LHIpe3ZhciBuPWUucGluZ0NhY2hlO2lmKG49PT1udWxsKXtuPWUucGluZ0NhY2hlPW5ldyBSTjt2YXIgcz1uZXcgU2V0O24uc2V0KHQscyl9ZWxzZSBzPW4uZ2V0KHQpLHM9PT12b2lkIDAmJihzPW5ldyBTZXQsbi5zZXQodCxzKSk7cy5oYXMocil8fChzLmFkZChyKSxlPVdOLmJpbmQobnVsbCxlLHQsciksdC50aGVuKGUsZSkpfWZ1bmN0aW9uIElwKGUpe2Rve3ZhciB0O2lmKCh0PWUudGFnPT09MTMpJiYodD1lLm1lbW9pemVkU3RhdGUsdD10IT09bnVsbD90LmRlaHlkcmF0ZWQhPT1udWxsOiEwKSx0KXJldHVybiBlO2U9ZS5yZXR1cm59d2hpbGUoZSE9PW51bGwpO3JldHVybiBudWxsfWZ1bmN0aW9uIExwKGUsdCxyLG4scyl7cmV0dXJuIGUubW9kZSYxPyhlLmZsYWdzfD02NTUzNixlLmxhbmVzPXMsZSk6KGU9PT10P2UuZmxhZ3N8PTY1NTM2OihlLmZsYWdzfD0xMjgsci5mbGFnc3w9MTMxMDcyLHIuZmxhZ3MmPS01MjgwNSxyLnRhZz09PTEmJihyLmFsdGVybmF0ZT09PW51bGw/ci50YWc9MTc6KHQ9UG4oLTEsMSksdC50YWc9MixocyhyLHQsMSkpKSxyLmxhbmVzfD0xKSxlKX12YXIgQU49JG4uUmVhY3RDdXJyZW50T3duZXIsWHQ9ITE7ZnVuY3Rpb24gVXQoZSx0LHIsbil7dC5jaGlsZD1lPT09bnVsbD9Edih0LG51bGwscixuKTpkYSh0LGUuY2hpbGQscixuKX1mdW5jdGlvbiBEcChlLHQscixuLHMpe3I9ci5yZW5kZXI7dmFyIGE9dC5yZWY7cmV0dXJuIFZpKHQscyksbj1VbShlLHQscixuLGEscykscj1CbSgpLGUhPT1udWxsJiYhWHQ/KHQudXBkYXRlUXVldWU9ZS51cGRhdGVRdWV1ZSx0LmZsYWdzJj0tMjA1MyxlLmxhbmVzJj1+cyxPbihlLHQscykpOihYZSYmciYmVG0odCksdC5mbGFnc3w9MSxVdChlLHQsbixzKSx0LmNoaWxkKX1mdW5jdGlvbiAkcChlLHQscixuLHMpe2lmKGU9PT1udWxsKXt2YXIgYT1yLnR5cGU7cmV0dXJuIHR5cGVvZiBhPT0iZnVuY3Rpb24iJiYhSm0oYSkmJmEuZGVmYXVsdFByb3BzPT09dm9pZCAwJiZyLmNvbXBhcmU9PT1udWxsJiZyLmRlZmF1bHRQcm9wcz09PXZvaWQgMD8odC50YWc9MTUsdC50eXBlPWEsdXkoZSx0LGEsbixzKSk6KGU9UWwoci50eXBlLG51bGwsbix0LHQubW9kZSxzKSxlLnJlZj10LnJlZixlLnJldHVybj10LHQuY2hpbGQ9ZSl9aWYoYT1lLmNoaWxkLCEoZS5sYW5lcyZzKSl7dmFyIG89YS5tZW1vaXplZFByb3BzO2lmKHI9ci5jb21wYXJlLHI9ciE9PW51bGw/cjpnbyxyKG8sbikmJmUucmVmPT09dC5yZWYpcmV0dXJuIE9uKGUsdCxzKX1yZXR1cm4gdC5mbGFnc3w9MSxlPXhzKGEsbiksZS5yZWY9dC5yZWYsZS5yZXR1cm49dCx0LmNoaWxkPWV9ZnVuY3Rpb24gdXkoZSx0LHIsbixzKXtpZihlIT09bnVsbCl7dmFyIGE9ZS5tZW1vaXplZFByb3BzO2lmKGdvKGEsbikmJmUucmVmPT09dC5yZWYpaWYoWHQ9ITEsdC5wZW5kaW5nUHJvcHM9bj1hLChlLmxhbmVzJnMpIT09MCllLmZsYWdzJjEzMTA3MiYmKFh0PSEwKTtlbHNlIHJldHVybiB0LmxhbmVzPWUubGFuZXMsT24oZSx0LHMpfXJldHVybiBtZihlLHQscixuLHMpfWZ1bmN0aW9uIGR5KGUsdCxyKXt2YXIgbj10LnBlbmRpbmdQcm9wcyxzPW4uY2hpbGRyZW4sYT1lIT09bnVsbD9lLm1lbW9pemVkU3RhdGU6bnVsbDtpZihuLm1vZGU9PT0iaGlkZGVuIilpZighKHQubW9kZSYxKSl0Lm1lbW9pemVkU3RhdGU9e2Jhc2VMYW5lczowLGNhY2hlUG9vbDpudWxsLHRyYW5zaXRpb25zOm51bGx9LFVlKE9pLG9yKSxvcnw9cjtlbHNle2lmKCEociYxMDczNzQxODI0KSlyZXR1cm4gZT1hIT09bnVsbD9hLmJhc2VMYW5lc3xyOnIsdC5sYW5lcz10LmNoaWxkTGFuZXM9MTA3Mzc0MTgyNCx0Lm1lbW9pemVkU3RhdGU9e2Jhc2VMYW5lczplLGNhY2hlUG9vbDpudWxsLHRyYW5zaXRpb25zOm51bGx9LHQudXBkYXRlUXVldWU9bnVsbCxVZShPaSxvciksb3J8PWUsbnVsbDt0Lm1lbW9pemVkU3RhdGU9e2Jhc2VMYW5lczowLGNhY2hlUG9vbDpudWxsLHRyYW5zaXRpb25zOm51bGx9LG49YSE9PW51bGw/YS5iYXNlTGFuZXM6cixVZShPaSxvciksb3J8PW59ZWxzZSBhIT09bnVsbD8obj1hLmJhc2VMYW5lc3xyLHQubWVtb2l6ZWRTdGF0ZT1udWxsKTpuPXIsVWUoT2ksb3IpLG9yfD1uO3JldHVybiBVdChlLHQscyxyKSx0LmNoaWxkfWZ1bmN0aW9uIGZ5KGUsdCl7dmFyIHI9dC5yZWY7KGU9PT1udWxsJiZyIT09bnVsbHx8ZSE9PW51bGwmJmUucmVmIT09cikmJih0LmZsYWdzfD01MTIsdC5mbGFnc3w9MjA5NzE1Mil9ZnVuY3Rpb24gbWYoZSx0LHIsbixzKXt2YXIgYT1ycihyKT9laTpMdC5jdXJyZW50O3JldHVybiBhPWNhKHQsYSksVmkodCxzKSxyPVVtKGUsdCxyLG4sYSxzKSxuPUJtKCksZSE9PW51bGwmJiFYdD8odC51cGRhdGVRdWV1ZT1lLnVwZGF0ZVF1ZXVlLHQuZmxhZ3MmPS0yMDUzLGUubGFuZXMmPX5zLE9uKGUsdCxzKSk6KFhlJiZuJiZUbSh0KSx0LmZsYWdzfD0xLFV0KGUsdCxyLHMpLHQuY2hpbGQpfWZ1bmN0aW9uIHpwKGUsdCxyLG4scyl7aWYocnIocikpe3ZhciBhPSEwO21jKHQpfWVsc2UgYT0hMTtpZihWaSh0LHMpLHQuc3RhdGVOb2RlPT09bnVsbClXbChlLHQpLG95KHQscixuKSxkZih0LHIsbixzKSxuPSEwO2Vsc2UgaWYoZT09PW51bGwpe3ZhciBvPXQuc3RhdGVOb2RlLGw9dC5tZW1vaXplZFByb3BzO28ucHJvcHM9bDt2YXIgYz1vLmNvbnRleHQsdT1yLmNvbnRleHRUeXBlO3R5cGVvZiB1PT0ib2JqZWN0IiYmdSE9PW51bGw/dT1Fcih1KToodT1ycihyKT9laTpMdC5jdXJyZW50LHU9Y2EodCx1KSk7dmFyIGQ9ci5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHMsZj10eXBlb2YgZD09ImZ1bmN0aW9uInx8dHlwZW9mIG8uZ2V0U25hcHNob3RCZWZvcmVVcGRhdGU9PSJmdW5jdGlvbiI7Znx8dHlwZW9mIG8uVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMhPSJmdW5jdGlvbiImJnR5cGVvZiBvLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMhPSJmdW5jdGlvbiJ8fChsIT09bnx8YyE9PXUpJiZPcCh0LG8sbix1KSxabj0hMTt2YXIgcD10Lm1lbW9pemVkU3RhdGU7by5zdGF0ZT1wLHZjKHQsbixvLHMpLGM9dC5tZW1vaXplZFN0YXRlLGwhPT1ufHxwIT09Y3x8dHIuY3VycmVudHx8Wm4/KHR5cGVvZiBkPT0iZnVuY3Rpb24iJiYodWYodCxyLGQsbiksYz10Lm1lbW9pemVkU3RhdGUpLChsPVpufHxNcCh0LHIsbCxuLHAsYyx1KSk/KGZ8fHR5cGVvZiBvLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQhPSJmdW5jdGlvbiImJnR5cGVvZiBvLmNvbXBvbmVudFdpbGxNb3VudCE9ImZ1bmN0aW9uInx8KHR5cGVvZiBvLmNvbXBvbmVudFdpbGxNb3VudD09ImZ1bmN0aW9uIiYmby5jb21wb25lbnRXaWxsTW91bnQoKSx0eXBlb2Ygby5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50PT0iZnVuY3Rpb24iJiZvLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQoKSksdHlwZW9mIG8uY29tcG9uZW50RGlkTW91bnQ9PSJmdW5jdGlvbiImJih0LmZsYWdzfD00MTk0MzA4KSk6KHR5cGVvZiBvLmNvbXBvbmVudERpZE1vdW50PT0iZnVuY3Rpb24iJiYodC5mbGFnc3w9NDE5NDMwOCksdC5tZW1vaXplZFByb3BzPW4sdC5tZW1vaXplZFN0YXRlPWMpLG8ucHJvcHM9bixvLnN0YXRlPWMsby5jb250ZXh0PXUsbj1sKToodHlwZW9mIG8uY29tcG9uZW50RGlkTW91bnQ9PSJmdW5jdGlvbiImJih0LmZsYWdzfD00MTk0MzA4KSxuPSExKX1lbHNle289dC5zdGF0ZU5vZGUsenYoZSx0KSxsPXQubWVtb2l6ZWRQcm9wcyx1PXQudHlwZT09PXQuZWxlbWVudFR5cGU/bDpScih0LnR5cGUsbCksby5wcm9wcz11LGY9dC5wZW5kaW5nUHJvcHMscD1vLmNvbnRleHQsYz1yLmNvbnRleHRUeXBlLHR5cGVvZiBjPT0ib2JqZWN0IiYmYyE9PW51bGw/Yz1FcihjKTooYz1ycihyKT9laTpMdC5jdXJyZW50LGM9Y2EodCxjKSk7dmFyIHg9ci5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHM7KGQ9dHlwZW9mIHg9PSJmdW5jdGlvbiJ8fHR5cGVvZiBvLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlPT0iZnVuY3Rpb24iKXx8dHlwZW9mIG8uVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMhPSJmdW5jdGlvbiImJnR5cGVvZiBvLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMhPSJmdW5jdGlvbiJ8fChsIT09Znx8cCE9PWMpJiZPcCh0LG8sbixjKSxabj0hMSxwPXQubWVtb2l6ZWRTdGF0ZSxvLnN0YXRlPXAsdmModCxuLG8scyk7dmFyIHY9dC5tZW1vaXplZFN0YXRlO2whPT1mfHxwIT09dnx8dHIuY3VycmVudHx8Wm4/KHR5cGVvZiB4PT0iZnVuY3Rpb24iJiYodWYodCxyLHgsbiksdj10Lm1lbW9pemVkU3RhdGUpLCh1PVpufHxNcCh0LHIsdSxuLHAsdixjKXx8ITEpPyhkfHx0eXBlb2Ygby5VTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZSE9ImZ1bmN0aW9uIiYmdHlwZW9mIG8uY29tcG9uZW50V2lsbFVwZGF0ZSE9ImZ1bmN0aW9uInx8KHR5cGVvZiBvLmNvbXBvbmVudFdpbGxVcGRhdGU9PSJmdW5jdGlvbiImJm8uY29tcG9uZW50V2lsbFVwZGF0ZShuLHYsYyksdHlwZW9mIG8uVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGU9PSJmdW5jdGlvbiImJm8uVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUobix2LGMpKSx0eXBlb2Ygby5jb21wb25lbnREaWRVcGRhdGU9PSJmdW5jdGlvbiImJih0LmZsYWdzfD00KSx0eXBlb2Ygby5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZT09ImZ1bmN0aW9uIiYmKHQuZmxhZ3N8PTEwMjQpKToodHlwZW9mIG8uY29tcG9uZW50RGlkVXBkYXRlIT0iZnVuY3Rpb24ifHxsPT09ZS5tZW1vaXplZFByb3BzJiZwPT09ZS5tZW1vaXplZFN0YXRlfHwodC5mbGFnc3w9NCksdHlwZW9mIG8uZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUhPSJmdW5jdGlvbiJ8fGw9PT1lLm1lbW9pemVkUHJvcHMmJnA9PT1lLm1lbW9pemVkU3RhdGV8fCh0LmZsYWdzfD0xMDI0KSx0Lm1lbW9pemVkUHJvcHM9bix0Lm1lbW9pemVkU3RhdGU9diksby5wcm9wcz1uLG8uc3RhdGU9dixvLmNvbnRleHQ9YyxuPXUpOih0eXBlb2Ygby5jb21wb25lbnREaWRVcGRhdGUhPSJmdW5jdGlvbiJ8fGw9PT1lLm1lbW9pemVkUHJvcHMmJnA9PT1lLm1lbW9pemVkU3RhdGV8fCh0LmZsYWdzfD00KSx0eXBlb2Ygby5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZSE9ImZ1bmN0aW9uInx8bD09PWUubWVtb2l6ZWRQcm9wcyYmcD09PWUubWVtb2l6ZWRTdGF0ZXx8KHQuZmxhZ3N8PTEwMjQpLG49ITEpfXJldHVybiBoZihlLHQscixuLGEscyl9ZnVuY3Rpb24gaGYoZSx0LHIsbixzLGEpe2Z5KGUsdCk7dmFyIG89KHQuZmxhZ3MmMTI4KSE9PTA7aWYoIW4mJiFvKXJldHVybiBzJiZrcCh0LHIsITEpLE9uKGUsdCxhKTtuPXQuc3RhdGVOb2RlLEFOLmN1cnJlbnQ9dDt2YXIgbD1vJiZ0eXBlb2Ygci5nZXREZXJpdmVkU3RhdGVGcm9tRXJyb3IhPSJmdW5jdGlvbiI/bnVsbDpuLnJlbmRlcigpO3JldHVybiB0LmZsYWdzfD0xLGUhPT1udWxsJiZvPyh0LmNoaWxkPWRhKHQsZS5jaGlsZCxudWxsLGEpLHQuY2hpbGQ9ZGEodCxudWxsLGwsYSkpOlV0KGUsdCxsLGEpLHQubWVtb2l6ZWRTdGF0ZT1uLnN0YXRlLHMmJmtwKHQsciwhMCksdC5jaGlsZH1mdW5jdGlvbiBteShlKXt2YXIgdD1lLnN0YXRlTm9kZTt0LnBlbmRpbmdDb250ZXh0P1NwKGUsdC5wZW5kaW5nQ29udGV4dCx0LnBlbmRpbmdDb250ZXh0IT09dC5jb250ZXh0KTp0LmNvbnRleHQmJlNwKGUsdC5jb250ZXh0LCExKSxEbShlLHQuY29udGFpbmVySW5mbyl9ZnVuY3Rpb24gVnAoZSx0LHIsbixzKXtyZXR1cm4gdWEoKSxBbShzKSx0LmZsYWdzfD0yNTYsVXQoZSx0LHIsbiksdC5jaGlsZH12YXIgcGY9e2RlaHlkcmF0ZWQ6bnVsbCx0cmVlQ29udGV4dDpudWxsLHJldHJ5TGFuZTowfTtmdW5jdGlvbiBnZihlKXtyZXR1cm57YmFzZUxhbmVzOmUsY2FjaGVQb29sOm51bGwsdHJhbnNpdGlvbnM6bnVsbH19ZnVuY3Rpb24gaHkoZSx0LHIpe3ZhciBuPXQucGVuZGluZ1Byb3BzLHM9c3QuY3VycmVudCxhPSExLG89KHQuZmxhZ3MmMTI4KSE9PTAsbDtpZigobD1vKXx8KGw9ZSE9PW51bGwmJmUubWVtb2l6ZWRTdGF0ZT09PW51bGw/ITE6KHMmMikhPT0wKSxsPyhhPSEwLHQuZmxhZ3MmPS0xMjkpOihlPT09bnVsbHx8ZS5tZW1vaXplZFN0YXRlIT09bnVsbCkmJihzfD0xKSxVZShzdCxzJjEpLGU9PT1udWxsKXJldHVybiBsZih0KSxlPXQubWVtb2l6ZWRTdGF0ZSxlIT09bnVsbCYmKGU9ZS5kZWh5ZHJhdGVkLGUhPT1udWxsKT8odC5tb2RlJjE/ZS5kYXRhPT09IiQhIj90LmxhbmVzPTg6dC5sYW5lcz0xMDczNzQxODI0OnQubGFuZXM9MSxudWxsKToobz1uLmNoaWxkcmVuLGU9bi5mYWxsYmFjayxhPyhuPXQubW9kZSxhPXQuY2hpbGQsbz17bW9kZToiaGlkZGVuIixjaGlsZHJlbjpvfSwhKG4mMSkmJmEhPT1udWxsPyhhLmNoaWxkTGFuZXM9MCxhLnBlbmRpbmdQcm9wcz1vKTphPWF1KG8sbiwwLG51bGwpLGU9S3MoZSxuLHIsbnVsbCksYS5yZXR1cm49dCxlLnJldHVybj10LGEuc2libGluZz1lLHQuY2hpbGQ9YSx0LmNoaWxkLm1lbW9pemVkU3RhdGU9Z2YociksdC5tZW1vaXplZFN0YXRlPXBmLGUpOnFtKHQsbykpO2lmKHM9ZS5tZW1vaXplZFN0YXRlLHMhPT1udWxsJiYobD1zLmRlaHlkcmF0ZWQsbCE9PW51bGwpKXJldHVybiBNTihlLHQsbyxuLGwscyxyKTtpZihhKXthPW4uZmFsbGJhY2ssbz10Lm1vZGUscz1lLmNoaWxkLGw9cy5zaWJsaW5nO3ZhciBjPXttb2RlOiJoaWRkZW4iLGNoaWxkcmVuOm4uY2hpbGRyZW59O3JldHVybiEobyYxKSYmdC5jaGlsZCE9PXM/KG49dC5jaGlsZCxuLmNoaWxkTGFuZXM9MCxuLnBlbmRpbmdQcm9wcz1jLHQuZGVsZXRpb25zPW51bGwpOihuPXhzKHMsYyksbi5zdWJ0cmVlRmxhZ3M9cy5zdWJ0cmVlRmxhZ3MmMTQ2ODAwNjQpLGwhPT1udWxsP2E9eHMobCxhKTooYT1LcyhhLG8scixudWxsKSxhLmZsYWdzfD0yKSxhLnJldHVybj10LG4ucmV0dXJuPXQsbi5zaWJsaW5nPWEsdC5jaGlsZD1uLG49YSxhPXQuY2hpbGQsbz1lLmNoaWxkLm1lbW9pemVkU3RhdGUsbz1vPT09bnVsbD9nZihyKTp7YmFzZUxhbmVzOm8uYmFzZUxhbmVzfHIsY2FjaGVQb29sOm51bGwsdHJhbnNpdGlvbnM6by50cmFuc2l0aW9uc30sYS5tZW1vaXplZFN0YXRlPW8sYS5jaGlsZExhbmVzPWUuY2hpbGRMYW5lcyZ+cix0Lm1lbW9pemVkU3RhdGU9cGYsbn1yZXR1cm4gYT1lLmNoaWxkLGU9YS5zaWJsaW5nLG49eHMoYSx7bW9kZToidmlzaWJsZSIsY2hpbGRyZW46bi5jaGlsZHJlbn0pLCEodC5tb2RlJjEpJiYobi5sYW5lcz1yKSxuLnJldHVybj10LG4uc2libGluZz1udWxsLGUhPT1udWxsJiYocj10LmRlbGV0aW9ucyxyPT09bnVsbD8odC5kZWxldGlvbnM9W2VdLHQuZmxhZ3N8PTE2KTpyLnB1c2goZSkpLHQuY2hpbGQ9bix0Lm1lbW9pemVkU3RhdGU9bnVsbCxufWZ1bmN0aW9uIHFtKGUsdCl7cmV0dXJuIHQ9YXUoe21vZGU6InZpc2libGUiLGNoaWxkcmVuOnR9LGUubW9kZSwwLG51bGwpLHQucmV0dXJuPWUsZS5jaGlsZD10fWZ1bmN0aW9uIFNsKGUsdCxyLG4pe3JldHVybiBuIT09bnVsbCYmQW0obiksZGEodCxlLmNoaWxkLG51bGwsciksZT1xbSh0LHQucGVuZGluZ1Byb3BzLmNoaWxkcmVuKSxlLmZsYWdzfD0yLHQubWVtb2l6ZWRTdGF0ZT1udWxsLGV9ZnVuY3Rpb24gTU4oZSx0LHIsbixzLGEsbyl7aWYocilyZXR1cm4gdC5mbGFncyYyNTY/KHQuZmxhZ3MmPS0yNTcsbj10ZChFcnJvcihCKDQyMikpKSxTbChlLHQsbyxuKSk6dC5tZW1vaXplZFN0YXRlIT09bnVsbD8odC5jaGlsZD1lLmNoaWxkLHQuZmxhZ3N8PTEyOCxudWxsKTooYT1uLmZhbGxiYWNrLHM9dC5tb2RlLG49YXUoe21vZGU6InZpc2libGUiLGNoaWxkcmVuOm4uY2hpbGRyZW59LHMsMCxudWxsKSxhPUtzKGEscyxvLG51bGwpLGEuZmxhZ3N8PTIsbi5yZXR1cm49dCxhLnJldHVybj10LG4uc2libGluZz1hLHQuY2hpbGQ9bix0Lm1vZGUmMSYmZGEodCxlLmNoaWxkLG51bGwsbyksdC5jaGlsZC5tZW1vaXplZFN0YXRlPWdmKG8pLHQubWVtb2l6ZWRTdGF0ZT1wZixhKTtpZighKHQubW9kZSYxKSlyZXR1cm4gU2woZSx0LG8sbnVsbCk7aWYocy5kYXRhPT09IiQhIil7aWYobj1zLm5leHRTaWJsaW5nJiZzLm5leHRTaWJsaW5nLmRhdGFzZXQsbil2YXIgbD1uLmRnc3Q7cmV0dXJuIG49bCxhPUVycm9yKEIoNDE5KSksbj10ZChhLG4sdm9pZCAwKSxTbChlLHQsbyxuKX1pZihsPShvJmUuY2hpbGRMYW5lcykhPT0wLFh0fHxsKXtpZihuPU50LG4hPT1udWxsKXtzd2l0Y2gobyYtbyl7Y2FzZSA0OnM9MjticmVhaztjYXNlIDE2OnM9ODticmVhaztjYXNlIDY0OmNhc2UgMTI4OmNhc2UgMjU2OmNhc2UgNTEyOmNhc2UgMTAyNDpjYXNlIDIwNDg6Y2FzZSA0MDk2OmNhc2UgODE5MjpjYXNlIDE2Mzg0OmNhc2UgMzI3Njg6Y2FzZSA2NTUzNjpjYXNlIDEzMTA3MjpjYXNlIDI2MjE0NDpjYXNlIDUyNDI4ODpjYXNlIDEwNDg1NzY6Y2FzZSAyMDk3MTUyOmNhc2UgNDE5NDMwNDpjYXNlIDgzODg2MDg6Y2FzZSAxNjc3NzIxNjpjYXNlIDMzNTU0NDMyOmNhc2UgNjcxMDg4NjQ6cz0zMjticmVhaztjYXNlIDUzNjg3MDkxMjpzPTI2ODQzNTQ1NjticmVhaztkZWZhdWx0OnM9MH1zPXMmKG4uc3VzcGVuZGVkTGFuZXN8byk/MDpzLHMhPT0wJiZzIT09YS5yZXRyeUxhbmUmJihhLnJldHJ5TGFuZT1zLE1uKGUscyksJHIobixlLHMsLTEpKX1yZXR1cm4gWG0oKSxuPXRkKEVycm9yKEIoNDIxKSkpLFNsKGUsdCxvLG4pfXJldHVybiBzLmRhdGE9PT0iJD8iPyh0LmZsYWdzfD0xMjgsdC5jaGlsZD1lLmNoaWxkLHQ9cU4uYmluZChudWxsLGUpLHMuX3JlYWN0UmV0cnk9dCxudWxsKTooZT1hLnRyZWVDb250ZXh0LHVyPW1zKHMubmV4dFNpYmxpbmcpLGRyPXQsWGU9ITAsT3I9bnVsbCxlIT09bnVsbCYmKHdyW2JyKytdPUVuLHdyW2JyKytdPUNuLHdyW2JyKytdPXRpLEVuPWUuaWQsQ249ZS5vdmVyZmxvdyx0aT10KSx0PXFtKHQsbi5jaGlsZHJlbiksdC5mbGFnc3w9NDA5Nix0KX1mdW5jdGlvbiBVcChlLHQscil7ZS5sYW5lc3w9dDt2YXIgbj1lLmFsdGVybmF0ZTtuIT09bnVsbCYmKG4ubGFuZXN8PXQpLGNmKGUucmV0dXJuLHQscil9ZnVuY3Rpb24gcmQoZSx0LHIsbixzKXt2YXIgYT1lLm1lbW9pemVkU3RhdGU7YT09PW51bGw/ZS5tZW1vaXplZFN0YXRlPXtpc0JhY2t3YXJkczp0LHJlbmRlcmluZzpudWxsLHJlbmRlcmluZ1N0YXJ0VGltZTowLGxhc3Q6bix0YWlsOnIsdGFpbE1vZGU6c306KGEuaXNCYWNrd2FyZHM9dCxhLnJlbmRlcmluZz1udWxsLGEucmVuZGVyaW5nU3RhcnRUaW1lPTAsYS5sYXN0PW4sYS50YWlsPXIsYS50YWlsTW9kZT1zKX1mdW5jdGlvbiBweShlLHQscil7dmFyIG49dC5wZW5kaW5nUHJvcHMscz1uLnJldmVhbE9yZGVyLGE9bi50YWlsO2lmKFV0KGUsdCxuLmNoaWxkcmVuLHIpLG49c3QuY3VycmVudCxuJjIpbj1uJjF8Mix0LmZsYWdzfD0xMjg7ZWxzZXtpZihlIT09bnVsbCYmZS5mbGFncyYxMjgpZTpmb3IoZT10LmNoaWxkO2UhPT1udWxsOyl7aWYoZS50YWc9PT0xMyllLm1lbW9pemVkU3RhdGUhPT1udWxsJiZVcChlLHIsdCk7ZWxzZSBpZihlLnRhZz09PTE5KVVwKGUscix0KTtlbHNlIGlmKGUuY2hpbGQhPT1udWxsKXtlLmNoaWxkLnJldHVybj1lLGU9ZS5jaGlsZDtjb250aW51ZX1pZihlPT09dClicmVhayBlO2Zvcig7ZS5zaWJsaW5nPT09bnVsbDspe2lmKGUucmV0dXJuPT09bnVsbHx8ZS5yZXR1cm49PT10KWJyZWFrIGU7ZT1lLnJldHVybn1lLnNpYmxpbmcucmV0dXJuPWUucmV0dXJuLGU9ZS5zaWJsaW5nfW4mPTF9aWYoVWUoc3QsbiksISh0Lm1vZGUmMSkpdC5tZW1vaXplZFN0YXRlPW51bGw7ZWxzZSBzd2l0Y2gocyl7Y2FzZSJmb3J3YXJkcyI6Zm9yKHI9dC5jaGlsZCxzPW51bGw7ciE9PW51bGw7KWU9ci5hbHRlcm5hdGUsZSE9PW51bGwmJnljKGUpPT09bnVsbCYmKHM9cikscj1yLnNpYmxpbmc7cj1zLHI9PT1udWxsPyhzPXQuY2hpbGQsdC5jaGlsZD1udWxsKToocz1yLnNpYmxpbmcsci5zaWJsaW5nPW51bGwpLHJkKHQsITEscyxyLGEpO2JyZWFrO2Nhc2UiYmFja3dhcmRzIjpmb3Iocj1udWxsLHM9dC5jaGlsZCx0LmNoaWxkPW51bGw7cyE9PW51bGw7KXtpZihlPXMuYWx0ZXJuYXRlLGUhPT1udWxsJiZ5YyhlKT09PW51bGwpe3QuY2hpbGQ9czticmVha31lPXMuc2libGluZyxzLnNpYmxpbmc9cixyPXMscz1lfXJkKHQsITAscixudWxsLGEpO2JyZWFrO2Nhc2UidG9nZXRoZXIiOnJkKHQsITEsbnVsbCxudWxsLHZvaWQgMCk7YnJlYWs7ZGVmYXVsdDp0Lm1lbW9pemVkU3RhdGU9bnVsbH1yZXR1cm4gdC5jaGlsZH1mdW5jdGlvbiBXbChlLHQpeyEodC5tb2RlJjEpJiZlIT09bnVsbCYmKGUuYWx0ZXJuYXRlPW51bGwsdC5hbHRlcm5hdGU9bnVsbCx0LmZsYWdzfD0yKX1mdW5jdGlvbiBPbihlLHQscil7aWYoZSE9PW51bGwmJih0LmRlcGVuZGVuY2llcz1lLmRlcGVuZGVuY2llcyksbml8PXQubGFuZXMsIShyJnQuY2hpbGRMYW5lcykpcmV0dXJuIG51bGw7aWYoZSE9PW51bGwmJnQuY2hpbGQhPT1lLmNoaWxkKXRocm93IEVycm9yKEIoMTUzKSk7aWYodC5jaGlsZCE9PW51bGwpe2ZvcihlPXQuY2hpbGQscj14cyhlLGUucGVuZGluZ1Byb3BzKSx0LmNoaWxkPXIsci5yZXR1cm49dDtlLnNpYmxpbmchPT1udWxsOyllPWUuc2libGluZyxyPXIuc2libGluZz14cyhlLGUucGVuZGluZ1Byb3BzKSxyLnJldHVybj10O3Iuc2libGluZz1udWxsfXJldHVybiB0LmNoaWxkfWZ1bmN0aW9uIE9OKGUsdCxyKXtzd2l0Y2godC50YWcpe2Nhc2UgMzpteSh0KSx1YSgpO2JyZWFrO2Nhc2UgNTpWdih0KTticmVhaztjYXNlIDE6cnIodC50eXBlKSYmbWModCk7YnJlYWs7Y2FzZSA0OkRtKHQsdC5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyk7YnJlYWs7Y2FzZSAxMDp2YXIgbj10LnR5cGUuX2NvbnRleHQscz10Lm1lbW9pemVkUHJvcHMudmFsdWU7VWUoZ2Msbi5fY3VycmVudFZhbHVlKSxuLl9jdXJyZW50VmFsdWU9czticmVhaztjYXNlIDEzOmlmKG49dC5tZW1vaXplZFN0YXRlLG4hPT1udWxsKXJldHVybiBuLmRlaHlkcmF0ZWQhPT1udWxsPyhVZShzdCxzdC5jdXJyZW50JjEpLHQuZmxhZ3N8PTEyOCxudWxsKTpyJnQuY2hpbGQuY2hpbGRMYW5lcz9oeShlLHQscik6KFVlKHN0LHN0LmN1cnJlbnQmMSksZT1PbihlLHQsciksZSE9PW51bGw/ZS5zaWJsaW5nOm51bGwpO1VlKHN0LHN0LmN1cnJlbnQmMSk7YnJlYWs7Y2FzZSAxOTppZihuPShyJnQuY2hpbGRMYW5lcykhPT0wLGUuZmxhZ3MmMTI4KXtpZihuKXJldHVybiBweShlLHQscik7dC5mbGFnc3w9MTI4fWlmKHM9dC5tZW1vaXplZFN0YXRlLHMhPT1udWxsJiYocy5yZW5kZXJpbmc9bnVsbCxzLnRhaWw9bnVsbCxzLmxhc3RFZmZlY3Q9bnVsbCksVWUoc3Qsc3QuY3VycmVudCksbilicmVhaztyZXR1cm4gbnVsbDtjYXNlIDIyOmNhc2UgMjM6cmV0dXJuIHQubGFuZXM9MCxkeShlLHQscil9cmV0dXJuIE9uKGUsdCxyKX12YXIgZ3kseGYseHksdnk7Z3k9ZnVuY3Rpb24oZSx0KXtmb3IodmFyIHI9dC5jaGlsZDtyIT09bnVsbDspe2lmKHIudGFnPT09NXx8ci50YWc9PT02KWUuYXBwZW5kQ2hpbGQoci5zdGF0ZU5vZGUpO2Vsc2UgaWYoci50YWchPT00JiZyLmNoaWxkIT09bnVsbCl7ci5jaGlsZC5yZXR1cm49cixyPXIuY2hpbGQ7Y29udGludWV9aWYocj09PXQpYnJlYWs7Zm9yKDtyLnNpYmxpbmc9PT1udWxsOyl7aWYoci5yZXR1cm49PT1udWxsfHxyLnJldHVybj09PXQpcmV0dXJuO3I9ci5yZXR1cm59ci5zaWJsaW5nLnJldHVybj1yLnJldHVybixyPXIuc2libGluZ319O3hmPWZ1bmN0aW9uKCl7fTt4eT1mdW5jdGlvbihlLHQscixuKXt2YXIgcz1lLm1lbW9pemVkUHJvcHM7aWYocyE9PW4pe2U9dC5zdGF0ZU5vZGUsenMobG4uY3VycmVudCk7dmFyIGE9bnVsbDtzd2l0Y2gocil7Y2FzZSJpbnB1dCI6cz1EZChlLHMpLG49RGQoZSxuKSxhPVtdO2JyZWFrO2Nhc2Uic2VsZWN0IjpzPWF0KHt9LHMse3ZhbHVlOnZvaWQgMH0pLG49YXQoe30sbix7dmFsdWU6dm9pZCAwfSksYT1bXTticmVhaztjYXNlInRleHRhcmVhIjpzPVZkKGUscyksbj1WZChlLG4pLGE9W107YnJlYWs7ZGVmYXVsdDp0eXBlb2Ygcy5vbkNsaWNrIT0iZnVuY3Rpb24iJiZ0eXBlb2Ygbi5vbkNsaWNrPT0iZnVuY3Rpb24iJiYoZS5vbmNsaWNrPWRjKX1CZChyLG4pO3ZhciBvO3I9bnVsbDtmb3IodSBpbiBzKWlmKCFuLmhhc093blByb3BlcnR5KHUpJiZzLmhhc093blByb3BlcnR5KHUpJiZzW3VdIT1udWxsKWlmKHU9PT0ic3R5bGUiKXt2YXIgbD1zW3VdO2ZvcihvIGluIGwpbC5oYXNPd25Qcm9wZXJ0eShvKSYmKHJ8fChyPXt9KSxyW29dPSIiKX1lbHNlIHUhPT0iZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwiJiZ1IT09ImNoaWxkcmVuIiYmdSE9PSJzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmciJiZ1IT09InN1cHByZXNzSHlkcmF0aW9uV2FybmluZyImJnUhPT0iYXV0b0ZvY3VzIiYmKGxvLmhhc093blByb3BlcnR5KHUpP2F8fChhPVtdKTooYT1hfHxbXSkucHVzaCh1LG51bGwpKTtmb3IodSBpbiBuKXt2YXIgYz1uW3VdO2lmKGw9cyE9bnVsbD9zW3VdOnZvaWQgMCxuLmhhc093blByb3BlcnR5KHUpJiZjIT09bCYmKGMhPW51bGx8fGwhPW51bGwpKWlmKHU9PT0ic3R5bGUiKWlmKGwpe2ZvcihvIGluIGwpIWwuaGFzT3duUHJvcGVydHkobyl8fGMmJmMuaGFzT3duUHJvcGVydHkobyl8fChyfHwocj17fSkscltvXT0iIik7Zm9yKG8gaW4gYyljLmhhc093blByb3BlcnR5KG8pJiZsW29dIT09Y1tvXSYmKHJ8fChyPXt9KSxyW29dPWNbb10pfWVsc2Ugcnx8KGF8fChhPVtdKSxhLnB1c2godSxyKSkscj1jO2Vsc2UgdT09PSJkYW5nZXJvdXNseVNldElubmVySFRNTCI/KGM9Yz9jLl9faHRtbDp2b2lkIDAsbD1sP2wuX19odG1sOnZvaWQgMCxjIT1udWxsJiZsIT09YyYmKGE9YXx8W10pLnB1c2godSxjKSk6dT09PSJjaGlsZHJlbiI/dHlwZW9mIGMhPSJzdHJpbmciJiZ0eXBlb2YgYyE9Im51bWJlciJ8fChhPWF8fFtdKS5wdXNoKHUsIiIrYyk6dSE9PSJzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmciJiZ1IT09InN1cHByZXNzSHlkcmF0aW9uV2FybmluZyImJihsby5oYXNPd25Qcm9wZXJ0eSh1KT8oYyE9bnVsbCYmdT09PSJvblNjcm9sbCImJkhlKCJzY3JvbGwiLGUpLGF8fGw9PT1jfHwoYT1bXSkpOihhPWF8fFtdKS5wdXNoKHUsYykpfXImJihhPWF8fFtdKS5wdXNoKCJzdHlsZSIscik7dmFyIHU9YTsodC51cGRhdGVRdWV1ZT11KSYmKHQuZmxhZ3N8PTQpfX07dnk9ZnVuY3Rpb24oZSx0LHIsbil7ciE9PW4mJih0LmZsYWdzfD00KX07ZnVuY3Rpb24gRGEoZSx0KXtpZighWGUpc3dpdGNoKGUudGFpbE1vZGUpe2Nhc2UiaGlkZGVuIjp0PWUudGFpbDtmb3IodmFyIHI9bnVsbDt0IT09bnVsbDspdC5hbHRlcm5hdGUhPT1udWxsJiYocj10KSx0PXQuc2libGluZztyPT09bnVsbD9lLnRhaWw9bnVsbDpyLnNpYmxpbmc9bnVsbDticmVhaztjYXNlImNvbGxhcHNlZCI6cj1lLnRhaWw7Zm9yKHZhciBuPW51bGw7ciE9PW51bGw7KXIuYWx0ZXJuYXRlIT09bnVsbCYmKG49cikscj1yLnNpYmxpbmc7bj09PW51bGw/dHx8ZS50YWlsPT09bnVsbD9lLnRhaWw9bnVsbDplLnRhaWwuc2libGluZz1udWxsOm4uc2libGluZz1udWxsfX1mdW5jdGlvbiBSdChlKXt2YXIgdD1lLmFsdGVybmF0ZSE9PW51bGwmJmUuYWx0ZXJuYXRlLmNoaWxkPT09ZS5jaGlsZCxyPTAsbj0wO2lmKHQpZm9yKHZhciBzPWUuY2hpbGQ7cyE9PW51bGw7KXJ8PXMubGFuZXN8cy5jaGlsZExhbmVzLG58PXMuc3VidHJlZUZsYWdzJjE0NjgwMDY0LG58PXMuZmxhZ3MmMTQ2ODAwNjQscy5yZXR1cm49ZSxzPXMuc2libGluZztlbHNlIGZvcihzPWUuY2hpbGQ7cyE9PW51bGw7KXJ8PXMubGFuZXN8cy5jaGlsZExhbmVzLG58PXMuc3VidHJlZUZsYWdzLG58PXMuZmxhZ3Mscy5yZXR1cm49ZSxzPXMuc2libGluZztyZXR1cm4gZS5zdWJ0cmVlRmxhZ3N8PW4sZS5jaGlsZExhbmVzPXIsdH1mdW5jdGlvbiBGTihlLHQscil7dmFyIG49dC5wZW5kaW5nUHJvcHM7c3dpdGNoKFJtKHQpLHQudGFnKXtjYXNlIDI6Y2FzZSAxNjpjYXNlIDE1OmNhc2UgMDpjYXNlIDExOmNhc2UgNzpjYXNlIDg6Y2FzZSAxMjpjYXNlIDk6Y2FzZSAxNDpyZXR1cm4gUnQodCksbnVsbDtjYXNlIDE6cmV0dXJuIHJyKHQudHlwZSkmJmZjKCksUnQodCksbnVsbDtjYXNlIDM6cmV0dXJuIG49dC5zdGF0ZU5vZGUsZmEoKSxRZSh0ciksUWUoTHQpLHptKCksbi5wZW5kaW5nQ29udGV4dCYmKG4uY29udGV4dD1uLnBlbmRpbmdDb250ZXh0LG4ucGVuZGluZ0NvbnRleHQ9bnVsbCksKGU9PT1udWxsfHxlLmNoaWxkPT09bnVsbCkmJihqbCh0KT90LmZsYWdzfD00OmU9PT1udWxsfHxlLm1lbW9pemVkU3RhdGUuaXNEZWh5ZHJhdGVkJiYhKHQuZmxhZ3MmMjU2KXx8KHQuZmxhZ3N8PTEwMjQsT3IhPT1udWxsJiYoa2YoT3IpLE9yPW51bGwpKSkseGYoZSx0KSxSdCh0KSxudWxsO2Nhc2UgNTokbSh0KTt2YXIgcz16cyhiby5jdXJyZW50KTtpZihyPXQudHlwZSxlIT09bnVsbCYmdC5zdGF0ZU5vZGUhPW51bGwpeHkoZSx0LHIsbixzKSxlLnJlZiE9PXQucmVmJiYodC5mbGFnc3w9NTEyLHQuZmxhZ3N8PTIwOTcxNTIpO2Vsc2V7aWYoIW4pe2lmKHQuc3RhdGVOb2RlPT09bnVsbCl0aHJvdyBFcnJvcihCKDE2NikpO3JldHVybiBSdCh0KSxudWxsfWlmKGU9enMobG4uY3VycmVudCksamwodCkpe249dC5zdGF0ZU5vZGUscj10LnR5cGU7dmFyIGE9dC5tZW1vaXplZFByb3BzO3N3aXRjaChuW3RuXT10LG5beW9dPWEsZT0odC5tb2RlJjEpIT09MCxyKXtjYXNlImRpYWxvZyI6SGUoImNhbmNlbCIsbiksSGUoImNsb3NlIixuKTticmVhaztjYXNlImlmcmFtZSI6Y2FzZSJvYmplY3QiOmNhc2UiZW1iZWQiOkhlKCJsb2FkIixuKTticmVhaztjYXNlInZpZGVvIjpjYXNlImF1ZGlvIjpmb3Iocz0wO3M8R2EubGVuZ3RoO3MrKylIZShHYVtzXSxuKTticmVhaztjYXNlInNvdXJjZSI6SGUoImVycm9yIixuKTticmVhaztjYXNlImltZyI6Y2FzZSJpbWFnZSI6Y2FzZSJsaW5rIjpIZSgiZXJyb3IiLG4pLEhlKCJsb2FkIixuKTticmVhaztjYXNlImRldGFpbHMiOkhlKCJ0b2dnbGUiLG4pO2JyZWFrO2Nhc2UiaW5wdXQiOlloKG4sYSksSGUoImludmFsaWQiLG4pO2JyZWFrO2Nhc2Uic2VsZWN0IjpuLl93cmFwcGVyU3RhdGU9e3dhc011bHRpcGxlOiEhYS5tdWx0aXBsZX0sSGUoImludmFsaWQiLG4pO2JyZWFrO2Nhc2UidGV4dGFyZWEiOkpoKG4sYSksSGUoImludmFsaWQiLG4pfUJkKHIsYSkscz1udWxsO2Zvcih2YXIgbyBpbiBhKWlmKGEuaGFzT3duUHJvcGVydHkobykpe3ZhciBsPWFbb107bz09PSJjaGlsZHJlbiI/dHlwZW9mIGw9PSJzdHJpbmciP24udGV4dENvbnRlbnQhPT1sJiYoYS5zdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmchPT0hMCYmYmwobi50ZXh0Q29udGVudCxsLGUpLHM9WyJjaGlsZHJlbiIsbF0pOnR5cGVvZiBsPT0ibnVtYmVyIiYmbi50ZXh0Q29udGVudCE9PSIiK2wmJihhLnN1cHByZXNzSHlkcmF0aW9uV2FybmluZyE9PSEwJiZibChuLnRleHRDb250ZW50LGwsZSkscz1bImNoaWxkcmVuIiwiIitsXSk6bG8uaGFzT3duUHJvcGVydHkobykmJmwhPW51bGwmJm89PT0ib25TY3JvbGwiJiZIZSgic2Nyb2xsIixuKX1zd2l0Y2gocil7Y2FzZSJpbnB1dCI6bWwobiksWGgobixhLCEwKTticmVhaztjYXNlInRleHRhcmVhIjptbChuKSxlcChuKTticmVhaztjYXNlInNlbGVjdCI6Y2FzZSJvcHRpb24iOmJyZWFrO2RlZmF1bHQ6dHlwZW9mIGEub25DbGljaz09ImZ1bmN0aW9uIiYmKG4ub25jbGljaz1kYyl9bj1zLHQudXBkYXRlUXVldWU9bixuIT09bnVsbCYmKHQuZmxhZ3N8PTQpfWVsc2V7bz1zLm5vZGVUeXBlPT09OT9zOnMub3duZXJEb2N1bWVudCxlPT09Imh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWwiJiYoZT1xeChyKSksZT09PSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sIj9yPT09InNjcmlwdCI/KGU9by5jcmVhdGVFbGVtZW50KCJkaXYiKSxlLmlubmVySFRNTD0iPHNjcmlwdD48XC9zY3JpcHQ+IixlPWUucmVtb3ZlQ2hpbGQoZS5maXJzdENoaWxkKSk6dHlwZW9mIG4uaXM9PSJzdHJpbmciP2U9by5jcmVhdGVFbGVtZW50KHIse2lzOm4uaXN9KTooZT1vLmNyZWF0ZUVsZW1lbnQocikscj09PSJzZWxlY3QiJiYobz1lLG4ubXVsdGlwbGU/by5tdWx0aXBsZT0hMDpuLnNpemUmJihvLnNpemU9bi5zaXplKSkpOmU9by5jcmVhdGVFbGVtZW50TlMoZSxyKSxlW3RuXT10LGVbeW9dPW4sZ3koZSx0LCExLCExKSx0LnN0YXRlTm9kZT1lO2U6e3N3aXRjaChvPUhkKHIsbikscil7Y2FzZSJkaWFsb2ciOkhlKCJjYW5jZWwiLGUpLEhlKCJjbG9zZSIsZSkscz1uO2JyZWFrO2Nhc2UiaWZyYW1lIjpjYXNlIm9iamVjdCI6Y2FzZSJlbWJlZCI6SGUoImxvYWQiLGUpLHM9bjticmVhaztjYXNlInZpZGVvIjpjYXNlImF1ZGlvIjpmb3Iocz0wO3M8R2EubGVuZ3RoO3MrKylIZShHYVtzXSxlKTtzPW47YnJlYWs7Y2FzZSJzb3VyY2UiOkhlKCJlcnJvciIsZSkscz1uO2JyZWFrO2Nhc2UiaW1nIjpjYXNlImltYWdlIjpjYXNlImxpbmsiOkhlKCJlcnJvciIsZSksSGUoImxvYWQiLGUpLHM9bjticmVhaztjYXNlImRldGFpbHMiOkhlKCJ0b2dnbGUiLGUpLHM9bjticmVhaztjYXNlImlucHV0IjpZaChlLG4pLHM9RGQoZSxuKSxIZSgiaW52YWxpZCIsZSk7YnJlYWs7Y2FzZSJvcHRpb24iOnM9bjticmVhaztjYXNlInNlbGVjdCI6ZS5fd3JhcHBlclN0YXRlPXt3YXNNdWx0aXBsZTohIW4ubXVsdGlwbGV9LHM9YXQoe30sbix7dmFsdWU6dm9pZCAwfSksSGUoImludmFsaWQiLGUpO2JyZWFrO2Nhc2UidGV4dGFyZWEiOkpoKGUsbikscz1WZChlLG4pLEhlKCJpbnZhbGlkIixlKTticmVhaztkZWZhdWx0OnM9bn1CZChyLHMpLGw9cztmb3IoYSBpbiBsKWlmKGwuaGFzT3duUHJvcGVydHkoYSkpe3ZhciBjPWxbYV07YT09PSJzdHlsZSI/WngoZSxjKTphPT09ImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MIj8oYz1jP2MuX19odG1sOnZvaWQgMCxjIT1udWxsJiZHeChlLGMpKTphPT09ImNoaWxkcmVuIj90eXBlb2YgYz09InN0cmluZyI/KHIhPT0idGV4dGFyZWEifHxjIT09IiIpJiZjbyhlLGMpOnR5cGVvZiBjPT0ibnVtYmVyIiYmY28oZSwiIitjKTphIT09InN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZyImJmEhPT0ic3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nIiYmYSE9PSJhdXRvRm9jdXMiJiYobG8uaGFzT3duUHJvcGVydHkoYSk/YyE9bnVsbCYmYT09PSJvblNjcm9sbCImJkhlKCJzY3JvbGwiLGUpOmMhPW51bGwmJmdtKGUsYSxjLG8pKX1zd2l0Y2gocil7Y2FzZSJpbnB1dCI6bWwoZSksWGgoZSxuLCExKTticmVhaztjYXNlInRleHRhcmVhIjptbChlKSxlcChlKTticmVhaztjYXNlIm9wdGlvbiI6bi52YWx1ZSE9bnVsbCYmZS5zZXRBdHRyaWJ1dGUoInZhbHVlIiwiIit3cyhuLnZhbHVlKSk7YnJlYWs7Y2FzZSJzZWxlY3QiOmUubXVsdGlwbGU9ISFuLm11bHRpcGxlLGE9bi52YWx1ZSxhIT1udWxsP0xpKGUsISFuLm11bHRpcGxlLGEsITEpOm4uZGVmYXVsdFZhbHVlIT1udWxsJiZMaShlLCEhbi5tdWx0aXBsZSxuLmRlZmF1bHRWYWx1ZSwhMCk7YnJlYWs7ZGVmYXVsdDp0eXBlb2Ygcy5vbkNsaWNrPT0iZnVuY3Rpb24iJiYoZS5vbmNsaWNrPWRjKX1zd2l0Y2gocil7Y2FzZSJidXR0b24iOmNhc2UiaW5wdXQiOmNhc2Uic2VsZWN0IjpjYXNlInRleHRhcmVhIjpuPSEhbi5hdXRvRm9jdXM7YnJlYWsgZTtjYXNlImltZyI6bj0hMDticmVhayBlO2RlZmF1bHQ6bj0hMX19biYmKHQuZmxhZ3N8PTQpfXQucmVmIT09bnVsbCYmKHQuZmxhZ3N8PTUxMix0LmZsYWdzfD0yMDk3MTUyKX1yZXR1cm4gUnQodCksbnVsbDtjYXNlIDY6aWYoZSYmdC5zdGF0ZU5vZGUhPW51bGwpdnkoZSx0LGUubWVtb2l6ZWRQcm9wcyxuKTtlbHNle2lmKHR5cGVvZiBuIT0ic3RyaW5nIiYmdC5zdGF0ZU5vZGU9PT1udWxsKXRocm93IEVycm9yKEIoMTY2KSk7aWYocj16cyhiby5jdXJyZW50KSx6cyhsbi5jdXJyZW50KSxqbCh0KSl7aWYobj10LnN0YXRlTm9kZSxyPXQubWVtb2l6ZWRQcm9wcyxuW3RuXT10LChhPW4ubm9kZVZhbHVlIT09cikmJihlPWRyLGUhPT1udWxsKSlzd2l0Y2goZS50YWcpe2Nhc2UgMzpibChuLm5vZGVWYWx1ZSxyLChlLm1vZGUmMSkhPT0wKTticmVhaztjYXNlIDU6ZS5tZW1vaXplZFByb3BzLnN1cHByZXNzSHlkcmF0aW9uV2FybmluZyE9PSEwJiZibChuLm5vZGVWYWx1ZSxyLChlLm1vZGUmMSkhPT0wKX1hJiYodC5mbGFnc3w9NCl9ZWxzZSBuPShyLm5vZGVUeXBlPT09OT9yOnIub3duZXJEb2N1bWVudCkuY3JlYXRlVGV4dE5vZGUobiksblt0bl09dCx0LnN0YXRlTm9kZT1ufXJldHVybiBSdCh0KSxudWxsO2Nhc2UgMTM6aWYoUWUoc3QpLG49dC5tZW1vaXplZFN0YXRlLGU9PT1udWxsfHxlLm1lbW9pemVkU3RhdGUhPT1udWxsJiZlLm1lbW9pemVkU3RhdGUuZGVoeWRyYXRlZCE9PW51bGwpe2lmKFhlJiZ1ciE9PW51bGwmJnQubW9kZSYxJiYhKHQuZmxhZ3MmMTI4KSlJdigpLHVhKCksdC5mbGFnc3w9OTg1NjAsYT0hMTtlbHNlIGlmKGE9amwodCksbiE9PW51bGwmJm4uZGVoeWRyYXRlZCE9PW51bGwpe2lmKGU9PT1udWxsKXtpZighYSl0aHJvdyBFcnJvcihCKDMxOCkpO2lmKGE9dC5tZW1vaXplZFN0YXRlLGE9YSE9PW51bGw/YS5kZWh5ZHJhdGVkOm51bGwsIWEpdGhyb3cgRXJyb3IoQigzMTcpKTthW3RuXT10fWVsc2UgdWEoKSwhKHQuZmxhZ3MmMTI4KSYmKHQubWVtb2l6ZWRTdGF0ZT1udWxsKSx0LmZsYWdzfD00O1J0KHQpLGE9ITF9ZWxzZSBPciE9PW51bGwmJihrZihPciksT3I9bnVsbCksYT0hMDtpZighYSlyZXR1cm4gdC5mbGFncyY2NTUzNj90Om51bGx9cmV0dXJuIHQuZmxhZ3MmMTI4Pyh0LmxhbmVzPXIsdCk6KG49biE9PW51bGwsbiE9PShlIT09bnVsbCYmZS5tZW1vaXplZFN0YXRlIT09bnVsbCkmJm4mJih0LmNoaWxkLmZsYWdzfD04MTkyLHQubW9kZSYxJiYoZT09PW51bGx8fHN0LmN1cnJlbnQmMT93dD09PTAmJih3dD0zKTpYbSgpKSksdC51cGRhdGVRdWV1ZSE9PW51bGwmJih0LmZsYWdzfD00KSxSdCh0KSxudWxsKTtjYXNlIDQ6cmV0dXJuIGZhKCkseGYoZSx0KSxlPT09bnVsbCYmeG8odC5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyksUnQodCksbnVsbDtjYXNlIDEwOnJldHVybiBGbSh0LnR5cGUuX2NvbnRleHQpLFJ0KHQpLG51bGw7Y2FzZSAxNzpyZXR1cm4gcnIodC50eXBlKSYmZmMoKSxSdCh0KSxudWxsO2Nhc2UgMTk6aWYoUWUoc3QpLGE9dC5tZW1vaXplZFN0YXRlLGE9PT1udWxsKXJldHVybiBSdCh0KSxudWxsO2lmKG49KHQuZmxhZ3MmMTI4KSE9PTAsbz1hLnJlbmRlcmluZyxvPT09bnVsbClpZihuKURhKGEsITEpO2Vsc2V7aWYod3QhPT0wfHxlIT09bnVsbCYmZS5mbGFncyYxMjgpZm9yKGU9dC5jaGlsZDtlIT09bnVsbDspe2lmKG89eWMoZSksbyE9PW51bGwpe2Zvcih0LmZsYWdzfD0xMjgsRGEoYSwhMSksbj1vLnVwZGF0ZVF1ZXVlLG4hPT1udWxsJiYodC51cGRhdGVRdWV1ZT1uLHQuZmxhZ3N8PTQpLHQuc3VidHJlZUZsYWdzPTAsbj1yLHI9dC5jaGlsZDtyIT09bnVsbDspYT1yLGU9bixhLmZsYWdzJj0xNDY4MDA2NixvPWEuYWx0ZXJuYXRlLG89PT1udWxsPyhhLmNoaWxkTGFuZXM9MCxhLmxhbmVzPWUsYS5jaGlsZD1udWxsLGEuc3VidHJlZUZsYWdzPTAsYS5tZW1vaXplZFByb3BzPW51bGwsYS5tZW1vaXplZFN0YXRlPW51bGwsYS51cGRhdGVRdWV1ZT1udWxsLGEuZGVwZW5kZW5jaWVzPW51bGwsYS5zdGF0ZU5vZGU9bnVsbCk6KGEuY2hpbGRMYW5lcz1vLmNoaWxkTGFuZXMsYS5sYW5lcz1vLmxhbmVzLGEuY2hpbGQ9by5jaGlsZCxhLnN1YnRyZWVGbGFncz0wLGEuZGVsZXRpb25zPW51bGwsYS5tZW1vaXplZFByb3BzPW8ubWVtb2l6ZWRQcm9wcyxhLm1lbW9pemVkU3RhdGU9by5tZW1vaXplZFN0YXRlLGEudXBkYXRlUXVldWU9by51cGRhdGVRdWV1ZSxhLnR5cGU9by50eXBlLGU9by5kZXBlbmRlbmNpZXMsYS5kZXBlbmRlbmNpZXM9ZT09PW51bGw/bnVsbDp7bGFuZXM6ZS5sYW5lcyxmaXJzdENvbnRleHQ6ZS5maXJzdENvbnRleHR9KSxyPXIuc2libGluZztyZXR1cm4gVWUoc3Qsc3QuY3VycmVudCYxfDIpLHQuY2hpbGR9ZT1lLnNpYmxpbmd9YS50YWlsIT09bnVsbCYmZnQoKT5oYSYmKHQuZmxhZ3N8PTEyOCxuPSEwLERhKGEsITEpLHQubGFuZXM9NDE5NDMwNCl9ZWxzZXtpZighbilpZihlPXljKG8pLGUhPT1udWxsKXtpZih0LmZsYWdzfD0xMjgsbj0hMCxyPWUudXBkYXRlUXVldWUsciE9PW51bGwmJih0LnVwZGF0ZVF1ZXVlPXIsdC5mbGFnc3w9NCksRGEoYSwhMCksYS50YWlsPT09bnVsbCYmYS50YWlsTW9kZT09PSJoaWRkZW4iJiYhby5hbHRlcm5hdGUmJiFYZSlyZXR1cm4gUnQodCksbnVsbH1lbHNlIDIqZnQoKS1hLnJlbmRlcmluZ1N0YXJ0VGltZT5oYSYmciE9PTEwNzM3NDE4MjQmJih0LmZsYWdzfD0xMjgsbj0hMCxEYShhLCExKSx0LmxhbmVzPTQxOTQzMDQpO2EuaXNCYWNrd2FyZHM/KG8uc2libGluZz10LmNoaWxkLHQuY2hpbGQ9byk6KHI9YS5sYXN0LHIhPT1udWxsP3Iuc2libGluZz1vOnQuY2hpbGQ9byxhLmxhc3Q9byl9cmV0dXJuIGEudGFpbCE9PW51bGw/KHQ9YS50YWlsLGEucmVuZGVyaW5nPXQsYS50YWlsPXQuc2libGluZyxhLnJlbmRlcmluZ1N0YXJ0VGltZT1mdCgpLHQuc2libGluZz1udWxsLHI9c3QuY3VycmVudCxVZShzdCxuP3ImMXwyOnImMSksdCk6KFJ0KHQpLG51bGwpO2Nhc2UgMjI6Y2FzZSAyMzpyZXR1cm4gWW0oKSxuPXQubWVtb2l6ZWRTdGF0ZSE9PW51bGwsZSE9PW51bGwmJmUubWVtb2l6ZWRTdGF0ZSE9PW51bGwhPT1uJiYodC5mbGFnc3w9ODE5MiksbiYmdC5tb2RlJjE/b3ImMTA3Mzc0MTgyNCYmKFJ0KHQpLHQuc3VidHJlZUZsYWdzJjYmJih0LmZsYWdzfD04MTkyKSk6UnQodCksbnVsbDtjYXNlIDI0OnJldHVybiBudWxsO2Nhc2UgMjU6cmV0dXJuIG51bGx9dGhyb3cgRXJyb3IoQigxNTYsdC50YWcpKX1mdW5jdGlvbiBJTihlLHQpe3N3aXRjaChSbSh0KSx0LnRhZyl7Y2FzZSAxOnJldHVybiBycih0LnR5cGUpJiZmYygpLGU9dC5mbGFncyxlJjY1NTM2Pyh0LmZsYWdzPWUmLTY1NTM3fDEyOCx0KTpudWxsO2Nhc2UgMzpyZXR1cm4gZmEoKSxRZSh0ciksUWUoTHQpLHptKCksZT10LmZsYWdzLGUmNjU1MzYmJiEoZSYxMjgpPyh0LmZsYWdzPWUmLTY1NTM3fDEyOCx0KTpudWxsO2Nhc2UgNTpyZXR1cm4gJG0odCksbnVsbDtjYXNlIDEzOmlmKFFlKHN0KSxlPXQubWVtb2l6ZWRTdGF0ZSxlIT09bnVsbCYmZS5kZWh5ZHJhdGVkIT09bnVsbCl7aWYodC5hbHRlcm5hdGU9PT1udWxsKXRocm93IEVycm9yKEIoMzQwKSk7dWEoKX1yZXR1cm4gZT10LmZsYWdzLGUmNjU1MzY/KHQuZmxhZ3M9ZSYtNjU1Mzd8MTI4LHQpOm51bGw7Y2FzZSAxOTpyZXR1cm4gUWUoc3QpLG51bGw7Y2FzZSA0OnJldHVybiBmYSgpLG51bGw7Y2FzZSAxMDpyZXR1cm4gRm0odC50eXBlLl9jb250ZXh0KSxudWxsO2Nhc2UgMjI6Y2FzZSAyMzpyZXR1cm4gWW0oKSxudWxsO2Nhc2UgMjQ6cmV0dXJuIG51bGw7ZGVmYXVsdDpyZXR1cm4gbnVsbH19dmFyIGtsPSExLE90PSExLExOPXR5cGVvZiBXZWFrU2V0PT0iZnVuY3Rpb24iP1dlYWtTZXQ6U2V0LHRlPW51bGw7ZnVuY3Rpb24gTWkoZSx0KXt2YXIgcj1lLnJlZjtpZihyIT09bnVsbClpZih0eXBlb2Ygcj09ImZ1bmN0aW9uIil0cnl7cihudWxsKX1jYXRjaChuKXtjdChlLHQsbil9ZWxzZSByLmN1cnJlbnQ9bnVsbH1mdW5jdGlvbiB2ZihlLHQscil7dHJ5e3IoKX1jYXRjaChuKXtjdChlLHQsbil9fXZhciBCcD0hMTtmdW5jdGlvbiBETihlLHQpe2lmKGVmPWxjLGU9TnYoKSxQbShlKSl7aWYoInNlbGVjdGlvblN0YXJ0ImluIGUpdmFyIHI9e3N0YXJ0OmUuc2VsZWN0aW9uU3RhcnQsZW5kOmUuc2VsZWN0aW9uRW5kfTtlbHNlIGU6e3I9KHI9ZS5vd25lckRvY3VtZW50KSYmci5kZWZhdWx0Vmlld3x8d2luZG93O3ZhciBuPXIuZ2V0U2VsZWN0aW9uJiZyLmdldFNlbGVjdGlvbigpO2lmKG4mJm4ucmFuZ2VDb3VudCE9PTApe3I9bi5hbmNob3JOb2RlO3ZhciBzPW4uYW5jaG9yT2Zmc2V0LGE9bi5mb2N1c05vZGU7bj1uLmZvY3VzT2Zmc2V0O3RyeXtyLm5vZGVUeXBlLGEubm9kZVR5cGV9Y2F0Y2h7cj1udWxsO2JyZWFrIGV9dmFyIG89MCxsPS0xLGM9LTEsdT0wLGQ9MCxmPWUscD1udWxsO3Q6Zm9yKDs7KXtmb3IodmFyIHg7ZiE9PXJ8fHMhPT0wJiZmLm5vZGVUeXBlIT09M3x8KGw9bytzKSxmIT09YXx8biE9PTAmJmYubm9kZVR5cGUhPT0zfHwoYz1vK24pLGYubm9kZVR5cGU9PT0zJiYobys9Zi5ub2RlVmFsdWUubGVuZ3RoKSwoeD1mLmZpcnN0Q2hpbGQpIT09bnVsbDspcD1mLGY9eDtmb3IoOzspe2lmKGY9PT1lKWJyZWFrIHQ7aWYocD09PXImJisrdT09PXMmJihsPW8pLHA9PT1hJiYrK2Q9PT1uJiYoYz1vKSwoeD1mLm5leHRTaWJsaW5nKSE9PW51bGwpYnJlYWs7Zj1wLHA9Zi5wYXJlbnROb2RlfWY9eH1yPWw9PT0tMXx8Yz09PS0xP251bGw6e3N0YXJ0OmwsZW5kOmN9fWVsc2Ugcj1udWxsfXI9cnx8e3N0YXJ0OjAsZW5kOjB9fWVsc2Ugcj1udWxsO2Zvcih0Zj17Zm9jdXNlZEVsZW06ZSxzZWxlY3Rpb25SYW5nZTpyfSxsYz0hMSx0ZT10O3RlIT09bnVsbDspaWYodD10ZSxlPXQuY2hpbGQsKHQuc3VidHJlZUZsYWdzJjEwMjgpIT09MCYmZSE9PW51bGwpZS5yZXR1cm49dCx0ZT1lO2Vsc2UgZm9yKDt0ZSE9PW51bGw7KXt0PXRlO3RyeXt2YXIgdj10LmFsdGVybmF0ZTtpZih0LmZsYWdzJjEwMjQpc3dpdGNoKHQudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE1OmJyZWFrO2Nhc2UgMTppZih2IT09bnVsbCl7dmFyIG09di5tZW1vaXplZFByb3BzLHc9di5tZW1vaXplZFN0YXRlLGg9dC5zdGF0ZU5vZGUsZz1oLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlKHQuZWxlbWVudFR5cGU9PT10LnR5cGU/bTpScih0LnR5cGUsbSksdyk7aC5fX3JlYWN0SW50ZXJuYWxTbmFwc2hvdEJlZm9yZVVwZGF0ZT1nfWJyZWFrO2Nhc2UgMzp2YXIgYj10LnN0YXRlTm9kZS5jb250YWluZXJJbmZvO2Iubm9kZVR5cGU9PT0xP2IudGV4dENvbnRlbnQ9IiI6Yi5ub2RlVHlwZT09PTkmJmIuZG9jdW1lbnRFbGVtZW50JiZiLnJlbW92ZUNoaWxkKGIuZG9jdW1lbnRFbGVtZW50KTticmVhaztjYXNlIDU6Y2FzZSA2OmNhc2UgNDpjYXNlIDE3OmJyZWFrO2RlZmF1bHQ6dGhyb3cgRXJyb3IoQigxNjMpKX19Y2F0Y2goTil7Y3QodCx0LnJldHVybixOKX1pZihlPXQuc2libGluZyxlIT09bnVsbCl7ZS5yZXR1cm49dC5yZXR1cm4sdGU9ZTticmVha310ZT10LnJldHVybn1yZXR1cm4gdj1CcCxCcD0hMSx2fWZ1bmN0aW9uIHNvKGUsdCxyKXt2YXIgbj10LnVwZGF0ZVF1ZXVlO2lmKG49biE9PW51bGw/bi5sYXN0RWZmZWN0Om51bGwsbiE9PW51bGwpe3ZhciBzPW49bi5uZXh0O2Rve2lmKChzLnRhZyZlKT09PWUpe3ZhciBhPXMuZGVzdHJveTtzLmRlc3Ryb3k9dm9pZCAwLGEhPT12b2lkIDAmJnZmKHQscixhKX1zPXMubmV4dH13aGlsZShzIT09bil9fWZ1bmN0aW9uIHN1KGUsdCl7aWYodD10LnVwZGF0ZVF1ZXVlLHQ9dCE9PW51bGw/dC5sYXN0RWZmZWN0Om51bGwsdCE9PW51bGwpe3ZhciByPXQ9dC5uZXh0O2Rve2lmKChyLnRhZyZlKT09PWUpe3ZhciBuPXIuY3JlYXRlO3IuZGVzdHJveT1uKCl9cj1yLm5leHR9d2hpbGUociE9PXQpfX1mdW5jdGlvbiB5ZihlKXt2YXIgdD1lLnJlZjtpZih0IT09bnVsbCl7dmFyIHI9ZS5zdGF0ZU5vZGU7c3dpdGNoKGUudGFnKXtjYXNlIDU6ZT1yO2JyZWFrO2RlZmF1bHQ6ZT1yfXR5cGVvZiB0PT0iZnVuY3Rpb24iP3QoZSk6dC5jdXJyZW50PWV9fWZ1bmN0aW9uIHl5KGUpe3ZhciB0PWUuYWx0ZXJuYXRlO3QhPT1udWxsJiYoZS5hbHRlcm5hdGU9bnVsbCx5eSh0KSksZS5jaGlsZD1udWxsLGUuZGVsZXRpb25zPW51bGwsZS5zaWJsaW5nPW51bGwsZS50YWc9PT01JiYodD1lLnN0YXRlTm9kZSx0IT09bnVsbCYmKGRlbGV0ZSB0W3RuXSxkZWxldGUgdFt5b10sZGVsZXRlIHRbc2ZdLGRlbGV0ZSB0W3dOXSxkZWxldGUgdFtiTl0pKSxlLnN0YXRlTm9kZT1udWxsLGUucmV0dXJuPW51bGwsZS5kZXBlbmRlbmNpZXM9bnVsbCxlLm1lbW9pemVkUHJvcHM9bnVsbCxlLm1lbW9pemVkU3RhdGU9bnVsbCxlLnBlbmRpbmdQcm9wcz1udWxsLGUuc3RhdGVOb2RlPW51bGwsZS51cGRhdGVRdWV1ZT1udWxsfWZ1bmN0aW9uIHd5KGUpe3JldHVybiBlLnRhZz09PTV8fGUudGFnPT09M3x8ZS50YWc9PT00fWZ1bmN0aW9uIEhwKGUpe2U6Zm9yKDs7KXtmb3IoO2Uuc2libGluZz09PW51bGw7KXtpZihlLnJldHVybj09PW51bGx8fHd5KGUucmV0dXJuKSlyZXR1cm4gbnVsbDtlPWUucmV0dXJufWZvcihlLnNpYmxpbmcucmV0dXJuPWUucmV0dXJuLGU9ZS5zaWJsaW5nO2UudGFnIT09NSYmZS50YWchPT02JiZlLnRhZyE9PTE4Oyl7aWYoZS5mbGFncyYyfHxlLmNoaWxkPT09bnVsbHx8ZS50YWc9PT00KWNvbnRpbnVlIGU7ZS5jaGlsZC5yZXR1cm49ZSxlPWUuY2hpbGR9aWYoIShlLmZsYWdzJjIpKXJldHVybiBlLnN0YXRlTm9kZX19ZnVuY3Rpb24gd2YoZSx0LHIpe3ZhciBuPWUudGFnO2lmKG49PT01fHxuPT09NillPWUuc3RhdGVOb2RlLHQ/ci5ub2RlVHlwZT09PTg/ci5wYXJlbnROb2RlLmluc2VydEJlZm9yZShlLHQpOnIuaW5zZXJ0QmVmb3JlKGUsdCk6KHIubm9kZVR5cGU9PT04Pyh0PXIucGFyZW50Tm9kZSx0Lmluc2VydEJlZm9yZShlLHIpKToodD1yLHQuYXBwZW5kQ2hpbGQoZSkpLHI9ci5fcmVhY3RSb290Q29udGFpbmVyLHIhPW51bGx8fHQub25jbGljayE9PW51bGx8fCh0Lm9uY2xpY2s9ZGMpKTtlbHNlIGlmKG4hPT00JiYoZT1lLmNoaWxkLGUhPT1udWxsKSlmb3Iod2YoZSx0LHIpLGU9ZS5zaWJsaW5nO2UhPT1udWxsOyl3ZihlLHQsciksZT1lLnNpYmxpbmd9ZnVuY3Rpb24gYmYoZSx0LHIpe3ZhciBuPWUudGFnO2lmKG49PT01fHxuPT09NillPWUuc3RhdGVOb2RlLHQ/ci5pbnNlcnRCZWZvcmUoZSx0KTpyLmFwcGVuZENoaWxkKGUpO2Vsc2UgaWYobiE9PTQmJihlPWUuY2hpbGQsZSE9PW51bGwpKWZvcihiZihlLHQsciksZT1lLnNpYmxpbmc7ZSE9PW51bGw7KWJmKGUsdCxyKSxlPWUuc2libGluZ312YXIga3Q9bnVsbCxNcj0hMTtmdW5jdGlvbiBVbihlLHQscil7Zm9yKHI9ci5jaGlsZDtyIT09bnVsbDspYnkoZSx0LHIpLHI9ci5zaWJsaW5nfWZ1bmN0aW9uIGJ5KGUsdCxyKXtpZihvbiYmdHlwZW9mIG9uLm9uQ29tbWl0RmliZXJVbm1vdW50PT0iZnVuY3Rpb24iKXRyeXtvbi5vbkNvbW1pdEZpYmVyVW5tb3VudChLYyxyKX1jYXRjaHt9c3dpdGNoKHIudGFnKXtjYXNlIDU6T3R8fE1pKHIsdCk7Y2FzZSA2OnZhciBuPWt0LHM9TXI7a3Q9bnVsbCxVbihlLHQsciksa3Q9bixNcj1zLGt0IT09bnVsbCYmKE1yPyhlPWt0LHI9ci5zdGF0ZU5vZGUsZS5ub2RlVHlwZT09PTg/ZS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHIpOmUucmVtb3ZlQ2hpbGQocikpOmt0LnJlbW92ZUNoaWxkKHIuc3RhdGVOb2RlKSk7YnJlYWs7Y2FzZSAxODprdCE9PW51bGwmJihNcj8oZT1rdCxyPXIuc3RhdGVOb2RlLGUubm9kZVR5cGU9PT04P1p1KGUucGFyZW50Tm9kZSxyKTplLm5vZGVUeXBlPT09MSYmWnUoZSxyKSxobyhlKSk6WnUoa3Qsci5zdGF0ZU5vZGUpKTticmVhaztjYXNlIDQ6bj1rdCxzPU1yLGt0PXIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8sTXI9ITAsVW4oZSx0LHIpLGt0PW4sTXI9czticmVhaztjYXNlIDA6Y2FzZSAxMTpjYXNlIDE0OmNhc2UgMTU6aWYoIU90JiYobj1yLnVwZGF0ZVF1ZXVlLG4hPT1udWxsJiYobj1uLmxhc3RFZmZlY3QsbiE9PW51bGwpKSl7cz1uPW4ubmV4dDtkb3t2YXIgYT1zLG89YS5kZXN0cm95O2E9YS50YWcsbyE9PXZvaWQgMCYmKGEmMnx8YSY0KSYmdmYocix0LG8pLHM9cy5uZXh0fXdoaWxlKHMhPT1uKX1VbihlLHQscik7YnJlYWs7Y2FzZSAxOmlmKCFPdCYmKE1pKHIsdCksbj1yLnN0YXRlTm9kZSx0eXBlb2Ygbi5jb21wb25lbnRXaWxsVW5tb3VudD09ImZ1bmN0aW9uIikpdHJ5e24ucHJvcHM9ci5tZW1vaXplZFByb3BzLG4uc3RhdGU9ci5tZW1vaXplZFN0YXRlLG4uY29tcG9uZW50V2lsbFVubW91bnQoKX1jYXRjaChsKXtjdChyLHQsbCl9VW4oZSx0LHIpO2JyZWFrO2Nhc2UgMjE6VW4oZSx0LHIpO2JyZWFrO2Nhc2UgMjI6ci5tb2RlJjE/KE90PShuPU90KXx8ci5tZW1vaXplZFN0YXRlIT09bnVsbCxVbihlLHQsciksT3Q9bik6VW4oZSx0LHIpO2JyZWFrO2RlZmF1bHQ6VW4oZSx0LHIpfX1mdW5jdGlvbiBXcChlKXt2YXIgdD1lLnVwZGF0ZVF1ZXVlO2lmKHQhPT1udWxsKXtlLnVwZGF0ZVF1ZXVlPW51bGw7dmFyIHI9ZS5zdGF0ZU5vZGU7cj09PW51bGwmJihyPWUuc3RhdGVOb2RlPW5ldyBMTiksdC5mb3JFYWNoKGZ1bmN0aW9uKG4pe3ZhciBzPUdOLmJpbmQobnVsbCxlLG4pO3IuaGFzKG4pfHwoci5hZGQobiksbi50aGVuKHMscykpfSl9fWZ1bmN0aW9uIFByKGUsdCl7dmFyIHI9dC5kZWxldGlvbnM7aWYociE9PW51bGwpZm9yKHZhciBuPTA7bjxyLmxlbmd0aDtuKyspe3ZhciBzPXJbbl07dHJ5e3ZhciBhPWUsbz10LGw9bztlOmZvcig7bCE9PW51bGw7KXtzd2l0Y2gobC50YWcpe2Nhc2UgNTprdD1sLnN0YXRlTm9kZSxNcj0hMTticmVhayBlO2Nhc2UgMzprdD1sLnN0YXRlTm9kZS5jb250YWluZXJJbmZvLE1yPSEwO2JyZWFrIGU7Y2FzZSA0Omt0PWwuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8sTXI9ITA7YnJlYWsgZX1sPWwucmV0dXJufWlmKGt0PT09bnVsbCl0aHJvdyBFcnJvcihCKDE2MCkpO2J5KGEsbyxzKSxrdD1udWxsLE1yPSExO3ZhciBjPXMuYWx0ZXJuYXRlO2MhPT1udWxsJiYoYy5yZXR1cm49bnVsbCkscy5yZXR1cm49bnVsbH1jYXRjaCh1KXtjdChzLHQsdSl9fWlmKHQuc3VidHJlZUZsYWdzJjEyODU0KWZvcih0PXQuY2hpbGQ7dCE9PW51bGw7KWp5KHQsZSksdD10LnNpYmxpbmd9ZnVuY3Rpb24gankoZSx0KXt2YXIgcj1lLmFsdGVybmF0ZSxuPWUuZmxhZ3M7c3dpdGNoKGUudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE0OmNhc2UgMTU6aWYoUHIodCxlKSxxcihlKSxuJjQpe3RyeXtzbygzLGUsZS5yZXR1cm4pLHN1KDMsZSl9Y2F0Y2gobSl7Y3QoZSxlLnJldHVybixtKX10cnl7c28oNSxlLGUucmV0dXJuKX1jYXRjaChtKXtjdChlLGUucmV0dXJuLG0pfX1icmVhaztjYXNlIDE6UHIodCxlKSxxcihlKSxuJjUxMiYmciE9PW51bGwmJk1pKHIsci5yZXR1cm4pO2JyZWFrO2Nhc2UgNTppZihQcih0LGUpLHFyKGUpLG4mNTEyJiZyIT09bnVsbCYmTWkocixyLnJldHVybiksZS5mbGFncyYzMil7dmFyIHM9ZS5zdGF0ZU5vZGU7dHJ5e2NvKHMsIiIpfWNhdGNoKG0pe2N0KGUsZS5yZXR1cm4sbSl9fWlmKG4mNCYmKHM9ZS5zdGF0ZU5vZGUscyE9bnVsbCkpe3ZhciBhPWUubWVtb2l6ZWRQcm9wcyxvPXIhPT1udWxsP3IubWVtb2l6ZWRQcm9wczphLGw9ZS50eXBlLGM9ZS51cGRhdGVRdWV1ZTtpZihlLnVwZGF0ZVF1ZXVlPW51bGwsYyE9PW51bGwpdHJ5e2w9PT0iaW5wdXQiJiZhLnR5cGU9PT0icmFkaW8iJiZhLm5hbWUhPW51bGwmJkh4KHMsYSksSGQobCxvKTt2YXIgdT1IZChsLGEpO2ZvcihvPTA7bzxjLmxlbmd0aDtvKz0yKXt2YXIgZD1jW29dLGY9Y1tvKzFdO2Q9PT0ic3R5bGUiP1p4KHMsZik6ZD09PSJkYW5nZXJvdXNseVNldElubmVySFRNTCI/R3gocyxmKTpkPT09ImNoaWxkcmVuIj9jbyhzLGYpOmdtKHMsZCxmLHUpfXN3aXRjaChsKXtjYXNlImlucHV0IjokZChzLGEpO2JyZWFrO2Nhc2UidGV4dGFyZWEiOld4KHMsYSk7YnJlYWs7Y2FzZSJzZWxlY3QiOnZhciBwPXMuX3dyYXBwZXJTdGF0ZS53YXNNdWx0aXBsZTtzLl93cmFwcGVyU3RhdGUud2FzTXVsdGlwbGU9ISFhLm11bHRpcGxlO3ZhciB4PWEudmFsdWU7eCE9bnVsbD9MaShzLCEhYS5tdWx0aXBsZSx4LCExKTpwIT09ISFhLm11bHRpcGxlJiYoYS5kZWZhdWx0VmFsdWUhPW51bGw/TGkocywhIWEubXVsdGlwbGUsYS5kZWZhdWx0VmFsdWUsITApOkxpKHMsISFhLm11bHRpcGxlLGEubXVsdGlwbGU/W106IiIsITEpKX1zW3lvXT1hfWNhdGNoKG0pe2N0KGUsZS5yZXR1cm4sbSl9fWJyZWFrO2Nhc2UgNjppZihQcih0LGUpLHFyKGUpLG4mNCl7aWYoZS5zdGF0ZU5vZGU9PT1udWxsKXRocm93IEVycm9yKEIoMTYyKSk7cz1lLnN0YXRlTm9kZSxhPWUubWVtb2l6ZWRQcm9wczt0cnl7cy5ub2RlVmFsdWU9YX1jYXRjaChtKXtjdChlLGUucmV0dXJuLG0pfX1icmVhaztjYXNlIDM6aWYoUHIodCxlKSxxcihlKSxuJjQmJnIhPT1udWxsJiZyLm1lbW9pemVkU3RhdGUuaXNEZWh5ZHJhdGVkKXRyeXtobyh0LmNvbnRhaW5lckluZm8pfWNhdGNoKG0pe2N0KGUsZS5yZXR1cm4sbSl9YnJlYWs7Y2FzZSA0OlByKHQsZSkscXIoZSk7YnJlYWs7Y2FzZSAxMzpQcih0LGUpLHFyKGUpLHM9ZS5jaGlsZCxzLmZsYWdzJjgxOTImJihhPXMubWVtb2l6ZWRTdGF0ZSE9PW51bGwscy5zdGF0ZU5vZGUuaXNIaWRkZW49YSwhYXx8cy5hbHRlcm5hdGUhPT1udWxsJiZzLmFsdGVybmF0ZS5tZW1vaXplZFN0YXRlIT09bnVsbHx8KFptPWZ0KCkpKSxuJjQmJldwKGUpO2JyZWFrO2Nhc2UgMjI6aWYoZD1yIT09bnVsbCYmci5tZW1vaXplZFN0YXRlIT09bnVsbCxlLm1vZGUmMT8oT3Q9KHU9T3QpfHxkLFByKHQsZSksT3Q9dSk6UHIodCxlKSxxcihlKSxuJjgxOTIpe2lmKHU9ZS5tZW1vaXplZFN0YXRlIT09bnVsbCwoZS5zdGF0ZU5vZGUuaXNIaWRkZW49dSkmJiFkJiZlLm1vZGUmMSlmb3IodGU9ZSxkPWUuY2hpbGQ7ZCE9PW51bGw7KXtmb3IoZj10ZT1kO3RlIT09bnVsbDspe3N3aXRjaChwPXRlLHg9cC5jaGlsZCxwLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNDpjYXNlIDE1OnNvKDQscCxwLnJldHVybik7YnJlYWs7Y2FzZSAxOk1pKHAscC5yZXR1cm4pO3ZhciB2PXAuc3RhdGVOb2RlO2lmKHR5cGVvZiB2LmNvbXBvbmVudFdpbGxVbm1vdW50PT0iZnVuY3Rpb24iKXtuPXAscj1wLnJldHVybjt0cnl7dD1uLHYucHJvcHM9dC5tZW1vaXplZFByb3BzLHYuc3RhdGU9dC5tZW1vaXplZFN0YXRlLHYuY29tcG9uZW50V2lsbFVubW91bnQoKX1jYXRjaChtKXtjdChuLHIsbSl9fWJyZWFrO2Nhc2UgNTpNaShwLHAucmV0dXJuKTticmVhaztjYXNlIDIyOmlmKHAubWVtb2l6ZWRTdGF0ZSE9PW51bGwpe0dwKGYpO2NvbnRpbnVlfX14IT09bnVsbD8oeC5yZXR1cm49cCx0ZT14KTpHcChmKX1kPWQuc2libGluZ31lOmZvcihkPW51bGwsZj1lOzspe2lmKGYudGFnPT09NSl7aWYoZD09PW51bGwpe2Q9Zjt0cnl7cz1mLnN0YXRlTm9kZSx1PyhhPXMuc3R5bGUsdHlwZW9mIGEuc2V0UHJvcGVydHk9PSJmdW5jdGlvbiI/YS5zZXRQcm9wZXJ0eSgiZGlzcGxheSIsIm5vbmUiLCJpbXBvcnRhbnQiKTphLmRpc3BsYXk9Im5vbmUiKToobD1mLnN0YXRlTm9kZSxjPWYubWVtb2l6ZWRQcm9wcy5zdHlsZSxvPWMhPW51bGwmJmMuaGFzT3duUHJvcGVydHkoImRpc3BsYXkiKT9jLmRpc3BsYXk6bnVsbCxsLnN0eWxlLmRpc3BsYXk9UXgoImRpc3BsYXkiLG8pKX1jYXRjaChtKXtjdChlLGUucmV0dXJuLG0pfX19ZWxzZSBpZihmLnRhZz09PTYpe2lmKGQ9PT1udWxsKXRyeXtmLnN0YXRlTm9kZS5ub2RlVmFsdWU9dT8iIjpmLm1lbW9pemVkUHJvcHN9Y2F0Y2gobSl7Y3QoZSxlLnJldHVybixtKX19ZWxzZSBpZigoZi50YWchPT0yMiYmZi50YWchPT0yM3x8Zi5tZW1vaXplZFN0YXRlPT09bnVsbHx8Zj09PWUpJiZmLmNoaWxkIT09bnVsbCl7Zi5jaGlsZC5yZXR1cm49ZixmPWYuY2hpbGQ7Y29udGludWV9aWYoZj09PWUpYnJlYWsgZTtmb3IoO2Yuc2libGluZz09PW51bGw7KXtpZihmLnJldHVybj09PW51bGx8fGYucmV0dXJuPT09ZSlicmVhayBlO2Q9PT1mJiYoZD1udWxsKSxmPWYucmV0dXJufWQ9PT1mJiYoZD1udWxsKSxmLnNpYmxpbmcucmV0dXJuPWYucmV0dXJuLGY9Zi5zaWJsaW5nfX1icmVhaztjYXNlIDE5OlByKHQsZSkscXIoZSksbiY0JiZXcChlKTticmVhaztjYXNlIDIxOmJyZWFrO2RlZmF1bHQ6UHIodCxlKSxxcihlKX19ZnVuY3Rpb24gcXIoZSl7dmFyIHQ9ZS5mbGFncztpZih0JjIpe3RyeXtlOntmb3IodmFyIHI9ZS5yZXR1cm47ciE9PW51bGw7KXtpZih3eShyKSl7dmFyIG49cjticmVhayBlfXI9ci5yZXR1cm59dGhyb3cgRXJyb3IoQigxNjApKX1zd2l0Y2gobi50YWcpe2Nhc2UgNTp2YXIgcz1uLnN0YXRlTm9kZTtuLmZsYWdzJjMyJiYoY28ocywiIiksbi5mbGFncyY9LTMzKTt2YXIgYT1IcChlKTtiZihlLGEscyk7YnJlYWs7Y2FzZSAzOmNhc2UgNDp2YXIgbz1uLnN0YXRlTm9kZS5jb250YWluZXJJbmZvLGw9SHAoZSk7d2YoZSxsLG8pO2JyZWFrO2RlZmF1bHQ6dGhyb3cgRXJyb3IoQigxNjEpKX19Y2F0Y2goYyl7Y3QoZSxlLnJldHVybixjKX1lLmZsYWdzJj0tM310JjQwOTYmJihlLmZsYWdzJj0tNDA5Nyl9ZnVuY3Rpb24gJE4oZSx0LHIpe3RlPWUsTnkoZSl9ZnVuY3Rpb24gTnkoZSx0LHIpe2Zvcih2YXIgbj0oZS5tb2RlJjEpIT09MDt0ZSE9PW51bGw7KXt2YXIgcz10ZSxhPXMuY2hpbGQ7aWYocy50YWc9PT0yMiYmbil7dmFyIG89cy5tZW1vaXplZFN0YXRlIT09bnVsbHx8a2w7aWYoIW8pe3ZhciBsPXMuYWx0ZXJuYXRlLGM9bCE9PW51bGwmJmwubWVtb2l6ZWRTdGF0ZSE9PW51bGx8fE90O2w9a2w7dmFyIHU9T3Q7aWYoa2w9bywoT3Q9YykmJiF1KWZvcih0ZT1zO3RlIT09bnVsbDspbz10ZSxjPW8uY2hpbGQsby50YWc9PT0yMiYmby5tZW1vaXplZFN0YXRlIT09bnVsbD9RcChzKTpjIT09bnVsbD8oYy5yZXR1cm49byx0ZT1jKTpRcChzKTtmb3IoO2EhPT1udWxsOyl0ZT1hLE55KGEpLGE9YS5zaWJsaW5nO3RlPXMsa2w9bCxPdD11fXFwKGUpfWVsc2Ugcy5zdWJ0cmVlRmxhZ3MmODc3MiYmYSE9PW51bGw/KGEucmV0dXJuPXMsdGU9YSk6cXAoZSl9fWZ1bmN0aW9uIHFwKGUpe2Zvcig7dGUhPT1udWxsOyl7dmFyIHQ9dGU7aWYodC5mbGFncyY4NzcyKXt2YXIgcj10LmFsdGVybmF0ZTt0cnl7aWYodC5mbGFncyY4NzcyKXN3aXRjaCh0LnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNTpPdHx8c3UoNSx0KTticmVhaztjYXNlIDE6dmFyIG49dC5zdGF0ZU5vZGU7aWYodC5mbGFncyY0JiYhT3QpaWYocj09PW51bGwpbi5jb21wb25lbnREaWRNb3VudCgpO2Vsc2V7dmFyIHM9dC5lbGVtZW50VHlwZT09PXQudHlwZT9yLm1lbW9pemVkUHJvcHM6UnIodC50eXBlLHIubWVtb2l6ZWRQcm9wcyk7bi5jb21wb25lbnREaWRVcGRhdGUocyxyLm1lbW9pemVkU3RhdGUsbi5fX3JlYWN0SW50ZXJuYWxTbmFwc2hvdEJlZm9yZVVwZGF0ZSl9dmFyIGE9dC51cGRhdGVRdWV1ZTthIT09bnVsbCYmVHAodCxhLG4pO2JyZWFrO2Nhc2UgMzp2YXIgbz10LnVwZGF0ZVF1ZXVlO2lmKG8hPT1udWxsKXtpZihyPW51bGwsdC5jaGlsZCE9PW51bGwpc3dpdGNoKHQuY2hpbGQudGFnKXtjYXNlIDU6cj10LmNoaWxkLnN0YXRlTm9kZTticmVhaztjYXNlIDE6cj10LmNoaWxkLnN0YXRlTm9kZX1UcCh0LG8scil9YnJlYWs7Y2FzZSA1OnZhciBsPXQuc3RhdGVOb2RlO2lmKHI9PT1udWxsJiZ0LmZsYWdzJjQpe3I9bDt2YXIgYz10Lm1lbW9pemVkUHJvcHM7c3dpdGNoKHQudHlwZSl7Y2FzZSJidXR0b24iOmNhc2UiaW5wdXQiOmNhc2Uic2VsZWN0IjpjYXNlInRleHRhcmVhIjpjLmF1dG9Gb2N1cyYmci5mb2N1cygpO2JyZWFrO2Nhc2UiaW1nIjpjLnNyYyYmKHIuc3JjPWMuc3JjKX19YnJlYWs7Y2FzZSA2OmJyZWFrO2Nhc2UgNDpicmVhaztjYXNlIDEyOmJyZWFrO2Nhc2UgMTM6aWYodC5tZW1vaXplZFN0YXRlPT09bnVsbCl7dmFyIHU9dC5hbHRlcm5hdGU7aWYodSE9PW51bGwpe3ZhciBkPXUubWVtb2l6ZWRTdGF0ZTtpZihkIT09bnVsbCl7dmFyIGY9ZC5kZWh5ZHJhdGVkO2YhPT1udWxsJiZobyhmKX19fWJyZWFrO2Nhc2UgMTk6Y2FzZSAxNzpjYXNlIDIxOmNhc2UgMjI6Y2FzZSAyMzpjYXNlIDI1OmJyZWFrO2RlZmF1bHQ6dGhyb3cgRXJyb3IoQigxNjMpKX1PdHx8dC5mbGFncyY1MTImJnlmKHQpfWNhdGNoKHApe2N0KHQsdC5yZXR1cm4scCl9fWlmKHQ9PT1lKXt0ZT1udWxsO2JyZWFrfWlmKHI9dC5zaWJsaW5nLHIhPT1udWxsKXtyLnJldHVybj10LnJldHVybix0ZT1yO2JyZWFrfXRlPXQucmV0dXJufX1mdW5jdGlvbiBHcChlKXtmb3IoO3RlIT09bnVsbDspe3ZhciB0PXRlO2lmKHQ9PT1lKXt0ZT1udWxsO2JyZWFrfXZhciByPXQuc2libGluZztpZihyIT09bnVsbCl7ci5yZXR1cm49dC5yZXR1cm4sdGU9cjticmVha310ZT10LnJldHVybn19ZnVuY3Rpb24gUXAoZSl7Zm9yKDt0ZSE9PW51bGw7KXt2YXIgdD10ZTt0cnl7c3dpdGNoKHQudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE1OnZhciByPXQucmV0dXJuO3RyeXtzdSg0LHQpfWNhdGNoKGMpe2N0KHQscixjKX1icmVhaztjYXNlIDE6dmFyIG49dC5zdGF0ZU5vZGU7aWYodHlwZW9mIG4uY29tcG9uZW50RGlkTW91bnQ9PSJmdW5jdGlvbiIpe3ZhciBzPXQucmV0dXJuO3RyeXtuLmNvbXBvbmVudERpZE1vdW50KCl9Y2F0Y2goYyl7Y3QodCxzLGMpfX12YXIgYT10LnJldHVybjt0cnl7eWYodCl9Y2F0Y2goYyl7Y3QodCxhLGMpfWJyZWFrO2Nhc2UgNTp2YXIgbz10LnJldHVybjt0cnl7eWYodCl9Y2F0Y2goYyl7Y3QodCxvLGMpfX19Y2F0Y2goYyl7Y3QodCx0LnJldHVybixjKX1pZih0PT09ZSl7dGU9bnVsbDticmVha312YXIgbD10LnNpYmxpbmc7aWYobCE9PW51bGwpe2wucmV0dXJuPXQucmV0dXJuLHRlPWw7YnJlYWt9dGU9dC5yZXR1cm59fXZhciB6Tj1NYXRoLmNlaWwsamM9JG4uUmVhY3RDdXJyZW50RGlzcGF0Y2hlcixHbT0kbi5SZWFjdEN1cnJlbnRPd25lcixrcj0kbi5SZWFjdEN1cnJlbnRCYXRjaENvbmZpZyxUZT0wLE50PW51bGwsZ3Q9bnVsbCxFdD0wLG9yPTAsT2k9VHMoMCksd3Q9MCxrbz1udWxsLG5pPTAsaXU9MCxRbT0wLGlvPW51bGwsWXQ9bnVsbCxabT0wLGhhPTEvMCx3bj1udWxsLE5jPSExLGpmPW51bGwscHM9bnVsbCxFbD0hMSxjcz1udWxsLFNjPTAsYW89MCxOZj1udWxsLHFsPS0xLEdsPTA7ZnVuY3Rpb24gV3QoKXtyZXR1cm4gVGUmNj9mdCgpOnFsIT09LTE/cWw6cWw9ZnQoKX1mdW5jdGlvbiBncyhlKXtyZXR1cm4gZS5tb2RlJjE/VGUmMiYmRXQhPT0wP0V0Ji1FdDpOTi50cmFuc2l0aW9uIT09bnVsbD8oR2w9PT0wJiYoR2w9b3YoKSksR2wpOihlPSRlLGUhPT0wfHwoZT13aW5kb3cuZXZlbnQsZT1lPT09dm9pZCAwPzE2Omh2KGUudHlwZSkpLGUpOjF9ZnVuY3Rpb24gJHIoZSx0LHIsbil7aWYoNTA8YW8pdGhyb3cgYW89MCxOZj1udWxsLEVycm9yKEIoMTg1KSk7WW8oZSxyLG4pLCghKFRlJjIpfHxlIT09TnQpJiYoZT09PU50JiYoIShUZSYyKSYmKGl1fD1yKSx3dD09PTQmJlluKGUsRXQpKSxucihlLG4pLHI9PT0xJiZUZT09PTAmJiEodC5tb2RlJjEpJiYoaGE9ZnQoKSs1MDAsdHUmJlJzKCkpKX1mdW5jdGlvbiBucihlLHQpe3ZhciByPWUuY2FsbGJhY2tOb2RlO05qKGUsdCk7dmFyIG49b2MoZSxlPT09TnQ/RXQ6MCk7aWYobj09PTApciE9PW51bGwmJm5wKHIpLGUuY2FsbGJhY2tOb2RlPW51bGwsZS5jYWxsYmFja1ByaW9yaXR5PTA7ZWxzZSBpZih0PW4mLW4sZS5jYWxsYmFja1ByaW9yaXR5IT09dCl7aWYociE9bnVsbCYmbnAociksdD09PTEpZS50YWc9PT0wP2pOKFpwLmJpbmQobnVsbCxlKSk6TXYoWnAuYmluZChudWxsLGUpKSx2TihmdW5jdGlvbigpeyEoVGUmNikmJlJzKCl9KSxyPW51bGw7ZWxzZXtzd2l0Y2gobHYobikpe2Nhc2UgMTpyPWJtO2JyZWFrO2Nhc2UgNDpyPWl2O2JyZWFrO2Nhc2UgMTY6cj1hYzticmVhaztjYXNlIDUzNjg3MDkxMjpyPWF2O2JyZWFrO2RlZmF1bHQ6cj1hY31yPVJ5KHIsU3kuYmluZChudWxsLGUpKX1lLmNhbGxiYWNrUHJpb3JpdHk9dCxlLmNhbGxiYWNrTm9kZT1yfX1mdW5jdGlvbiBTeShlLHQpe2lmKHFsPS0xLEdsPTAsVGUmNil0aHJvdyBFcnJvcihCKDMyNykpO3ZhciByPWUuY2FsbGJhY2tOb2RlO2lmKFVpKCkmJmUuY2FsbGJhY2tOb2RlIT09cilyZXR1cm4gbnVsbDt2YXIgbj1vYyhlLGU9PT1OdD9FdDowKTtpZihuPT09MClyZXR1cm4gbnVsbDtpZihuJjMwfHxuJmUuZXhwaXJlZExhbmVzfHx0KXQ9a2MoZSxuKTtlbHNle3Q9bjt2YXIgcz1UZTtUZXw9Mjt2YXIgYT1FeSgpOyhOdCE9PWV8fEV0IT09dCkmJih3bj1udWxsLGhhPWZ0KCkrNTAwLFpzKGUsdCkpO2RvIHRyeXtCTigpO2JyZWFrfWNhdGNoKGwpe2t5KGUsbCl9d2hpbGUoITApO09tKCksamMuY3VycmVudD1hLFRlPXMsZ3QhPT1udWxsP3Q9MDooTnQ9bnVsbCxFdD0wLHQ9d3QpfWlmKHQhPT0wKXtpZih0PT09MiYmKHM9WmQoZSkscyE9PTAmJihuPXMsdD1TZihlLHMpKSksdD09PTEpdGhyb3cgcj1rbyxacyhlLDApLFluKGUsbiksbnIoZSxmdCgpKSxyO2lmKHQ9PT02KVluKGUsbik7ZWxzZXtpZihzPWUuY3VycmVudC5hbHRlcm5hdGUsIShuJjMwKSYmIVZOKHMpJiYodD1rYyhlLG4pLHQ9PT0yJiYoYT1aZChlKSxhIT09MCYmKG49YSx0PVNmKGUsYSkpKSx0PT09MSkpdGhyb3cgcj1rbyxacyhlLDApLFluKGUsbiksbnIoZSxmdCgpKSxyO3N3aXRjaChlLmZpbmlzaGVkV29yaz1zLGUuZmluaXNoZWRMYW5lcz1uLHQpe2Nhc2UgMDpjYXNlIDE6dGhyb3cgRXJyb3IoQigzNDUpKTtjYXNlIDI6THMoZSxZdCx3bik7YnJlYWs7Y2FzZSAzOmlmKFluKGUsbiksKG4mMTMwMDIzNDI0KT09PW4mJih0PVptKzUwMC1mdCgpLDEwPHQpKXtpZihvYyhlLDApIT09MClicmVhaztpZihzPWUuc3VzcGVuZGVkTGFuZXMsKHMmbikhPT1uKXtXdCgpLGUucGluZ2VkTGFuZXN8PWUuc3VzcGVuZGVkTGFuZXMmczticmVha31lLnRpbWVvdXRIYW5kbGU9bmYoTHMuYmluZChudWxsLGUsWXQsd24pLHQpO2JyZWFrfUxzKGUsWXQsd24pO2JyZWFrO2Nhc2UgNDppZihZbihlLG4pLChuJjQxOTQyNDApPT09bilicmVhaztmb3IodD1lLmV2ZW50VGltZXMscz0tMTswPG47KXt2YXIgbz0zMS1EcihuKTthPTE8PG8sbz10W29dLG8+cyYmKHM9byksbiY9fmF9aWYobj1zLG49ZnQoKS1uLG49KDEyMD5uPzEyMDo0ODA+bj80ODA6MTA4MD5uPzEwODA6MTkyMD5uPzE5MjA6M2UzPm4/M2UzOjQzMjA+bj80MzIwOjE5NjAqek4obi8xOTYwKSktbiwxMDxuKXtlLnRpbWVvdXRIYW5kbGU9bmYoTHMuYmluZChudWxsLGUsWXQsd24pLG4pO2JyZWFrfUxzKGUsWXQsd24pO2JyZWFrO2Nhc2UgNTpMcyhlLFl0LHduKTticmVhaztkZWZhdWx0OnRocm93IEVycm9yKEIoMzI5KSl9fX1yZXR1cm4gbnIoZSxmdCgpKSxlLmNhbGxiYWNrTm9kZT09PXI/U3kuYmluZChudWxsLGUpOm51bGx9ZnVuY3Rpb24gU2YoZSx0KXt2YXIgcj1pbztyZXR1cm4gZS5jdXJyZW50Lm1lbW9pemVkU3RhdGUuaXNEZWh5ZHJhdGVkJiYoWnMoZSx0KS5mbGFnc3w9MjU2KSxlPWtjKGUsdCksZSE9PTImJih0PVl0LFl0PXIsdCE9PW51bGwmJmtmKHQpKSxlfWZ1bmN0aW9uIGtmKGUpe1l0PT09bnVsbD9ZdD1lOll0LnB1c2guYXBwbHkoWXQsZSl9ZnVuY3Rpb24gVk4oZSl7Zm9yKHZhciB0PWU7Oyl7aWYodC5mbGFncyYxNjM4NCl7dmFyIHI9dC51cGRhdGVRdWV1ZTtpZihyIT09bnVsbCYmKHI9ci5zdG9yZXMsciE9PW51bGwpKWZvcih2YXIgbj0wO248ci5sZW5ndGg7bisrKXt2YXIgcz1yW25dLGE9cy5nZXRTbmFwc2hvdDtzPXMudmFsdWU7dHJ5e2lmKCFWcihhKCkscykpcmV0dXJuITF9Y2F0Y2h7cmV0dXJuITF9fX1pZihyPXQuY2hpbGQsdC5zdWJ0cmVlRmxhZ3MmMTYzODQmJnIhPT1udWxsKXIucmV0dXJuPXQsdD1yO2Vsc2V7aWYodD09PWUpYnJlYWs7Zm9yKDt0LnNpYmxpbmc9PT1udWxsOyl7aWYodC5yZXR1cm49PT1udWxsfHx0LnJldHVybj09PWUpcmV0dXJuITA7dD10LnJldHVybn10LnNpYmxpbmcucmV0dXJuPXQucmV0dXJuLHQ9dC5zaWJsaW5nfX1yZXR1cm4hMH1mdW5jdGlvbiBZbihlLHQpe2Zvcih0Jj1+UW0sdCY9fml1LGUuc3VzcGVuZGVkTGFuZXN8PXQsZS5waW5nZWRMYW5lcyY9fnQsZT1lLmV4cGlyYXRpb25UaW1lczswPHQ7KXt2YXIgcj0zMS1Ecih0KSxuPTE8PHI7ZVtyXT0tMSx0Jj1+bn19ZnVuY3Rpb24gWnAoZSl7aWYoVGUmNil0aHJvdyBFcnJvcihCKDMyNykpO1VpKCk7dmFyIHQ9b2MoZSwwKTtpZighKHQmMSkpcmV0dXJuIG5yKGUsZnQoKSksbnVsbDt2YXIgcj1rYyhlLHQpO2lmKGUudGFnIT09MCYmcj09PTIpe3ZhciBuPVpkKGUpO24hPT0wJiYodD1uLHI9U2YoZSxuKSl9aWYocj09PTEpdGhyb3cgcj1rbyxacyhlLDApLFluKGUsdCksbnIoZSxmdCgpKSxyO2lmKHI9PT02KXRocm93IEVycm9yKEIoMzQ1KSk7cmV0dXJuIGUuZmluaXNoZWRXb3JrPWUuY3VycmVudC5hbHRlcm5hdGUsZS5maW5pc2hlZExhbmVzPXQsTHMoZSxZdCx3biksbnIoZSxmdCgpKSxudWxsfWZ1bmN0aW9uIEttKGUsdCl7dmFyIHI9VGU7VGV8PTE7dHJ5e3JldHVybiBlKHQpfWZpbmFsbHl7VGU9cixUZT09PTAmJihoYT1mdCgpKzUwMCx0dSYmUnMoKSl9fWZ1bmN0aW9uIHNpKGUpe2NzIT09bnVsbCYmY3MudGFnPT09MCYmIShUZSY2KSYmVWkoKTt2YXIgdD1UZTtUZXw9MTt2YXIgcj1rci50cmFuc2l0aW9uLG49JGU7dHJ5e2lmKGtyLnRyYW5zaXRpb249bnVsbCwkZT0xLGUpcmV0dXJuIGUoKX1maW5hbGx5eyRlPW4sa3IudHJhbnNpdGlvbj1yLFRlPXQsIShUZSY2KSYmUnMoKX19ZnVuY3Rpb24gWW0oKXtvcj1PaS5jdXJyZW50LFFlKE9pKX1mdW5jdGlvbiBacyhlLHQpe2UuZmluaXNoZWRXb3JrPW51bGwsZS5maW5pc2hlZExhbmVzPTA7dmFyIHI9ZS50aW1lb3V0SGFuZGxlO2lmKHIhPT0tMSYmKGUudGltZW91dEhhbmRsZT0tMSx4TihyKSksZ3QhPT1udWxsKWZvcihyPWd0LnJldHVybjtyIT09bnVsbDspe3ZhciBuPXI7c3dpdGNoKFJtKG4pLG4udGFnKXtjYXNlIDE6bj1uLnR5cGUuY2hpbGRDb250ZXh0VHlwZXMsbiE9bnVsbCYmZmMoKTticmVhaztjYXNlIDM6ZmEoKSxRZSh0ciksUWUoTHQpLHptKCk7YnJlYWs7Y2FzZSA1OiRtKG4pO2JyZWFrO2Nhc2UgNDpmYSgpO2JyZWFrO2Nhc2UgMTM6UWUoc3QpO2JyZWFrO2Nhc2UgMTk6UWUoc3QpO2JyZWFrO2Nhc2UgMTA6Rm0obi50eXBlLl9jb250ZXh0KTticmVhaztjYXNlIDIyOmNhc2UgMjM6WW0oKX1yPXIucmV0dXJufWlmKE50PWUsZ3Q9ZT14cyhlLmN1cnJlbnQsbnVsbCksRXQ9b3I9dCx3dD0wLGtvPW51bGwsUW09aXU9bmk9MCxZdD1pbz1udWxsLCRzIT09bnVsbCl7Zm9yKHQ9MDt0PCRzLmxlbmd0aDt0KyspaWYocj0kc1t0XSxuPXIuaW50ZXJsZWF2ZWQsbiE9PW51bGwpe3IuaW50ZXJsZWF2ZWQ9bnVsbDt2YXIgcz1uLm5leHQsYT1yLnBlbmRpbmc7aWYoYSE9PW51bGwpe3ZhciBvPWEubmV4dDthLm5leHQ9cyxuLm5leHQ9b31yLnBlbmRpbmc9bn0kcz1udWxsfXJldHVybiBlfWZ1bmN0aW9uIGt5KGUsdCl7ZG97dmFyIHI9Z3Q7dHJ5e2lmKE9tKCksQmwuY3VycmVudD1iYyx3Yyl7Zm9yKHZhciBuPWl0Lm1lbW9pemVkU3RhdGU7biE9PW51bGw7KXt2YXIgcz1uLnF1ZXVlO3MhPT1udWxsJiYocy5wZW5kaW5nPW51bGwpLG49bi5uZXh0fXdjPSExfWlmKHJpPTAsanQ9dnQ9aXQ9bnVsbCxubz0hMSxqbz0wLEdtLmN1cnJlbnQ9bnVsbCxyPT09bnVsbHx8ci5yZXR1cm49PT1udWxsKXt3dD0xLGtvPXQsZ3Q9bnVsbDticmVha31lOnt2YXIgYT1lLG89ci5yZXR1cm4sbD1yLGM9dDtpZih0PUV0LGwuZmxhZ3N8PTMyNzY4LGMhPT1udWxsJiZ0eXBlb2YgYz09Im9iamVjdCImJnR5cGVvZiBjLnRoZW49PSJmdW5jdGlvbiIpe3ZhciB1PWMsZD1sLGY9ZC50YWc7aWYoIShkLm1vZGUmMSkmJihmPT09MHx8Zj09PTExfHxmPT09MTUpKXt2YXIgcD1kLmFsdGVybmF0ZTtwPyhkLnVwZGF0ZVF1ZXVlPXAudXBkYXRlUXVldWUsZC5tZW1vaXplZFN0YXRlPXAubWVtb2l6ZWRTdGF0ZSxkLmxhbmVzPXAubGFuZXMpOihkLnVwZGF0ZVF1ZXVlPW51bGwsZC5tZW1vaXplZFN0YXRlPW51bGwpfXZhciB4PUlwKG8pO2lmKHghPT1udWxsKXt4LmZsYWdzJj0tMjU3LExwKHgsbyxsLGEsdCkseC5tb2RlJjEmJkZwKGEsdSx0KSx0PXgsYz11O3ZhciB2PXQudXBkYXRlUXVldWU7aWYodj09PW51bGwpe3ZhciBtPW5ldyBTZXQ7bS5hZGQoYyksdC51cGRhdGVRdWV1ZT1tfWVsc2Ugdi5hZGQoYyk7YnJlYWsgZX1lbHNle2lmKCEodCYxKSl7RnAoYSx1LHQpLFhtKCk7YnJlYWsgZX1jPUVycm9yKEIoNDI2KSl9fWVsc2UgaWYoWGUmJmwubW9kZSYxKXt2YXIgdz1JcChvKTtpZih3IT09bnVsbCl7ISh3LmZsYWdzJjY1NTM2KSYmKHcuZmxhZ3N8PTI1NiksTHAodyxvLGwsYSx0KSxBbShtYShjLGwpKTticmVhayBlfX1hPWM9bWEoYyxsKSx3dCE9PTQmJih3dD0yKSxpbz09PW51bGw/aW89W2FdOmlvLnB1c2goYSksYT1vO2Rve3N3aXRjaChhLnRhZyl7Y2FzZSAzOmEuZmxhZ3N8PTY1NTM2LHQmPS10LGEubGFuZXN8PXQ7dmFyIGg9bHkoYSxjLHQpO1BwKGEsaCk7YnJlYWsgZTtjYXNlIDE6bD1jO3ZhciBnPWEudHlwZSxiPWEuc3RhdGVOb2RlO2lmKCEoYS5mbGFncyYxMjgpJiYodHlwZW9mIGcuZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yPT0iZnVuY3Rpb24ifHxiIT09bnVsbCYmdHlwZW9mIGIuY29tcG9uZW50RGlkQ2F0Y2g9PSJmdW5jdGlvbiImJihwcz09PW51bGx8fCFwcy5oYXMoYikpKSl7YS5mbGFnc3w9NjU1MzYsdCY9LXQsYS5sYW5lc3w9dDt2YXIgTj1jeShhLGwsdCk7UHAoYSxOKTticmVhayBlfX1hPWEucmV0dXJufXdoaWxlKGEhPT1udWxsKX1feShyKX1jYXRjaChTKXt0PVMsZ3Q9PT1yJiZyIT09bnVsbCYmKGd0PXI9ci5yZXR1cm4pO2NvbnRpbnVlfWJyZWFrfXdoaWxlKCEwKX1mdW5jdGlvbiBFeSgpe3ZhciBlPWpjLmN1cnJlbnQ7cmV0dXJuIGpjLmN1cnJlbnQ9YmMsZT09PW51bGw/YmM6ZX1mdW5jdGlvbiBYbSgpeyh3dD09PTB8fHd0PT09M3x8d3Q9PT0yKSYmKHd0PTQpLE50PT09bnVsbHx8IShuaSYyNjg0MzU0NTUpJiYhKGl1JjI2ODQzNTQ1NSl8fFluKE50LEV0KX1mdW5jdGlvbiBrYyhlLHQpe3ZhciByPVRlO1RlfD0yO3ZhciBuPUV5KCk7KE50IT09ZXx8RXQhPT10KSYmKHduPW51bGwsWnMoZSx0KSk7ZG8gdHJ5e1VOKCk7YnJlYWt9Y2F0Y2gocyl7a3koZSxzKX13aGlsZSghMCk7aWYoT20oKSxUZT1yLGpjLmN1cnJlbnQ9bixndCE9PW51bGwpdGhyb3cgRXJyb3IoQigyNjEpKTtyZXR1cm4gTnQ9bnVsbCxFdD0wLHd0fWZ1bmN0aW9uIFVOKCl7Zm9yKDtndCE9PW51bGw7KUN5KGd0KX1mdW5jdGlvbiBCTigpe2Zvcig7Z3QhPT1udWxsJiYhaGooKTspQ3koZ3QpfWZ1bmN0aW9uIEN5KGUpe3ZhciB0PVR5KGUuYWx0ZXJuYXRlLGUsb3IpO2UubWVtb2l6ZWRQcm9wcz1lLnBlbmRpbmdQcm9wcyx0PT09bnVsbD9feShlKTpndD10LEdtLmN1cnJlbnQ9bnVsbH1mdW5jdGlvbiBfeShlKXt2YXIgdD1lO2Rve3ZhciByPXQuYWx0ZXJuYXRlO2lmKGU9dC5yZXR1cm4sdC5mbGFncyYzMjc2OCl7aWYocj1JTihyLHQpLHIhPT1udWxsKXtyLmZsYWdzJj0zMjc2NyxndD1yO3JldHVybn1pZihlIT09bnVsbCllLmZsYWdzfD0zMjc2OCxlLnN1YnRyZWVGbGFncz0wLGUuZGVsZXRpb25zPW51bGw7ZWxzZXt3dD02LGd0PW51bGw7cmV0dXJufX1lbHNlIGlmKHI9Rk4ocix0LG9yKSxyIT09bnVsbCl7Z3Q9cjtyZXR1cm59aWYodD10LnNpYmxpbmcsdCE9PW51bGwpe2d0PXQ7cmV0dXJufWd0PXQ9ZX13aGlsZSh0IT09bnVsbCk7d3Q9PT0wJiYod3Q9NSl9ZnVuY3Rpb24gTHMoZSx0LHIpe3ZhciBuPSRlLHM9a3IudHJhbnNpdGlvbjt0cnl7a3IudHJhbnNpdGlvbj1udWxsLCRlPTEsSE4oZSx0LHIsbil9ZmluYWxseXtrci50cmFuc2l0aW9uPXMsJGU9bn1yZXR1cm4gbnVsbH1mdW5jdGlvbiBITihlLHQscixuKXtkbyBVaSgpO3doaWxlKGNzIT09bnVsbCk7aWYoVGUmNil0aHJvdyBFcnJvcihCKDMyNykpO3I9ZS5maW5pc2hlZFdvcms7dmFyIHM9ZS5maW5pc2hlZExhbmVzO2lmKHI9PT1udWxsKXJldHVybiBudWxsO2lmKGUuZmluaXNoZWRXb3JrPW51bGwsZS5maW5pc2hlZExhbmVzPTAscj09PWUuY3VycmVudCl0aHJvdyBFcnJvcihCKDE3NykpO2UuY2FsbGJhY2tOb2RlPW51bGwsZS5jYWxsYmFja1ByaW9yaXR5PTA7dmFyIGE9ci5sYW5lc3xyLmNoaWxkTGFuZXM7aWYoU2ooZSxhKSxlPT09TnQmJihndD1OdD1udWxsLEV0PTApLCEoci5zdWJ0cmVlRmxhZ3MmMjA2NCkmJiEoci5mbGFncyYyMDY0KXx8RWx8fChFbD0hMCxSeShhYyxmdW5jdGlvbigpe3JldHVybiBVaSgpLG51bGx9KSksYT0oci5mbGFncyYxNTk5MCkhPT0wLHIuc3VidHJlZUZsYWdzJjE1OTkwfHxhKXthPWtyLnRyYW5zaXRpb24sa3IudHJhbnNpdGlvbj1udWxsO3ZhciBvPSRlOyRlPTE7dmFyIGw9VGU7VGV8PTQsR20uY3VycmVudD1udWxsLEROKGUsciksankocixlKSx1Tih0ZiksbGM9ISFlZix0Zj1lZj1udWxsLGUuY3VycmVudD1yLCROKHIpLHBqKCksVGU9bCwkZT1vLGtyLnRyYW5zaXRpb249YX1lbHNlIGUuY3VycmVudD1yO2lmKEVsJiYoRWw9ITEsY3M9ZSxTYz1zKSxhPWUucGVuZGluZ0xhbmVzLGE9PT0wJiYocHM9bnVsbCksdmooci5zdGF0ZU5vZGUpLG5yKGUsZnQoKSksdCE9PW51bGwpZm9yKG49ZS5vblJlY292ZXJhYmxlRXJyb3Iscj0wO3I8dC5sZW5ndGg7cisrKXM9dFtyXSxuKHMudmFsdWUse2NvbXBvbmVudFN0YWNrOnMuc3RhY2ssZGlnZXN0OnMuZGlnZXN0fSk7aWYoTmMpdGhyb3cgTmM9ITEsZT1qZixqZj1udWxsLGU7cmV0dXJuIFNjJjEmJmUudGFnIT09MCYmVWkoKSxhPWUucGVuZGluZ0xhbmVzLGEmMT9lPT09TmY/YW8rKzooYW89MCxOZj1lKTphbz0wLFJzKCksbnVsbH1mdW5jdGlvbiBVaSgpe2lmKGNzIT09bnVsbCl7dmFyIGU9bHYoU2MpLHQ9a3IudHJhbnNpdGlvbixyPSRlO3RyeXtpZihrci50cmFuc2l0aW9uPW51bGwsJGU9MTY+ZT8xNjplLGNzPT09bnVsbCl2YXIgbj0hMTtlbHNle2lmKGU9Y3MsY3M9bnVsbCxTYz0wLFRlJjYpdGhyb3cgRXJyb3IoQigzMzEpKTt2YXIgcz1UZTtmb3IoVGV8PTQsdGU9ZS5jdXJyZW50O3RlIT09bnVsbDspe3ZhciBhPXRlLG89YS5jaGlsZDtpZih0ZS5mbGFncyYxNil7dmFyIGw9YS5kZWxldGlvbnM7aWYobCE9PW51bGwpe2Zvcih2YXIgYz0wO2M8bC5sZW5ndGg7YysrKXt2YXIgdT1sW2NdO2Zvcih0ZT11O3RlIT09bnVsbDspe3ZhciBkPXRlO3N3aXRjaChkLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNTpzbyg4LGQsYSl9dmFyIGY9ZC5jaGlsZDtpZihmIT09bnVsbClmLnJldHVybj1kLHRlPWY7ZWxzZSBmb3IoO3RlIT09bnVsbDspe2Q9dGU7dmFyIHA9ZC5zaWJsaW5nLHg9ZC5yZXR1cm47aWYoeXkoZCksZD09PXUpe3RlPW51bGw7YnJlYWt9aWYocCE9PW51bGwpe3AucmV0dXJuPXgsdGU9cDticmVha310ZT14fX19dmFyIHY9YS5hbHRlcm5hdGU7aWYodiE9PW51bGwpe3ZhciBtPXYuY2hpbGQ7aWYobSE9PW51bGwpe3YuY2hpbGQ9bnVsbDtkb3t2YXIgdz1tLnNpYmxpbmc7bS5zaWJsaW5nPW51bGwsbT13fXdoaWxlKG0hPT1udWxsKX19dGU9YX19aWYoYS5zdWJ0cmVlRmxhZ3MmMjA2NCYmbyE9PW51bGwpby5yZXR1cm49YSx0ZT1vO2Vsc2UgZTpmb3IoO3RlIT09bnVsbDspe2lmKGE9dGUsYS5mbGFncyYyMDQ4KXN3aXRjaChhLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNTpzbyg5LGEsYS5yZXR1cm4pfXZhciBoPWEuc2libGluZztpZihoIT09bnVsbCl7aC5yZXR1cm49YS5yZXR1cm4sdGU9aDticmVhayBlfXRlPWEucmV0dXJufX12YXIgZz1lLmN1cnJlbnQ7Zm9yKHRlPWc7dGUhPT1udWxsOyl7bz10ZTt2YXIgYj1vLmNoaWxkO2lmKG8uc3VidHJlZUZsYWdzJjIwNjQmJmIhPT1udWxsKWIucmV0dXJuPW8sdGU9YjtlbHNlIGU6Zm9yKG89Zzt0ZSE9PW51bGw7KXtpZihsPXRlLGwuZmxhZ3MmMjA0OCl0cnl7c3dpdGNoKGwudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE1OnN1KDksbCl9fWNhdGNoKFMpe2N0KGwsbC5yZXR1cm4sUyl9aWYobD09PW8pe3RlPW51bGw7YnJlYWsgZX12YXIgTj1sLnNpYmxpbmc7aWYoTiE9PW51bGwpe04ucmV0dXJuPWwucmV0dXJuLHRlPU47YnJlYWsgZX10ZT1sLnJldHVybn19aWYoVGU9cyxScygpLG9uJiZ0eXBlb2Ygb24ub25Qb3N0Q29tbWl0RmliZXJSb290PT0iZnVuY3Rpb24iKXRyeXtvbi5vblBvc3RDb21taXRGaWJlclJvb3QoS2MsZSl9Y2F0Y2h7fW49ITB9cmV0dXJuIG59ZmluYWxseXskZT1yLGtyLnRyYW5zaXRpb249dH19cmV0dXJuITF9ZnVuY3Rpb24gS3AoZSx0LHIpe3Q9bWEocix0KSx0PWx5KGUsdCwxKSxlPWhzKGUsdCwxKSx0PVd0KCksZSE9PW51bGwmJihZbyhlLDEsdCksbnIoZSx0KSl9ZnVuY3Rpb24gY3QoZSx0LHIpe2lmKGUudGFnPT09MylLcChlLGUscik7ZWxzZSBmb3IoO3QhPT1udWxsOyl7aWYodC50YWc9PT0zKXtLcCh0LGUscik7YnJlYWt9ZWxzZSBpZih0LnRhZz09PTEpe3ZhciBuPXQuc3RhdGVOb2RlO2lmKHR5cGVvZiB0LnR5cGUuZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yPT0iZnVuY3Rpb24ifHx0eXBlb2Ygbi5jb21wb25lbnREaWRDYXRjaD09ImZ1bmN0aW9uIiYmKHBzPT09bnVsbHx8IXBzLmhhcyhuKSkpe2U9bWEocixlKSxlPWN5KHQsZSwxKSx0PWhzKHQsZSwxKSxlPVd0KCksdCE9PW51bGwmJihZbyh0LDEsZSksbnIodCxlKSk7YnJlYWt9fXQ9dC5yZXR1cm59fWZ1bmN0aW9uIFdOKGUsdCxyKXt2YXIgbj1lLnBpbmdDYWNoZTtuIT09bnVsbCYmbi5kZWxldGUodCksdD1XdCgpLGUucGluZ2VkTGFuZXN8PWUuc3VzcGVuZGVkTGFuZXMmcixOdD09PWUmJihFdCZyKT09PXImJih3dD09PTR8fHd0PT09MyYmKEV0JjEzMDAyMzQyNCk9PT1FdCYmNTAwPmZ0KCktWm0/WnMoZSwwKTpRbXw9ciksbnIoZSx0KX1mdW5jdGlvbiBQeShlLHQpe3Q9PT0wJiYoZS5tb2RlJjE/KHQ9Z2wsZ2w8PD0xLCEoZ2wmMTMwMDIzNDI0KSYmKGdsPTQxOTQzMDQpKTp0PTEpO3ZhciByPVd0KCk7ZT1NbihlLHQpLGUhPT1udWxsJiYoWW8oZSx0LHIpLG5yKGUscikpfWZ1bmN0aW9uIHFOKGUpe3ZhciB0PWUubWVtb2l6ZWRTdGF0ZSxyPTA7dCE9PW51bGwmJihyPXQucmV0cnlMYW5lKSxQeShlLHIpfWZ1bmN0aW9uIEdOKGUsdCl7dmFyIHI9MDtzd2l0Y2goZS50YWcpe2Nhc2UgMTM6dmFyIG49ZS5zdGF0ZU5vZGUscz1lLm1lbW9pemVkU3RhdGU7cyE9PW51bGwmJihyPXMucmV0cnlMYW5lKTticmVhaztjYXNlIDE5Om49ZS5zdGF0ZU5vZGU7YnJlYWs7ZGVmYXVsdDp0aHJvdyBFcnJvcihCKDMxNCkpfW4hPT1udWxsJiZuLmRlbGV0ZSh0KSxQeShlLHIpfXZhciBUeTtUeT1mdW5jdGlvbihlLHQscil7aWYoZSE9PW51bGwpaWYoZS5tZW1vaXplZFByb3BzIT09dC5wZW5kaW5nUHJvcHN8fHRyLmN1cnJlbnQpWHQ9ITA7ZWxzZXtpZighKGUubGFuZXMmcikmJiEodC5mbGFncyYxMjgpKXJldHVybiBYdD0hMSxPTihlLHQscik7WHQ9ISEoZS5mbGFncyYxMzEwNzIpfWVsc2UgWHQ9ITEsWGUmJnQuZmxhZ3MmMTA0ODU3NiYmT3YodCxwYyx0LmluZGV4KTtzd2l0Y2godC5sYW5lcz0wLHQudGFnKXtjYXNlIDI6dmFyIG49dC50eXBlO1dsKGUsdCksZT10LnBlbmRpbmdQcm9wczt2YXIgcz1jYSh0LEx0LmN1cnJlbnQpO1ZpKHQscikscz1VbShudWxsLHQsbixlLHMscik7dmFyIGE9Qm0oKTtyZXR1cm4gdC5mbGFnc3w9MSx0eXBlb2Ygcz09Im9iamVjdCImJnMhPT1udWxsJiZ0eXBlb2Ygcy5yZW5kZXI9PSJmdW5jdGlvbiImJnMuJCR0eXBlb2Y9PT12b2lkIDA/KHQudGFnPTEsdC5tZW1vaXplZFN0YXRlPW51bGwsdC51cGRhdGVRdWV1ZT1udWxsLHJyKG4pPyhhPSEwLG1jKHQpKTphPSExLHQubWVtb2l6ZWRTdGF0ZT1zLnN0YXRlIT09bnVsbCYmcy5zdGF0ZSE9PXZvaWQgMD9zLnN0YXRlOm51bGwsTG0odCkscy51cGRhdGVyPW51LHQuc3RhdGVOb2RlPXMscy5fcmVhY3RJbnRlcm5hbHM9dCxkZih0LG4sZSxyKSx0PWhmKG51bGwsdCxuLCEwLGEscikpOih0LnRhZz0wLFhlJiZhJiZUbSh0KSxVdChudWxsLHQscyxyKSx0PXQuY2hpbGQpLHQ7Y2FzZSAxNjpuPXQuZWxlbWVudFR5cGU7ZTp7c3dpdGNoKFdsKGUsdCksZT10LnBlbmRpbmdQcm9wcyxzPW4uX2luaXQsbj1zKG4uX3BheWxvYWQpLHQudHlwZT1uLHM9dC50YWc9Wk4obiksZT1ScihuLGUpLHMpe2Nhc2UgMDp0PW1mKG51bGwsdCxuLGUscik7YnJlYWsgZTtjYXNlIDE6dD16cChudWxsLHQsbixlLHIpO2JyZWFrIGU7Y2FzZSAxMTp0PURwKG51bGwsdCxuLGUscik7YnJlYWsgZTtjYXNlIDE0OnQ9JHAobnVsbCx0LG4sUnIobi50eXBlLGUpLHIpO2JyZWFrIGV9dGhyb3cgRXJyb3IoQigzMDYsbiwiIikpfXJldHVybiB0O2Nhc2UgMDpyZXR1cm4gbj10LnR5cGUscz10LnBlbmRpbmdQcm9wcyxzPXQuZWxlbWVudFR5cGU9PT1uP3M6UnIobixzKSxtZihlLHQsbixzLHIpO2Nhc2UgMTpyZXR1cm4gbj10LnR5cGUscz10LnBlbmRpbmdQcm9wcyxzPXQuZWxlbWVudFR5cGU9PT1uP3M6UnIobixzKSx6cChlLHQsbixzLHIpO2Nhc2UgMzplOntpZihteSh0KSxlPT09bnVsbCl0aHJvdyBFcnJvcihCKDM4NykpO249dC5wZW5kaW5nUHJvcHMsYT10Lm1lbW9pemVkU3RhdGUscz1hLmVsZW1lbnQsenYoZSx0KSx2Yyh0LG4sbnVsbCxyKTt2YXIgbz10Lm1lbW9pemVkU3RhdGU7aWYobj1vLmVsZW1lbnQsYS5pc0RlaHlkcmF0ZWQpaWYoYT17ZWxlbWVudDpuLGlzRGVoeWRyYXRlZDohMSxjYWNoZTpvLmNhY2hlLHBlbmRpbmdTdXNwZW5zZUJvdW5kYXJpZXM6by5wZW5kaW5nU3VzcGVuc2VCb3VuZGFyaWVzLHRyYW5zaXRpb25zOm8udHJhbnNpdGlvbnN9LHQudXBkYXRlUXVldWUuYmFzZVN0YXRlPWEsdC5tZW1vaXplZFN0YXRlPWEsdC5mbGFncyYyNTYpe3M9bWEoRXJyb3IoQig0MjMpKSx0KSx0PVZwKGUsdCxuLHIscyk7YnJlYWsgZX1lbHNlIGlmKG4hPT1zKXtzPW1hKEVycm9yKEIoNDI0KSksdCksdD1WcChlLHQsbixyLHMpO2JyZWFrIGV9ZWxzZSBmb3IodXI9bXModC5zdGF0ZU5vZGUuY29udGFpbmVySW5mby5maXJzdENoaWxkKSxkcj10LFhlPSEwLE9yPW51bGwscj1Edih0LG51bGwsbixyKSx0LmNoaWxkPXI7cjspci5mbGFncz1yLmZsYWdzJi0zfDQwOTYscj1yLnNpYmxpbmc7ZWxzZXtpZih1YSgpLG49PT1zKXt0PU9uKGUsdCxyKTticmVhayBlfVV0KGUsdCxuLHIpfXQ9dC5jaGlsZH1yZXR1cm4gdDtjYXNlIDU6cmV0dXJuIFZ2KHQpLGU9PT1udWxsJiZsZih0KSxuPXQudHlwZSxzPXQucGVuZGluZ1Byb3BzLGE9ZSE9PW51bGw/ZS5tZW1vaXplZFByb3BzOm51bGwsbz1zLmNoaWxkcmVuLHJmKG4scyk/bz1udWxsOmEhPT1udWxsJiZyZihuLGEpJiYodC5mbGFnc3w9MzIpLGZ5KGUsdCksVXQoZSx0LG8sciksdC5jaGlsZDtjYXNlIDY6cmV0dXJuIGU9PT1udWxsJiZsZih0KSxudWxsO2Nhc2UgMTM6cmV0dXJuIGh5KGUsdCxyKTtjYXNlIDQ6cmV0dXJuIERtKHQsdC5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyksbj10LnBlbmRpbmdQcm9wcyxlPT09bnVsbD90LmNoaWxkPWRhKHQsbnVsbCxuLHIpOlV0KGUsdCxuLHIpLHQuY2hpbGQ7Y2FzZSAxMTpyZXR1cm4gbj10LnR5cGUscz10LnBlbmRpbmdQcm9wcyxzPXQuZWxlbWVudFR5cGU9PT1uP3M6UnIobixzKSxEcChlLHQsbixzLHIpO2Nhc2UgNzpyZXR1cm4gVXQoZSx0LHQucGVuZGluZ1Byb3BzLHIpLHQuY2hpbGQ7Y2FzZSA4OnJldHVybiBVdChlLHQsdC5wZW5kaW5nUHJvcHMuY2hpbGRyZW4sciksdC5jaGlsZDtjYXNlIDEyOnJldHVybiBVdChlLHQsdC5wZW5kaW5nUHJvcHMuY2hpbGRyZW4sciksdC5jaGlsZDtjYXNlIDEwOmU6e2lmKG49dC50eXBlLl9jb250ZXh0LHM9dC5wZW5kaW5nUHJvcHMsYT10Lm1lbW9pemVkUHJvcHMsbz1zLnZhbHVlLFVlKGdjLG4uX2N1cnJlbnRWYWx1ZSksbi5fY3VycmVudFZhbHVlPW8sYSE9PW51bGwpaWYoVnIoYS52YWx1ZSxvKSl7aWYoYS5jaGlsZHJlbj09PXMuY2hpbGRyZW4mJiF0ci5jdXJyZW50KXt0PU9uKGUsdCxyKTticmVhayBlfX1lbHNlIGZvcihhPXQuY2hpbGQsYSE9PW51bGwmJihhLnJldHVybj10KTthIT09bnVsbDspe3ZhciBsPWEuZGVwZW5kZW5jaWVzO2lmKGwhPT1udWxsKXtvPWEuY2hpbGQ7Zm9yKHZhciBjPWwuZmlyc3RDb250ZXh0O2MhPT1udWxsOyl7aWYoYy5jb250ZXh0PT09bil7aWYoYS50YWc9PT0xKXtjPVBuKC0xLHImLXIpLGMudGFnPTI7dmFyIHU9YS51cGRhdGVRdWV1ZTtpZih1IT09bnVsbCl7dT11LnNoYXJlZDt2YXIgZD11LnBlbmRpbmc7ZD09PW51bGw/Yy5uZXh0PWM6KGMubmV4dD1kLm5leHQsZC5uZXh0PWMpLHUucGVuZGluZz1jfX1hLmxhbmVzfD1yLGM9YS5hbHRlcm5hdGUsYyE9PW51bGwmJihjLmxhbmVzfD1yKSxjZihhLnJldHVybixyLHQpLGwubGFuZXN8PXI7YnJlYWt9Yz1jLm5leHR9fWVsc2UgaWYoYS50YWc9PT0xMClvPWEudHlwZT09PXQudHlwZT9udWxsOmEuY2hpbGQ7ZWxzZSBpZihhLnRhZz09PTE4KXtpZihvPWEucmV0dXJuLG89PT1udWxsKXRocm93IEVycm9yKEIoMzQxKSk7by5sYW5lc3w9cixsPW8uYWx0ZXJuYXRlLGwhPT1udWxsJiYobC5sYW5lc3w9ciksY2YobyxyLHQpLG89YS5zaWJsaW5nfWVsc2Ugbz1hLmNoaWxkO2lmKG8hPT1udWxsKW8ucmV0dXJuPWE7ZWxzZSBmb3Iobz1hO28hPT1udWxsOyl7aWYobz09PXQpe289bnVsbDticmVha31pZihhPW8uc2libGluZyxhIT09bnVsbCl7YS5yZXR1cm49by5yZXR1cm4sbz1hO2JyZWFrfW89by5yZXR1cm59YT1vfVV0KGUsdCxzLmNoaWxkcmVuLHIpLHQ9dC5jaGlsZH1yZXR1cm4gdDtjYXNlIDk6cmV0dXJuIHM9dC50eXBlLG49dC5wZW5kaW5nUHJvcHMuY2hpbGRyZW4sVmkodCxyKSxzPUVyKHMpLG49bihzKSx0LmZsYWdzfD0xLFV0KGUsdCxuLHIpLHQuY2hpbGQ7Y2FzZSAxNDpyZXR1cm4gbj10LnR5cGUscz1ScihuLHQucGVuZGluZ1Byb3BzKSxzPVJyKG4udHlwZSxzKSwkcChlLHQsbixzLHIpO2Nhc2UgMTU6cmV0dXJuIHV5KGUsdCx0LnR5cGUsdC5wZW5kaW5nUHJvcHMscik7Y2FzZSAxNzpyZXR1cm4gbj10LnR5cGUscz10LnBlbmRpbmdQcm9wcyxzPXQuZWxlbWVudFR5cGU9PT1uP3M6UnIobixzKSxXbChlLHQpLHQudGFnPTEscnIobik/KGU9ITAsbWModCkpOmU9ITEsVmkodCxyKSxveSh0LG4scyksZGYodCxuLHMsciksaGYobnVsbCx0LG4sITAsZSxyKTtjYXNlIDE5OnJldHVybiBweShlLHQscik7Y2FzZSAyMjpyZXR1cm4gZHkoZSx0LHIpfXRocm93IEVycm9yKEIoMTU2LHQudGFnKSl9O2Z1bmN0aW9uIFJ5KGUsdCl7cmV0dXJuIHN2KGUsdCl9ZnVuY3Rpb24gUU4oZSx0LHIsbil7dGhpcy50YWc9ZSx0aGlzLmtleT1yLHRoaXMuc2libGluZz10aGlzLmNoaWxkPXRoaXMucmV0dXJuPXRoaXMuc3RhdGVOb2RlPXRoaXMudHlwZT10aGlzLmVsZW1lbnRUeXBlPW51bGwsdGhpcy5pbmRleD0wLHRoaXMucmVmPW51bGwsdGhpcy5wZW5kaW5nUHJvcHM9dCx0aGlzLmRlcGVuZGVuY2llcz10aGlzLm1lbW9pemVkU3RhdGU9dGhpcy51cGRhdGVRdWV1ZT10aGlzLm1lbW9pemVkUHJvcHM9bnVsbCx0aGlzLm1vZGU9bix0aGlzLnN1YnRyZWVGbGFncz10aGlzLmZsYWdzPTAsdGhpcy5kZWxldGlvbnM9bnVsbCx0aGlzLmNoaWxkTGFuZXM9dGhpcy5sYW5lcz0wLHRoaXMuYWx0ZXJuYXRlPW51bGx9ZnVuY3Rpb24gU3IoZSx0LHIsbil7cmV0dXJuIG5ldyBRTihlLHQscixuKX1mdW5jdGlvbiBKbShlKXtyZXR1cm4gZT1lLnByb3RvdHlwZSwhKCFlfHwhZS5pc1JlYWN0Q29tcG9uZW50KX1mdW5jdGlvbiBaTihlKXtpZih0eXBlb2YgZT09ImZ1bmN0aW9uIilyZXR1cm4gSm0oZSk/MTowO2lmKGUhPW51bGwpe2lmKGU9ZS4kJHR5cGVvZixlPT09dm0pcmV0dXJuIDExO2lmKGU9PT15bSlyZXR1cm4gMTR9cmV0dXJuIDJ9ZnVuY3Rpb24geHMoZSx0KXt2YXIgcj1lLmFsdGVybmF0ZTtyZXR1cm4gcj09PW51bGw/KHI9U3IoZS50YWcsdCxlLmtleSxlLm1vZGUpLHIuZWxlbWVudFR5cGU9ZS5lbGVtZW50VHlwZSxyLnR5cGU9ZS50eXBlLHIuc3RhdGVOb2RlPWUuc3RhdGVOb2RlLHIuYWx0ZXJuYXRlPWUsZS5hbHRlcm5hdGU9cik6KHIucGVuZGluZ1Byb3BzPXQsci50eXBlPWUudHlwZSxyLmZsYWdzPTAsci5zdWJ0cmVlRmxhZ3M9MCxyLmRlbGV0aW9ucz1udWxsKSxyLmZsYWdzPWUuZmxhZ3MmMTQ2ODAwNjQsci5jaGlsZExhbmVzPWUuY2hpbGRMYW5lcyxyLmxhbmVzPWUubGFuZXMsci5jaGlsZD1lLmNoaWxkLHIubWVtb2l6ZWRQcm9wcz1lLm1lbW9pemVkUHJvcHMsci5tZW1vaXplZFN0YXRlPWUubWVtb2l6ZWRTdGF0ZSxyLnVwZGF0ZVF1ZXVlPWUudXBkYXRlUXVldWUsdD1lLmRlcGVuZGVuY2llcyxyLmRlcGVuZGVuY2llcz10PT09bnVsbD9udWxsOntsYW5lczp0LmxhbmVzLGZpcnN0Q29udGV4dDp0LmZpcnN0Q29udGV4dH0sci5zaWJsaW5nPWUuc2libGluZyxyLmluZGV4PWUuaW5kZXgsci5yZWY9ZS5yZWYscn1mdW5jdGlvbiBRbChlLHQscixuLHMsYSl7dmFyIG89MjtpZihuPWUsdHlwZW9mIGU9PSJmdW5jdGlvbiIpSm0oZSkmJihvPTEpO2Vsc2UgaWYodHlwZW9mIGU9PSJzdHJpbmciKW89NTtlbHNlIGU6c3dpdGNoKGUpe2Nhc2UgU2k6cmV0dXJuIEtzKHIuY2hpbGRyZW4scyxhLHQpO2Nhc2UgeG06bz04LHN8PTg7YnJlYWs7Y2FzZSBPZDpyZXR1cm4gZT1TcigxMixyLHQsc3wyKSxlLmVsZW1lbnRUeXBlPU9kLGUubGFuZXM9YSxlO2Nhc2UgRmQ6cmV0dXJuIGU9U3IoMTMscix0LHMpLGUuZWxlbWVudFR5cGU9RmQsZS5sYW5lcz1hLGU7Y2FzZSBJZDpyZXR1cm4gZT1TcigxOSxyLHQscyksZS5lbGVtZW50VHlwZT1JZCxlLmxhbmVzPWEsZTtjYXNlIFZ4OnJldHVybiBhdShyLHMsYSx0KTtkZWZhdWx0OmlmKHR5cGVvZiBlPT0ib2JqZWN0IiYmZSE9PW51bGwpc3dpdGNoKGUuJCR0eXBlb2Ype2Nhc2UgJHg6bz0xMDticmVhayBlO2Nhc2Ugeng6bz05O2JyZWFrIGU7Y2FzZSB2bTpvPTExO2JyZWFrIGU7Y2FzZSB5bTpvPTE0O2JyZWFrIGU7Y2FzZSBRbjpvPTE2LG49bnVsbDticmVhayBlfXRocm93IEVycm9yKEIoMTMwLGU9PW51bGw/ZTp0eXBlb2YgZSwiIikpfXJldHVybiB0PVNyKG8scix0LHMpLHQuZWxlbWVudFR5cGU9ZSx0LnR5cGU9bix0LmxhbmVzPWEsdH1mdW5jdGlvbiBLcyhlLHQscixuKXtyZXR1cm4gZT1Tcig3LGUsbix0KSxlLmxhbmVzPXIsZX1mdW5jdGlvbiBhdShlLHQscixuKXtyZXR1cm4gZT1TcigyMixlLG4sdCksZS5lbGVtZW50VHlwZT1WeCxlLmxhbmVzPXIsZS5zdGF0ZU5vZGU9e2lzSGlkZGVuOiExfSxlfWZ1bmN0aW9uIG5kKGUsdCxyKXtyZXR1cm4gZT1Tcig2LGUsbnVsbCx0KSxlLmxhbmVzPXIsZX1mdW5jdGlvbiBzZChlLHQscil7cmV0dXJuIHQ9U3IoNCxlLmNoaWxkcmVuIT09bnVsbD9lLmNoaWxkcmVuOltdLGUua2V5LHQpLHQubGFuZXM9cix0LnN0YXRlTm9kZT17Y29udGFpbmVySW5mbzplLmNvbnRhaW5lckluZm8scGVuZGluZ0NoaWxkcmVuOm51bGwsaW1wbGVtZW50YXRpb246ZS5pbXBsZW1lbnRhdGlvbn0sdH1mdW5jdGlvbiBLTihlLHQscixuLHMpe3RoaXMudGFnPXQsdGhpcy5jb250YWluZXJJbmZvPWUsdGhpcy5maW5pc2hlZFdvcms9dGhpcy5waW5nQ2FjaGU9dGhpcy5jdXJyZW50PXRoaXMucGVuZGluZ0NoaWxkcmVuPW51bGwsdGhpcy50aW1lb3V0SGFuZGxlPS0xLHRoaXMuY2FsbGJhY2tOb2RlPXRoaXMucGVuZGluZ0NvbnRleHQ9dGhpcy5jb250ZXh0PW51bGwsdGhpcy5jYWxsYmFja1ByaW9yaXR5PTAsdGhpcy5ldmVudFRpbWVzPUR1KDApLHRoaXMuZXhwaXJhdGlvblRpbWVzPUR1KC0xKSx0aGlzLmVudGFuZ2xlZExhbmVzPXRoaXMuZmluaXNoZWRMYW5lcz10aGlzLm11dGFibGVSZWFkTGFuZXM9dGhpcy5leHBpcmVkTGFuZXM9dGhpcy5waW5nZWRMYW5lcz10aGlzLnN1c3BlbmRlZExhbmVzPXRoaXMucGVuZGluZ0xhbmVzPTAsdGhpcy5lbnRhbmdsZW1lbnRzPUR1KDApLHRoaXMuaWRlbnRpZmllclByZWZpeD1uLHRoaXMub25SZWNvdmVyYWJsZUVycm9yPXMsdGhpcy5tdXRhYmxlU291cmNlRWFnZXJIeWRyYXRpb25EYXRhPW51bGx9ZnVuY3Rpb24gZWgoZSx0LHIsbixzLGEsbyxsLGMpe3JldHVybiBlPW5ldyBLTihlLHQscixsLGMpLHQ9PT0xPyh0PTEsYT09PSEwJiYodHw9OCkpOnQ9MCxhPVNyKDMsbnVsbCxudWxsLHQpLGUuY3VycmVudD1hLGEuc3RhdGVOb2RlPWUsYS5tZW1vaXplZFN0YXRlPXtlbGVtZW50Om4saXNEZWh5ZHJhdGVkOnIsY2FjaGU6bnVsbCx0cmFuc2l0aW9uczpudWxsLHBlbmRpbmdTdXNwZW5zZUJvdW5kYXJpZXM6bnVsbH0sTG0oYSksZX1mdW5jdGlvbiBZTihlLHQscil7dmFyIG49Mzxhcmd1bWVudHMubGVuZ3RoJiZhcmd1bWVudHNbM10hPT12b2lkIDA/YXJndW1lbnRzWzNdOm51bGw7cmV0dXJueyQkdHlwZW9mOk5pLGtleTpuPT1udWxsP251bGw6IiIrbixjaGlsZHJlbjplLGNvbnRhaW5lckluZm86dCxpbXBsZW1lbnRhdGlvbjpyfX1mdW5jdGlvbiBBeShlKXtpZighZSlyZXR1cm4gYnM7ZT1lLl9yZWFjdEludGVybmFscztlOntpZihwaShlKSE9PWV8fGUudGFnIT09MSl0aHJvdyBFcnJvcihCKDE3MCkpO3ZhciB0PWU7ZG97c3dpdGNoKHQudGFnKXtjYXNlIDM6dD10LnN0YXRlTm9kZS5jb250ZXh0O2JyZWFrIGU7Y2FzZSAxOmlmKHJyKHQudHlwZSkpe3Q9dC5zdGF0ZU5vZGUuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHQ7YnJlYWsgZX19dD10LnJldHVybn13aGlsZSh0IT09bnVsbCk7dGhyb3cgRXJyb3IoQigxNzEpKX1pZihlLnRhZz09PTEpe3ZhciByPWUudHlwZTtpZihycihyKSlyZXR1cm4gQXYoZSxyLHQpfXJldHVybiB0fWZ1bmN0aW9uIE15KGUsdCxyLG4scyxhLG8sbCxjKXtyZXR1cm4gZT1laChyLG4sITAsZSxzLGEsbyxsLGMpLGUuY29udGV4dD1BeShudWxsKSxyPWUuY3VycmVudCxuPVd0KCkscz1ncyhyKSxhPVBuKG4scyksYS5jYWxsYmFjaz10Pz9udWxsLGhzKHIsYSxzKSxlLmN1cnJlbnQubGFuZXM9cyxZbyhlLHMsbiksbnIoZSxuKSxlfWZ1bmN0aW9uIG91KGUsdCxyLG4pe3ZhciBzPXQuY3VycmVudCxhPVd0KCksbz1ncyhzKTtyZXR1cm4gcj1BeShyKSx0LmNvbnRleHQ9PT1udWxsP3QuY29udGV4dD1yOnQucGVuZGluZ0NvbnRleHQ9cix0PVBuKGEsbyksdC5wYXlsb2FkPXtlbGVtZW50OmV9LG49bj09PXZvaWQgMD9udWxsOm4sbiE9PW51bGwmJih0LmNhbGxiYWNrPW4pLGU9aHMocyx0LG8pLGUhPT1udWxsJiYoJHIoZSxzLG8sYSksVWwoZSxzLG8pKSxvfWZ1bmN0aW9uIEVjKGUpe2lmKGU9ZS5jdXJyZW50LCFlLmNoaWxkKXJldHVybiBudWxsO3N3aXRjaChlLmNoaWxkLnRhZyl7Y2FzZSA1OnJldHVybiBlLmNoaWxkLnN0YXRlTm9kZTtkZWZhdWx0OnJldHVybiBlLmNoaWxkLnN0YXRlTm9kZX19ZnVuY3Rpb24gWXAoZSx0KXtpZihlPWUubWVtb2l6ZWRTdGF0ZSxlIT09bnVsbCYmZS5kZWh5ZHJhdGVkIT09bnVsbCl7dmFyIHI9ZS5yZXRyeUxhbmU7ZS5yZXRyeUxhbmU9ciE9PTAmJnI8dD9yOnR9fWZ1bmN0aW9uIHRoKGUsdCl7WXAoZSx0KSwoZT1lLmFsdGVybmF0ZSkmJllwKGUsdCl9ZnVuY3Rpb24gWE4oKXtyZXR1cm4gbnVsbH12YXIgT3k9dHlwZW9mIHJlcG9ydEVycm9yPT0iZnVuY3Rpb24iP3JlcG9ydEVycm9yOmZ1bmN0aW9uKGUpe2NvbnNvbGUuZXJyb3IoZSl9O2Z1bmN0aW9uIHJoKGUpe3RoaXMuX2ludGVybmFsUm9vdD1lfWx1LnByb3RvdHlwZS5yZW5kZXI9cmgucHJvdG90eXBlLnJlbmRlcj1mdW5jdGlvbihlKXt2YXIgdD10aGlzLl9pbnRlcm5hbFJvb3Q7aWYodD09PW51bGwpdGhyb3cgRXJyb3IoQig0MDkpKTtvdShlLHQsbnVsbCxudWxsKX07bHUucHJvdG90eXBlLnVubW91bnQ9cmgucHJvdG90eXBlLnVubW91bnQ9ZnVuY3Rpb24oKXt2YXIgZT10aGlzLl9pbnRlcm5hbFJvb3Q7aWYoZSE9PW51bGwpe3RoaXMuX2ludGVybmFsUm9vdD1udWxsO3ZhciB0PWUuY29udGFpbmVySW5mbztzaShmdW5jdGlvbigpe291KG51bGwsZSxudWxsLG51bGwpfSksdFtBbl09bnVsbH19O2Z1bmN0aW9uIGx1KGUpe3RoaXMuX2ludGVybmFsUm9vdD1lfWx1LnByb3RvdHlwZS51bnN0YWJsZV9zY2hlZHVsZUh5ZHJhdGlvbj1mdW5jdGlvbihlKXtpZihlKXt2YXIgdD1kdigpO2U9e2Jsb2NrZWRPbjpudWxsLHRhcmdldDplLHByaW9yaXR5OnR9O2Zvcih2YXIgcj0wO3I8S24ubGVuZ3RoJiZ0IT09MCYmdDxLbltyXS5wcmlvcml0eTtyKyspO0tuLnNwbGljZShyLDAsZSkscj09PTAmJm12KGUpfX07ZnVuY3Rpb24gbmgoZSl7cmV0dXJuISghZXx8ZS5ub2RlVHlwZSE9PTEmJmUubm9kZVR5cGUhPT05JiZlLm5vZGVUeXBlIT09MTEpfWZ1bmN0aW9uIGN1KGUpe3JldHVybiEoIWV8fGUubm9kZVR5cGUhPT0xJiZlLm5vZGVUeXBlIT09OSYmZS5ub2RlVHlwZSE9PTExJiYoZS5ub2RlVHlwZSE9PTh8fGUubm9kZVZhbHVlIT09IiByZWFjdC1tb3VudC1wb2ludC11bnN0YWJsZSAiKSl9ZnVuY3Rpb24gWHAoKXt9ZnVuY3Rpb24gSk4oZSx0LHIsbixzKXtpZihzKXtpZih0eXBlb2Ygbj09ImZ1bmN0aW9uIil7dmFyIGE9bjtuPWZ1bmN0aW9uKCl7dmFyIHU9RWMobyk7YS5jYWxsKHUpfX12YXIgbz1NeSh0LG4sZSwwLG51bGwsITEsITEsIiIsWHApO3JldHVybiBlLl9yZWFjdFJvb3RDb250YWluZXI9byxlW0FuXT1vLmN1cnJlbnQseG8oZS5ub2RlVHlwZT09PTg/ZS5wYXJlbnROb2RlOmUpLHNpKCksb31mb3IoO3M9ZS5sYXN0Q2hpbGQ7KWUucmVtb3ZlQ2hpbGQocyk7aWYodHlwZW9mIG49PSJmdW5jdGlvbiIpe3ZhciBsPW47bj1mdW5jdGlvbigpe3ZhciB1PUVjKGMpO2wuY2FsbCh1KX19dmFyIGM9ZWgoZSwwLCExLG51bGwsbnVsbCwhMSwhMSwiIixYcCk7cmV0dXJuIGUuX3JlYWN0Um9vdENvbnRhaW5lcj1jLGVbQW5dPWMuY3VycmVudCx4byhlLm5vZGVUeXBlPT09OD9lLnBhcmVudE5vZGU6ZSksc2koZnVuY3Rpb24oKXtvdSh0LGMscixuKX0pLGN9ZnVuY3Rpb24gdXUoZSx0LHIsbixzKXt2YXIgYT1yLl9yZWFjdFJvb3RDb250YWluZXI7aWYoYSl7dmFyIG89YTtpZih0eXBlb2Ygcz09ImZ1bmN0aW9uIil7dmFyIGw9cztzPWZ1bmN0aW9uKCl7dmFyIGM9RWMobyk7bC5jYWxsKGMpfX1vdSh0LG8sZSxzKX1lbHNlIG89Sk4ocix0LGUscyxuKTtyZXR1cm4gRWMobyl9Y3Y9ZnVuY3Rpb24oZSl7c3dpdGNoKGUudGFnKXtjYXNlIDM6dmFyIHQ9ZS5zdGF0ZU5vZGU7aWYodC5jdXJyZW50Lm1lbW9pemVkU3RhdGUuaXNEZWh5ZHJhdGVkKXt2YXIgcj1xYSh0LnBlbmRpbmdMYW5lcyk7ciE9PTAmJihqbSh0LHJ8MSksbnIodCxmdCgpKSwhKFRlJjYpJiYoaGE9ZnQoKSs1MDAsUnMoKSkpfWJyZWFrO2Nhc2UgMTM6c2koZnVuY3Rpb24oKXt2YXIgbj1NbihlLDEpO2lmKG4hPT1udWxsKXt2YXIgcz1XdCgpOyRyKG4sZSwxLHMpfX0pLHRoKGUsMSl9fTtObT1mdW5jdGlvbihlKXtpZihlLnRhZz09PTEzKXt2YXIgdD1NbihlLDEzNDIxNzcyOCk7aWYodCE9PW51bGwpe3ZhciByPVd0KCk7JHIodCxlLDEzNDIxNzcyOCxyKX10aChlLDEzNDIxNzcyOCl9fTt1dj1mdW5jdGlvbihlKXtpZihlLnRhZz09PTEzKXt2YXIgdD1ncyhlKSxyPU1uKGUsdCk7aWYociE9PW51bGwpe3ZhciBuPVd0KCk7JHIocixlLHQsbil9dGgoZSx0KX19O2R2PWZ1bmN0aW9uKCl7cmV0dXJuICRlfTtmdj1mdW5jdGlvbihlLHQpe3ZhciByPSRlO3RyeXtyZXR1cm4gJGU9ZSx0KCl9ZmluYWxseXskZT1yfX07cWQ9ZnVuY3Rpb24oZSx0LHIpe3N3aXRjaCh0KXtjYXNlImlucHV0IjppZigkZChlLHIpLHQ9ci5uYW1lLHIudHlwZT09PSJyYWRpbyImJnQhPW51bGwpe2ZvcihyPWU7ci5wYXJlbnROb2RlOylyPXIucGFyZW50Tm9kZTtmb3Iocj1yLnF1ZXJ5U2VsZWN0b3JBbGwoImlucHV0W25hbWU9IitKU09OLnN0cmluZ2lmeSgiIit0KSsnXVt0eXBlPSJyYWRpbyJdJyksdD0wO3Q8ci5sZW5ndGg7dCsrKXt2YXIgbj1yW3RdO2lmKG4hPT1lJiZuLmZvcm09PT1lLmZvcm0pe3ZhciBzPWV1KG4pO2lmKCFzKXRocm93IEVycm9yKEIoOTApKTtCeChuKSwkZChuLHMpfX19YnJlYWs7Y2FzZSJ0ZXh0YXJlYSI6V3goZSxyKTticmVhaztjYXNlInNlbGVjdCI6dD1yLnZhbHVlLHQhPW51bGwmJkxpKGUsISFyLm11bHRpcGxlLHQsITEpfX07WHg9S207Sng9c2k7dmFyIGVTPXt1c2luZ0NsaWVudEVudHJ5UG9pbnQ6ITEsRXZlbnRzOltKbyxfaSxldSxLeCxZeCxLbV19LCRhPXtmaW5kRmliZXJCeUhvc3RJbnN0YW5jZTpEcyxidW5kbGVUeXBlOjAsdmVyc2lvbjoiMTguMy4xIixyZW5kZXJlclBhY2thZ2VOYW1lOiJyZWFjdC1kb20ifSx0Uz17YnVuZGxlVHlwZTokYS5idW5kbGVUeXBlLHZlcnNpb246JGEudmVyc2lvbixyZW5kZXJlclBhY2thZ2VOYW1lOiRhLnJlbmRlcmVyUGFja2FnZU5hbWUscmVuZGVyZXJDb25maWc6JGEucmVuZGVyZXJDb25maWcsb3ZlcnJpZGVIb29rU3RhdGU6bnVsbCxvdmVycmlkZUhvb2tTdGF0ZURlbGV0ZVBhdGg6bnVsbCxvdmVycmlkZUhvb2tTdGF0ZVJlbmFtZVBhdGg6bnVsbCxvdmVycmlkZVByb3BzOm51bGwsb3ZlcnJpZGVQcm9wc0RlbGV0ZVBhdGg6bnVsbCxvdmVycmlkZVByb3BzUmVuYW1lUGF0aDpudWxsLHNldEVycm9ySGFuZGxlcjpudWxsLHNldFN1c3BlbnNlSGFuZGxlcjpudWxsLHNjaGVkdWxlVXBkYXRlOm51bGwsY3VycmVudERpc3BhdGNoZXJSZWY6JG4uUmVhY3RDdXJyZW50RGlzcGF0Y2hlcixmaW5kSG9zdEluc3RhbmNlQnlGaWJlcjpmdW5jdGlvbihlKXtyZXR1cm4gZT1ydihlKSxlPT09bnVsbD9udWxsOmUuc3RhdGVOb2RlfSxmaW5kRmliZXJCeUhvc3RJbnN0YW5jZTokYS5maW5kRmliZXJCeUhvc3RJbnN0YW5jZXx8WE4sZmluZEhvc3RJbnN0YW5jZXNGb3JSZWZyZXNoOm51bGwsc2NoZWR1bGVSZWZyZXNoOm51bGwsc2NoZWR1bGVSb290Om51bGwsc2V0UmVmcmVzaEhhbmRsZXI6bnVsbCxnZXRDdXJyZW50RmliZXI6bnVsbCxyZWNvbmNpbGVyVmVyc2lvbjoiMTguMy4xLW5leHQtZjEzMzhmODA4MC0yMDI0MDQyNiJ9O2lmKHR5cGVvZiBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX188InUiKXt2YXIgQ2w9X19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fO2lmKCFDbC5pc0Rpc2FibGVkJiZDbC5zdXBwb3J0c0ZpYmVyKXRyeXtLYz1DbC5pbmplY3QodFMpLG9uPUNsfWNhdGNoe319Z3IuX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQ9ZVM7Z3IuY3JlYXRlUG9ydGFsPWZ1bmN0aW9uKGUsdCl7dmFyIHI9Mjxhcmd1bWVudHMubGVuZ3RoJiZhcmd1bWVudHNbMl0hPT12b2lkIDA/YXJndW1lbnRzWzJdOm51bGw7aWYoIW5oKHQpKXRocm93IEVycm9yKEIoMjAwKSk7cmV0dXJuIFlOKGUsdCxudWxsLHIpfTtnci5jcmVhdGVSb290PWZ1bmN0aW9uKGUsdCl7aWYoIW5oKGUpKXRocm93IEVycm9yKEIoMjk5KSk7dmFyIHI9ITEsbj0iIixzPU95O3JldHVybiB0IT1udWxsJiYodC51bnN0YWJsZV9zdHJpY3RNb2RlPT09ITAmJihyPSEwKSx0LmlkZW50aWZpZXJQcmVmaXghPT12b2lkIDAmJihuPXQuaWRlbnRpZmllclByZWZpeCksdC5vblJlY292ZXJhYmxlRXJyb3IhPT12b2lkIDAmJihzPXQub25SZWNvdmVyYWJsZUVycm9yKSksdD1laChlLDEsITEsbnVsbCxudWxsLHIsITEsbixzKSxlW0FuXT10LmN1cnJlbnQseG8oZS5ub2RlVHlwZT09PTg/ZS5wYXJlbnROb2RlOmUpLG5ldyByaCh0KX07Z3IuZmluZERPTU5vZGU9ZnVuY3Rpb24oZSl7aWYoZT09bnVsbClyZXR1cm4gbnVsbDtpZihlLm5vZGVUeXBlPT09MSlyZXR1cm4gZTt2YXIgdD1lLl9yZWFjdEludGVybmFscztpZih0PT09dm9pZCAwKXRocm93IHR5cGVvZiBlLnJlbmRlcj09ImZ1bmN0aW9uIj9FcnJvcihCKDE4OCkpOihlPU9iamVjdC5rZXlzKGUpLmpvaW4oIiwiKSxFcnJvcihCKDI2OCxlKSkpO3JldHVybiBlPXJ2KHQpLGU9ZT09PW51bGw/bnVsbDplLnN0YXRlTm9kZSxlfTtnci5mbHVzaFN5bmM9ZnVuY3Rpb24oZSl7cmV0dXJuIHNpKGUpfTtnci5oeWRyYXRlPWZ1bmN0aW9uKGUsdCxyKXtpZighY3UodCkpdGhyb3cgRXJyb3IoQigyMDApKTtyZXR1cm4gdXUobnVsbCxlLHQsITAscil9O2dyLmh5ZHJhdGVSb290PWZ1bmN0aW9uKGUsdCxyKXtpZighbmgoZSkpdGhyb3cgRXJyb3IoQig0MDUpKTt2YXIgbj1yIT1udWxsJiZyLmh5ZHJhdGVkU291cmNlc3x8bnVsbCxzPSExLGE9IiIsbz1PeTtpZihyIT1udWxsJiYoci51bnN0YWJsZV9zdHJpY3RNb2RlPT09ITAmJihzPSEwKSxyLmlkZW50aWZpZXJQcmVmaXghPT12b2lkIDAmJihhPXIuaWRlbnRpZmllclByZWZpeCksci5vblJlY292ZXJhYmxlRXJyb3IhPT12b2lkIDAmJihvPXIub25SZWNvdmVyYWJsZUVycm9yKSksdD1NeSh0LG51bGwsZSwxLHI/P251bGwscywhMSxhLG8pLGVbQW5dPXQuY3VycmVudCx4byhlKSxuKWZvcihlPTA7ZTxuLmxlbmd0aDtlKyspcj1uW2VdLHM9ci5fZ2V0VmVyc2lvbixzPXMoci5fc291cmNlKSx0Lm11dGFibGVTb3VyY2VFYWdlckh5ZHJhdGlvbkRhdGE9PW51bGw/dC5tdXRhYmxlU291cmNlRWFnZXJIeWRyYXRpb25EYXRhPVtyLHNdOnQubXV0YWJsZVNvdXJjZUVhZ2VySHlkcmF0aW9uRGF0YS5wdXNoKHIscyk7cmV0dXJuIG5ldyBsdSh0KX07Z3IucmVuZGVyPWZ1bmN0aW9uKGUsdCxyKXtpZighY3UodCkpdGhyb3cgRXJyb3IoQigyMDApKTtyZXR1cm4gdXUobnVsbCxlLHQsITEscil9O2dyLnVubW91bnRDb21wb25lbnRBdE5vZGU9ZnVuY3Rpb24oZSl7aWYoIWN1KGUpKXRocm93IEVycm9yKEIoNDApKTtyZXR1cm4gZS5fcmVhY3RSb290Q29udGFpbmVyPyhzaShmdW5jdGlvbigpe3V1KG51bGwsbnVsbCxlLCExLGZ1bmN0aW9uKCl7ZS5fcmVhY3RSb290Q29udGFpbmVyPW51bGwsZVtBbl09bnVsbH0pfSksITApOiExfTtnci51bnN0YWJsZV9iYXRjaGVkVXBkYXRlcz1LbTtnci51bnN0YWJsZV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lcj1mdW5jdGlvbihlLHQscixuKXtpZighY3UocikpdGhyb3cgRXJyb3IoQigyMDApKTtpZihlPT1udWxsfHxlLl9yZWFjdEludGVybmFscz09PXZvaWQgMCl0aHJvdyBFcnJvcihCKDM4KSk7cmV0dXJuIHV1KGUsdCxyLCExLG4pfTtnci52ZXJzaW9uPSIxOC4zLjEtbmV4dC1mMTMzOGY4MDgwLTIwMjQwNDI2IjtmdW5jdGlvbiBGeSgpe2lmKCEodHlwZW9mIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXz4idSJ8fHR5cGVvZiBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18uY2hlY2tEQ0UhPSJmdW5jdGlvbiIpKXRyeXtfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18uY2hlY2tEQ0UoRnkpfWNhdGNoKGUpe2NvbnNvbGUuZXJyb3IoZSl9fUZ5KCksRnguZXhwb3J0cz1ncjt2YXIgZ2k9RnguZXhwb3J0cztjb25zdCByUz1qeChnaSk7dmFyIEl5LEpwPWdpO0l5PUpwLmNyZWF0ZVJvb3QsSnAuaHlkcmF0ZVJvb3Q7ZnVuY3Rpb24gblMoZSx0KXtpZihlIGluc3RhbmNlb2YgUmVnRXhwKXJldHVybntrZXlzOiExLHBhdHRlcm46ZX07dmFyIHIsbixzLGEsbz1bXSxsPSIiLGM9ZS5zcGxpdCgiLyIpO2ZvcihjWzBdfHxjLnNoaWZ0KCk7cz1jLnNoaWZ0KCk7KXI9c1swXSxyPT09IioiPyhvLnB1c2gociksbCs9c1sxXT09PSI/Ij8iKD86LyguKikpPyI6Ii8oLiopIik6cj09PSI6Ij8obj1zLmluZGV4T2YoIj8iLDEpLGE9cy5pbmRleE9mKCIuIiwxKSxvLnB1c2gocy5zdWJzdHJpbmcoMSx+bj9uOn5hP2E6cy5sZW5ndGgpKSxsKz1+biYmIX5hPyIoPzovKFteL10rPykpPyI6Ii8oW14vXSs/KSIsfmEmJihsKz0ofm4/Ij8iOiIiKSsiXFwiK3Muc3Vic3RyaW5nKGEpKSk6bCs9Ii8iK3M7cmV0dXJue2tleXM6byxwYXR0ZXJuOm5ldyBSZWdFeHAoIl4iK2wrKHQ/Iig/PSR8LykiOiIvPyQiKSwiaSIpfX12YXIgTHk9e2V4cG9ydHM6e319LER5PXt9Oy8qKgogKiBAbGljZW5zZSBSZWFjdAogKiB1c2Utc3luYy1leHRlcm5hbC1zdG9yZS1zaGltLnByb2R1Y3Rpb24ubWluLmpzCiAqCiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLgogKgogKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGUKICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLgogKi92YXIgcGE9eTtmdW5jdGlvbiBzUyhlLHQpe3JldHVybiBlPT09dCYmKGUhPT0wfHwxL2U9PT0xL3QpfHxlIT09ZSYmdCE9PXR9dmFyIGlTPXR5cGVvZiBPYmplY3QuaXM9PSJmdW5jdGlvbiI/T2JqZWN0LmlzOnNTLGFTPXBhLnVzZVN0YXRlLG9TPXBhLnVzZUVmZmVjdCxsUz1wYS51c2VMYXlvdXRFZmZlY3QsY1M9cGEudXNlRGVidWdWYWx1ZTtmdW5jdGlvbiB1UyhlLHQpe3ZhciByPXQoKSxuPWFTKHtpbnN0Ont2YWx1ZTpyLGdldFNuYXBzaG90OnR9fSkscz1uWzBdLmluc3QsYT1uWzFdO3JldHVybiBsUyhmdW5jdGlvbigpe3MudmFsdWU9cixzLmdldFNuYXBzaG90PXQsaWQocykmJmEoe2luc3Q6c30pfSxbZSxyLHRdKSxvUyhmdW5jdGlvbigpe3JldHVybiBpZChzKSYmYSh7aW5zdDpzfSksZShmdW5jdGlvbigpe2lkKHMpJiZhKHtpbnN0OnN9KX0pfSxbZV0pLGNTKHIpLHJ9ZnVuY3Rpb24gaWQoZSl7dmFyIHQ9ZS5nZXRTbmFwc2hvdDtlPWUudmFsdWU7dHJ5e3ZhciByPXQoKTtyZXR1cm4haVMoZSxyKX1jYXRjaHtyZXR1cm4hMH19ZnVuY3Rpb24gZFMoZSx0KXtyZXR1cm4gdCgpfXZhciBmUz10eXBlb2Ygd2luZG93PiJ1Inx8dHlwZW9mIHdpbmRvdy5kb2N1bWVudD4idSJ8fHR5cGVvZiB3aW5kb3cuZG9jdW1lbnQuY3JlYXRlRWxlbWVudD4idSI/ZFM6dVM7RHkudXNlU3luY0V4dGVybmFsU3RvcmU9cGEudXNlU3luY0V4dGVybmFsU3RvcmUhPT12b2lkIDA/cGEudXNlU3luY0V4dGVybmFsU3RvcmU6ZlM7THkuZXhwb3J0cz1EeTt2YXIgbVM9THkuZXhwb3J0cztjb25zdCBoUz1NeC51c2VJbnNlcnRpb25FZmZlY3QscFM9dHlwZW9mIHdpbmRvdzwidSImJnR5cGVvZiB3aW5kb3cuZG9jdW1lbnQ8InUiJiZ0eXBlb2Ygd2luZG93LmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQ8InUiLGdTPXBTP3kudXNlTGF5b3V0RWZmZWN0OnkudXNlRWZmZWN0LHhTPWhTfHxnUywkeT1lPT57Y29uc3QgdD15LnVzZVJlZihbZSwoLi4ucik9PnRbMF0oLi4ucildKS5jdXJyZW50O3JldHVybiB4UygoKT0+e3RbMF09ZX0pLHRbMV19LHZTPSJwb3BzdGF0ZSIsc2g9InB1c2hTdGF0ZSIsaWg9InJlcGxhY2VTdGF0ZSIseVM9Imhhc2hjaGFuZ2UiLGVnPVt2UyxzaCxpaCx5U10sd1M9ZT0+e2Zvcihjb25zdCB0IG9mIGVnKWFkZEV2ZW50TGlzdGVuZXIodCxlKTtyZXR1cm4oKT0+e2Zvcihjb25zdCB0IG9mIGVnKXJlbW92ZUV2ZW50TGlzdGVuZXIodCxlKX19LHp5PShlLHQpPT5tUy51c2VTeW5jRXh0ZXJuYWxTdG9yZSh3UyxlLHQpLGJTPSgpPT5sb2NhdGlvbi5zZWFyY2gsalM9KHtzc3JTZWFyY2g6ZT0iIn09e30pPT56eShiUywoKT0+ZSksdGc9KCk9PmxvY2F0aW9uLnBhdGhuYW1lLE5TPSh7c3NyUGF0aDplfT17fSk9Pnp5KHRnLGU/KCk9PmU6dGcpLFNTPShlLHtyZXBsYWNlOnQ9ITEsc3RhdGU6cj1udWxsfT17fSk9Pmhpc3RvcnlbdD9paDpzaF0ociwiIixlKSxrUz0oZT17fSk9PltOUyhlKSxTU10scmc9U3ltYm9sLmZvcigid291dGVyX3YzIik7aWYodHlwZW9mIGhpc3Rvcnk8InUiJiZ0eXBlb2Ygd2luZG93W3JnXT4idSIpe2Zvcihjb25zdCBlIG9mW3NoLGloXSl7Y29uc3QgdD1oaXN0b3J5W2VdO2hpc3RvcnlbZV09ZnVuY3Rpb24oKXtjb25zdCByPXQuYXBwbHkodGhpcyxhcmd1bWVudHMpLG49bmV3IEV2ZW50KGUpO3JldHVybiBuLmFyZ3VtZW50cz1hcmd1bWVudHMsZGlzcGF0Y2hFdmVudChuKSxyfX1PYmplY3QuZGVmaW5lUHJvcGVydHkod2luZG93LHJnLHt2YWx1ZTohMH0pfWNvbnN0IEVTPShlLHQpPT50LnRvTG93ZXJDYXNlKCkuaW5kZXhPZihlLnRvTG93ZXJDYXNlKCkpPyJ+Iit0OnQuc2xpY2UoZS5sZW5ndGgpfHwiLyIsVnk9KGU9IiIpPT5lPT09Ii8iPyIiOmUsQ1M9KGUsdCk9PmVbMF09PT0ifiI/ZS5zbGljZSgxKTpWeSh0KStlLF9TPShlPSIiLHQpPT5FUyhuZyhWeShlKSksbmcodCkpLG5nPWU9Pnt0cnl7cmV0dXJuIGRlY29kZVVSSShlKX1jYXRjaHtyZXR1cm4gZX19LFV5PXtob29rOmtTLHNlYXJjaEhvb2s6alMscGFyc2VyOm5TLGJhc2U6IiIsc3NyUGF0aDp2b2lkIDAsc3NyU2VhcmNoOnZvaWQgMCxocmVmczplPT5lfSxCeT15LmNyZWF0ZUNvbnRleHQoVXkpLHRsPSgpPT55LnVzZUNvbnRleHQoQnkpLEh5PXt9LFd5PXkuY3JlYXRlQ29udGV4dChIeSkscmw9KCk9PnkudXNlQ29udGV4dChXeSksZHU9ZT0+e2NvbnN0W3Qscl09ZS5ob29rKGUpO3JldHVybltfUyhlLmJhc2UsdCksJHkoKG4scyk9PnIoQ1MobixlLmJhc2UpLHMpKV19LGFoPSgpPT5kdSh0bCgpKSxxeT0oZSx0LHIsbik9Pntjb25zdHtwYXR0ZXJuOnMsa2V5czphfT10IGluc3RhbmNlb2YgUmVnRXhwP3trZXlzOiExLHBhdHRlcm46dH06ZSh0fHwiKiIsbiksbz1zLmV4ZWMocil8fFtdLFtsLC4uLmNdPW87cmV0dXJuIGwhPT12b2lkIDA/WyEwLCgoKT0+e2NvbnN0IHU9YSE9PSExP09iamVjdC5mcm9tRW50cmllcyhhLm1hcCgoZixwKT0+W2YsY1twXV0pKTpvLmdyb3VwcztsZXQgZD17Li4uY307cmV0dXJuIHUmJk9iamVjdC5hc3NpZ24oZCx1KSxkfSkoKSwuLi5uP1tsXTpbXV06WyExLG51bGxdfSxQUz0oe2NoaWxkcmVuOmUsLi4udH0pPT57dmFyIGQsZjtjb25zdCByPXRsKCksbj10Lmhvb2s/VXk6cjtsZXQgcz1uO2NvbnN0W2Esb109KChkPXQuc3NyUGF0aCk9PW51bGw/dm9pZCAwOmQuc3BsaXQoIj8iKSk/P1tdO28mJih0LnNzclNlYXJjaD1vLHQuc3NyUGF0aD1hKSx0LmhyZWZzPXQuaHJlZnM/PygoZj10Lmhvb2spPT1udWxsP3ZvaWQgMDpmLmhyZWZzKTtsZXQgbD15LnVzZVJlZih7fSksYz1sLmN1cnJlbnQsdT1jO2ZvcihsZXQgcCBpbiBuKXtjb25zdCB4PXA9PT0iYmFzZSI/bltwXSsodFtwXXx8IiIpOnRbcF18fG5bcF07Yz09PXUmJnghPT11W3BdJiYobC5jdXJyZW50PXU9ey4uLnV9KSx1W3BdPXgseCE9PW5bcF0mJihzPXUpfXJldHVybiB5LmNyZWF0ZUVsZW1lbnQoQnkuUHJvdmlkZXIse3ZhbHVlOnMsY2hpbGRyZW46ZX0pfSxzZz0oe2NoaWxkcmVuOmUsY29tcG9uZW50OnR9LHIpPT50P3kuY3JlYXRlRWxlbWVudCh0LHtwYXJhbXM6cn0pOnR5cGVvZiBlPT0iZnVuY3Rpb24iP2Uocik6ZSxUUz1lPT57bGV0IHQ9eS51c2VSZWYoSHkpLHI9dC5jdXJyZW50O2Zvcihjb25zdCBuIGluIGUpZVtuXSE9PXJbbl0mJihyPWUpO3JldHVybiBPYmplY3Qua2V5cyhlKS5sZW5ndGg9PT0wJiYocj1lKSx0LmN1cnJlbnQ9cn0saXI9KHtwYXRoOmUsbmVzdDp0LG1hdGNoOnIsLi4ubn0pPT57Y29uc3Qgcz10bCgpLFthXT1kdShzKSxbbyxsLGNdPXI/P3F5KHMucGFyc2VyLGUsYSx0KSx1PVRTKHsuLi5ybCgpLC4uLmx9KTtpZighbylyZXR1cm4gbnVsbDtjb25zdCBkPWM/eS5jcmVhdGVFbGVtZW50KFBTLHtiYXNlOmN9LHNnKG4sdSkpOnNnKG4sdSk7cmV0dXJuIHkuY3JlYXRlRWxlbWVudChXeS5Qcm92aWRlcix7dmFsdWU6dSxjaGlsZHJlbjpkfSl9LHV0PXkuZm9yd2FyZFJlZigoZSx0KT0+e2NvbnN0IHI9dGwoKSxbbixzXT1kdShyKSx7dG86YT0iIixocmVmOm89YSxvbkNsaWNrOmwsYXNDaGlsZDpjLGNoaWxkcmVuOnUsY2xhc3NOYW1lOmQscmVwbGFjZTpmLHN0YXRlOnAsLi4ueH09ZSx2PSR5KHc9Pnt3LmN0cmxLZXl8fHcubWV0YUtleXx8dy5hbHRLZXl8fHcuc2hpZnRLZXl8fHcuYnV0dG9uIT09MHx8KGw9PW51bGx8fGwodyksdy5kZWZhdWx0UHJldmVudGVkfHwody5wcmV2ZW50RGVmYXVsdCgpLHMobyxlKSkpfSksbT1yLmhyZWZzKG9bMF09PT0ifiI/by5zbGljZSgxKTpyLmJhc2UrbyxyKTtyZXR1cm4gYyYmeS5pc1ZhbGlkRWxlbWVudCh1KT95LmNsb25lRWxlbWVudCh1LHtvbkNsaWNrOnYsaHJlZjptfSk6eS5jcmVhdGVFbGVtZW50KCJhIix7Li4ueCxvbkNsaWNrOnYsaHJlZjptLGNsYXNzTmFtZTpkIT1udWxsJiZkLmNhbGw/ZChuPT09byk6ZCxjaGlsZHJlbjp1LHJlZjp0fSl9KSxHeT1lPT5BcnJheS5pc0FycmF5KGUpP2UuZmxhdE1hcCh0PT5HeSh0JiZ0LnR5cGU9PT15LkZyYWdtZW50P3QucHJvcHMuY2hpbGRyZW46dCkpOltlXSxSUz0oe2NoaWxkcmVuOmUsbG9jYXRpb246dH0pPT57Y29uc3Qgcj10bCgpLFtuXT1kdShyKTtmb3IoY29uc3QgcyBvZiBHeShlKSl7bGV0IGE9MDtpZih5LmlzVmFsaWRFbGVtZW50KHMpJiYoYT1xeShyLnBhcnNlcixzLnByb3BzLnBhdGgsdHx8bixzLnByb3BzLm5lc3QpKVswXSlyZXR1cm4geS5jbG9uZUVsZW1lbnQocyx7bWF0Y2g6YX0pfXJldHVybiBudWxsfTt2YXIgRWE9Y2xhc3N7Y29uc3RydWN0b3IoKXt0aGlzLmxpc3RlbmVycz1uZXcgU2V0LHRoaXMuc3Vic2NyaWJlPXRoaXMuc3Vic2NyaWJlLmJpbmQodGhpcyl9c3Vic2NyaWJlKGUpe3JldHVybiB0aGlzLmxpc3RlbmVycy5hZGQoZSksdGhpcy5vblN1YnNjcmliZSgpLCgpPT57dGhpcy5saXN0ZW5lcnMuZGVsZXRlKGUpLHRoaXMub25VbnN1YnNjcmliZSgpfX1oYXNMaXN0ZW5lcnMoKXtyZXR1cm4gdGhpcy5saXN0ZW5lcnMuc2l6ZT4wfW9uU3Vic2NyaWJlKCl7fW9uVW5zdWJzY3JpYmUoKXt9fSxpaT10eXBlb2Ygd2luZG93PiJ1Inx8IkRlbm8iaW4gZ2xvYmFsVGhpcztmdW5jdGlvbiB5cigpe31mdW5jdGlvbiBBUyhlLHQpe3JldHVybiB0eXBlb2YgZT09ImZ1bmN0aW9uIj9lKHQpOmV9ZnVuY3Rpb24gRWYoZSl7cmV0dXJuIHR5cGVvZiBlPT0ibnVtYmVyIiYmZT49MCYmZSE9PTEvMH1mdW5jdGlvbiBReShlLHQpe3JldHVybiBNYXRoLm1heChlKyh0fHwwKS1EYXRlLm5vdygpLDApfWZ1bmN0aW9uIEJpKGUsdCl7cmV0dXJuIHR5cGVvZiBlPT0iZnVuY3Rpb24iP2UodCk6ZX1mdW5jdGlvbiBGcihlLHQpe3JldHVybiB0eXBlb2YgZT09ImZ1bmN0aW9uIj9lKHQpOmV9ZnVuY3Rpb24gaWcoZSx0KXtjb25zdHt0eXBlOnI9ImFsbCIsZXhhY3Q6bixmZXRjaFN0YXR1czpzLHByZWRpY2F0ZTphLHF1ZXJ5S2V5Om8sc3RhbGU6bH09ZTtpZihvKXtpZihuKXtpZih0LnF1ZXJ5SGFzaCE9PW9oKG8sdC5vcHRpb25zKSlyZXR1cm4hMX1lbHNlIGlmKCFFbyh0LnF1ZXJ5S2V5LG8pKXJldHVybiExfWlmKHIhPT0iYWxsIil7Y29uc3QgYz10LmlzQWN0aXZlKCk7aWYocj09PSJhY3RpdmUiJiYhY3x8cj09PSJpbmFjdGl2ZSImJmMpcmV0dXJuITF9cmV0dXJuISh0eXBlb2YgbD09ImJvb2xlYW4iJiZ0LmlzU3RhbGUoKSE9PWx8fHMmJnMhPT10LnN0YXRlLmZldGNoU3RhdHVzfHxhJiYhYSh0KSl9ZnVuY3Rpb24gYWcoZSx0KXtjb25zdHtleGFjdDpyLHN0YXR1czpuLHByZWRpY2F0ZTpzLG11dGF0aW9uS2V5OmF9PWU7aWYoYSl7aWYoIXQub3B0aW9ucy5tdXRhdGlvbktleSlyZXR1cm4hMTtpZihyKXtpZihhaSh0Lm9wdGlvbnMubXV0YXRpb25LZXkpIT09YWkoYSkpcmV0dXJuITF9ZWxzZSBpZighRW8odC5vcHRpb25zLm11dGF0aW9uS2V5LGEpKXJldHVybiExfXJldHVybiEobiYmdC5zdGF0ZS5zdGF0dXMhPT1ufHxzJiYhcyh0KSl9ZnVuY3Rpb24gb2goZSx0KXtyZXR1cm4oKHQ9PW51bGw/dm9pZCAwOnQucXVlcnlLZXlIYXNoRm4pfHxhaSkoZSl9ZnVuY3Rpb24gYWkoZSl7cmV0dXJuIEpTT04uc3RyaW5naWZ5KGUsKHQscik9PkNmKHIpP09iamVjdC5rZXlzKHIpLnNvcnQoKS5yZWR1Y2UoKG4scyk9PihuW3NdPXJbc10sbikse30pOnIpfWZ1bmN0aW9uIEVvKGUsdCl7cmV0dXJuIGU9PT10PyEwOnR5cGVvZiBlIT10eXBlb2YgdD8hMTplJiZ0JiZ0eXBlb2YgZT09Im9iamVjdCImJnR5cGVvZiB0PT0ib2JqZWN0Ij8hT2JqZWN0LmtleXModCkuc29tZShyPT4hRW8oZVtyXSx0W3JdKSk6ITF9ZnVuY3Rpb24gWnkoZSx0KXtpZihlPT09dClyZXR1cm4gZTtjb25zdCByPW9nKGUpJiZvZyh0KTtpZihyfHxDZihlKSYmQ2YodCkpe2NvbnN0IG49cj9lOk9iamVjdC5rZXlzKGUpLHM9bi5sZW5ndGgsYT1yP3Q6T2JqZWN0LmtleXModCksbz1hLmxlbmd0aCxsPXI/W106e307bGV0IGM9MDtmb3IobGV0IHU9MDt1PG87dSsrKXtjb25zdCBkPXI/dTphW3VdOyghciYmbi5pbmNsdWRlcyhkKXx8cikmJmVbZF09PT12b2lkIDAmJnRbZF09PT12b2lkIDA/KGxbZF09dm9pZCAwLGMrKyk6KGxbZF09WnkoZVtkXSx0W2RdKSxsW2RdPT09ZVtkXSYmZVtkXSE9PXZvaWQgMCYmYysrKX1yZXR1cm4gcz09PW8mJmM9PT1zP2U6bH1yZXR1cm4gdH1mdW5jdGlvbiBDYyhlLHQpe2lmKCF0fHxPYmplY3Qua2V5cyhlKS5sZW5ndGghPT1PYmplY3Qua2V5cyh0KS5sZW5ndGgpcmV0dXJuITE7Zm9yKGNvbnN0IHIgaW4gZSlpZihlW3JdIT09dFtyXSlyZXR1cm4hMTtyZXR1cm4hMH1mdW5jdGlvbiBvZyhlKXtyZXR1cm4gQXJyYXkuaXNBcnJheShlKSYmZS5sZW5ndGg9PT1PYmplY3Qua2V5cyhlKS5sZW5ndGh9ZnVuY3Rpb24gQ2YoZSl7aWYoIWxnKGUpKXJldHVybiExO2NvbnN0IHQ9ZS5jb25zdHJ1Y3RvcjtpZih0PT09dm9pZCAwKXJldHVybiEwO2NvbnN0IHI9dC5wcm90b3R5cGU7cmV0dXJuISghbGcocil8fCFyLmhhc093blByb3BlcnR5KCJpc1Byb3RvdHlwZU9mIil8fE9iamVjdC5nZXRQcm90b3R5cGVPZihlKSE9PU9iamVjdC5wcm90b3R5cGUpfWZ1bmN0aW9uIGxnKGUpe3JldHVybiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoZSk9PT0iW29iamVjdCBPYmplY3RdIn1mdW5jdGlvbiBNUyhlKXtyZXR1cm4gbmV3IFByb21pc2UodD0+e3NldFRpbWVvdXQodCxlKX0pfWZ1bmN0aW9uIF9mKGUsdCxyKXtyZXR1cm4gdHlwZW9mIHIuc3RydWN0dXJhbFNoYXJpbmc9PSJmdW5jdGlvbiI/ci5zdHJ1Y3R1cmFsU2hhcmluZyhlLHQpOnIuc3RydWN0dXJhbFNoYXJpbmchPT0hMT9aeShlLHQpOnR9ZnVuY3Rpb24gT1MoZSx0LHI9MCl7Y29uc3Qgbj1bLi4uZSx0XTtyZXR1cm4gciYmbi5sZW5ndGg+cj9uLnNsaWNlKDEpOm59ZnVuY3Rpb24gRlMoZSx0LHI9MCl7Y29uc3Qgbj1bdCwuLi5lXTtyZXR1cm4gciYmbi5sZW5ndGg+cj9uLnNsaWNlKDAsLTEpOm59dmFyIGxoPVN5bWJvbCgpO2Z1bmN0aW9uIEt5KGUsdCl7cmV0dXJuIWUucXVlcnlGbiYmKHQhPW51bGwmJnQuaW5pdGlhbFByb21pc2UpPygpPT50LmluaXRpYWxQcm9taXNlOiFlLnF1ZXJ5Rm58fGUucXVlcnlGbj09PWxoPygpPT5Qcm9taXNlLnJlamVjdChuZXcgRXJyb3IoYE1pc3NpbmcgcXVlcnlGbjogJyR7ZS5xdWVyeUhhc2h9J2ApKTplLnF1ZXJ5Rm59dmFyIFVzLEpuLFppLGZ4LElTPShmeD1jbGFzcyBleHRlbmRzIEVhe2NvbnN0cnVjdG9yKCl7c3VwZXIoKTt1ZSh0aGlzLFVzKTt1ZSh0aGlzLEpuKTt1ZSh0aGlzLFppKTtYKHRoaXMsWmksdD0+e2lmKCFpaSYmd2luZG93LmFkZEV2ZW50TGlzdGVuZXIpe2NvbnN0IHI9KCk9PnQoKTtyZXR1cm4gd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoInZpc2liaWxpdHljaGFuZ2UiLHIsITEpLCgpPT57d2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoInZpc2liaWxpdHljaGFuZ2UiLHIpfX19KX1vblN1YnNjcmliZSgpe0ModGhpcyxKbil8fHRoaXMuc2V0RXZlbnRMaXN0ZW5lcihDKHRoaXMsWmkpKX1vblVuc3Vic2NyaWJlKCl7dmFyIHQ7dGhpcy5oYXNMaXN0ZW5lcnMoKXx8KCh0PUModGhpcyxKbikpPT1udWxsfHx0LmNhbGwodGhpcyksWCh0aGlzLEpuLHZvaWQgMCkpfXNldEV2ZW50TGlzdGVuZXIodCl7dmFyIHI7WCh0aGlzLFppLHQpLChyPUModGhpcyxKbikpPT1udWxsfHxyLmNhbGwodGhpcyksWCh0aGlzLEpuLHQobj0+e3R5cGVvZiBuPT0iYm9vbGVhbiI/dGhpcy5zZXRGb2N1c2VkKG4pOnRoaXMub25Gb2N1cygpfSkpfXNldEZvY3VzZWQodCl7Qyh0aGlzLFVzKSE9PXQmJihYKHRoaXMsVXMsdCksdGhpcy5vbkZvY3VzKCkpfW9uRm9jdXMoKXtjb25zdCB0PXRoaXMuaXNGb2N1c2VkKCk7dGhpcy5saXN0ZW5lcnMuZm9yRWFjaChyPT57cih0KX0pfWlzRm9jdXNlZCgpe3ZhciB0O3JldHVybiB0eXBlb2YgQyh0aGlzLFVzKT09ImJvb2xlYW4iP0ModGhpcyxVcyk6KCh0PWdsb2JhbFRoaXMuZG9jdW1lbnQpPT1udWxsP3ZvaWQgMDp0LnZpc2liaWxpdHlTdGF0ZSkhPT0iaGlkZGVuIn19LFVzPW5ldyBXZWFrTWFwLEpuPW5ldyBXZWFrTWFwLFppPW5ldyBXZWFrTWFwLGZ4KSxjaD1uZXcgSVMsS2ksZXMsWWksbXgsTFM9KG14PWNsYXNzIGV4dGVuZHMgRWF7Y29uc3RydWN0b3IoKXtzdXBlcigpO3VlKHRoaXMsS2ksITApO3VlKHRoaXMsZXMpO3VlKHRoaXMsWWkpO1godGhpcyxZaSx0PT57aWYoIWlpJiZ3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcil7Y29uc3Qgcj0oKT0+dCghMCksbj0oKT0+dCghMSk7cmV0dXJuIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCJvbmxpbmUiLHIsITEpLHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCJvZmZsaW5lIixuLCExKSwoKT0+e3dpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCJvbmxpbmUiLHIpLHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCJvZmZsaW5lIixuKX19fSl9b25TdWJzY3JpYmUoKXtDKHRoaXMsZXMpfHx0aGlzLnNldEV2ZW50TGlzdGVuZXIoQyh0aGlzLFlpKSl9b25VbnN1YnNjcmliZSgpe3ZhciB0O3RoaXMuaGFzTGlzdGVuZXJzKCl8fCgodD1DKHRoaXMsZXMpKT09bnVsbHx8dC5jYWxsKHRoaXMpLFgodGhpcyxlcyx2b2lkIDApKX1zZXRFdmVudExpc3RlbmVyKHQpe3ZhciByO1godGhpcyxZaSx0KSwocj1DKHRoaXMsZXMpKT09bnVsbHx8ci5jYWxsKHRoaXMpLFgodGhpcyxlcyx0KHRoaXMuc2V0T25saW5lLmJpbmQodGhpcykpKX1zZXRPbmxpbmUodCl7Qyh0aGlzLEtpKSE9PXQmJihYKHRoaXMsS2ksdCksdGhpcy5saXN0ZW5lcnMuZm9yRWFjaChuPT57bih0KX0pKX1pc09ubGluZSgpe3JldHVybiBDKHRoaXMsS2kpfX0sS2k9bmV3IFdlYWtNYXAsZXM9bmV3IFdlYWtNYXAsWWk9bmV3IFdlYWtNYXAsbXgpLF9jPW5ldyBMUztmdW5jdGlvbiBQZigpe2xldCBlLHQ7Y29uc3Qgcj1uZXcgUHJvbWlzZSgocyxhKT0+e2U9cyx0PWF9KTtyLnN0YXR1cz0icGVuZGluZyIsci5jYXRjaCgoKT0+e30pO2Z1bmN0aW9uIG4ocyl7T2JqZWN0LmFzc2lnbihyLHMpLGRlbGV0ZSByLnJlc29sdmUsZGVsZXRlIHIucmVqZWN0fXJldHVybiByLnJlc29sdmU9cz0+e24oe3N0YXR1czoiZnVsZmlsbGVkIix2YWx1ZTpzfSksZShzKX0sci5yZWplY3Q9cz0+e24oe3N0YXR1czoicmVqZWN0ZWQiLHJlYXNvbjpzfSksdChzKX0scn1mdW5jdGlvbiBEUyhlKXtyZXR1cm4gTWF0aC5taW4oMWUzKjIqKmUsM2U0KX1mdW5jdGlvbiBZeShlKXtyZXR1cm4oZT8/Im9ubGluZSIpPT09Im9ubGluZSI/X2MuaXNPbmxpbmUoKTohMH12YXIgWHk9Y2xhc3MgZXh0ZW5kcyBFcnJvcntjb25zdHJ1Y3RvcihlKXtzdXBlcigiQ2FuY2VsbGVkRXJyb3IiKSx0aGlzLnJldmVydD1lPT1udWxsP3ZvaWQgMDplLnJldmVydCx0aGlzLnNpbGVudD1lPT1udWxsP3ZvaWQgMDplLnNpbGVudH19O2Z1bmN0aW9uIGFkKGUpe3JldHVybiBlIGluc3RhbmNlb2YgWHl9ZnVuY3Rpb24gSnkoZSl7bGV0IHQ9ITEscj0wLG49ITEscztjb25zdCBhPVBmKCksbz1tPT57dmFyIHc7bnx8KHAobmV3IFh5KG0pKSwodz1lLmFib3J0KT09bnVsbHx8dy5jYWxsKGUpKX0sbD0oKT0+e3Q9ITB9LGM9KCk9Pnt0PSExfSx1PSgpPT5jaC5pc0ZvY3VzZWQoKSYmKGUubmV0d29ya01vZGU9PT0iYWx3YXlzInx8X2MuaXNPbmxpbmUoKSkmJmUuY2FuUnVuKCksZD0oKT0+WXkoZS5uZXR3b3JrTW9kZSkmJmUuY2FuUnVuKCksZj1tPT57dmFyIHc7bnx8KG49ITAsKHc9ZS5vblN1Y2Nlc3MpPT1udWxsfHx3LmNhbGwoZSxtKSxzPT1udWxsfHxzKCksYS5yZXNvbHZlKG0pKX0scD1tPT57dmFyIHc7bnx8KG49ITAsKHc9ZS5vbkVycm9yKT09bnVsbHx8dy5jYWxsKGUsbSkscz09bnVsbHx8cygpLGEucmVqZWN0KG0pKX0seD0oKT0+bmV3IFByb21pc2UobT0+e3ZhciB3O3M9aD0+eyhufHx1KCkpJiZtKGgpfSwodz1lLm9uUGF1c2UpPT1udWxsfHx3LmNhbGwoZSl9KS50aGVuKCgpPT57dmFyIG07cz12b2lkIDAsbnx8KG09ZS5vbkNvbnRpbnVlKT09bnVsbHx8bS5jYWxsKGUpfSksdj0oKT0+e2lmKG4pcmV0dXJuO2xldCBtO2NvbnN0IHc9cj09PTA/ZS5pbml0aWFsUHJvbWlzZTp2b2lkIDA7dHJ5e209dz8/ZS5mbigpfWNhdGNoKGgpe209UHJvbWlzZS5yZWplY3QoaCl9UHJvbWlzZS5yZXNvbHZlKG0pLnRoZW4oZikuY2F0Y2goaD0+e3ZhciBfO2lmKG4pcmV0dXJuO2NvbnN0IGc9ZS5yZXRyeT8/KGlpPzA6MyksYj1lLnJldHJ5RGVsYXk/P0RTLE49dHlwZW9mIGI9PSJmdW5jdGlvbiI/YihyLGgpOmIsUz1nPT09ITB8fHR5cGVvZiBnPT0ibnVtYmVyIiYmcjxnfHx0eXBlb2YgZz09ImZ1bmN0aW9uIiYmZyhyLGgpO2lmKHR8fCFTKXtwKGgpO3JldHVybn1yKyssKF89ZS5vbkZhaWwpPT1udWxsfHxfLmNhbGwoZSxyLGgpLE1TKE4pLnRoZW4oKCk9PnUoKT92b2lkIDA6eCgpKS50aGVuKCgpPT57dD9wKGgpOnYoKX0pfSl9O3JldHVybntwcm9taXNlOmEsY2FuY2VsOm8sY29udGludWU6KCk9PihzPT1udWxsfHxzKCksYSksY2FuY2VsUmV0cnk6bCxjb250aW51ZVJldHJ5OmMsY2FuU3RhcnQ6ZCxzdGFydDooKT0+KGQoKT92KCk6eCgpLnRoZW4odiksYSl9fWZ1bmN0aW9uICRTKCl7bGV0IGU9W10sdD0wLHI9bD0+e2woKX0sbj1sPT57bCgpfSxzPWw9PnNldFRpbWVvdXQobCwwKTtjb25zdCBhPWw9Pnt0P2UucHVzaChsKTpzKCgpPT57cihsKX0pfSxvPSgpPT57Y29uc3QgbD1lO2U9W10sbC5sZW5ndGgmJnMoKCk9PntuKCgpPT57bC5mb3JFYWNoKGM9PntyKGMpfSl9KX0pfTtyZXR1cm57YmF0Y2g6bD0+e2xldCBjO3QrKzt0cnl7Yz1sKCl9ZmluYWxseXt0LS0sdHx8bygpfXJldHVybiBjfSxiYXRjaENhbGxzOmw9PiguLi5jKT0+e2EoKCk9PntsKC4uLmMpfSl9LHNjaGVkdWxlOmEsc2V0Tm90aWZ5RnVuY3Rpb246bD0+e3I9bH0sc2V0QmF0Y2hOb3RpZnlGdW5jdGlvbjpsPT57bj1sfSxzZXRTY2hlZHVsZXI6bD0+e3M9bH19fXZhciB5dD0kUygpLEJzLGh4LGUwPShoeD1jbGFzc3tjb25zdHJ1Y3Rvcigpe3VlKHRoaXMsQnMpfWRlc3Ryb3koKXt0aGlzLmNsZWFyR2NUaW1lb3V0KCl9c2NoZWR1bGVHYygpe3RoaXMuY2xlYXJHY1RpbWVvdXQoKSxFZih0aGlzLmdjVGltZSkmJlgodGhpcyxCcyxzZXRUaW1lb3V0KCgpPT57dGhpcy5vcHRpb25hbFJlbW92ZSgpfSx0aGlzLmdjVGltZSkpfXVwZGF0ZUdjVGltZShlKXt0aGlzLmdjVGltZT1NYXRoLm1heCh0aGlzLmdjVGltZXx8MCxlPz8oaWk/MS8wOjUqNjAqMWUzKSl9Y2xlYXJHY1RpbWVvdXQoKXtDKHRoaXMsQnMpJiYoY2xlYXJUaW1lb3V0KEModGhpcyxCcykpLFgodGhpcyxCcyx2b2lkIDApKX19LEJzPW5ldyBXZWFrTWFwLGh4KSxYaSxKaSx2cixBdCxxbyxIcyxBcix2bixweCx6Uz0ocHg9Y2xhc3MgZXh0ZW5kcyBlMHtjb25zdHJ1Y3Rvcih0KXtzdXBlcigpO3VlKHRoaXMsQXIpO3VlKHRoaXMsWGkpO3VlKHRoaXMsSmkpO3VlKHRoaXMsdnIpO3VlKHRoaXMsQXQpO3VlKHRoaXMscW8pO3VlKHRoaXMsSHMpO1godGhpcyxIcywhMSksWCh0aGlzLHFvLHQuZGVmYXVsdE9wdGlvbnMpLHRoaXMuc2V0T3B0aW9ucyh0Lm9wdGlvbnMpLHRoaXMub2JzZXJ2ZXJzPVtdLFgodGhpcyx2cix0LmNhY2hlKSx0aGlzLnF1ZXJ5S2V5PXQucXVlcnlLZXksdGhpcy5xdWVyeUhhc2g9dC5xdWVyeUhhc2gsWCh0aGlzLFhpLFZTKHRoaXMub3B0aW9ucykpLHRoaXMuc3RhdGU9dC5zdGF0ZT8/Qyh0aGlzLFhpKSx0aGlzLnNjaGVkdWxlR2MoKX1nZXQgbWV0YSgpe3JldHVybiB0aGlzLm9wdGlvbnMubWV0YX1nZXQgcHJvbWlzZSgpe3ZhciB0O3JldHVybih0PUModGhpcyxBdCkpPT1udWxsP3ZvaWQgMDp0LnByb21pc2V9c2V0T3B0aW9ucyh0KXt0aGlzLm9wdGlvbnM9ey4uLkModGhpcyxxbyksLi4udH0sdGhpcy51cGRhdGVHY1RpbWUodGhpcy5vcHRpb25zLmdjVGltZSl9b3B0aW9uYWxSZW1vdmUoKXshdGhpcy5vYnNlcnZlcnMubGVuZ3RoJiZ0aGlzLnN0YXRlLmZldGNoU3RhdHVzPT09ImlkbGUiJiZDKHRoaXMsdnIpLnJlbW92ZSh0aGlzKX1zZXREYXRhKHQscil7Y29uc3Qgbj1fZih0aGlzLnN0YXRlLmRhdGEsdCx0aGlzLm9wdGlvbnMpO3JldHVybiB2ZSh0aGlzLEFyLHZuKS5jYWxsKHRoaXMse2RhdGE6bix0eXBlOiJzdWNjZXNzIixkYXRhVXBkYXRlZEF0OnI9PW51bGw/dm9pZCAwOnIudXBkYXRlZEF0LG1hbnVhbDpyPT1udWxsP3ZvaWQgMDpyLm1hbnVhbH0pLG59c2V0U3RhdGUodCxyKXt2ZSh0aGlzLEFyLHZuKS5jYWxsKHRoaXMse3R5cGU6InNldFN0YXRlIixzdGF0ZTp0LHNldFN0YXRlT3B0aW9uczpyfSl9Y2FuY2VsKHQpe3ZhciBuLHM7Y29uc3Qgcj0obj1DKHRoaXMsQXQpKT09bnVsbD92b2lkIDA6bi5wcm9taXNlO3JldHVybihzPUModGhpcyxBdCkpPT1udWxsfHxzLmNhbmNlbCh0KSxyP3IudGhlbih5cikuY2F0Y2goeXIpOlByb21pc2UucmVzb2x2ZSgpfWRlc3Ryb3koKXtzdXBlci5kZXN0cm95KCksdGhpcy5jYW5jZWwoe3NpbGVudDohMH0pfXJlc2V0KCl7dGhpcy5kZXN0cm95KCksdGhpcy5zZXRTdGF0ZShDKHRoaXMsWGkpKX1pc0FjdGl2ZSgpe3JldHVybiB0aGlzLm9ic2VydmVycy5zb21lKHQ9PkZyKHQub3B0aW9ucy5lbmFibGVkLHRoaXMpIT09ITEpfWlzRGlzYWJsZWQoKXtyZXR1cm4gdGhpcy5nZXRPYnNlcnZlcnNDb3VudCgpPjA/IXRoaXMuaXNBY3RpdmUoKTp0aGlzLm9wdGlvbnMucXVlcnlGbj09PWxofHx0aGlzLnN0YXRlLmRhdGFVcGRhdGVDb3VudCt0aGlzLnN0YXRlLmVycm9yVXBkYXRlQ291bnQ9PT0wfWlzU3RhbGUoKXtyZXR1cm4gdGhpcy5zdGF0ZS5pc0ludmFsaWRhdGVkPyEwOnRoaXMuZ2V0T2JzZXJ2ZXJzQ291bnQoKT4wP3RoaXMub2JzZXJ2ZXJzLnNvbWUodD0+dC5nZXRDdXJyZW50UmVzdWx0KCkuaXNTdGFsZSk6dGhpcy5zdGF0ZS5kYXRhPT09dm9pZCAwfWlzU3RhbGVCeVRpbWUodD0wKXtyZXR1cm4gdGhpcy5zdGF0ZS5pc0ludmFsaWRhdGVkfHx0aGlzLnN0YXRlLmRhdGE9PT12b2lkIDB8fCFReSh0aGlzLnN0YXRlLmRhdGFVcGRhdGVkQXQsdCl9b25Gb2N1cygpe3ZhciByO2NvbnN0IHQ9dGhpcy5vYnNlcnZlcnMuZmluZChuPT5uLnNob3VsZEZldGNoT25XaW5kb3dGb2N1cygpKTt0PT1udWxsfHx0LnJlZmV0Y2goe2NhbmNlbFJlZmV0Y2g6ITF9KSwocj1DKHRoaXMsQXQpKT09bnVsbHx8ci5jb250aW51ZSgpfW9uT25saW5lKCl7dmFyIHI7Y29uc3QgdD10aGlzLm9ic2VydmVycy5maW5kKG49Pm4uc2hvdWxkRmV0Y2hPblJlY29ubmVjdCgpKTt0PT1udWxsfHx0LnJlZmV0Y2goe2NhbmNlbFJlZmV0Y2g6ITF9KSwocj1DKHRoaXMsQXQpKT09bnVsbHx8ci5jb250aW51ZSgpfWFkZE9ic2VydmVyKHQpe3RoaXMub2JzZXJ2ZXJzLmluY2x1ZGVzKHQpfHwodGhpcy5vYnNlcnZlcnMucHVzaCh0KSx0aGlzLmNsZWFyR2NUaW1lb3V0KCksQyh0aGlzLHZyKS5ub3RpZnkoe3R5cGU6Im9ic2VydmVyQWRkZWQiLHF1ZXJ5OnRoaXMsb2JzZXJ2ZXI6dH0pKX1yZW1vdmVPYnNlcnZlcih0KXt0aGlzLm9ic2VydmVycy5pbmNsdWRlcyh0KSYmKHRoaXMub2JzZXJ2ZXJzPXRoaXMub2JzZXJ2ZXJzLmZpbHRlcihyPT5yIT09dCksdGhpcy5vYnNlcnZlcnMubGVuZ3RofHwoQyh0aGlzLEF0KSYmKEModGhpcyxIcyk/Qyh0aGlzLEF0KS5jYW5jZWwoe3JldmVydDohMH0pOkModGhpcyxBdCkuY2FuY2VsUmV0cnkoKSksdGhpcy5zY2hlZHVsZUdjKCkpLEModGhpcyx2cikubm90aWZ5KHt0eXBlOiJvYnNlcnZlclJlbW92ZWQiLHF1ZXJ5OnRoaXMsb2JzZXJ2ZXI6dH0pKX1nZXRPYnNlcnZlcnNDb3VudCgpe3JldHVybiB0aGlzLm9ic2VydmVycy5sZW5ndGh9aW52YWxpZGF0ZSgpe3RoaXMuc3RhdGUuaXNJbnZhbGlkYXRlZHx8dmUodGhpcyxBcix2bikuY2FsbCh0aGlzLHt0eXBlOiJpbnZhbGlkYXRlIn0pfWZldGNoKHQscil7dmFyIGMsdSxkO2lmKHRoaXMuc3RhdGUuZmV0Y2hTdGF0dXMhPT0iaWRsZSIpe2lmKHRoaXMuc3RhdGUuZGF0YSE9PXZvaWQgMCYmKHIhPW51bGwmJnIuY2FuY2VsUmVmZXRjaCkpdGhpcy5jYW5jZWwoe3NpbGVudDohMH0pO2Vsc2UgaWYoQyh0aGlzLEF0KSlyZXR1cm4gQyh0aGlzLEF0KS5jb250aW51ZVJldHJ5KCksQyh0aGlzLEF0KS5wcm9taXNlfWlmKHQmJnRoaXMuc2V0T3B0aW9ucyh0KSwhdGhpcy5vcHRpb25zLnF1ZXJ5Rm4pe2NvbnN0IGY9dGhpcy5vYnNlcnZlcnMuZmluZChwPT5wLm9wdGlvbnMucXVlcnlGbik7ZiYmdGhpcy5zZXRPcHRpb25zKGYub3B0aW9ucyl9Y29uc3Qgbj1uZXcgQWJvcnRDb250cm9sbGVyLHM9Zj0+e09iamVjdC5kZWZpbmVQcm9wZXJ0eShmLCJzaWduYWwiLHtlbnVtZXJhYmxlOiEwLGdldDooKT0+KFgodGhpcyxIcywhMCksbi5zaWduYWwpfSl9LGE9KCk9Pntjb25zdCBmPUt5KHRoaXMub3B0aW9ucyxyKSxwPXtxdWVyeUtleTp0aGlzLnF1ZXJ5S2V5LG1ldGE6dGhpcy5tZXRhfTtyZXR1cm4gcyhwKSxYKHRoaXMsSHMsITEpLHRoaXMub3B0aW9ucy5wZXJzaXN0ZXI/dGhpcy5vcHRpb25zLnBlcnNpc3RlcihmLHAsdGhpcyk6ZihwKX0sbz17ZmV0Y2hPcHRpb25zOnIsb3B0aW9uczp0aGlzLm9wdGlvbnMscXVlcnlLZXk6dGhpcy5xdWVyeUtleSxzdGF0ZTp0aGlzLnN0YXRlLGZldGNoRm46YX07cyhvKSwoYz10aGlzLm9wdGlvbnMuYmVoYXZpb3IpPT1udWxsfHxjLm9uRmV0Y2gobyx0aGlzKSxYKHRoaXMsSmksdGhpcy5zdGF0ZSksKHRoaXMuc3RhdGUuZmV0Y2hTdGF0dXM9PT0iaWRsZSJ8fHRoaXMuc3RhdGUuZmV0Y2hNZXRhIT09KCh1PW8uZmV0Y2hPcHRpb25zKT09bnVsbD92b2lkIDA6dS5tZXRhKSkmJnZlKHRoaXMsQXIsdm4pLmNhbGwodGhpcyx7dHlwZToiZmV0Y2giLG1ldGE6KGQ9by5mZXRjaE9wdGlvbnMpPT1udWxsP3ZvaWQgMDpkLm1ldGF9KTtjb25zdCBsPWY9Pnt2YXIgcCx4LHYsbTthZChmKSYmZi5zaWxlbnR8fHZlKHRoaXMsQXIsdm4pLmNhbGwodGhpcyx7dHlwZToiZXJyb3IiLGVycm9yOmZ9KSxhZChmKXx8KCh4PShwPUModGhpcyx2cikuY29uZmlnKS5vbkVycm9yKT09bnVsbHx8eC5jYWxsKHAsZix0aGlzKSwobT0odj1DKHRoaXMsdnIpLmNvbmZpZykub25TZXR0bGVkKT09bnVsbHx8bS5jYWxsKHYsdGhpcy5zdGF0ZS5kYXRhLGYsdGhpcykpLHRoaXMuc2NoZWR1bGVHYygpfTtyZXR1cm4gWCh0aGlzLEF0LEp5KHtpbml0aWFsUHJvbWlzZTpyPT1udWxsP3ZvaWQgMDpyLmluaXRpYWxQcm9taXNlLGZuOm8uZmV0Y2hGbixhYm9ydDpuLmFib3J0LmJpbmQobiksb25TdWNjZXNzOmY9Pnt2YXIgcCx4LHYsbTtpZihmPT09dm9pZCAwKXtsKG5ldyBFcnJvcihgJHt0aGlzLnF1ZXJ5SGFzaH0gZGF0YSBpcyB1bmRlZmluZWRgKSk7cmV0dXJufXRyeXt0aGlzLnNldERhdGEoZil9Y2F0Y2godyl7bCh3KTtyZXR1cm59KHg9KHA9Qyh0aGlzLHZyKS5jb25maWcpLm9uU3VjY2Vzcyk9PW51bGx8fHguY2FsbChwLGYsdGhpcyksKG09KHY9Qyh0aGlzLHZyKS5jb25maWcpLm9uU2V0dGxlZCk9PW51bGx8fG0uY2FsbCh2LGYsdGhpcy5zdGF0ZS5lcnJvcix0aGlzKSx0aGlzLnNjaGVkdWxlR2MoKX0sb25FcnJvcjpsLG9uRmFpbDooZixwKT0+e3ZlKHRoaXMsQXIsdm4pLmNhbGwodGhpcyx7dHlwZToiZmFpbGVkIixmYWlsdXJlQ291bnQ6ZixlcnJvcjpwfSl9LG9uUGF1c2U6KCk9Pnt2ZSh0aGlzLEFyLHZuKS5jYWxsKHRoaXMse3R5cGU6InBhdXNlIn0pfSxvbkNvbnRpbnVlOigpPT57dmUodGhpcyxBcix2bikuY2FsbCh0aGlzLHt0eXBlOiJjb250aW51ZSJ9KX0scmV0cnk6by5vcHRpb25zLnJldHJ5LHJldHJ5RGVsYXk6by5vcHRpb25zLnJldHJ5RGVsYXksbmV0d29ya01vZGU6by5vcHRpb25zLm5ldHdvcmtNb2RlLGNhblJ1bjooKT0+ITB9KSksQyh0aGlzLEF0KS5zdGFydCgpfX0sWGk9bmV3IFdlYWtNYXAsSmk9bmV3IFdlYWtNYXAsdnI9bmV3IFdlYWtNYXAsQXQ9bmV3IFdlYWtNYXAscW89bmV3IFdlYWtNYXAsSHM9bmV3IFdlYWtNYXAsQXI9bmV3IFdlYWtTZXQsdm49ZnVuY3Rpb24odCl7Y29uc3Qgcj1uPT57c3dpdGNoKHQudHlwZSl7Y2FzZSJmYWlsZWQiOnJldHVybnsuLi5uLGZldGNoRmFpbHVyZUNvdW50OnQuZmFpbHVyZUNvdW50LGZldGNoRmFpbHVyZVJlYXNvbjp0LmVycm9yfTtjYXNlInBhdXNlIjpyZXR1cm57Li4ubixmZXRjaFN0YXR1czoicGF1c2VkIn07Y2FzZSJjb250aW51ZSI6cmV0dXJuey4uLm4sZmV0Y2hTdGF0dXM6ImZldGNoaW5nIn07Y2FzZSJmZXRjaCI6cmV0dXJuey4uLm4sLi4udDAobi5kYXRhLHRoaXMub3B0aW9ucyksZmV0Y2hNZXRhOnQubWV0YT8/bnVsbH07Y2FzZSJzdWNjZXNzIjpyZXR1cm57Li4ubixkYXRhOnQuZGF0YSxkYXRhVXBkYXRlQ291bnQ6bi5kYXRhVXBkYXRlQ291bnQrMSxkYXRhVXBkYXRlZEF0OnQuZGF0YVVwZGF0ZWRBdD8/RGF0ZS5ub3coKSxlcnJvcjpudWxsLGlzSW52YWxpZGF0ZWQ6ITEsc3RhdHVzOiJzdWNjZXNzIiwuLi4hdC5tYW51YWwmJntmZXRjaFN0YXR1czoiaWRsZSIsZmV0Y2hGYWlsdXJlQ291bnQ6MCxmZXRjaEZhaWx1cmVSZWFzb246bnVsbH19O2Nhc2UiZXJyb3IiOmNvbnN0IHM9dC5lcnJvcjtyZXR1cm4gYWQocykmJnMucmV2ZXJ0JiZDKHRoaXMsSmkpP3suLi5DKHRoaXMsSmkpLGZldGNoU3RhdHVzOiJpZGxlIn06ey4uLm4sZXJyb3I6cyxlcnJvclVwZGF0ZUNvdW50Om4uZXJyb3JVcGRhdGVDb3VudCsxLGVycm9yVXBkYXRlZEF0OkRhdGUubm93KCksZmV0Y2hGYWlsdXJlQ291bnQ6bi5mZXRjaEZhaWx1cmVDb3VudCsxLGZldGNoRmFpbHVyZVJlYXNvbjpzLGZldGNoU3RhdHVzOiJpZGxlIixzdGF0dXM6ImVycm9yIn07Y2FzZSJpbnZhbGlkYXRlIjpyZXR1cm57Li4ubixpc0ludmFsaWRhdGVkOiEwfTtjYXNlInNldFN0YXRlIjpyZXR1cm57Li4ubiwuLi50LnN0YXRlfX19O3RoaXMuc3RhdGU9cih0aGlzLnN0YXRlKSx5dC5iYXRjaCgoKT0+e3RoaXMub2JzZXJ2ZXJzLmZvckVhY2gobj0+e24ub25RdWVyeVVwZGF0ZSgpfSksQyh0aGlzLHZyKS5ub3RpZnkoe3F1ZXJ5OnRoaXMsdHlwZToidXBkYXRlZCIsYWN0aW9uOnR9KX0pfSxweCk7ZnVuY3Rpb24gdDAoZSx0KXtyZXR1cm57ZmV0Y2hGYWlsdXJlQ291bnQ6MCxmZXRjaEZhaWx1cmVSZWFzb246bnVsbCxmZXRjaFN0YXR1czpZeSh0Lm5ldHdvcmtNb2RlKT8iZmV0Y2hpbmciOiJwYXVzZWQiLC4uLmU9PT12b2lkIDAmJntlcnJvcjpudWxsLHN0YXR1czoicGVuZGluZyJ9fX1mdW5jdGlvbiBWUyhlKXtjb25zdCB0PXR5cGVvZiBlLmluaXRpYWxEYXRhPT0iZnVuY3Rpb24iP2UuaW5pdGlhbERhdGEoKTplLmluaXRpYWxEYXRhLHI9dCE9PXZvaWQgMCxuPXI/dHlwZW9mIGUuaW5pdGlhbERhdGFVcGRhdGVkQXQ9PSJmdW5jdGlvbiI/ZS5pbml0aWFsRGF0YVVwZGF0ZWRBdCgpOmUuaW5pdGlhbERhdGFVcGRhdGVkQXQ6MDtyZXR1cm57ZGF0YTp0LGRhdGFVcGRhdGVDb3VudDowLGRhdGFVcGRhdGVkQXQ6cj9uPz9EYXRlLm5vdygpOjAsZXJyb3I6bnVsbCxlcnJvclVwZGF0ZUNvdW50OjAsZXJyb3JVcGRhdGVkQXQ6MCxmZXRjaEZhaWx1cmVDb3VudDowLGZldGNoRmFpbHVyZVJlYXNvbjpudWxsLGZldGNoTWV0YTpudWxsLGlzSW52YWxpZGF0ZWQ6ITEsc3RhdHVzOnI/InN1Y2Nlc3MiOiJwZW5kaW5nIixmZXRjaFN0YXR1czoiaWRsZSJ9fXZhciBRcixneCxVUz0oZ3g9Y2xhc3MgZXh0ZW5kcyBFYXtjb25zdHJ1Y3Rvcih0PXt9KXtzdXBlcigpO3VlKHRoaXMsUXIpO3RoaXMuY29uZmlnPXQsWCh0aGlzLFFyLG5ldyBNYXApfWJ1aWxkKHQscixuKXtjb25zdCBzPXIucXVlcnlLZXksYT1yLnF1ZXJ5SGFzaD8/b2gocyxyKTtsZXQgbz10aGlzLmdldChhKTtyZXR1cm4gb3x8KG89bmV3IHpTKHtjYWNoZTp0aGlzLHF1ZXJ5S2V5OnMscXVlcnlIYXNoOmEsb3B0aW9uczp0LmRlZmF1bHRRdWVyeU9wdGlvbnMociksc3RhdGU6bixkZWZhdWx0T3B0aW9uczp0LmdldFF1ZXJ5RGVmYXVsdHMocyl9KSx0aGlzLmFkZChvKSksb31hZGQodCl7Qyh0aGlzLFFyKS5oYXModC5xdWVyeUhhc2gpfHwoQyh0aGlzLFFyKS5zZXQodC5xdWVyeUhhc2gsdCksdGhpcy5ub3RpZnkoe3R5cGU6ImFkZGVkIixxdWVyeTp0fSkpfXJlbW92ZSh0KXtjb25zdCByPUModGhpcyxRcikuZ2V0KHQucXVlcnlIYXNoKTtyJiYodC5kZXN0cm95KCkscj09PXQmJkModGhpcyxRcikuZGVsZXRlKHQucXVlcnlIYXNoKSx0aGlzLm5vdGlmeSh7dHlwZToicmVtb3ZlZCIscXVlcnk6dH0pKX1jbGVhcigpe3l0LmJhdGNoKCgpPT57dGhpcy5nZXRBbGwoKS5mb3JFYWNoKHQ9Pnt0aGlzLnJlbW92ZSh0KX0pfSl9Z2V0KHQpe3JldHVybiBDKHRoaXMsUXIpLmdldCh0KX1nZXRBbGwoKXtyZXR1cm5bLi4uQyh0aGlzLFFyKS52YWx1ZXMoKV19ZmluZCh0KXtjb25zdCByPXtleGFjdDohMCwuLi50fTtyZXR1cm4gdGhpcy5nZXRBbGwoKS5maW5kKG49PmlnKHIsbikpfWZpbmRBbGwodD17fSl7Y29uc3Qgcj10aGlzLmdldEFsbCgpO3JldHVybiBPYmplY3Qua2V5cyh0KS5sZW5ndGg+MD9yLmZpbHRlcihuPT5pZyh0LG4pKTpyfW5vdGlmeSh0KXt5dC5iYXRjaCgoKT0+e3RoaXMubGlzdGVuZXJzLmZvckVhY2gocj0+e3IodCl9KX0pfW9uRm9jdXMoKXt5dC5iYXRjaCgoKT0+e3RoaXMuZ2V0QWxsKCkuZm9yRWFjaCh0PT57dC5vbkZvY3VzKCl9KX0pfW9uT25saW5lKCl7eXQuYmF0Y2goKCk9Pnt0aGlzLmdldEFsbCgpLmZvckVhY2godD0+e3Qub25PbmxpbmUoKX0pfSl9fSxRcj1uZXcgV2Vha01hcCxneCksWnIsenQsV3MsS3IscW4seHgsQlM9KHh4PWNsYXNzIGV4dGVuZHMgZTB7Y29uc3RydWN0b3IodCl7c3VwZXIoKTt1ZSh0aGlzLEtyKTt1ZSh0aGlzLFpyKTt1ZSh0aGlzLHp0KTt1ZSh0aGlzLFdzKTt0aGlzLm11dGF0aW9uSWQ9dC5tdXRhdGlvbklkLFgodGhpcyx6dCx0Lm11dGF0aW9uQ2FjaGUpLFgodGhpcyxacixbXSksdGhpcy5zdGF0ZT10LnN0YXRlfHxyMCgpLHRoaXMuc2V0T3B0aW9ucyh0Lm9wdGlvbnMpLHRoaXMuc2NoZWR1bGVHYygpfXNldE9wdGlvbnModCl7dGhpcy5vcHRpb25zPXQsdGhpcy51cGRhdGVHY1RpbWUodGhpcy5vcHRpb25zLmdjVGltZSl9Z2V0IG1ldGEoKXtyZXR1cm4gdGhpcy5vcHRpb25zLm1ldGF9YWRkT2JzZXJ2ZXIodCl7Qyh0aGlzLFpyKS5pbmNsdWRlcyh0KXx8KEModGhpcyxacikucHVzaCh0KSx0aGlzLmNsZWFyR2NUaW1lb3V0KCksQyh0aGlzLHp0KS5ub3RpZnkoe3R5cGU6Im9ic2VydmVyQWRkZWQiLG11dGF0aW9uOnRoaXMsb2JzZXJ2ZXI6dH0pKX1yZW1vdmVPYnNlcnZlcih0KXtYKHRoaXMsWnIsQyh0aGlzLFpyKS5maWx0ZXIocj0+ciE9PXQpKSx0aGlzLnNjaGVkdWxlR2MoKSxDKHRoaXMsenQpLm5vdGlmeSh7dHlwZToib2JzZXJ2ZXJSZW1vdmVkIixtdXRhdGlvbjp0aGlzLG9ic2VydmVyOnR9KX1vcHRpb25hbFJlbW92ZSgpe0ModGhpcyxacikubGVuZ3RofHwodGhpcy5zdGF0ZS5zdGF0dXM9PT0icGVuZGluZyI/dGhpcy5zY2hlZHVsZUdjKCk6Qyh0aGlzLHp0KS5yZW1vdmUodGhpcykpfWNvbnRpbnVlKCl7dmFyIHQ7cmV0dXJuKCh0PUModGhpcyxXcykpPT1udWxsP3ZvaWQgMDp0LmNvbnRpbnVlKCkpPz90aGlzLmV4ZWN1dGUodGhpcy5zdGF0ZS52YXJpYWJsZXMpfWFzeW5jIGV4ZWN1dGUodCl7dmFyIHMsYSxvLGwsYyx1LGQsZixwLHgsdixtLHcsaCxnLGIsTixTLF8saztYKHRoaXMsV3MsSnkoe2ZuOigpPT50aGlzLm9wdGlvbnMubXV0YXRpb25Gbj90aGlzLm9wdGlvbnMubXV0YXRpb25Gbih0KTpQcm9taXNlLnJlamVjdChuZXcgRXJyb3IoIk5vIG11dGF0aW9uRm4gZm91bmQiKSksb25GYWlsOihULEwpPT57dmUodGhpcyxLcixxbikuY2FsbCh0aGlzLHt0eXBlOiJmYWlsZWQiLGZhaWx1cmVDb3VudDpULGVycm9yOkx9KX0sb25QYXVzZTooKT0+e3ZlKHRoaXMsS3IscW4pLmNhbGwodGhpcyx7dHlwZToicGF1c2UifSl9LG9uQ29udGludWU6KCk9Pnt2ZSh0aGlzLEtyLHFuKS5jYWxsKHRoaXMse3R5cGU6ImNvbnRpbnVlIn0pfSxyZXRyeTp0aGlzLm9wdGlvbnMucmV0cnk/PzAscmV0cnlEZWxheTp0aGlzLm9wdGlvbnMucmV0cnlEZWxheSxuZXR3b3JrTW9kZTp0aGlzLm9wdGlvbnMubmV0d29ya01vZGUsY2FuUnVuOigpPT5DKHRoaXMsenQpLmNhblJ1bih0aGlzKX0pKTtjb25zdCByPXRoaXMuc3RhdGUuc3RhdHVzPT09InBlbmRpbmciLG49IUModGhpcyxXcykuY2FuU3RhcnQoKTt0cnl7aWYoIXIpe3ZlKHRoaXMsS3IscW4pLmNhbGwodGhpcyx7dHlwZToicGVuZGluZyIsdmFyaWFibGVzOnQsaXNQYXVzZWQ6bn0pLGF3YWl0KChhPShzPUModGhpcyx6dCkuY29uZmlnKS5vbk11dGF0ZSk9PW51bGw/dm9pZCAwOmEuY2FsbChzLHQsdGhpcykpO2NvbnN0IEw9YXdhaXQoKGw9KG89dGhpcy5vcHRpb25zKS5vbk11dGF0ZSk9PW51bGw/dm9pZCAwOmwuY2FsbChvLHQpKTtMIT09dGhpcy5zdGF0ZS5jb250ZXh0JiZ2ZSh0aGlzLEtyLHFuKS5jYWxsKHRoaXMse3R5cGU6InBlbmRpbmciLGNvbnRleHQ6TCx2YXJpYWJsZXM6dCxpc1BhdXNlZDpufSl9Y29uc3QgVD1hd2FpdCBDKHRoaXMsV3MpLnN0YXJ0KCk7cmV0dXJuIGF3YWl0KCh1PShjPUModGhpcyx6dCkuY29uZmlnKS5vblN1Y2Nlc3MpPT1udWxsP3ZvaWQgMDp1LmNhbGwoYyxULHQsdGhpcy5zdGF0ZS5jb250ZXh0LHRoaXMpKSxhd2FpdCgoZj0oZD10aGlzLm9wdGlvbnMpLm9uU3VjY2Vzcyk9PW51bGw/dm9pZCAwOmYuY2FsbChkLFQsdCx0aGlzLnN0YXRlLmNvbnRleHQpKSxhd2FpdCgoeD0ocD1DKHRoaXMsenQpLmNvbmZpZykub25TZXR0bGVkKT09bnVsbD92b2lkIDA6eC5jYWxsKHAsVCxudWxsLHRoaXMuc3RhdGUudmFyaWFibGVzLHRoaXMuc3RhdGUuY29udGV4dCx0aGlzKSksYXdhaXQoKG09KHY9dGhpcy5vcHRpb25zKS5vblNldHRsZWQpPT1udWxsP3ZvaWQgMDptLmNhbGwodixULG51bGwsdCx0aGlzLnN0YXRlLmNvbnRleHQpKSx2ZSh0aGlzLEtyLHFuKS5jYWxsKHRoaXMse3R5cGU6InN1Y2Nlc3MiLGRhdGE6VH0pLFR9Y2F0Y2goVCl7dHJ5e3Rocm93IGF3YWl0KChoPSh3PUModGhpcyx6dCkuY29uZmlnKS5vbkVycm9yKT09bnVsbD92b2lkIDA6aC5jYWxsKHcsVCx0LHRoaXMuc3RhdGUuY29udGV4dCx0aGlzKSksYXdhaXQoKGI9KGc9dGhpcy5vcHRpb25zKS5vbkVycm9yKT09bnVsbD92b2lkIDA6Yi5jYWxsKGcsVCx0LHRoaXMuc3RhdGUuY29udGV4dCkpLGF3YWl0KChTPShOPUModGhpcyx6dCkuY29uZmlnKS5vblNldHRsZWQpPT1udWxsP3ZvaWQgMDpTLmNhbGwoTix2b2lkIDAsVCx0aGlzLnN0YXRlLnZhcmlhYmxlcyx0aGlzLnN0YXRlLmNvbnRleHQsdGhpcykpLGF3YWl0KChrPShfPXRoaXMub3B0aW9ucykub25TZXR0bGVkKT09bnVsbD92b2lkIDA6ay5jYWxsKF8sdm9pZCAwLFQsdCx0aGlzLnN0YXRlLmNvbnRleHQpKSxUfWZpbmFsbHl7dmUodGhpcyxLcixxbikuY2FsbCh0aGlzLHt0eXBlOiJlcnJvciIsZXJyb3I6VH0pfX1maW5hbGx5e0ModGhpcyx6dCkucnVuTmV4dCh0aGlzKX19fSxacj1uZXcgV2Vha01hcCx6dD1uZXcgV2Vha01hcCxXcz1uZXcgV2Vha01hcCxLcj1uZXcgV2Vha1NldCxxbj1mdW5jdGlvbih0KXtjb25zdCByPW49Pntzd2l0Y2godC50eXBlKXtjYXNlImZhaWxlZCI6cmV0dXJuey4uLm4sZmFpbHVyZUNvdW50OnQuZmFpbHVyZUNvdW50LGZhaWx1cmVSZWFzb246dC5lcnJvcn07Y2FzZSJwYXVzZSI6cmV0dXJuey4uLm4saXNQYXVzZWQ6ITB9O2Nhc2UiY29udGludWUiOnJldHVybnsuLi5uLGlzUGF1c2VkOiExfTtjYXNlInBlbmRpbmciOnJldHVybnsuLi5uLGNvbnRleHQ6dC5jb250ZXh0LGRhdGE6dm9pZCAwLGZhaWx1cmVDb3VudDowLGZhaWx1cmVSZWFzb246bnVsbCxlcnJvcjpudWxsLGlzUGF1c2VkOnQuaXNQYXVzZWQsc3RhdHVzOiJwZW5kaW5nIix2YXJpYWJsZXM6dC52YXJpYWJsZXMsc3VibWl0dGVkQXQ6RGF0ZS5ub3coKX07Y2FzZSJzdWNjZXNzIjpyZXR1cm57Li4ubixkYXRhOnQuZGF0YSxmYWlsdXJlQ291bnQ6MCxmYWlsdXJlUmVhc29uOm51bGwsZXJyb3I6bnVsbCxzdGF0dXM6InN1Y2Nlc3MiLGlzUGF1c2VkOiExfTtjYXNlImVycm9yIjpyZXR1cm57Li4ubixkYXRhOnZvaWQgMCxlcnJvcjp0LmVycm9yLGZhaWx1cmVDb3VudDpuLmZhaWx1cmVDb3VudCsxLGZhaWx1cmVSZWFzb246dC5lcnJvcixpc1BhdXNlZDohMSxzdGF0dXM6ImVycm9yIn19fTt0aGlzLnN0YXRlPXIodGhpcy5zdGF0ZSkseXQuYmF0Y2goKCk9PntDKHRoaXMsWnIpLmZvckVhY2gobj0+e24ub25NdXRhdGlvblVwZGF0ZSh0KX0pLEModGhpcyx6dCkubm90aWZ5KHttdXRhdGlvbjp0aGlzLHR5cGU6InVwZGF0ZWQiLGFjdGlvbjp0fSl9KX0seHgpO2Z1bmN0aW9uIHIwKCl7cmV0dXJue2NvbnRleHQ6dm9pZCAwLGRhdGE6dm9pZCAwLGVycm9yOm51bGwsZmFpbHVyZUNvdW50OjAsZmFpbHVyZVJlYXNvbjpudWxsLGlzUGF1c2VkOiExLHN0YXR1czoiaWRsZSIsdmFyaWFibGVzOnZvaWQgMCxzdWJtaXR0ZWRBdDowfX12YXIgYXIsR28sdngsSFM9KHZ4PWNsYXNzIGV4dGVuZHMgRWF7Y29uc3RydWN0b3IodD17fSl7c3VwZXIoKTt1ZSh0aGlzLGFyKTt1ZSh0aGlzLEdvKTt0aGlzLmNvbmZpZz10LFgodGhpcyxhcixuZXcgTWFwKSxYKHRoaXMsR28sRGF0ZS5ub3coKSl9YnVpbGQodCxyLG4pe2NvbnN0IHM9bmV3IEJTKHttdXRhdGlvbkNhY2hlOnRoaXMsbXV0YXRpb25JZDorK3VsKHRoaXMsR28pLl8sb3B0aW9uczp0LmRlZmF1bHRNdXRhdGlvbk9wdGlvbnMociksc3RhdGU6bn0pO3JldHVybiB0aGlzLmFkZChzKSxzfWFkZCh0KXtjb25zdCByPV9sKHQpLG49Qyh0aGlzLGFyKS5nZXQocik/P1tdO24ucHVzaCh0KSxDKHRoaXMsYXIpLnNldChyLG4pLHRoaXMubm90aWZ5KHt0eXBlOiJhZGRlZCIsbXV0YXRpb246dH0pfXJlbW92ZSh0KXt2YXIgbjtjb25zdCByPV9sKHQpO2lmKEModGhpcyxhcikuaGFzKHIpKXtjb25zdCBzPShuPUModGhpcyxhcikuZ2V0KHIpKT09bnVsbD92b2lkIDA6bi5maWx0ZXIoYT0+YSE9PXQpO3MmJihzLmxlbmd0aD09PTA/Qyh0aGlzLGFyKS5kZWxldGUocik6Qyh0aGlzLGFyKS5zZXQocixzKSl9dGhpcy5ub3RpZnkoe3R5cGU6InJlbW92ZWQiLG11dGF0aW9uOnR9KX1jYW5SdW4odCl7dmFyIG47Y29uc3Qgcj0obj1DKHRoaXMsYXIpLmdldChfbCh0KSkpPT1udWxsP3ZvaWQgMDpuLmZpbmQocz0+cy5zdGF0ZS5zdGF0dXM9PT0icGVuZGluZyIpO3JldHVybiFyfHxyPT09dH1ydW5OZXh0KHQpe3ZhciBuO2NvbnN0IHI9KG49Qyh0aGlzLGFyKS5nZXQoX2wodCkpKT09bnVsbD92b2lkIDA6bi5maW5kKHM9PnMhPT10JiZzLnN0YXRlLmlzUGF1c2VkKTtyZXR1cm4ocj09bnVsbD92b2lkIDA6ci5jb250aW51ZSgpKT8/UHJvbWlzZS5yZXNvbHZlKCl9Y2xlYXIoKXt5dC5iYXRjaCgoKT0+e3RoaXMuZ2V0QWxsKCkuZm9yRWFjaCh0PT57dGhpcy5yZW1vdmUodCl9KX0pfWdldEFsbCgpe3JldHVyblsuLi5DKHRoaXMsYXIpLnZhbHVlcygpXS5mbGF0KCl9ZmluZCh0KXtjb25zdCByPXtleGFjdDohMCwuLi50fTtyZXR1cm4gdGhpcy5nZXRBbGwoKS5maW5kKG49PmFnKHIsbikpfWZpbmRBbGwodD17fSl7cmV0dXJuIHRoaXMuZ2V0QWxsKCkuZmlsdGVyKHI9PmFnKHQscikpfW5vdGlmeSh0KXt5dC5iYXRjaCgoKT0+e3RoaXMubGlzdGVuZXJzLmZvckVhY2gocj0+e3IodCl9KX0pfXJlc3VtZVBhdXNlZE11dGF0aW9ucygpe2NvbnN0IHQ9dGhpcy5nZXRBbGwoKS5maWx0ZXIocj0+ci5zdGF0ZS5pc1BhdXNlZCk7cmV0dXJuIHl0LmJhdGNoKCgpPT5Qcm9taXNlLmFsbCh0Lm1hcChyPT5yLmNvbnRpbnVlKCkuY2F0Y2goeXIpKSkpfX0sYXI9bmV3IFdlYWtNYXAsR289bmV3IFdlYWtNYXAsdngpO2Z1bmN0aW9uIF9sKGUpe3ZhciB0O3JldHVybigodD1lLm9wdGlvbnMuc2NvcGUpPT1udWxsP3ZvaWQgMDp0LmlkKT8/U3RyaW5nKGUubXV0YXRpb25JZCl9ZnVuY3Rpb24gY2coZSl7cmV0dXJue29uRmV0Y2g6KHQscik9Pnt2YXIgZCxmLHAseCx2O2NvbnN0IG49dC5vcHRpb25zLHM9KHA9KGY9KGQ9dC5mZXRjaE9wdGlvbnMpPT1udWxsP3ZvaWQgMDpkLm1ldGEpPT1udWxsP3ZvaWQgMDpmLmZldGNoTW9yZSk9PW51bGw/dm9pZCAwOnAuZGlyZWN0aW9uLGE9KCh4PXQuc3RhdGUuZGF0YSk9PW51bGw/dm9pZCAwOngucGFnZXMpfHxbXSxvPSgodj10LnN0YXRlLmRhdGEpPT1udWxsP3ZvaWQgMDp2LnBhZ2VQYXJhbXMpfHxbXTtsZXQgbD17cGFnZXM6W10scGFnZVBhcmFtczpbXX0sYz0wO2NvbnN0IHU9YXN5bmMoKT0+e2xldCBtPSExO2NvbnN0IHc9Yj0+e09iamVjdC5kZWZpbmVQcm9wZXJ0eShiLCJzaWduYWwiLHtlbnVtZXJhYmxlOiEwLGdldDooKT0+KHQuc2lnbmFsLmFib3J0ZWQ/bT0hMDp0LnNpZ25hbC5hZGRFdmVudExpc3RlbmVyKCJhYm9ydCIsKCk9PnttPSEwfSksdC5zaWduYWwpfSl9LGg9S3kodC5vcHRpb25zLHQuZmV0Y2hPcHRpb25zKSxnPWFzeW5jKGIsTixTKT0+e2lmKG0pcmV0dXJuIFByb21pc2UucmVqZWN0KCk7aWYoTj09bnVsbCYmYi5wYWdlcy5sZW5ndGgpcmV0dXJuIFByb21pc2UucmVzb2x2ZShiKTtjb25zdCBfPXtxdWVyeUtleTp0LnF1ZXJ5S2V5LHBhZ2VQYXJhbTpOLGRpcmVjdGlvbjpTPyJiYWNrd2FyZCI6ImZvcndhcmQiLG1ldGE6dC5vcHRpb25zLm1ldGF9O3coXyk7Y29uc3Qgaz1hd2FpdCBoKF8pLHttYXhQYWdlczpUfT10Lm9wdGlvbnMsTD1TP0ZTOk9TO3JldHVybntwYWdlczpMKGIucGFnZXMsayxUKSxwYWdlUGFyYW1zOkwoYi5wYWdlUGFyYW1zLE4sVCl9fTtpZihzJiZhLmxlbmd0aCl7Y29uc3QgYj1zPT09ImJhY2t3YXJkIixOPWI/V1M6dWcsUz17cGFnZXM6YSxwYWdlUGFyYW1zOm99LF89TihuLFMpO2w9YXdhaXQgZyhTLF8sYil9ZWxzZXtjb25zdCBiPWU/P2EubGVuZ3RoO2Rve2NvbnN0IE49Yz09PTA/b1swXT8/bi5pbml0aWFsUGFnZVBhcmFtOnVnKG4sbCk7aWYoYz4wJiZOPT1udWxsKWJyZWFrO2w9YXdhaXQgZyhsLE4pLGMrK313aGlsZShjPGIpfXJldHVybiBsfTt0Lm9wdGlvbnMucGVyc2lzdGVyP3QuZmV0Y2hGbj0oKT0+e3ZhciBtLHc7cmV0dXJuKHc9KG09dC5vcHRpb25zKS5wZXJzaXN0ZXIpPT1udWxsP3ZvaWQgMDp3LmNhbGwobSx1LHtxdWVyeUtleTp0LnF1ZXJ5S2V5LG1ldGE6dC5vcHRpb25zLm1ldGEsc2lnbmFsOnQuc2lnbmFsfSxyKX06dC5mZXRjaEZuPXV9fX1mdW5jdGlvbiB1ZyhlLHtwYWdlczp0LHBhZ2VQYXJhbXM6cn0pe2NvbnN0IG49dC5sZW5ndGgtMTtyZXR1cm4gdC5sZW5ndGg+MD9lLmdldE5leHRQYWdlUGFyYW0odFtuXSx0LHJbbl0scik6dm9pZCAwfWZ1bmN0aW9uIFdTKGUse3BhZ2VzOnQscGFnZVBhcmFtczpyfSl7dmFyIG47cmV0dXJuIHQubGVuZ3RoPjA/KG49ZS5nZXRQcmV2aW91c1BhZ2VQYXJhbSk9PW51bGw/dm9pZCAwOm4uY2FsbChlLHRbMF0sdCxyWzBdLHIpOnZvaWQgMH12YXIgbHQsdHMscnMsZWEsdGEsbnMscmEsbmEseXgscVM9KHl4PWNsYXNze2NvbnN0cnVjdG9yKGU9e30pe3VlKHRoaXMsbHQpO3VlKHRoaXMsdHMpO3VlKHRoaXMscnMpO3VlKHRoaXMsZWEpO3VlKHRoaXMsdGEpO3VlKHRoaXMsbnMpO3VlKHRoaXMscmEpO3VlKHRoaXMsbmEpO1godGhpcyxsdCxlLnF1ZXJ5Q2FjaGV8fG5ldyBVUyksWCh0aGlzLHRzLGUubXV0YXRpb25DYWNoZXx8bmV3IEhTKSxYKHRoaXMscnMsZS5kZWZhdWx0T3B0aW9uc3x8e30pLFgodGhpcyxlYSxuZXcgTWFwKSxYKHRoaXMsdGEsbmV3IE1hcCksWCh0aGlzLG5zLDApfW1vdW50KCl7dWwodGhpcyxucykuXysrLEModGhpcyxucyk9PT0xJiYoWCh0aGlzLHJhLGNoLnN1YnNjcmliZShhc3luYyBlPT57ZSYmKGF3YWl0IHRoaXMucmVzdW1lUGF1c2VkTXV0YXRpb25zKCksQyh0aGlzLGx0KS5vbkZvY3VzKCkpfSkpLFgodGhpcyxuYSxfYy5zdWJzY3JpYmUoYXN5bmMgZT0+e2UmJihhd2FpdCB0aGlzLnJlc3VtZVBhdXNlZE11dGF0aW9ucygpLEModGhpcyxsdCkub25PbmxpbmUoKSl9KSkpfXVubW91bnQoKXt2YXIgZSx0O3VsKHRoaXMsbnMpLl8tLSxDKHRoaXMsbnMpPT09MCYmKChlPUModGhpcyxyYSkpPT1udWxsfHxlLmNhbGwodGhpcyksWCh0aGlzLHJhLHZvaWQgMCksKHQ9Qyh0aGlzLG5hKSk9PW51bGx8fHQuY2FsbCh0aGlzKSxYKHRoaXMsbmEsdm9pZCAwKSl9aXNGZXRjaGluZyhlKXtyZXR1cm4gQyh0aGlzLGx0KS5maW5kQWxsKHsuLi5lLGZldGNoU3RhdHVzOiJmZXRjaGluZyJ9KS5sZW5ndGh9aXNNdXRhdGluZyhlKXtyZXR1cm4gQyh0aGlzLHRzKS5maW5kQWxsKHsuLi5lLHN0YXR1czoicGVuZGluZyJ9KS5sZW5ndGh9Z2V0UXVlcnlEYXRhKGUpe3ZhciByO2NvbnN0IHQ9dGhpcy5kZWZhdWx0UXVlcnlPcHRpb25zKHtxdWVyeUtleTplfSk7cmV0dXJuKHI9Qyh0aGlzLGx0KS5nZXQodC5xdWVyeUhhc2gpKT09bnVsbD92b2lkIDA6ci5zdGF0ZS5kYXRhfWVuc3VyZVF1ZXJ5RGF0YShlKXtjb25zdCB0PXRoaXMuZ2V0UXVlcnlEYXRhKGUucXVlcnlLZXkpO2lmKHQ9PT12b2lkIDApcmV0dXJuIHRoaXMuZmV0Y2hRdWVyeShlKTt7Y29uc3Qgcj10aGlzLmRlZmF1bHRRdWVyeU9wdGlvbnMoZSksbj1DKHRoaXMsbHQpLmJ1aWxkKHRoaXMscik7cmV0dXJuIGUucmV2YWxpZGF0ZUlmU3RhbGUmJm4uaXNTdGFsZUJ5VGltZShCaShyLnN0YWxlVGltZSxuKSkmJnRoaXMucHJlZmV0Y2hRdWVyeShyKSxQcm9taXNlLnJlc29sdmUodCl9fWdldFF1ZXJpZXNEYXRhKGUpe3JldHVybiBDKHRoaXMsbHQpLmZpbmRBbGwoZSkubWFwKCh7cXVlcnlLZXk6dCxzdGF0ZTpyfSk9Pntjb25zdCBuPXIuZGF0YTtyZXR1cm5bdCxuXX0pfXNldFF1ZXJ5RGF0YShlLHQscil7Y29uc3Qgbj10aGlzLmRlZmF1bHRRdWVyeU9wdGlvbnMoe3F1ZXJ5S2V5OmV9KSxzPUModGhpcyxsdCkuZ2V0KG4ucXVlcnlIYXNoKSxhPXM9PW51bGw/dm9pZCAwOnMuc3RhdGUuZGF0YSxvPUFTKHQsYSk7aWYobyE9PXZvaWQgMClyZXR1cm4gQyh0aGlzLGx0KS5idWlsZCh0aGlzLG4pLnNldERhdGEobyx7Li4ucixtYW51YWw6ITB9KX1zZXRRdWVyaWVzRGF0YShlLHQscil7cmV0dXJuIHl0LmJhdGNoKCgpPT5DKHRoaXMsbHQpLmZpbmRBbGwoZSkubWFwKCh7cXVlcnlLZXk6bn0pPT5bbix0aGlzLnNldFF1ZXJ5RGF0YShuLHQscildKSl9Z2V0UXVlcnlTdGF0ZShlKXt2YXIgcjtjb25zdCB0PXRoaXMuZGVmYXVsdFF1ZXJ5T3B0aW9ucyh7cXVlcnlLZXk6ZX0pO3JldHVybihyPUModGhpcyxsdCkuZ2V0KHQucXVlcnlIYXNoKSk9PW51bGw/dm9pZCAwOnIuc3RhdGV9cmVtb3ZlUXVlcmllcyhlKXtjb25zdCB0PUModGhpcyxsdCk7eXQuYmF0Y2goKCk9Pnt0LmZpbmRBbGwoZSkuZm9yRWFjaChyPT57dC5yZW1vdmUocil9KX0pfXJlc2V0UXVlcmllcyhlLHQpe2NvbnN0IHI9Qyh0aGlzLGx0KSxuPXt0eXBlOiJhY3RpdmUiLC4uLmV9O3JldHVybiB5dC5iYXRjaCgoKT0+KHIuZmluZEFsbChlKS5mb3JFYWNoKHM9PntzLnJlc2V0KCl9KSx0aGlzLnJlZmV0Y2hRdWVyaWVzKG4sdCkpKX1jYW5jZWxRdWVyaWVzKGU9e30sdD17fSl7Y29uc3Qgcj17cmV2ZXJ0OiEwLC4uLnR9LG49eXQuYmF0Y2goKCk9PkModGhpcyxsdCkuZmluZEFsbChlKS5tYXAocz0+cy5jYW5jZWwocikpKTtyZXR1cm4gUHJvbWlzZS5hbGwobikudGhlbih5cikuY2F0Y2goeXIpfWludmFsaWRhdGVRdWVyaWVzKGU9e30sdD17fSl7cmV0dXJuIHl0LmJhdGNoKCgpPT57aWYoQyh0aGlzLGx0KS5maW5kQWxsKGUpLmZvckVhY2gobj0+e24uaW52YWxpZGF0ZSgpfSksZS5yZWZldGNoVHlwZT09PSJub25lIilyZXR1cm4gUHJvbWlzZS5yZXNvbHZlKCk7Y29uc3Qgcj17Li4uZSx0eXBlOmUucmVmZXRjaFR5cGU/P2UudHlwZT8/ImFjdGl2ZSJ9O3JldHVybiB0aGlzLnJlZmV0Y2hRdWVyaWVzKHIsdCl9KX1yZWZldGNoUXVlcmllcyhlPXt9LHQpe2NvbnN0IHI9ey4uLnQsY2FuY2VsUmVmZXRjaDoodD09bnVsbD92b2lkIDA6dC5jYW5jZWxSZWZldGNoKT8/ITB9LG49eXQuYmF0Y2goKCk9PkModGhpcyxsdCkuZmluZEFsbChlKS5maWx0ZXIocz0+IXMuaXNEaXNhYmxlZCgpKS5tYXAocz0+e2xldCBhPXMuZmV0Y2godm9pZCAwLHIpO3JldHVybiByLnRocm93T25FcnJvcnx8KGE9YS5jYXRjaCh5cikpLHMuc3RhdGUuZmV0Y2hTdGF0dXM9PT0icGF1c2VkIj9Qcm9taXNlLnJlc29sdmUoKTphfSkpO3JldHVybiBQcm9taXNlLmFsbChuKS50aGVuKHlyKX1mZXRjaFF1ZXJ5KGUpe2NvbnN0IHQ9dGhpcy5kZWZhdWx0UXVlcnlPcHRpb25zKGUpO3QucmV0cnk9PT12b2lkIDAmJih0LnJldHJ5PSExKTtjb25zdCByPUModGhpcyxsdCkuYnVpbGQodGhpcyx0KTtyZXR1cm4gci5pc1N0YWxlQnlUaW1lKEJpKHQuc3RhbGVUaW1lLHIpKT9yLmZldGNoKHQpOlByb21pc2UucmVzb2x2ZShyLnN0YXRlLmRhdGEpfXByZWZldGNoUXVlcnkoZSl7cmV0dXJuIHRoaXMuZmV0Y2hRdWVyeShlKS50aGVuKHlyKS5jYXRjaCh5cil9ZmV0Y2hJbmZpbml0ZVF1ZXJ5KGUpe3JldHVybiBlLmJlaGF2aW9yPWNnKGUucGFnZXMpLHRoaXMuZmV0Y2hRdWVyeShlKX1wcmVmZXRjaEluZmluaXRlUXVlcnkoZSl7cmV0dXJuIHRoaXMuZmV0Y2hJbmZpbml0ZVF1ZXJ5KGUpLnRoZW4oeXIpLmNhdGNoKHlyKX1lbnN1cmVJbmZpbml0ZVF1ZXJ5RGF0YShlKXtyZXR1cm4gZS5iZWhhdmlvcj1jZyhlLnBhZ2VzKSx0aGlzLmVuc3VyZVF1ZXJ5RGF0YShlKX1yZXN1bWVQYXVzZWRNdXRhdGlvbnMoKXtyZXR1cm4gX2MuaXNPbmxpbmUoKT9DKHRoaXMsdHMpLnJlc3VtZVBhdXNlZE11dGF0aW9ucygpOlByb21pc2UucmVzb2x2ZSgpfWdldFF1ZXJ5Q2FjaGUoKXtyZXR1cm4gQyh0aGlzLGx0KX1nZXRNdXRhdGlvbkNhY2hlKCl7cmV0dXJuIEModGhpcyx0cyl9Z2V0RGVmYXVsdE9wdGlvbnMoKXtyZXR1cm4gQyh0aGlzLHJzKX1zZXREZWZhdWx0T3B0aW9ucyhlKXtYKHRoaXMscnMsZSl9c2V0UXVlcnlEZWZhdWx0cyhlLHQpe0ModGhpcyxlYSkuc2V0KGFpKGUpLHtxdWVyeUtleTplLGRlZmF1bHRPcHRpb25zOnR9KX1nZXRRdWVyeURlZmF1bHRzKGUpe2NvbnN0IHQ9Wy4uLkModGhpcyxlYSkudmFsdWVzKCldO2xldCByPXt9O3JldHVybiB0LmZvckVhY2gobj0+e0VvKGUsbi5xdWVyeUtleSkmJihyPXsuLi5yLC4uLm4uZGVmYXVsdE9wdGlvbnN9KX0pLHJ9c2V0TXV0YXRpb25EZWZhdWx0cyhlLHQpe0ModGhpcyx0YSkuc2V0KGFpKGUpLHttdXRhdGlvbktleTplLGRlZmF1bHRPcHRpb25zOnR9KX1nZXRNdXRhdGlvbkRlZmF1bHRzKGUpe2NvbnN0IHQ9Wy4uLkModGhpcyx0YSkudmFsdWVzKCldO2xldCByPXt9O3JldHVybiB0LmZvckVhY2gobj0+e0VvKGUsbi5tdXRhdGlvbktleSkmJihyPXsuLi5yLC4uLm4uZGVmYXVsdE9wdGlvbnN9KX0pLHJ9ZGVmYXVsdFF1ZXJ5T3B0aW9ucyhlKXtpZihlLl9kZWZhdWx0ZWQpcmV0dXJuIGU7Y29uc3QgdD17Li4uQyh0aGlzLHJzKS5xdWVyaWVzLC4uLnRoaXMuZ2V0UXVlcnlEZWZhdWx0cyhlLnF1ZXJ5S2V5KSwuLi5lLF9kZWZhdWx0ZWQ6ITB9O3JldHVybiB0LnF1ZXJ5SGFzaHx8KHQucXVlcnlIYXNoPW9oKHQucXVlcnlLZXksdCkpLHQucmVmZXRjaE9uUmVjb25uZWN0PT09dm9pZCAwJiYodC5yZWZldGNoT25SZWNvbm5lY3Q9dC5uZXR3b3JrTW9kZSE9PSJhbHdheXMiKSx0LnRocm93T25FcnJvcj09PXZvaWQgMCYmKHQudGhyb3dPbkVycm9yPSEhdC5zdXNwZW5zZSksIXQubmV0d29ya01vZGUmJnQucGVyc2lzdGVyJiYodC5uZXR3b3JrTW9kZT0ib2ZmbGluZUZpcnN0IiksdC5lbmFibGVkIT09ITAmJnQucXVlcnlGbj09PWxoJiYodC5lbmFibGVkPSExKSx0fWRlZmF1bHRNdXRhdGlvbk9wdGlvbnMoZSl7cmV0dXJuIGUhPW51bGwmJmUuX2RlZmF1bHRlZD9lOnsuLi5DKHRoaXMscnMpLm11dGF0aW9ucywuLi4oZT09bnVsbD92b2lkIDA6ZS5tdXRhdGlvbktleSkmJnRoaXMuZ2V0TXV0YXRpb25EZWZhdWx0cyhlLm11dGF0aW9uS2V5KSwuLi5lLF9kZWZhdWx0ZWQ6ITB9fWNsZWFyKCl7Qyh0aGlzLGx0KS5jbGVhcigpLEModGhpcyx0cykuY2xlYXIoKX19LGx0PW5ldyBXZWFrTWFwLHRzPW5ldyBXZWFrTWFwLHJzPW5ldyBXZWFrTWFwLGVhPW5ldyBXZWFrTWFwLHRhPW5ldyBXZWFrTWFwLG5zPW5ldyBXZWFrTWFwLHJhPW5ldyBXZWFrTWFwLG5hPW5ldyBXZWFrTWFwLHl4KSxadCxTZSxRbyxWdCxxcyxzYSxzcyxZcixabyxpYSxhYSxHcyxRcyxpcyxvYSxGZSxRYSxUZixSZixBZixNZixPZixGZixJZixuMCx3eCxHUz0od3g9Y2xhc3MgZXh0ZW5kcyBFYXtjb25zdHJ1Y3Rvcih0LHIpe3N1cGVyKCk7dWUodGhpcyxGZSk7dWUodGhpcyxadCk7dWUodGhpcyxTZSk7dWUodGhpcyxRbyk7dWUodGhpcyxWdCk7dWUodGhpcyxxcyk7dWUodGhpcyxzYSk7dWUodGhpcyxzcyk7dWUodGhpcyxZcik7dWUodGhpcyxabyk7dWUodGhpcyxpYSk7dWUodGhpcyxhYSk7dWUodGhpcyxHcyk7dWUodGhpcyxRcyk7dWUodGhpcyxpcyk7dWUodGhpcyxvYSxuZXcgU2V0KTt0aGlzLm9wdGlvbnM9cixYKHRoaXMsWnQsdCksWCh0aGlzLFlyLG51bGwpLFgodGhpcyxzcyxQZigpKSx0aGlzLm9wdGlvbnMuZXhwZXJpbWVudGFsX3ByZWZldGNoSW5SZW5kZXJ8fEModGhpcyxzcykucmVqZWN0KG5ldyBFcnJvcigiZXhwZXJpbWVudGFsX3ByZWZldGNoSW5SZW5kZXIgZmVhdHVyZSBmbGFnIGlzIG5vdCBlbmFibGVkIikpLHRoaXMuYmluZE1ldGhvZHMoKSx0aGlzLnNldE9wdGlvbnMocil9YmluZE1ldGhvZHMoKXt0aGlzLnJlZmV0Y2g9dGhpcy5yZWZldGNoLmJpbmQodGhpcyl9b25TdWJzY3JpYmUoKXt0aGlzLmxpc3RlbmVycy5zaXplPT09MSYmKEModGhpcyxTZSkuYWRkT2JzZXJ2ZXIodGhpcyksZGcoQyh0aGlzLFNlKSx0aGlzLm9wdGlvbnMpP3ZlKHRoaXMsRmUsUWEpLmNhbGwodGhpcyk6dGhpcy51cGRhdGVSZXN1bHQoKSx2ZSh0aGlzLEZlLE1mKS5jYWxsKHRoaXMpKX1vblVuc3Vic2NyaWJlKCl7dGhpcy5oYXNMaXN0ZW5lcnMoKXx8dGhpcy5kZXN0cm95KCl9c2hvdWxkRmV0Y2hPblJlY29ubmVjdCgpe3JldHVybiBMZihDKHRoaXMsU2UpLHRoaXMub3B0aW9ucyx0aGlzLm9wdGlvbnMucmVmZXRjaE9uUmVjb25uZWN0KX1zaG91bGRGZXRjaE9uV2luZG93Rm9jdXMoKXtyZXR1cm4gTGYoQyh0aGlzLFNlKSx0aGlzLm9wdGlvbnMsdGhpcy5vcHRpb25zLnJlZmV0Y2hPbldpbmRvd0ZvY3VzKX1kZXN0cm95KCl7dGhpcy5saXN0ZW5lcnM9bmV3IFNldCx2ZSh0aGlzLEZlLE9mKS5jYWxsKHRoaXMpLHZlKHRoaXMsRmUsRmYpLmNhbGwodGhpcyksQyh0aGlzLFNlKS5yZW1vdmVPYnNlcnZlcih0aGlzKX1zZXRPcHRpb25zKHQscil7Y29uc3Qgbj10aGlzLm9wdGlvbnMscz1DKHRoaXMsU2UpO2lmKHRoaXMub3B0aW9ucz1DKHRoaXMsWnQpLmRlZmF1bHRRdWVyeU9wdGlvbnModCksdGhpcy5vcHRpb25zLmVuYWJsZWQhPT12b2lkIDAmJnR5cGVvZiB0aGlzLm9wdGlvbnMuZW5hYmxlZCE9ImJvb2xlYW4iJiZ0eXBlb2YgdGhpcy5vcHRpb25zLmVuYWJsZWQhPSJmdW5jdGlvbiImJnR5cGVvZiBGcih0aGlzLm9wdGlvbnMuZW5hYmxlZCxDKHRoaXMsU2UpKSE9ImJvb2xlYW4iKXRocm93IG5ldyBFcnJvcigiRXhwZWN0ZWQgZW5hYmxlZCB0byBiZSBhIGJvb2xlYW4gb3IgYSBjYWxsYmFjayB0aGF0IHJldHVybnMgYSBib29sZWFuIik7dmUodGhpcyxGZSxJZikuY2FsbCh0aGlzKSxDKHRoaXMsU2UpLnNldE9wdGlvbnModGhpcy5vcHRpb25zKSxuLl9kZWZhdWx0ZWQmJiFDYyh0aGlzLm9wdGlvbnMsbikmJkModGhpcyxadCkuZ2V0UXVlcnlDYWNoZSgpLm5vdGlmeSh7dHlwZToib2JzZXJ2ZXJPcHRpb25zVXBkYXRlZCIscXVlcnk6Qyh0aGlzLFNlKSxvYnNlcnZlcjp0aGlzfSk7Y29uc3QgYT10aGlzLmhhc0xpc3RlbmVycygpO2EmJmZnKEModGhpcyxTZSkscyx0aGlzLm9wdGlvbnMsbikmJnZlKHRoaXMsRmUsUWEpLmNhbGwodGhpcyksdGhpcy51cGRhdGVSZXN1bHQociksYSYmKEModGhpcyxTZSkhPT1zfHxGcih0aGlzLm9wdGlvbnMuZW5hYmxlZCxDKHRoaXMsU2UpKSE9PUZyKG4uZW5hYmxlZCxDKHRoaXMsU2UpKXx8QmkodGhpcy5vcHRpb25zLnN0YWxlVGltZSxDKHRoaXMsU2UpKSE9PUJpKG4uc3RhbGVUaW1lLEModGhpcyxTZSkpKSYmdmUodGhpcyxGZSxUZikuY2FsbCh0aGlzKTtjb25zdCBvPXZlKHRoaXMsRmUsUmYpLmNhbGwodGhpcyk7YSYmKEModGhpcyxTZSkhPT1zfHxGcih0aGlzLm9wdGlvbnMuZW5hYmxlZCxDKHRoaXMsU2UpKSE9PUZyKG4uZW5hYmxlZCxDKHRoaXMsU2UpKXx8byE9PUModGhpcyxpcykpJiZ2ZSh0aGlzLEZlLEFmKS5jYWxsKHRoaXMsbyl9Z2V0T3B0aW1pc3RpY1Jlc3VsdCh0KXtjb25zdCByPUModGhpcyxadCkuZ2V0UXVlcnlDYWNoZSgpLmJ1aWxkKEModGhpcyxadCksdCksbj10aGlzLmNyZWF0ZVJlc3VsdChyLHQpO3JldHVybiBaUyh0aGlzLG4pJiYoWCh0aGlzLFZ0LG4pLFgodGhpcyxzYSx0aGlzLm9wdGlvbnMpLFgodGhpcyxxcyxDKHRoaXMsU2UpLnN0YXRlKSksbn1nZXRDdXJyZW50UmVzdWx0KCl7cmV0dXJuIEModGhpcyxWdCl9dHJhY2tSZXN1bHQodCxyKXtjb25zdCBuPXt9O3JldHVybiBPYmplY3Qua2V5cyh0KS5mb3JFYWNoKHM9PntPYmplY3QuZGVmaW5lUHJvcGVydHkobixzLHtjb25maWd1cmFibGU6ITEsZW51bWVyYWJsZTohMCxnZXQ6KCk9Pih0aGlzLnRyYWNrUHJvcChzKSxyPT1udWxsfHxyKHMpLHRbc10pfSl9KSxufXRyYWNrUHJvcCh0KXtDKHRoaXMsb2EpLmFkZCh0KX1nZXRDdXJyZW50UXVlcnkoKXtyZXR1cm4gQyh0aGlzLFNlKX1yZWZldGNoKHsuLi50fT17fSl7cmV0dXJuIHRoaXMuZmV0Y2goey4uLnR9KX1mZXRjaE9wdGltaXN0aWModCl7Y29uc3Qgcj1DKHRoaXMsWnQpLmRlZmF1bHRRdWVyeU9wdGlvbnModCksbj1DKHRoaXMsWnQpLmdldFF1ZXJ5Q2FjaGUoKS5idWlsZChDKHRoaXMsWnQpLHIpO3JldHVybiBuLmZldGNoKCkudGhlbigoKT0+dGhpcy5jcmVhdGVSZXN1bHQobixyKSl9ZmV0Y2godCl7cmV0dXJuIHZlKHRoaXMsRmUsUWEpLmNhbGwodGhpcyx7Li4udCxjYW5jZWxSZWZldGNoOnQuY2FuY2VsUmVmZXRjaD8/ITB9KS50aGVuKCgpPT4odGhpcy51cGRhdGVSZXN1bHQoKSxDKHRoaXMsVnQpKSl9Y3JlYXRlUmVzdWx0KHQscil7dmFyIFQ7Y29uc3Qgbj1DKHRoaXMsU2UpLHM9dGhpcy5vcHRpb25zLGE9Qyh0aGlzLFZ0KSxvPUModGhpcyxxcyksbD1DKHRoaXMsc2EpLHU9dCE9PW4/dC5zdGF0ZTpDKHRoaXMsUW8pLHtzdGF0ZTpkfT10O2xldCBmPXsuLi5kfSxwPSExLHg7aWYoci5fb3B0aW1pc3RpY1Jlc3VsdHMpe2NvbnN0IEw9dGhpcy5oYXNMaXN0ZW5lcnMoKSxQPSFMJiZkZyh0LHIpLGo9TCYmZmcodCxuLHIscyk7KFB8fGopJiYoZj17Li4uZiwuLi50MChkLmRhdGEsdC5vcHRpb25zKX0pLHIuX29wdGltaXN0aWNSZXN1bHRzPT09ImlzUmVzdG9yaW5nIiYmKGYuZmV0Y2hTdGF0dXM9ImlkbGUiKX1sZXR7ZXJyb3I6dixlcnJvclVwZGF0ZWRBdDptLHN0YXR1czp3fT1mO2lmKHIuc2VsZWN0JiZmLmRhdGEhPT12b2lkIDApaWYoYSYmZi5kYXRhPT09KG89PW51bGw/dm9pZCAwOm8uZGF0YSkmJnIuc2VsZWN0PT09Qyh0aGlzLFpvKSl4PUModGhpcyxpYSk7ZWxzZSB0cnl7WCh0aGlzLFpvLHIuc2VsZWN0KSx4PXIuc2VsZWN0KGYuZGF0YSkseD1fZihhPT1udWxsP3ZvaWQgMDphLmRhdGEseCxyKSxYKHRoaXMsaWEseCksWCh0aGlzLFlyLG51bGwpfWNhdGNoKEwpe1godGhpcyxZcixMKX1lbHNlIHg9Zi5kYXRhO2lmKHIucGxhY2Vob2xkZXJEYXRhIT09dm9pZCAwJiZ4PT09dm9pZCAwJiZ3PT09InBlbmRpbmciKXtsZXQgTDtpZihhIT1udWxsJiZhLmlzUGxhY2Vob2xkZXJEYXRhJiZyLnBsYWNlaG9sZGVyRGF0YT09PShsPT1udWxsP3ZvaWQgMDpsLnBsYWNlaG9sZGVyRGF0YSkpTD1hLmRhdGE7ZWxzZSBpZihMPXR5cGVvZiByLnBsYWNlaG9sZGVyRGF0YT09ImZ1bmN0aW9uIj9yLnBsYWNlaG9sZGVyRGF0YSgoVD1DKHRoaXMsYWEpKT09bnVsbD92b2lkIDA6VC5zdGF0ZS5kYXRhLEModGhpcyxhYSkpOnIucGxhY2Vob2xkZXJEYXRhLHIuc2VsZWN0JiZMIT09dm9pZCAwKXRyeXtMPXIuc2VsZWN0KEwpLFgodGhpcyxZcixudWxsKX1jYXRjaChQKXtYKHRoaXMsWXIsUCl9TCE9PXZvaWQgMCYmKHc9InN1Y2Nlc3MiLHg9X2YoYT09bnVsbD92b2lkIDA6YS5kYXRhLEwscikscD0hMCl9Qyh0aGlzLFlyKSYmKHY9Qyh0aGlzLFlyKSx4PUModGhpcyxpYSksbT1EYXRlLm5vdygpLHc9ImVycm9yIik7Y29uc3QgaD1mLmZldGNoU3RhdHVzPT09ImZldGNoaW5nIixnPXc9PT0icGVuZGluZyIsYj13PT09ImVycm9yIixOPWcmJmgsUz14IT09dm9pZCAwLGs9e3N0YXR1czp3LGZldGNoU3RhdHVzOmYuZmV0Y2hTdGF0dXMsaXNQZW5kaW5nOmcsaXNTdWNjZXNzOnc9PT0ic3VjY2VzcyIsaXNFcnJvcjpiLGlzSW5pdGlhbExvYWRpbmc6Tixpc0xvYWRpbmc6TixkYXRhOngsZGF0YVVwZGF0ZWRBdDpmLmRhdGFVcGRhdGVkQXQsZXJyb3I6dixlcnJvclVwZGF0ZWRBdDptLGZhaWx1cmVDb3VudDpmLmZldGNoRmFpbHVyZUNvdW50LGZhaWx1cmVSZWFzb246Zi5mZXRjaEZhaWx1cmVSZWFzb24sZXJyb3JVcGRhdGVDb3VudDpmLmVycm9yVXBkYXRlQ291bnQsaXNGZXRjaGVkOmYuZGF0YVVwZGF0ZUNvdW50PjB8fGYuZXJyb3JVcGRhdGVDb3VudD4wLGlzRmV0Y2hlZEFmdGVyTW91bnQ6Zi5kYXRhVXBkYXRlQ291bnQ+dS5kYXRhVXBkYXRlQ291bnR8fGYuZXJyb3JVcGRhdGVDb3VudD51LmVycm9yVXBkYXRlQ291bnQsaXNGZXRjaGluZzpoLGlzUmVmZXRjaGluZzpoJiYhZyxpc0xvYWRpbmdFcnJvcjpiJiYhUyxpc1BhdXNlZDpmLmZldGNoU3RhdHVzPT09InBhdXNlZCIsaXNQbGFjZWhvbGRlckRhdGE6cCxpc1JlZmV0Y2hFcnJvcjpiJiZTLGlzU3RhbGU6dWgodCxyKSxyZWZldGNoOnRoaXMucmVmZXRjaCxwcm9taXNlOkModGhpcyxzcyl9O2lmKHRoaXMub3B0aW9ucy5leHBlcmltZW50YWxfcHJlZmV0Y2hJblJlbmRlcil7Y29uc3QgTD1JPT57ay5zdGF0dXM9PT0iZXJyb3IiP0kucmVqZWN0KGsuZXJyb3IpOmsuZGF0YSE9PXZvaWQgMCYmSS5yZXNvbHZlKGsuZGF0YSl9LFA9KCk9Pntjb25zdCBJPVgodGhpcyxzcyxrLnByb21pc2U9UGYoKSk7TChJKX0saj1DKHRoaXMsc3MpO3N3aXRjaChqLnN0YXR1cyl7Y2FzZSJwZW5kaW5nIjp0LnF1ZXJ5SGFzaD09PW4ucXVlcnlIYXNoJiZMKGopO2JyZWFrO2Nhc2UiZnVsZmlsbGVkIjooay5zdGF0dXM9PT0iZXJyb3IifHxrLmRhdGEhPT1qLnZhbHVlKSYmUCgpO2JyZWFrO2Nhc2UicmVqZWN0ZWQiOihrLnN0YXR1cyE9PSJlcnJvciJ8fGsuZXJyb3IhPT1qLnJlYXNvbikmJlAoKTticmVha319cmV0dXJuIGt9dXBkYXRlUmVzdWx0KHQpe2NvbnN0IHI9Qyh0aGlzLFZ0KSxuPXRoaXMuY3JlYXRlUmVzdWx0KEModGhpcyxTZSksdGhpcy5vcHRpb25zKTtpZihYKHRoaXMscXMsQyh0aGlzLFNlKS5zdGF0ZSksWCh0aGlzLHNhLHRoaXMub3B0aW9ucyksQyh0aGlzLHFzKS5kYXRhIT09dm9pZCAwJiZYKHRoaXMsYWEsQyh0aGlzLFNlKSksQ2MobixyKSlyZXR1cm47WCh0aGlzLFZ0LG4pO2NvbnN0IHM9e30sYT0oKT0+e2lmKCFyKXJldHVybiEwO2NvbnN0e25vdGlmeU9uQ2hhbmdlUHJvcHM6b309dGhpcy5vcHRpb25zLGw9dHlwZW9mIG89PSJmdW5jdGlvbiI/bygpOm87aWYobD09PSJhbGwifHwhbCYmIUModGhpcyxvYSkuc2l6ZSlyZXR1cm4hMDtjb25zdCBjPW5ldyBTZXQobD8/Qyh0aGlzLG9hKSk7cmV0dXJuIHRoaXMub3B0aW9ucy50aHJvd09uRXJyb3ImJmMuYWRkKCJlcnJvciIpLE9iamVjdC5rZXlzKEModGhpcyxWdCkpLnNvbWUodT0+e2NvbnN0IGQ9dTtyZXR1cm4gQyh0aGlzLFZ0KVtkXSE9PXJbZF0mJmMuaGFzKGQpfSl9Oyh0PT1udWxsP3ZvaWQgMDp0Lmxpc3RlbmVycykhPT0hMSYmYSgpJiYocy5saXN0ZW5lcnM9ITApLHZlKHRoaXMsRmUsbjApLmNhbGwodGhpcyx7Li4ucywuLi50fSl9b25RdWVyeVVwZGF0ZSgpe3RoaXMudXBkYXRlUmVzdWx0KCksdGhpcy5oYXNMaXN0ZW5lcnMoKSYmdmUodGhpcyxGZSxNZikuY2FsbCh0aGlzKX19LFp0PW5ldyBXZWFrTWFwLFNlPW5ldyBXZWFrTWFwLFFvPW5ldyBXZWFrTWFwLFZ0PW5ldyBXZWFrTWFwLHFzPW5ldyBXZWFrTWFwLHNhPW5ldyBXZWFrTWFwLHNzPW5ldyBXZWFrTWFwLFlyPW5ldyBXZWFrTWFwLFpvPW5ldyBXZWFrTWFwLGlhPW5ldyBXZWFrTWFwLGFhPW5ldyBXZWFrTWFwLEdzPW5ldyBXZWFrTWFwLFFzPW5ldyBXZWFrTWFwLGlzPW5ldyBXZWFrTWFwLG9hPW5ldyBXZWFrTWFwLEZlPW5ldyBXZWFrU2V0LFFhPWZ1bmN0aW9uKHQpe3ZlKHRoaXMsRmUsSWYpLmNhbGwodGhpcyk7bGV0IHI9Qyh0aGlzLFNlKS5mZXRjaCh0aGlzLm9wdGlvbnMsdCk7cmV0dXJuIHQhPW51bGwmJnQudGhyb3dPbkVycm9yfHwocj1yLmNhdGNoKHlyKSkscn0sVGY9ZnVuY3Rpb24oKXt2ZSh0aGlzLEZlLE9mKS5jYWxsKHRoaXMpO2NvbnN0IHQ9QmkodGhpcy5vcHRpb25zLnN0YWxlVGltZSxDKHRoaXMsU2UpKTtpZihpaXx8Qyh0aGlzLFZ0KS5pc1N0YWxlfHwhRWYodCkpcmV0dXJuO2NvbnN0IG49UXkoQyh0aGlzLFZ0KS5kYXRhVXBkYXRlZEF0LHQpKzE7WCh0aGlzLEdzLHNldFRpbWVvdXQoKCk9PntDKHRoaXMsVnQpLmlzU3RhbGV8fHRoaXMudXBkYXRlUmVzdWx0KCl9LG4pKX0sUmY9ZnVuY3Rpb24oKXtyZXR1cm4odHlwZW9mIHRoaXMub3B0aW9ucy5yZWZldGNoSW50ZXJ2YWw9PSJmdW5jdGlvbiI/dGhpcy5vcHRpb25zLnJlZmV0Y2hJbnRlcnZhbChDKHRoaXMsU2UpKTp0aGlzLm9wdGlvbnMucmVmZXRjaEludGVydmFsKT8/ITF9LEFmPWZ1bmN0aW9uKHQpe3ZlKHRoaXMsRmUsRmYpLmNhbGwodGhpcyksWCh0aGlzLGlzLHQpLCEoaWl8fEZyKHRoaXMub3B0aW9ucy5lbmFibGVkLEModGhpcyxTZSkpPT09ITF8fCFFZihDKHRoaXMsaXMpKXx8Qyh0aGlzLGlzKT09PTApJiZYKHRoaXMsUXMsc2V0SW50ZXJ2YWwoKCk9PnsodGhpcy5vcHRpb25zLnJlZmV0Y2hJbnRlcnZhbEluQmFja2dyb3VuZHx8Y2guaXNGb2N1c2VkKCkpJiZ2ZSh0aGlzLEZlLFFhKS5jYWxsKHRoaXMpfSxDKHRoaXMsaXMpKSl9LE1mPWZ1bmN0aW9uKCl7dmUodGhpcyxGZSxUZikuY2FsbCh0aGlzKSx2ZSh0aGlzLEZlLEFmKS5jYWxsKHRoaXMsdmUodGhpcyxGZSxSZikuY2FsbCh0aGlzKSl9LE9mPWZ1bmN0aW9uKCl7Qyh0aGlzLEdzKSYmKGNsZWFyVGltZW91dChDKHRoaXMsR3MpKSxYKHRoaXMsR3Msdm9pZCAwKSl9LEZmPWZ1bmN0aW9uKCl7Qyh0aGlzLFFzKSYmKGNsZWFySW50ZXJ2YWwoQyh0aGlzLFFzKSksWCh0aGlzLFFzLHZvaWQgMCkpfSxJZj1mdW5jdGlvbigpe2NvbnN0IHQ9Qyh0aGlzLFp0KS5nZXRRdWVyeUNhY2hlKCkuYnVpbGQoQyh0aGlzLFp0KSx0aGlzLm9wdGlvbnMpO2lmKHQ9PT1DKHRoaXMsU2UpKXJldHVybjtjb25zdCByPUModGhpcyxTZSk7WCh0aGlzLFNlLHQpLFgodGhpcyxRbyx0LnN0YXRlKSx0aGlzLmhhc0xpc3RlbmVycygpJiYocj09bnVsbHx8ci5yZW1vdmVPYnNlcnZlcih0aGlzKSx0LmFkZE9ic2VydmVyKHRoaXMpKX0sbjA9ZnVuY3Rpb24odCl7eXQuYmF0Y2goKCk9Pnt0Lmxpc3RlbmVycyYmdGhpcy5saXN0ZW5lcnMuZm9yRWFjaChyPT57cihDKHRoaXMsVnQpKX0pLEModGhpcyxadCkuZ2V0UXVlcnlDYWNoZSgpLm5vdGlmeSh7cXVlcnk6Qyh0aGlzLFNlKSx0eXBlOiJvYnNlcnZlclJlc3VsdHNVcGRhdGVkIn0pfSl9LHd4KTtmdW5jdGlvbiBRUyhlLHQpe3JldHVybiBGcih0LmVuYWJsZWQsZSkhPT0hMSYmZS5zdGF0ZS5kYXRhPT09dm9pZCAwJiYhKGUuc3RhdGUuc3RhdHVzPT09ImVycm9yIiYmdC5yZXRyeU9uTW91bnQ9PT0hMSl9ZnVuY3Rpb24gZGcoZSx0KXtyZXR1cm4gUVMoZSx0KXx8ZS5zdGF0ZS5kYXRhIT09dm9pZCAwJiZMZihlLHQsdC5yZWZldGNoT25Nb3VudCl9ZnVuY3Rpb24gTGYoZSx0LHIpe2lmKEZyKHQuZW5hYmxlZCxlKSE9PSExKXtjb25zdCBuPXR5cGVvZiByPT0iZnVuY3Rpb24iP3IoZSk6cjtyZXR1cm4gbj09PSJhbHdheXMifHxuIT09ITEmJnVoKGUsdCl9cmV0dXJuITF9ZnVuY3Rpb24gZmcoZSx0LHIsbil7cmV0dXJuKGUhPT10fHxGcihuLmVuYWJsZWQsZSk9PT0hMSkmJighci5zdXNwZW5zZXx8ZS5zdGF0ZS5zdGF0dXMhPT0iZXJyb3IiKSYmdWgoZSxyKX1mdW5jdGlvbiB1aChlLHQpe3JldHVybiBGcih0LmVuYWJsZWQsZSkhPT0hMSYmZS5pc1N0YWxlQnlUaW1lKEJpKHQuc3RhbGVUaW1lLGUpKX1mdW5jdGlvbiBaUyhlLHQpe3JldHVybiFDYyhlLmdldEN1cnJlbnRSZXN1bHQoKSx0KX12YXIgYXMsb3MsS3Qsa24sVG4sWmwsRGYsYngsS1M9KGJ4PWNsYXNzIGV4dGVuZHMgRWF7Y29uc3RydWN0b3IocixuKXtzdXBlcigpO3VlKHRoaXMsVG4pO3VlKHRoaXMsYXMpO3VlKHRoaXMsb3MpO3VlKHRoaXMsS3QpO3VlKHRoaXMsa24pO1godGhpcyxhcyxyKSx0aGlzLnNldE9wdGlvbnMobiksdGhpcy5iaW5kTWV0aG9kcygpLHZlKHRoaXMsVG4sWmwpLmNhbGwodGhpcyl9YmluZE1ldGhvZHMoKXt0aGlzLm11dGF0ZT10aGlzLm11dGF0ZS5iaW5kKHRoaXMpLHRoaXMucmVzZXQ9dGhpcy5yZXNldC5iaW5kKHRoaXMpfXNldE9wdGlvbnMocil7dmFyIHM7Y29uc3Qgbj10aGlzLm9wdGlvbnM7dGhpcy5vcHRpb25zPUModGhpcyxhcykuZGVmYXVsdE11dGF0aW9uT3B0aW9ucyhyKSxDYyh0aGlzLm9wdGlvbnMsbil8fEModGhpcyxhcykuZ2V0TXV0YXRpb25DYWNoZSgpLm5vdGlmeSh7dHlwZToib2JzZXJ2ZXJPcHRpb25zVXBkYXRlZCIsbXV0YXRpb246Qyh0aGlzLEt0KSxvYnNlcnZlcjp0aGlzfSksbiE9bnVsbCYmbi5tdXRhdGlvbktleSYmdGhpcy5vcHRpb25zLm11dGF0aW9uS2V5JiZhaShuLm11dGF0aW9uS2V5KSE9PWFpKHRoaXMub3B0aW9ucy5tdXRhdGlvbktleSk/dGhpcy5yZXNldCgpOigocz1DKHRoaXMsS3QpKT09bnVsbD92b2lkIDA6cy5zdGF0ZS5zdGF0dXMpPT09InBlbmRpbmciJiZDKHRoaXMsS3QpLnNldE9wdGlvbnModGhpcy5vcHRpb25zKX1vblVuc3Vic2NyaWJlKCl7dmFyIHI7dGhpcy5oYXNMaXN0ZW5lcnMoKXx8KHI9Qyh0aGlzLEt0KSk9PW51bGx8fHIucmVtb3ZlT2JzZXJ2ZXIodGhpcyl9b25NdXRhdGlvblVwZGF0ZShyKXt2ZSh0aGlzLFRuLFpsKS5jYWxsKHRoaXMpLHZlKHRoaXMsVG4sRGYpLmNhbGwodGhpcyxyKX1nZXRDdXJyZW50UmVzdWx0KCl7cmV0dXJuIEModGhpcyxvcyl9cmVzZXQoKXt2YXIgcjsocj1DKHRoaXMsS3QpKT09bnVsbHx8ci5yZW1vdmVPYnNlcnZlcih0aGlzKSxYKHRoaXMsS3Qsdm9pZCAwKSx2ZSh0aGlzLFRuLFpsKS5jYWxsKHRoaXMpLHZlKHRoaXMsVG4sRGYpLmNhbGwodGhpcyl9bXV0YXRlKHIsbil7dmFyIHM7cmV0dXJuIFgodGhpcyxrbixuKSwocz1DKHRoaXMsS3QpKT09bnVsbHx8cy5yZW1vdmVPYnNlcnZlcih0aGlzKSxYKHRoaXMsS3QsQyh0aGlzLGFzKS5nZXRNdXRhdGlvbkNhY2hlKCkuYnVpbGQoQyh0aGlzLGFzKSx0aGlzLm9wdGlvbnMpKSxDKHRoaXMsS3QpLmFkZE9ic2VydmVyKHRoaXMpLEModGhpcyxLdCkuZXhlY3V0ZShyKX19LGFzPW5ldyBXZWFrTWFwLG9zPW5ldyBXZWFrTWFwLEt0PW5ldyBXZWFrTWFwLGtuPW5ldyBXZWFrTWFwLFRuPW5ldyBXZWFrU2V0LFpsPWZ1bmN0aW9uKCl7dmFyIG47Y29uc3Qgcj0oKG49Qyh0aGlzLEt0KSk9PW51bGw/dm9pZCAwOm4uc3RhdGUpPz9yMCgpO1godGhpcyxvcyx7Li4ucixpc1BlbmRpbmc6ci5zdGF0dXM9PT0icGVuZGluZyIsaXNTdWNjZXNzOnIuc3RhdHVzPT09InN1Y2Nlc3MiLGlzRXJyb3I6ci5zdGF0dXM9PT0iZXJyb3IiLGlzSWRsZTpyLnN0YXR1cz09PSJpZGxlIixtdXRhdGU6dGhpcy5tdXRhdGUscmVzZXQ6dGhpcy5yZXNldH0pfSxEZj1mdW5jdGlvbihyKXt5dC5iYXRjaCgoKT0+e3ZhciBuLHMsYSxvLGwsYyx1LGQ7aWYoQyh0aGlzLGtuKSYmdGhpcy5oYXNMaXN0ZW5lcnMoKSl7Y29uc3QgZj1DKHRoaXMsb3MpLnZhcmlhYmxlcyxwPUModGhpcyxvcykuY29udGV4dDsocj09bnVsbD92b2lkIDA6ci50eXBlKT09PSJzdWNjZXNzIj8oKHM9KG49Qyh0aGlzLGtuKSkub25TdWNjZXNzKT09bnVsbHx8cy5jYWxsKG4sci5kYXRhLGYscCksKG89KGE9Qyh0aGlzLGtuKSkub25TZXR0bGVkKT09bnVsbHx8by5jYWxsKGEsci5kYXRhLG51bGwsZixwKSk6KHI9PW51bGw/dm9pZCAwOnIudHlwZSk9PT0iZXJyb3IiJiYoKGM9KGw9Qyh0aGlzLGtuKSkub25FcnJvcik9PW51bGx8fGMuY2FsbChsLHIuZXJyb3IsZixwKSwoZD0odT1DKHRoaXMsa24pKS5vblNldHRsZWQpPT1udWxsfHxkLmNhbGwodSx2b2lkIDAsci5lcnJvcixmLHApKX10aGlzLmxpc3RlbmVycy5mb3JFYWNoKGY9PntmKEModGhpcyxvcykpfSl9KX0sYngpLHMwPXkuY3JlYXRlQ29udGV4dCh2b2lkIDApLENhPWU9Pntjb25zdCB0PXkudXNlQ29udGV4dChzMCk7aWYoIXQpdGhyb3cgbmV3IEVycm9yKCJObyBRdWVyeUNsaWVudCBzZXQsIHVzZSBRdWVyeUNsaWVudFByb3ZpZGVyIHRvIHNldCBvbmUiKTtyZXR1cm4gdH0sWVM9KHtjbGllbnQ6ZSxjaGlsZHJlbjp0fSk9Pih5LnVzZUVmZmVjdCgoKT0+KGUubW91bnQoKSwoKT0+e2UudW5tb3VudCgpfSksW2VdKSxpLmpzeChzMC5Qcm92aWRlcix7dmFsdWU6ZSxjaGlsZHJlbjp0fSkpLGkwPXkuY3JlYXRlQ29udGV4dCghMSksWFM9KCk9PnkudXNlQ29udGV4dChpMCk7aTAuUHJvdmlkZXI7ZnVuY3Rpb24gSlMoKXtsZXQgZT0hMTtyZXR1cm57Y2xlYXJSZXNldDooKT0+e2U9ITF9LHJlc2V0OigpPT57ZT0hMH0saXNSZXNldDooKT0+ZX19dmFyIGVrPXkuY3JlYXRlQ29udGV4dChKUygpKSx0az0oKT0+eS51c2VDb250ZXh0KGVrKTtmdW5jdGlvbiBhMChlLHQpe3JldHVybiB0eXBlb2YgZT09ImZ1bmN0aW9uIj9lKC4uLnQpOiEhZX1mdW5jdGlvbiAkZigpe312YXIgcms9KGUsdCk9PnsoZS5zdXNwZW5zZXx8ZS50aHJvd09uRXJyb3J8fGUuZXhwZXJpbWVudGFsX3ByZWZldGNoSW5SZW5kZXIpJiYodC5pc1Jlc2V0KCl8fChlLnJldHJ5T25Nb3VudD0hMSkpfSxuaz1lPT57eS51c2VFZmZlY3QoKCk9PntlLmNsZWFyUmVzZXQoKX0sW2VdKX0sc2s9KHtyZXN1bHQ6ZSxlcnJvclJlc2V0Qm91bmRhcnk6dCx0aHJvd09uRXJyb3I6cixxdWVyeTpufSk9PmUuaXNFcnJvciYmIXQuaXNSZXNldCgpJiYhZS5pc0ZldGNoaW5nJiZuJiZhMChyLFtlLmVycm9yLG5dKSxpaz1lPT57ZS5zdXNwZW5zZSYmKGUuc3RhbGVUaW1lPT09dm9pZCAwJiYoZS5zdGFsZVRpbWU9MWUzKSx0eXBlb2YgZS5nY1RpbWU9PSJudW1iZXIiJiYoZS5nY1RpbWU9TWF0aC5tYXgoZS5nY1RpbWUsMWUzKSkpfSxhaz0oZSx0KT0+ZS5pc0xvYWRpbmcmJmUuaXNGZXRjaGluZyYmIXQsb2s9KGUsdCk9PihlPT1udWxsP3ZvaWQgMDplLnN1c3BlbnNlKSYmdC5pc1BlbmRpbmcsbWc9KGUsdCxyKT0+dC5mZXRjaE9wdGltaXN0aWMoZSkuY2F0Y2goKCk9PntyLmNsZWFyUmVzZXQoKX0pO2Z1bmN0aW9uIGxrKGUsdCxyKXt2YXIgZCxmLHAseCx2O2NvbnN0IG49Q2EoKSxzPVhTKCksYT10aygpLG89bi5kZWZhdWx0UXVlcnlPcHRpb25zKGUpOyhmPShkPW4uZ2V0RGVmYXVsdE9wdGlvbnMoKS5xdWVyaWVzKT09bnVsbD92b2lkIDA6ZC5fZXhwZXJpbWVudGFsX2JlZm9yZVF1ZXJ5KT09bnVsbHx8Zi5jYWxsKGQsbyksby5fb3B0aW1pc3RpY1Jlc3VsdHM9cz8iaXNSZXN0b3JpbmciOiJvcHRpbWlzdGljIixpayhvKSxyayhvLGEpLG5rKGEpO2NvbnN0IGw9IW4uZ2V0UXVlcnlDYWNoZSgpLmdldChvLnF1ZXJ5SGFzaCksW2NdPXkudXNlU3RhdGUoKCk9Pm5ldyB0KG4sbykpLHU9Yy5nZXRPcHRpbWlzdGljUmVzdWx0KG8pO2lmKHkudXNlU3luY0V4dGVybmFsU3RvcmUoeS51c2VDYWxsYmFjayhtPT57Y29uc3Qgdz1zPyRmOmMuc3Vic2NyaWJlKHl0LmJhdGNoQ2FsbHMobSkpO3JldHVybiBjLnVwZGF0ZVJlc3VsdCgpLHd9LFtjLHNdKSwoKT0+Yy5nZXRDdXJyZW50UmVzdWx0KCksKCk9PmMuZ2V0Q3VycmVudFJlc3VsdCgpKSx5LnVzZUVmZmVjdCgoKT0+e2Muc2V0T3B0aW9ucyhvLHtsaXN0ZW5lcnM6ITF9KX0sW28sY10pLG9rKG8sdSkpdGhyb3cgbWcobyxjLGEpO2lmKHNrKHtyZXN1bHQ6dSxlcnJvclJlc2V0Qm91bmRhcnk6YSx0aHJvd09uRXJyb3I6by50aHJvd09uRXJyb3IscXVlcnk6bi5nZXRRdWVyeUNhY2hlKCkuZ2V0KG8ucXVlcnlIYXNoKX0pKXRocm93IHUuZXJyb3I7aWYoKHg9KHA9bi5nZXREZWZhdWx0T3B0aW9ucygpLnF1ZXJpZXMpPT1udWxsP3ZvaWQgMDpwLl9leHBlcmltZW50YWxfYWZ0ZXJRdWVyeSk9PW51bGx8fHguY2FsbChwLG8sdSksby5leHBlcmltZW50YWxfcHJlZmV0Y2hJblJlbmRlciYmIWlpJiZhayh1LHMpKXtjb25zdCBtPWw/bWcobyxjLGEpOih2PW4uZ2V0UXVlcnlDYWNoZSgpLmdldChvLnF1ZXJ5SGFzaCkpPT1udWxsP3ZvaWQgMDp2LnByb21pc2U7bT09bnVsbHx8bS5jYXRjaCgkZikuZmluYWxseSgoKT0+e2MudXBkYXRlUmVzdWx0KCl9KX1yZXR1cm4gby5ub3RpZnlPbkNoYW5nZVByb3BzP3U6Yy50cmFja1Jlc3VsdCh1KX1mdW5jdGlvbiBidChlLHQpe3JldHVybiBsayhlLEdTKX1mdW5jdGlvbiBfbihlLHQpe2NvbnN0IHI9Q2EoKSxbbl09eS51c2VTdGF0ZSgoKT0+bmV3IEtTKHIsZSkpO3kudXNlRWZmZWN0KCgpPT57bi5zZXRPcHRpb25zKGUpfSxbbixlXSk7Y29uc3Qgcz15LnVzZVN5bmNFeHRlcm5hbFN0b3JlKHkudXNlQ2FsbGJhY2sobz0+bi5zdWJzY3JpYmUoeXQuYmF0Y2hDYWxscyhvKSksW25dKSwoKT0+bi5nZXRDdXJyZW50UmVzdWx0KCksKCk9Pm4uZ2V0Q3VycmVudFJlc3VsdCgpKSxhPXkudXNlQ2FsbGJhY2soKG8sbCk9PntuLm11dGF0ZShvLGwpLmNhdGNoKCRmKX0sW25dKTtpZihzLmVycm9yJiZhMChuLm9wdGlvbnMudGhyb3dPbkVycm9yLFtzLmVycm9yXSkpdGhyb3cgcy5lcnJvcjtyZXR1cm57Li4ucyxtdXRhdGU6YSxtdXRhdGVBc3luYzpzLm11dGF0ZX19YXN5bmMgZnVuY3Rpb24gbzAoZSl7aWYoIWUub2spe2NvbnN0IHQ9YXdhaXQgZS50ZXh0KCl8fGUuc3RhdHVzVGV4dDt0aHJvdyBuZXcgRXJyb3IoYCR7ZS5zdGF0dXN9OiAke3R9YCl9fWFzeW5jIGZ1bmN0aW9uIHNuKGUsdCxyKXtjb25zdCBuPWF3YWl0IGZldGNoKHQse21ldGhvZDplLGhlYWRlcnM6cj97IkNvbnRlbnQtVHlwZSI6ImFwcGxpY2F0aW9uL2pzb24ifTp7fSxib2R5OnI/SlNPTi5zdHJpbmdpZnkocik6dm9pZCAwLGNyZWRlbnRpYWxzOiJpbmNsdWRlIn0pO3JldHVybiBhd2FpdCBvMChuKSxufWNvbnN0IGwwPSh7b240MDE6ZX0pPT5hc3luYyh7cXVlcnlLZXk6dH0pPT57Y29uc3Qgcj1hd2FpdCBmZXRjaCh0LmpvaW4oIi8iKSx7Y3JlZGVudGlhbHM6ImluY2x1ZGUifSk7cmV0dXJuIGU9PT0icmV0dXJuTnVsbCImJnIuc3RhdHVzPT09NDAxP251bGw6KGF3YWl0IG8wKHIpLGF3YWl0IHIuanNvbigpKX0sY2s9bmV3IHFTKHtkZWZhdWx0T3B0aW9uczp7cXVlcmllczp7cXVlcnlGbjpsMCh7b240MDE6InRocm93In0pLHJlZmV0Y2hJbnRlcnZhbDohMSxyZWZldGNoT25XaW5kb3dGb2N1czohMSxzdGFsZVRpbWU6MS8wLHJldHJ5OiExfSxtdXRhdGlvbnM6e3JldHJ5OiExfX19KSx1az0xLGRrPTFlNjtsZXQgb2Q9MDtmdW5jdGlvbiBmaygpe3JldHVybiBvZD0ob2QrMSklTnVtYmVyLk1BWF9TQUZFX0lOVEVHRVIsb2QudG9TdHJpbmcoKX1jb25zdCBsZD1uZXcgTWFwLGhnPWU9PntpZihsZC5oYXMoZSkpcmV0dXJuO2NvbnN0IHQ9c2V0VGltZW91dCgoKT0+e2xkLmRlbGV0ZShlKSxvbyh7dHlwZToiUkVNT1ZFX1RPQVNUIix0b2FzdElkOmV9KX0sZGspO2xkLnNldChlLHQpfSxtaz0oZSx0KT0+e3N3aXRjaCh0LnR5cGUpe2Nhc2UiQUREX1RPQVNUIjpyZXR1cm57Li4uZSx0b2FzdHM6W3QudG9hc3QsLi4uZS50b2FzdHNdLnNsaWNlKDAsdWspfTtjYXNlIlVQREFURV9UT0FTVCI6cmV0dXJuey4uLmUsdG9hc3RzOmUudG9hc3RzLm1hcChyPT5yLmlkPT09dC50b2FzdC5pZD97Li4uciwuLi50LnRvYXN0fTpyKX07Y2FzZSJESVNNSVNTX1RPQVNUIjp7Y29uc3R7dG9hc3RJZDpyfT10O3JldHVybiByP2hnKHIpOmUudG9hc3RzLmZvckVhY2gobj0+e2hnKG4uaWQpfSksey4uLmUsdG9hc3RzOmUudG9hc3RzLm1hcChuPT5uLmlkPT09cnx8cj09PXZvaWQgMD97Li4ubixvcGVuOiExfTpuKX19Y2FzZSJSRU1PVkVfVE9BU1QiOnJldHVybiB0LnRvYXN0SWQ9PT12b2lkIDA/ey4uLmUsdG9hc3RzOltdfTp7Li4uZSx0b2FzdHM6ZS50b2FzdHMuZmlsdGVyKHI9PnIuaWQhPT10LnRvYXN0SWQpfX19LEtsPVtdO2xldCBZbD17dG9hc3RzOltdfTtmdW5jdGlvbiBvbyhlKXtZbD1tayhZbCxlKSxLbC5mb3JFYWNoKHQ9Pnt0KFlsKX0pfWZ1bmN0aW9uIGhrKHsuLi5lfSl7Y29uc3QgdD1maygpLHI9cz0+b28oe3R5cGU6IlVQREFURV9UT0FTVCIsdG9hc3Q6ey4uLnMsaWQ6dH19KSxuPSgpPT5vbyh7dHlwZToiRElTTUlTU19UT0FTVCIsdG9hc3RJZDp0fSk7cmV0dXJuIG9vKHt0eXBlOiJBRERfVE9BU1QiLHRvYXN0OnsuLi5lLGlkOnQsb3BlbjohMCxvbk9wZW5DaGFuZ2U6cz0+e3N8fG4oKX19fSkse2lkOnQsZGlzbWlzczpuLHVwZGF0ZTpyfX1mdW5jdGlvbiBobigpe2NvbnN0W2UsdF09eS51c2VTdGF0ZShZbCk7cmV0dXJuIHkudXNlRWZmZWN0KCgpPT4oS2wucHVzaCh0KSwoKT0+e2NvbnN0IHI9S2wuaW5kZXhPZih0KTtyPi0xJiZLbC5zcGxpY2UociwxKX0pLFtlXSksey4uLmUsdG9hc3Q6aGssZGlzbWlzczpyPT5vbyh7dHlwZToiRElTTUlTU19UT0FTVCIsdG9hc3RJZDpyfSl9fWZ1bmN0aW9uIHdlKGUsdCx7Y2hlY2tGb3JEZWZhdWx0UHJldmVudGVkOnI9ITB9PXt9KXtyZXR1cm4gZnVuY3Rpb24ocyl7aWYoZT09bnVsbHx8ZShzKSxyPT09ITF8fCFzLmRlZmF1bHRQcmV2ZW50ZWQpcmV0dXJuIHQ9PW51bGw/dm9pZCAwOnQocyl9fWZ1bmN0aW9uIHBnKGUsdCl7aWYodHlwZW9mIGU9PSJmdW5jdGlvbiIpcmV0dXJuIGUodCk7ZSE9bnVsbCYmKGUuY3VycmVudD10KX1mdW5jdGlvbiBjMCguLi5lKXtyZXR1cm4gdD0+e2xldCByPSExO2NvbnN0IG49ZS5tYXAocz0+e2NvbnN0IGE9cGcocyx0KTtyZXR1cm4hciYmdHlwZW9mIGE9PSJmdW5jdGlvbiImJihyPSEwKSxhfSk7aWYocilyZXR1cm4oKT0+e2ZvcihsZXQgcz0wO3M8bi5sZW5ndGg7cysrKXtjb25zdCBhPW5bc107dHlwZW9mIGE9PSJmdW5jdGlvbiI/YSgpOnBnKGVbc10sbnVsbCl9fX19ZnVuY3Rpb24gZXQoLi4uZSl7cmV0dXJuIHkudXNlQ2FsbGJhY2soYzAoLi4uZSksZSl9ZnVuY3Rpb24gQXMoZSx0PVtdKXtsZXQgcj1bXTtmdW5jdGlvbiBuKGEsbyl7Y29uc3QgbD15LmNyZWF0ZUNvbnRleHQobyksYz1yLmxlbmd0aDtyPVsuLi5yLG9dO2NvbnN0IHU9Zj0+e3ZhciBoO2NvbnN0e3Njb3BlOnAsY2hpbGRyZW46eCwuLi52fT1mLG09KChoPXA9PW51bGw/dm9pZCAwOnBbZV0pPT1udWxsP3ZvaWQgMDpoW2NdKXx8bCx3PXkudXNlTWVtbygoKT0+dixPYmplY3QudmFsdWVzKHYpKTtyZXR1cm4gaS5qc3gobS5Qcm92aWRlcix7dmFsdWU6dyxjaGlsZHJlbjp4fSl9O3UuZGlzcGxheU5hbWU9YSsiUHJvdmlkZXIiO2Z1bmN0aW9uIGQoZixwKXt2YXIgbTtjb25zdCB4PSgobT1wPT1udWxsP3ZvaWQgMDpwW2VdKT09bnVsbD92b2lkIDA6bVtjXSl8fGwsdj15LnVzZUNvbnRleHQoeCk7aWYodilyZXR1cm4gdjtpZihvIT09dm9pZCAwKXJldHVybiBvO3Rocm93IG5ldyBFcnJvcihgXGAke2Z9XGAgbXVzdCBiZSB1c2VkIHdpdGhpbiBcYCR7YX1cYGApfXJldHVyblt1LGRdfWNvbnN0IHM9KCk9Pntjb25zdCBhPXIubWFwKG89PnkuY3JlYXRlQ29udGV4dChvKSk7cmV0dXJuIGZ1bmN0aW9uKGwpe2NvbnN0IGM9KGw9PW51bGw/dm9pZCAwOmxbZV0pfHxhO3JldHVybiB5LnVzZU1lbW8oKCk9Pih7W2BfX3Njb3BlJHtlfWBdOnsuLi5sLFtlXTpjfX0pLFtsLGNdKX19O3JldHVybiBzLnNjb3BlTmFtZT1lLFtuLHBrKHMsLi4udCldfWZ1bmN0aW9uIHBrKC4uLmUpe2NvbnN0IHQ9ZVswXTtpZihlLmxlbmd0aD09PTEpcmV0dXJuIHQ7Y29uc3Qgcj0oKT0+e2NvbnN0IG49ZS5tYXAocz0+KHt1c2VTY29wZTpzKCksc2NvcGVOYW1lOnMuc2NvcGVOYW1lfSkpO3JldHVybiBmdW5jdGlvbihhKXtjb25zdCBvPW4ucmVkdWNlKChsLHt1c2VTY29wZTpjLHNjb3BlTmFtZTp1fSk9Pntjb25zdCBmPWMoYSlbYF9fc2NvcGUke3V9YF07cmV0dXJuey4uLmwsLi4uZn19LHt9KTtyZXR1cm4geS51c2VNZW1vKCgpPT4oe1tgX19zY29wZSR7dC5zY29wZU5hbWV9YF06b30pLFtvXSl9fTtyZXR1cm4gci5zY29wZU5hbWU9dC5zY29wZU5hbWUscn1mdW5jdGlvbiBDbyhlKXtjb25zdCB0PWdrKGUpLHI9eS5mb3J3YXJkUmVmKChuLHMpPT57Y29uc3R7Y2hpbGRyZW46YSwuLi5vfT1uLGw9eS5DaGlsZHJlbi50b0FycmF5KGEpLGM9bC5maW5kKHZrKTtpZihjKXtjb25zdCB1PWMucHJvcHMuY2hpbGRyZW4sZD1sLm1hcChmPT5mPT09Yz95LkNoaWxkcmVuLmNvdW50KHUpPjE/eS5DaGlsZHJlbi5vbmx5KG51bGwpOnkuaXNWYWxpZEVsZW1lbnQodSk/dS5wcm9wcy5jaGlsZHJlbjpudWxsOmYpO3JldHVybiBpLmpzeCh0LHsuLi5vLHJlZjpzLGNoaWxkcmVuOnkuaXNWYWxpZEVsZW1lbnQodSk/eS5jbG9uZUVsZW1lbnQodSx2b2lkIDAsZCk6bnVsbH0pfXJldHVybiBpLmpzeCh0LHsuLi5vLHJlZjpzLGNoaWxkcmVuOmF9KX0pO3JldHVybiByLmRpc3BsYXlOYW1lPWAke2V9LlNsb3RgLHJ9dmFyIHUwPUNvKCJTbG90Iik7ZnVuY3Rpb24gZ2soZSl7Y29uc3QgdD15LmZvcndhcmRSZWYoKHIsbik9Pntjb25zdHtjaGlsZHJlbjpzLC4uLmF9PXI7aWYoeS5pc1ZhbGlkRWxlbWVudChzKSl7Y29uc3Qgbz13ayhzKSxsPXlrKGEscy5wcm9wcyk7cmV0dXJuIHMudHlwZSE9PXkuRnJhZ21lbnQmJihsLnJlZj1uP2MwKG4sbyk6bykseS5jbG9uZUVsZW1lbnQocyxsKX1yZXR1cm4geS5DaGlsZHJlbi5jb3VudChzKT4xP3kuQ2hpbGRyZW4ub25seShudWxsKTpudWxsfSk7cmV0dXJuIHQuZGlzcGxheU5hbWU9YCR7ZX0uU2xvdENsb25lYCx0fXZhciBkMD1TeW1ib2woInJhZGl4LnNsb3R0YWJsZSIpO2Z1bmN0aW9uIHhrKGUpe2NvbnN0IHQ9KHtjaGlsZHJlbjpyfSk9PmkuanN4KGkuRnJhZ21lbnQse2NoaWxkcmVuOnJ9KTtyZXR1cm4gdC5kaXNwbGF5TmFtZT1gJHtlfS5TbG90dGFibGVgLHQuX19yYWRpeElkPWQwLHR9ZnVuY3Rpb24gdmsoZSl7cmV0dXJuIHkuaXNWYWxpZEVsZW1lbnQoZSkmJnR5cGVvZiBlLnR5cGU9PSJmdW5jdGlvbiImJiJfX3JhZGl4SWQiaW4gZS50eXBlJiZlLnR5cGUuX19yYWRpeElkPT09ZDB9ZnVuY3Rpb24geWsoZSx0KXtjb25zdCByPXsuLi50fTtmb3IoY29uc3QgbiBpbiB0KXtjb25zdCBzPWVbbl0sYT10W25dOy9eb25bQS1aXS8udGVzdChuKT9zJiZhP3Jbbl09KC4uLmwpPT57YSguLi5sKSxzKC4uLmwpfTpzJiYocltuXT1zKTpuPT09InN0eWxlIj9yW25dPXsuLi5zLC4uLmF9Om49PT0iY2xhc3NOYW1lIiYmKHJbbl09W3MsYV0uZmlsdGVyKEJvb2xlYW4pLmpvaW4oIiAiKSl9cmV0dXJuey4uLmUsLi4ucn19ZnVuY3Rpb24gd2soZSl7dmFyIG4scztsZXQgdD0obj1PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGUucHJvcHMsInJlZiIpKT09bnVsbD92b2lkIDA6bi5nZXQscj10JiYiaXNSZWFjdFdhcm5pbmciaW4gdCYmdC5pc1JlYWN0V2FybmluZztyZXR1cm4gcj9lLnJlZjoodD0ocz1PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGUsInJlZiIpKT09bnVsbD92b2lkIDA6cy5nZXQscj10JiYiaXNSZWFjdFdhcm5pbmciaW4gdCYmdC5pc1JlYWN0V2FybmluZyxyP2UucHJvcHMucmVmOmUucHJvcHMucmVmfHxlLnJlZil9ZnVuY3Rpb24gZjAoZSl7Y29uc3QgdD1lKyJDb2xsZWN0aW9uUHJvdmlkZXIiLFtyLG5dPUFzKHQpLFtzLGFdPXIodCx7Y29sbGVjdGlvblJlZjp7Y3VycmVudDpudWxsfSxpdGVtTWFwOm5ldyBNYXB9KSxvPW09Pntjb25zdHtzY29wZTp3LGNoaWxkcmVuOmh9PW0sZz1zZS51c2VSZWYobnVsbCksYj1zZS51c2VSZWYobmV3IE1hcCkuY3VycmVudDtyZXR1cm4gaS5qc3gocyx7c2NvcGU6dyxpdGVtTWFwOmIsY29sbGVjdGlvblJlZjpnLGNoaWxkcmVuOmh9KX07by5kaXNwbGF5TmFtZT10O2NvbnN0IGw9ZSsiQ29sbGVjdGlvblNsb3QiLGM9Q28obCksdT1zZS5mb3J3YXJkUmVmKChtLHcpPT57Y29uc3R7c2NvcGU6aCxjaGlsZHJlbjpnfT1tLGI9YShsLGgpLE49ZXQodyxiLmNvbGxlY3Rpb25SZWYpO3JldHVybiBpLmpzeChjLHtyZWY6TixjaGlsZHJlbjpnfSl9KTt1LmRpc3BsYXlOYW1lPWw7Y29uc3QgZD1lKyJDb2xsZWN0aW9uSXRlbVNsb3QiLGY9ImRhdGEtcmFkaXgtY29sbGVjdGlvbi1pdGVtIixwPUNvKGQpLHg9c2UuZm9yd2FyZFJlZigobSx3KT0+e2NvbnN0e3Njb3BlOmgsY2hpbGRyZW46ZywuLi5ifT1tLE49c2UudXNlUmVmKG51bGwpLFM9ZXQodyxOKSxfPWEoZCxoKTtyZXR1cm4gc2UudXNlRWZmZWN0KCgpPT4oXy5pdGVtTWFwLnNldChOLHtyZWY6TiwuLi5ifSksKCk9PnZvaWQgXy5pdGVtTWFwLmRlbGV0ZShOKSkpLGkuanN4KHAse1tmXToiIixyZWY6UyxjaGlsZHJlbjpnfSl9KTt4LmRpc3BsYXlOYW1lPWQ7ZnVuY3Rpb24gdihtKXtjb25zdCB3PWEoZSsiQ29sbGVjdGlvbkNvbnN1bWVyIixtKTtyZXR1cm4gc2UudXNlQ2FsbGJhY2soKCk9Pntjb25zdCBnPXcuY29sbGVjdGlvblJlZi5jdXJyZW50O2lmKCFnKXJldHVybltdO2NvbnN0IGI9QXJyYXkuZnJvbShnLnF1ZXJ5U2VsZWN0b3JBbGwoYFske2Z9XWApKTtyZXR1cm4gQXJyYXkuZnJvbSh3Lml0ZW1NYXAudmFsdWVzKCkpLnNvcnQoKF8sayk9PmIuaW5kZXhPZihfLnJlZi5jdXJyZW50KS1iLmluZGV4T2Yoay5yZWYuY3VycmVudCkpfSxbdy5jb2xsZWN0aW9uUmVmLHcuaXRlbU1hcF0pfXJldHVyblt7UHJvdmlkZXI6byxTbG90OnUsSXRlbVNsb3Q6eH0sdixuXX12YXIgYms9WyJhIiwiYnV0dG9uIiwiZGl2IiwiZm9ybSIsImgyIiwiaDMiLCJpbWciLCJpbnB1dCIsImxhYmVsIiwibGkiLCJuYXYiLCJvbCIsInAiLCJzcGFuIiwic3ZnIiwidWwiXSxrZT1iay5yZWR1Y2UoKGUsdCk9Pntjb25zdCByPUNvKGBQcmltaXRpdmUuJHt0fWApLG49eS5mb3J3YXJkUmVmKChzLGEpPT57Y29uc3R7YXNDaGlsZDpvLC4uLmx9PXMsYz1vP3I6dDtyZXR1cm4gdHlwZW9mIHdpbmRvdzwidSImJih3aW5kb3dbU3ltYm9sLmZvcigicmFkaXgtdWkiKV09ITApLGkuanN4KGMsey4uLmwscmVmOmF9KX0pO3JldHVybiBuLmRpc3BsYXlOYW1lPWBQcmltaXRpdmUuJHt0fWAsey4uLmUsW3RdOm59fSx7fSk7ZnVuY3Rpb24gbTAoZSx0KXtlJiZnaS5mbHVzaFN5bmMoKCk9PmUuZGlzcGF0Y2hFdmVudCh0KSl9ZnVuY3Rpb24gcHIoZSl7Y29uc3QgdD15LnVzZVJlZihlKTtyZXR1cm4geS51c2VFZmZlY3QoKCk9Pnt0LmN1cnJlbnQ9ZX0pLHkudXNlTWVtbygoKT0+KC4uLnIpPT57dmFyIG47cmV0dXJuKG49dC5jdXJyZW50KT09bnVsbD92b2lkIDA6bi5jYWxsKHQsLi4ucil9LFtdKX1mdW5jdGlvbiBqayhlLHQ9Z2xvYmFsVGhpcz09bnVsbD92b2lkIDA6Z2xvYmFsVGhpcy5kb2N1bWVudCl7Y29uc3Qgcj1wcihlKTt5LnVzZUVmZmVjdCgoKT0+e2NvbnN0IG49cz0+e3Mua2V5PT09IkVzY2FwZSImJnIocyl9O3JldHVybiB0LmFkZEV2ZW50TGlzdGVuZXIoImtleWRvd24iLG4se2NhcHR1cmU6ITB9KSwoKT0+dC5yZW1vdmVFdmVudExpc3RlbmVyKCJrZXlkb3duIixuLHtjYXB0dXJlOiEwfSl9LFtyLHRdKX12YXIgTms9IkRpc21pc3NhYmxlTGF5ZXIiLHpmPSJkaXNtaXNzYWJsZUxheWVyLnVwZGF0ZSIsU2s9ImRpc21pc3NhYmxlTGF5ZXIucG9pbnRlckRvd25PdXRzaWRlIixraz0iZGlzbWlzc2FibGVMYXllci5mb2N1c091dHNpZGUiLGdnLGgwPXkuY3JlYXRlQ29udGV4dCh7bGF5ZXJzOm5ldyBTZXQsbGF5ZXJzV2l0aE91dHNpZGVQb2ludGVyRXZlbnRzRGlzYWJsZWQ6bmV3IFNldCxicmFuY2hlczpuZXcgU2V0fSksZnU9eS5mb3J3YXJkUmVmKChlLHQpPT57Y29uc3R7ZGlzYWJsZU91dHNpZGVQb2ludGVyRXZlbnRzOnI9ITEsb25Fc2NhcGVLZXlEb3duOm4sb25Qb2ludGVyRG93bk91dHNpZGU6cyxvbkZvY3VzT3V0c2lkZTphLG9uSW50ZXJhY3RPdXRzaWRlOm8sb25EaXNtaXNzOmwsLi4uY309ZSx1PXkudXNlQ29udGV4dChoMCksW2QsZl09eS51c2VTdGF0ZShudWxsKSxwPShkPT1udWxsP3ZvaWQgMDpkLm93bmVyRG9jdW1lbnQpPz8oZ2xvYmFsVGhpcz09bnVsbD92b2lkIDA6Z2xvYmFsVGhpcy5kb2N1bWVudCksWyx4XT15LnVzZVN0YXRlKHt9KSx2PWV0KHQsaz0+ZihrKSksbT1BcnJheS5mcm9tKHUubGF5ZXJzKSxbd109Wy4uLnUubGF5ZXJzV2l0aE91dHNpZGVQb2ludGVyRXZlbnRzRGlzYWJsZWRdLnNsaWNlKC0xKSxoPW0uaW5kZXhPZih3KSxnPWQ/bS5pbmRleE9mKGQpOi0xLGI9dS5sYXllcnNXaXRoT3V0c2lkZVBvaW50ZXJFdmVudHNEaXNhYmxlZC5zaXplPjAsTj1nPj1oLFM9Q2soaz0+e2NvbnN0IFQ9ay50YXJnZXQsTD1bLi4udS5icmFuY2hlc10uc29tZShQPT5QLmNvbnRhaW5zKFQpKTshTnx8THx8KHM9PW51bGx8fHMoayksbz09bnVsbHx8byhrKSxrLmRlZmF1bHRQcmV2ZW50ZWR8fGw9PW51bGx8fGwoKSl9LHApLF89X2soaz0+e2NvbnN0IFQ9ay50YXJnZXQ7Wy4uLnUuYnJhbmNoZXNdLnNvbWUoUD0+UC5jb250YWlucyhUKSl8fChhPT1udWxsfHxhKGspLG89PW51bGx8fG8oayksay5kZWZhdWx0UHJldmVudGVkfHxsPT1udWxsfHxsKCkpfSxwKTtyZXR1cm4gamsoaz0+e2c9PT11LmxheWVycy5zaXplLTEmJihuPT1udWxsfHxuKGspLCFrLmRlZmF1bHRQcmV2ZW50ZWQmJmwmJihrLnByZXZlbnREZWZhdWx0KCksbCgpKSl9LHApLHkudXNlRWZmZWN0KCgpPT57aWYoZClyZXR1cm4gciYmKHUubGF5ZXJzV2l0aE91dHNpZGVQb2ludGVyRXZlbnRzRGlzYWJsZWQuc2l6ZT09PTAmJihnZz1wLmJvZHkuc3R5bGUucG9pbnRlckV2ZW50cyxwLmJvZHkuc3R5bGUucG9pbnRlckV2ZW50cz0ibm9uZSIpLHUubGF5ZXJzV2l0aE91dHNpZGVQb2ludGVyRXZlbnRzRGlzYWJsZWQuYWRkKGQpKSx1LmxheWVycy5hZGQoZCkseGcoKSwoKT0+e3ImJnUubGF5ZXJzV2l0aE91dHNpZGVQb2ludGVyRXZlbnRzRGlzYWJsZWQuc2l6ZT09PTEmJihwLmJvZHkuc3R5bGUucG9pbnRlckV2ZW50cz1nZyl9fSxbZCxwLHIsdV0pLHkudXNlRWZmZWN0KCgpPT4oKT0+e2QmJih1LmxheWVycy5kZWxldGUoZCksdS5sYXllcnNXaXRoT3V0c2lkZVBvaW50ZXJFdmVudHNEaXNhYmxlZC5kZWxldGUoZCkseGcoKSl9LFtkLHVdKSx5LnVzZUVmZmVjdCgoKT0+e2NvbnN0IGs9KCk9Pngoe30pO3JldHVybiBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKHpmLGspLCgpPT5kb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKHpmLGspfSxbXSksaS5qc3goa2UuZGl2LHsuLi5jLHJlZjp2LHN0eWxlOntwb2ludGVyRXZlbnRzOmI/Tj8iYXV0byI6Im5vbmUiOnZvaWQgMCwuLi5lLnN0eWxlfSxvbkZvY3VzQ2FwdHVyZTp3ZShlLm9uRm9jdXNDYXB0dXJlLF8ub25Gb2N1c0NhcHR1cmUpLG9uQmx1ckNhcHR1cmU6d2UoZS5vbkJsdXJDYXB0dXJlLF8ub25CbHVyQ2FwdHVyZSksb25Qb2ludGVyRG93bkNhcHR1cmU6d2UoZS5vblBvaW50ZXJEb3duQ2FwdHVyZSxTLm9uUG9pbnRlckRvd25DYXB0dXJlKX0pfSk7ZnUuZGlzcGxheU5hbWU9Tms7dmFyIEVrPSJEaXNtaXNzYWJsZUxheWVyQnJhbmNoIixwMD15LmZvcndhcmRSZWYoKGUsdCk9Pntjb25zdCByPXkudXNlQ29udGV4dChoMCksbj15LnVzZVJlZihudWxsKSxzPWV0KHQsbik7cmV0dXJuIHkudXNlRWZmZWN0KCgpPT57Y29uc3QgYT1uLmN1cnJlbnQ7aWYoYSlyZXR1cm4gci5icmFuY2hlcy5hZGQoYSksKCk9PntyLmJyYW5jaGVzLmRlbGV0ZShhKX19LFtyLmJyYW5jaGVzXSksaS5qc3goa2UuZGl2LHsuLi5lLHJlZjpzfSl9KTtwMC5kaXNwbGF5TmFtZT1FaztmdW5jdGlvbiBDayhlLHQ9Z2xvYmFsVGhpcz09bnVsbD92b2lkIDA6Z2xvYmFsVGhpcy5kb2N1bWVudCl7Y29uc3Qgcj1wcihlKSxuPXkudXNlUmVmKCExKSxzPXkudXNlUmVmKCgpPT57fSk7cmV0dXJuIHkudXNlRWZmZWN0KCgpPT57Y29uc3QgYT1sPT57aWYobC50YXJnZXQmJiFuLmN1cnJlbnQpe2xldCBjPWZ1bmN0aW9uKCl7ZzAoU2sscix1LHtkaXNjcmV0ZTohMH0pfTtjb25zdCB1PXtvcmlnaW5hbEV2ZW50Omx9O2wucG9pbnRlclR5cGU9PT0idG91Y2giPyh0LnJlbW92ZUV2ZW50TGlzdGVuZXIoImNsaWNrIixzLmN1cnJlbnQpLHMuY3VycmVudD1jLHQuYWRkRXZlbnRMaXN0ZW5lcigiY2xpY2siLHMuY3VycmVudCx7b25jZTohMH0pKTpjKCl9ZWxzZSB0LnJlbW92ZUV2ZW50TGlzdGVuZXIoImNsaWNrIixzLmN1cnJlbnQpO24uY3VycmVudD0hMX0sbz13aW5kb3cuc2V0VGltZW91dCgoKT0+e3QuYWRkRXZlbnRMaXN0ZW5lcigicG9pbnRlcmRvd24iLGEpfSwwKTtyZXR1cm4oKT0+e3dpbmRvdy5jbGVhclRpbWVvdXQobyksdC5yZW1vdmVFdmVudExpc3RlbmVyKCJwb2ludGVyZG93biIsYSksdC5yZW1vdmVFdmVudExpc3RlbmVyKCJjbGljayIscy5jdXJyZW50KX19LFt0LHJdKSx7b25Qb2ludGVyRG93bkNhcHR1cmU6KCk9Pm4uY3VycmVudD0hMH19ZnVuY3Rpb24gX2soZSx0PWdsb2JhbFRoaXM9PW51bGw/dm9pZCAwOmdsb2JhbFRoaXMuZG9jdW1lbnQpe2NvbnN0IHI9cHIoZSksbj15LnVzZVJlZighMSk7cmV0dXJuIHkudXNlRWZmZWN0KCgpPT57Y29uc3Qgcz1hPT57YS50YXJnZXQmJiFuLmN1cnJlbnQmJmcwKGtrLHIse29yaWdpbmFsRXZlbnQ6YX0se2Rpc2NyZXRlOiExfSl9O3JldHVybiB0LmFkZEV2ZW50TGlzdGVuZXIoImZvY3VzaW4iLHMpLCgpPT50LnJlbW92ZUV2ZW50TGlzdGVuZXIoImZvY3VzaW4iLHMpfSxbdCxyXSkse29uRm9jdXNDYXB0dXJlOigpPT5uLmN1cnJlbnQ9ITAsb25CbHVyQ2FwdHVyZTooKT0+bi5jdXJyZW50PSExfX1mdW5jdGlvbiB4Zygpe2NvbnN0IGU9bmV3IEN1c3RvbUV2ZW50KHpmKTtkb2N1bWVudC5kaXNwYXRjaEV2ZW50KGUpfWZ1bmN0aW9uIGcwKGUsdCxyLHtkaXNjcmV0ZTpufSl7Y29uc3Qgcz1yLm9yaWdpbmFsRXZlbnQudGFyZ2V0LGE9bmV3IEN1c3RvbUV2ZW50KGUse2J1YmJsZXM6ITEsY2FuY2VsYWJsZTohMCxkZXRhaWw6cn0pO3QmJnMuYWRkRXZlbnRMaXN0ZW5lcihlLHQse29uY2U6ITB9KSxuP20wKHMsYSk6cy5kaXNwYXRjaEV2ZW50KGEpfXZhciBQaz1mdSxUaz1wMCxEdD1nbG9iYWxUaGlzIT1udWxsJiZnbG9iYWxUaGlzLmRvY3VtZW50P3kudXNlTGF5b3V0RWZmZWN0OigpPT57fSxSaz0iUG9ydGFsIixkaD15LmZvcndhcmRSZWYoKGUsdCk9Pnt2YXIgbDtjb25zdHtjb250YWluZXI6ciwuLi5ufT1lLFtzLGFdPXkudXNlU3RhdGUoITEpO0R0KCgpPT5hKCEwKSxbXSk7Y29uc3Qgbz1yfHxzJiYoKGw9Z2xvYmFsVGhpcz09bnVsbD92b2lkIDA6Z2xvYmFsVGhpcy5kb2N1bWVudCk9PW51bGw/dm9pZCAwOmwuYm9keSk7cmV0dXJuIG8/clMuY3JlYXRlUG9ydGFsKGkuanN4KGtlLmRpdix7Li4ubixyZWY6dH0pLG8pOm51bGx9KTtkaC5kaXNwbGF5TmFtZT1SaztmdW5jdGlvbiBBayhlLHQpe3JldHVybiB5LnVzZVJlZHVjZXIoKHIsbik9PnRbcl1bbl0/P3IsZSl9dmFyIG11PWU9Pntjb25zdHtwcmVzZW50OnQsY2hpbGRyZW46cn09ZSxuPU1rKHQpLHM9dHlwZW9mIHI9PSJmdW5jdGlvbiI/cih7cHJlc2VudDpuLmlzUHJlc2VudH0pOnkuQ2hpbGRyZW4ub25seShyKSxhPWV0KG4ucmVmLE9rKHMpKTtyZXR1cm4gdHlwZW9mIHI9PSJmdW5jdGlvbiJ8fG4uaXNQcmVzZW50P3kuY2xvbmVFbGVtZW50KHMse3JlZjphfSk6bnVsbH07bXUuZGlzcGxheU5hbWU9IlByZXNlbmNlIjtmdW5jdGlvbiBNayhlKXtjb25zdFt0LHJdPXkudXNlU3RhdGUoKSxuPXkudXNlUmVmKHt9KSxzPXkudXNlUmVmKGUpLGE9eS51c2VSZWYoIm5vbmUiKSxvPWU/Im1vdW50ZWQiOiJ1bm1vdW50ZWQiLFtsLGNdPUFrKG8se21vdW50ZWQ6e1VOTU9VTlQ6InVubW91bnRlZCIsQU5JTUFUSU9OX09VVDoidW5tb3VudFN1c3BlbmRlZCJ9LHVubW91bnRTdXNwZW5kZWQ6e01PVU5UOiJtb3VudGVkIixBTklNQVRJT05fRU5EOiJ1bm1vdW50ZWQifSx1bm1vdW50ZWQ6e01PVU5UOiJtb3VudGVkIn19KTtyZXR1cm4geS51c2VFZmZlY3QoKCk9Pntjb25zdCB1PVBsKG4uY3VycmVudCk7YS5jdXJyZW50PWw9PT0ibW91bnRlZCI/dToibm9uZSJ9LFtsXSksRHQoKCk9Pntjb25zdCB1PW4uY3VycmVudCxkPXMuY3VycmVudDtpZihkIT09ZSl7Y29uc3QgcD1hLmN1cnJlbnQseD1QbCh1KTtlP2MoIk1PVU5UIik6eD09PSJub25lInx8KHU9PW51bGw/dm9pZCAwOnUuZGlzcGxheSk9PT0ibm9uZSI/YygiVU5NT1VOVCIpOmMoZCYmcCE9PXg/IkFOSU1BVElPTl9PVVQiOiJVTk1PVU5UIikscy5jdXJyZW50PWV9fSxbZSxjXSksRHQoKCk9PntpZih0KXtsZXQgdTtjb25zdCBkPXQub3duZXJEb2N1bWVudC5kZWZhdWx0Vmlldz8/d2luZG93LGY9eD0+e2NvbnN0IG09UGwobi5jdXJyZW50KS5pbmNsdWRlcyh4LmFuaW1hdGlvbk5hbWUpO2lmKHgudGFyZ2V0PT09dCYmbSYmKGMoIkFOSU1BVElPTl9FTkQiKSwhcy5jdXJyZW50KSl7Y29uc3Qgdz10LnN0eWxlLmFuaW1hdGlvbkZpbGxNb2RlO3Quc3R5bGUuYW5pbWF0aW9uRmlsbE1vZGU9ImZvcndhcmRzIix1PWQuc2V0VGltZW91dCgoKT0+e3Quc3R5bGUuYW5pbWF0aW9uRmlsbE1vZGU9PT0iZm9yd2FyZHMiJiYodC5zdHlsZS5hbmltYXRpb25GaWxsTW9kZT13KX0pfX0scD14PT57eC50YXJnZXQ9PT10JiYoYS5jdXJyZW50PVBsKG4uY3VycmVudCkpfTtyZXR1cm4gdC5hZGRFdmVudExpc3RlbmVyKCJhbmltYXRpb25zdGFydCIscCksdC5hZGRFdmVudExpc3RlbmVyKCJhbmltYXRpb25jYW5jZWwiLGYpLHQuYWRkRXZlbnRMaXN0ZW5lcigiYW5pbWF0aW9uZW5kIixmKSwoKT0+e2QuY2xlYXJUaW1lb3V0KHUpLHQucmVtb3ZlRXZlbnRMaXN0ZW5lcigiYW5pbWF0aW9uc3RhcnQiLHApLHQucmVtb3ZlRXZlbnRMaXN0ZW5lcigiYW5pbWF0aW9uY2FuY2VsIixmKSx0LnJlbW92ZUV2ZW50TGlzdGVuZXIoImFuaW1hdGlvbmVuZCIsZil9fWVsc2UgYygiQU5JTUFUSU9OX0VORCIpfSxbdCxjXSkse2lzUHJlc2VudDpbIm1vdW50ZWQiLCJ1bm1vdW50U3VzcGVuZGVkIl0uaW5jbHVkZXMobCkscmVmOnkudXNlQ2FsbGJhY2sodT0+e3UmJihuLmN1cnJlbnQ9Z2V0Q29tcHV0ZWRTdHlsZSh1KSkscih1KX0sW10pfX1mdW5jdGlvbiBQbChlKXtyZXR1cm4oZT09bnVsbD92b2lkIDA6ZS5hbmltYXRpb25OYW1lKXx8Im5vbmUifWZ1bmN0aW9uIE9rKGUpe3ZhciBuLHM7bGV0IHQ9KG49T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihlLnByb3BzLCJyZWYiKSk9PW51bGw/dm9pZCAwOm4uZ2V0LHI9dCYmImlzUmVhY3RXYXJuaW5nImluIHQmJnQuaXNSZWFjdFdhcm5pbmc7cmV0dXJuIHI/ZS5yZWY6KHQ9KHM9T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihlLCJyZWYiKSk9PW51bGw/dm9pZCAwOnMuZ2V0LHI9dCYmImlzUmVhY3RXYXJuaW5nImluIHQmJnQuaXNSZWFjdFdhcm5pbmcscj9lLnByb3BzLnJlZjplLnByb3BzLnJlZnx8ZS5yZWYpfWZ1bmN0aW9uIF9vKHtwcm9wOmUsZGVmYXVsdFByb3A6dCxvbkNoYW5nZTpyPSgpPT57fX0pe2NvbnN0W24sc109Rmsoe2RlZmF1bHRQcm9wOnQsb25DaGFuZ2U6cn0pLGE9ZSE9PXZvaWQgMCxvPWE/ZTpuLGw9cHIociksYz15LnVzZUNhbGxiYWNrKHU9PntpZihhKXtjb25zdCBmPXR5cGVvZiB1PT0iZnVuY3Rpb24iP3UoZSk6dTtmIT09ZSYmbChmKX1lbHNlIHModSl9LFthLGUscyxsXSk7cmV0dXJuW28sY119ZnVuY3Rpb24gRmsoe2RlZmF1bHRQcm9wOmUsb25DaGFuZ2U6dH0pe2NvbnN0IHI9eS51c2VTdGF0ZShlKSxbbl09cixzPXkudXNlUmVmKG4pLGE9cHIodCk7cmV0dXJuIHkudXNlRWZmZWN0KCgpPT57cy5jdXJyZW50IT09biYmKGEobikscy5jdXJyZW50PW4pfSxbbixzLGFdKSxyfXZhciBJaz0iVmlzdWFsbHlIaWRkZW4iLG5sPXkuZm9yd2FyZFJlZigoZSx0KT0+aS5qc3goa2Uuc3Bhbix7Li4uZSxyZWY6dCxzdHlsZTp7cG9zaXRpb246ImFic29sdXRlIixib3JkZXI6MCx3aWR0aDoxLGhlaWdodDoxLHBhZGRpbmc6MCxtYXJnaW46LTEsb3ZlcmZsb3c6ImhpZGRlbiIsY2xpcDoicmVjdCgwLCAwLCAwLCAwKSIsd2hpdGVTcGFjZToibm93cmFwIix3b3JkV3JhcDoibm9ybWFsIiwuLi5lLnN0eWxlfX0pKTtubC5kaXNwbGF5TmFtZT1Jazt2YXIgTGs9bmwsZmg9IlRvYXN0UHJvdmlkZXIiLFttaCxEaywka109ZjAoIlRvYXN0IiksW3gwLEZSXT1BcygiVG9hc3QiLFska10pLFt6ayxodV09eDAoZmgpLHYwPWU9Pntjb25zdHtfX3Njb3BlVG9hc3Q6dCxsYWJlbDpyPSJOb3RpZmljYXRpb24iLGR1cmF0aW9uOm49NWUzLHN3aXBlRGlyZWN0aW9uOnM9InJpZ2h0Iixzd2lwZVRocmVzaG9sZDphPTUwLGNoaWxkcmVuOm99PWUsW2wsY109eS51c2VTdGF0ZShudWxsKSxbdSxkXT15LnVzZVN0YXRlKDApLGY9eS51c2VSZWYoITEpLHA9eS51c2VSZWYoITEpO3JldHVybiByLnRyaW0oKXx8Y29uc29sZS5lcnJvcihgSW52YWxpZCBwcm9wIFxgbGFiZWxcYCBzdXBwbGllZCB0byBcYCR7Zmh9XGAuIEV4cGVjdGVkIG5vbi1lbXB0eSBcYHN0cmluZ1xgLmApLGkuanN4KG1oLlByb3ZpZGVyLHtzY29wZTp0LGNoaWxkcmVuOmkuanN4KHprLHtzY29wZTp0LGxhYmVsOnIsZHVyYXRpb246bixzd2lwZURpcmVjdGlvbjpzLHN3aXBlVGhyZXNob2xkOmEsdG9hc3RDb3VudDp1LHZpZXdwb3J0Omwsb25WaWV3cG9ydENoYW5nZTpjLG9uVG9hc3RBZGQ6eS51c2VDYWxsYmFjaygoKT0+ZCh4PT54KzEpLFtdKSxvblRvYXN0UmVtb3ZlOnkudXNlQ2FsbGJhY2soKCk9PmQoeD0+eC0xKSxbXSksaXNGb2N1c2VkVG9hc3RFc2NhcGVLZXlEb3duUmVmOmYsaXNDbG9zZVBhdXNlZFJlZjpwLGNoaWxkcmVuOm99KX0pfTt2MC5kaXNwbGF5TmFtZT1maDt2YXIgeTA9IlRvYXN0Vmlld3BvcnQiLFZrPVsiRjgiXSxWZj0idG9hc3Qudmlld3BvcnRQYXVzZSIsVWY9InRvYXN0LnZpZXdwb3J0UmVzdW1lIix3MD15LmZvcndhcmRSZWYoKGUsdCk9Pntjb25zdHtfX3Njb3BlVG9hc3Q6cixob3RrZXk6bj1WayxsYWJlbDpzPSJOb3RpZmljYXRpb25zICh7aG90a2V5fSkiLC4uLmF9PWUsbz1odSh5MCxyKSxsPURrKHIpLGM9eS51c2VSZWYobnVsbCksdT15LnVzZVJlZihudWxsKSxkPXkudXNlUmVmKG51bGwpLGY9eS51c2VSZWYobnVsbCkscD1ldCh0LGYsby5vblZpZXdwb3J0Q2hhbmdlKSx4PW4uam9pbigiKyIpLnJlcGxhY2UoL0tleS9nLCIiKS5yZXBsYWNlKC9EaWdpdC9nLCIiKSx2PW8udG9hc3RDb3VudD4wO3kudXNlRWZmZWN0KCgpPT57Y29uc3Qgdz1oPT57dmFyIGI7bi5sZW5ndGghPT0wJiZuLmV2ZXJ5KE49PmhbTl18fGguY29kZT09PU4pJiYoKGI9Zi5jdXJyZW50KT09bnVsbHx8Yi5mb2N1cygpKX07cmV0dXJuIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoImtleWRvd24iLHcpLCgpPT5kb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCJrZXlkb3duIix3KX0sW25dKSx5LnVzZUVmZmVjdCgoKT0+e2NvbnN0IHc9Yy5jdXJyZW50LGg9Zi5jdXJyZW50O2lmKHYmJncmJmgpe2NvbnN0IGc9KCk9PntpZighby5pc0Nsb3NlUGF1c2VkUmVmLmN1cnJlbnQpe2NvbnN0IF89bmV3IEN1c3RvbUV2ZW50KFZmKTtoLmRpc3BhdGNoRXZlbnQoXyksby5pc0Nsb3NlUGF1c2VkUmVmLmN1cnJlbnQ9ITB9fSxiPSgpPT57aWYoby5pc0Nsb3NlUGF1c2VkUmVmLmN1cnJlbnQpe2NvbnN0IF89bmV3IEN1c3RvbUV2ZW50KFVmKTtoLmRpc3BhdGNoRXZlbnQoXyksby5pc0Nsb3NlUGF1c2VkUmVmLmN1cnJlbnQ9ITF9fSxOPV89Pnshdy5jb250YWlucyhfLnJlbGF0ZWRUYXJnZXQpJiZiKCl9LFM9KCk9Pnt3LmNvbnRhaW5zKGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQpfHxiKCl9O3JldHVybiB3LmFkZEV2ZW50TGlzdGVuZXIoImZvY3VzaW4iLGcpLHcuYWRkRXZlbnRMaXN0ZW5lcigiZm9jdXNvdXQiLE4pLHcuYWRkRXZlbnRMaXN0ZW5lcigicG9pbnRlcm1vdmUiLGcpLHcuYWRkRXZlbnRMaXN0ZW5lcigicG9pbnRlcmxlYXZlIixTKSx3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigiYmx1ciIsZyksd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoImZvY3VzIixiKSwoKT0+e3cucmVtb3ZlRXZlbnRMaXN0ZW5lcigiZm9jdXNpbiIsZyksdy5yZW1vdmVFdmVudExpc3RlbmVyKCJmb2N1c291dCIsTiksdy5yZW1vdmVFdmVudExpc3RlbmVyKCJwb2ludGVybW92ZSIsZyksdy5yZW1vdmVFdmVudExpc3RlbmVyKCJwb2ludGVybGVhdmUiLFMpLHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCJibHVyIixnKSx3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcigiZm9jdXMiLGIpfX19LFt2LG8uaXNDbG9zZVBhdXNlZFJlZl0pO2NvbnN0IG09eS51c2VDYWxsYmFjaygoe3RhYmJpbmdEaXJlY3Rpb246d30pPT57Y29uc3QgZz1sKCkubWFwKGI9Pntjb25zdCBOPWIucmVmLmN1cnJlbnQsUz1bTiwuLi5lRShOKV07cmV0dXJuIHc9PT0iZm9yd2FyZHMiP1M6Uy5yZXZlcnNlKCl9KTtyZXR1cm4odz09PSJmb3J3YXJkcyI/Zy5yZXZlcnNlKCk6ZykuZmxhdCgpfSxbbF0pO3JldHVybiB5LnVzZUVmZmVjdCgoKT0+e2NvbnN0IHc9Zi5jdXJyZW50O2lmKHcpe2NvbnN0IGg9Zz0+e3ZhciBTLF8saztjb25zdCBiPWcuYWx0S2V5fHxnLmN0cmxLZXl8fGcubWV0YUtleTtpZihnLmtleT09PSJUYWIiJiYhYil7Y29uc3QgVD1kb2N1bWVudC5hY3RpdmVFbGVtZW50LEw9Zy5zaGlmdEtleTtpZihnLnRhcmdldD09PXcmJkwpeyhTPXUuY3VycmVudCk9PW51bGx8fFMuZm9jdXMoKTtyZXR1cm59Y29uc3QgST1tKHt0YWJiaW5nRGlyZWN0aW9uOkw/ImJhY2t3YXJkcyI6ImZvcndhcmRzIn0pLFY9SS5maW5kSW5kZXgoTz0+Tz09PVQpO2NkKEkuc2xpY2UoVisxKSk/Zy5wcmV2ZW50RGVmYXVsdCgpOkw/KF89dS5jdXJyZW50KT09bnVsbHx8Xy5mb2N1cygpOihrPWQuY3VycmVudCk9PW51bGx8fGsuZm9jdXMoKX19O3JldHVybiB3LmFkZEV2ZW50TGlzdGVuZXIoImtleWRvd24iLGgpLCgpPT53LnJlbW92ZUV2ZW50TGlzdGVuZXIoImtleWRvd24iLGgpfX0sW2wsbV0pLGkuanN4cyhUayx7cmVmOmMscm9sZToicmVnaW9uIiwiYXJpYS1sYWJlbCI6cy5yZXBsYWNlKCJ7aG90a2V5fSIseCksdGFiSW5kZXg6LTEsc3R5bGU6e3BvaW50ZXJFdmVudHM6dj92b2lkIDA6Im5vbmUifSxjaGlsZHJlbjpbdiYmaS5qc3goQmYse3JlZjp1LG9uRm9jdXNGcm9tT3V0c2lkZVZpZXdwb3J0OigpPT57Y29uc3Qgdz1tKHt0YWJiaW5nRGlyZWN0aW9uOiJmb3J3YXJkcyJ9KTtjZCh3KX19KSxpLmpzeChtaC5TbG90LHtzY29wZTpyLGNoaWxkcmVuOmkuanN4KGtlLm9sLHt0YWJJbmRleDotMSwuLi5hLHJlZjpwfSl9KSx2JiZpLmpzeChCZix7cmVmOmQsb25Gb2N1c0Zyb21PdXRzaWRlVmlld3BvcnQ6KCk9Pntjb25zdCB3PW0oe3RhYmJpbmdEaXJlY3Rpb246ImJhY2t3YXJkcyJ9KTtjZCh3KX19KV19KX0pO3cwLmRpc3BsYXlOYW1lPXkwO3ZhciBiMD0iVG9hc3RGb2N1c1Byb3h5IixCZj15LmZvcndhcmRSZWYoKGUsdCk9Pntjb25zdHtfX3Njb3BlVG9hc3Q6cixvbkZvY3VzRnJvbU91dHNpZGVWaWV3cG9ydDpuLC4uLnN9PWUsYT1odShiMCxyKTtyZXR1cm4gaS5qc3gobmwseyJhcmlhLWhpZGRlbiI6ITAsdGFiSW5kZXg6MCwuLi5zLHJlZjp0LHN0eWxlOntwb3NpdGlvbjoiZml4ZWQifSxvbkZvY3VzOm89Pnt2YXIgdTtjb25zdCBsPW8ucmVsYXRlZFRhcmdldDshKCh1PWEudmlld3BvcnQpIT1udWxsJiZ1LmNvbnRhaW5zKGwpKSYmbigpfX0pfSk7QmYuZGlzcGxheU5hbWU9YjA7dmFyIHB1PSJUb2FzdCIsVWs9InRvYXN0LnN3aXBlU3RhcnQiLEJrPSJ0b2FzdC5zd2lwZU1vdmUiLEhrPSJ0b2FzdC5zd2lwZUNhbmNlbCIsV2s9InRvYXN0LnN3aXBlRW5kIixqMD15LmZvcndhcmRSZWYoKGUsdCk9Pntjb25zdHtmb3JjZU1vdW50OnIsb3BlbjpuLGRlZmF1bHRPcGVuOnMsb25PcGVuQ2hhbmdlOmEsLi4ub309ZSxbbD0hMCxjXT1fbyh7cHJvcDpuLGRlZmF1bHRQcm9wOnMsb25DaGFuZ2U6YX0pO3JldHVybiBpLmpzeChtdSx7cHJlc2VudDpyfHxsLGNoaWxkcmVuOmkuanN4KFFrLHtvcGVuOmwsLi4ubyxyZWY6dCxvbkNsb3NlOigpPT5jKCExKSxvblBhdXNlOnByKGUub25QYXVzZSksb25SZXN1bWU6cHIoZS5vblJlc3VtZSksb25Td2lwZVN0YXJ0OndlKGUub25Td2lwZVN0YXJ0LHU9Pnt1LmN1cnJlbnRUYXJnZXQuc2V0QXR0cmlidXRlKCJkYXRhLXN3aXBlIiwic3RhcnQiKX0pLG9uU3dpcGVNb3ZlOndlKGUub25Td2lwZU1vdmUsdT0+e2NvbnN0e3g6ZCx5OmZ9PXUuZGV0YWlsLmRlbHRhO3UuY3VycmVudFRhcmdldC5zZXRBdHRyaWJ1dGUoImRhdGEtc3dpcGUiLCJtb3ZlIiksdS5jdXJyZW50VGFyZ2V0LnN0eWxlLnNldFByb3BlcnR5KCItLXJhZGl4LXRvYXN0LXN3aXBlLW1vdmUteCIsYCR7ZH1weGApLHUuY3VycmVudFRhcmdldC5zdHlsZS5zZXRQcm9wZXJ0eSgiLS1yYWRpeC10b2FzdC1zd2lwZS1tb3ZlLXkiLGAke2Z9cHhgKX0pLG9uU3dpcGVDYW5jZWw6d2UoZS5vblN3aXBlQ2FuY2VsLHU9Pnt1LmN1cnJlbnRUYXJnZXQuc2V0QXR0cmlidXRlKCJkYXRhLXN3aXBlIiwiY2FuY2VsIiksdS5jdXJyZW50VGFyZ2V0LnN0eWxlLnJlbW92ZVByb3BlcnR5KCItLXJhZGl4LXRvYXN0LXN3aXBlLW1vdmUteCIpLHUuY3VycmVudFRhcmdldC5zdHlsZS5yZW1vdmVQcm9wZXJ0eSgiLS1yYWRpeC10b2FzdC1zd2lwZS1tb3ZlLXkiKSx1LmN1cnJlbnRUYXJnZXQuc3R5bGUucmVtb3ZlUHJvcGVydHkoIi0tcmFkaXgtdG9hc3Qtc3dpcGUtZW5kLXgiKSx1LmN1cnJlbnRUYXJnZXQuc3R5bGUucmVtb3ZlUHJvcGVydHkoIi0tcmFkaXgtdG9hc3Qtc3dpcGUtZW5kLXkiKX0pLG9uU3dpcGVFbmQ6d2UoZS5vblN3aXBlRW5kLHU9Pntjb25zdHt4OmQseTpmfT11LmRldGFpbC5kZWx0YTt1LmN1cnJlbnRUYXJnZXQuc2V0QXR0cmlidXRlKCJkYXRhLXN3aXBlIiwiZW5kIiksdS5jdXJyZW50VGFyZ2V0LnN0eWxlLnJlbW92ZVByb3BlcnR5KCItLXJhZGl4LXRvYXN0LXN3aXBlLW1vdmUteCIpLHUuY3VycmVudFRhcmdldC5zdHlsZS5yZW1vdmVQcm9wZXJ0eSgiLS1yYWRpeC10b2FzdC1zd2lwZS1tb3ZlLXkiKSx1LmN1cnJlbnRUYXJnZXQuc3R5bGUuc2V0UHJvcGVydHkoIi0tcmFkaXgtdG9hc3Qtc3dpcGUtZW5kLXgiLGAke2R9cHhgKSx1LmN1cnJlbnRUYXJnZXQuc3R5bGUuc2V0UHJvcGVydHkoIi0tcmFkaXgtdG9hc3Qtc3dpcGUtZW5kLXkiLGAke2Z9cHhgKSxjKCExKX0pfSl9KX0pO2owLmRpc3BsYXlOYW1lPXB1O3ZhcltxayxHa109eDAocHUse29uQ2xvc2UoKXt9fSksUWs9eS5mb3J3YXJkUmVmKChlLHQpPT57Y29uc3R7X19zY29wZVRvYXN0OnIsdHlwZTpuPSJmb3JlZ3JvdW5kIixkdXJhdGlvbjpzLG9wZW46YSxvbkNsb3NlOm8sb25Fc2NhcGVLZXlEb3duOmwsb25QYXVzZTpjLG9uUmVzdW1lOnUsb25Td2lwZVN0YXJ0OmQsb25Td2lwZU1vdmU6ZixvblN3aXBlQ2FuY2VsOnAsb25Td2lwZUVuZDp4LC4uLnZ9PWUsbT1odShwdSxyKSxbdyxoXT15LnVzZVN0YXRlKG51bGwpLGc9ZXQodCxPPT5oKE8pKSxiPXkudXNlUmVmKG51bGwpLE49eS51c2VSZWYobnVsbCksUz1zfHxtLmR1cmF0aW9uLF89eS51c2VSZWYoMCksaz15LnVzZVJlZihTKSxUPXkudXNlUmVmKDApLHtvblRvYXN0QWRkOkwsb25Ub2FzdFJlbW92ZTpQfT1tLGo9cHIoKCk9Pnt2YXIgWjsodz09bnVsbD92b2lkIDA6dy5jb250YWlucyhkb2N1bWVudC5hY3RpdmVFbGVtZW50KSkmJigoWj1tLnZpZXdwb3J0KT09bnVsbHx8Wi5mb2N1cygpKSxvKCl9KSxJPXkudXNlQ2FsbGJhY2soTz0+eyFPfHxPPT09MS8wfHwod2luZG93LmNsZWFyVGltZW91dChULmN1cnJlbnQpLF8uY3VycmVudD1uZXcgRGF0ZSgpLmdldFRpbWUoKSxULmN1cnJlbnQ9d2luZG93LnNldFRpbWVvdXQoaixPKSl9LFtqXSk7eS51c2VFZmZlY3QoKCk9Pntjb25zdCBPPW0udmlld3BvcnQ7aWYoTyl7Y29uc3QgWj0oKT0+e0koay5jdXJyZW50KSx1PT1udWxsfHx1KCl9LFE9KCk9Pntjb25zdCBBPW5ldyBEYXRlKCkuZ2V0VGltZSgpLV8uY3VycmVudDtrLmN1cnJlbnQ9ay5jdXJyZW50LUEsd2luZG93LmNsZWFyVGltZW91dChULmN1cnJlbnQpLGM9PW51bGx8fGMoKX07cmV0dXJuIE8uYWRkRXZlbnRMaXN0ZW5lcihWZixRKSxPLmFkZEV2ZW50TGlzdGVuZXIoVWYsWiksKCk9PntPLnJlbW92ZUV2ZW50TGlzdGVuZXIoVmYsUSksTy5yZW1vdmVFdmVudExpc3RlbmVyKFVmLFopfX19LFttLnZpZXdwb3J0LFMsYyx1LEldKSx5LnVzZUVmZmVjdCgoKT0+e2EmJiFtLmlzQ2xvc2VQYXVzZWRSZWYuY3VycmVudCYmSShTKX0sW2EsUyxtLmlzQ2xvc2VQYXVzZWRSZWYsSV0pLHkudXNlRWZmZWN0KCgpPT4oTCgpLCgpPT5QKCkpLFtMLFBdKTtjb25zdCBWPXkudXNlTWVtbygoKT0+dz9QMCh3KTpudWxsLFt3XSk7cmV0dXJuIG0udmlld3BvcnQ/aS5qc3hzKGkuRnJhZ21lbnQse2NoaWxkcmVuOltWJiZpLmpzeChaayx7X19zY29wZVRvYXN0OnIscm9sZToic3RhdHVzIiwiYXJpYS1saXZlIjpuPT09ImZvcmVncm91bmQiPyJhc3NlcnRpdmUiOiJwb2xpdGUiLCJhcmlhLWF0b21pYyI6ITAsY2hpbGRyZW46Vn0pLGkuanN4KHFrLHtzY29wZTpyLG9uQ2xvc2U6aixjaGlsZHJlbjpnaS5jcmVhdGVQb3J0YWwoaS5qc3gobWguSXRlbVNsb3Qse3Njb3BlOnIsY2hpbGRyZW46aS5qc3goUGsse2FzQ2hpbGQ6ITAsb25Fc2NhcGVLZXlEb3duOndlKGwsKCk9PnttLmlzRm9jdXNlZFRvYXN0RXNjYXBlS2V5RG93blJlZi5jdXJyZW50fHxqKCksbS5pc0ZvY3VzZWRUb2FzdEVzY2FwZUtleURvd25SZWYuY3VycmVudD0hMX0pLGNoaWxkcmVuOmkuanN4KGtlLmxpLHtyb2xlOiJzdGF0dXMiLCJhcmlhLWxpdmUiOiJvZmYiLCJhcmlhLWF0b21pYyI6ITAsdGFiSW5kZXg6MCwiZGF0YS1zdGF0ZSI6YT8ib3BlbiI6ImNsb3NlZCIsImRhdGEtc3dpcGUtZGlyZWN0aW9uIjptLnN3aXBlRGlyZWN0aW9uLC4uLnYscmVmOmcsc3R5bGU6e3VzZXJTZWxlY3Q6Im5vbmUiLHRvdWNoQWN0aW9uOiJub25lIiwuLi5lLnN0eWxlfSxvbktleURvd246d2UoZS5vbktleURvd24sTz0+e08ua2V5PT09IkVzY2FwZSImJihsPT1udWxsfHxsKE8ubmF0aXZlRXZlbnQpLE8ubmF0aXZlRXZlbnQuZGVmYXVsdFByZXZlbnRlZHx8KG0uaXNGb2N1c2VkVG9hc3RFc2NhcGVLZXlEb3duUmVmLmN1cnJlbnQ9ITAsaigpKSl9KSxvblBvaW50ZXJEb3duOndlKGUub25Qb2ludGVyRG93bixPPT57Ty5idXR0b249PT0wJiYoYi5jdXJyZW50PXt4Ok8uY2xpZW50WCx5Ok8uY2xpZW50WX0pfSksb25Qb2ludGVyTW92ZTp3ZShlLm9uUG9pbnRlck1vdmUsTz0+e2lmKCFiLmN1cnJlbnQpcmV0dXJuO2NvbnN0IFo9Ty5jbGllbnRYLWIuY3VycmVudC54LFE9Ty5jbGllbnRZLWIuY3VycmVudC55LEE9ISFOLmN1cnJlbnQsTT1bImxlZnQiLCJyaWdodCJdLmluY2x1ZGVzKG0uc3dpcGVEaXJlY3Rpb24pLCQ9WyJsZWZ0IiwidXAiXS5pbmNsdWRlcyhtLnN3aXBlRGlyZWN0aW9uKT9NYXRoLm1pbjpNYXRoLm1heCxEPU0/JCgwLFopOjAsUj1NPzA6JCgwLFEpLGZlPU8ucG9pbnRlclR5cGU9PT0idG91Y2giPzEwOjIsZHQ9e3g6RCx5OlJ9LHR0PXtvcmlnaW5hbEV2ZW50Ok8sZGVsdGE6ZHR9O0E/KE4uY3VycmVudD1kdCxUbChCayxmLHR0LHtkaXNjcmV0ZTohMX0pKTp2ZyhkdCxtLnN3aXBlRGlyZWN0aW9uLGZlKT8oTi5jdXJyZW50PWR0LFRsKFVrLGQsdHQse2Rpc2NyZXRlOiExfSksTy50YXJnZXQuc2V0UG9pbnRlckNhcHR1cmUoTy5wb2ludGVySWQpKTooTWF0aC5hYnMoWik+ZmV8fE1hdGguYWJzKFEpPmZlKSYmKGIuY3VycmVudD1udWxsKX0pLG9uUG9pbnRlclVwOndlKGUub25Qb2ludGVyVXAsTz0+e2NvbnN0IFo9Ti5jdXJyZW50LFE9Ty50YXJnZXQ7aWYoUS5oYXNQb2ludGVyQ2FwdHVyZShPLnBvaW50ZXJJZCkmJlEucmVsZWFzZVBvaW50ZXJDYXB0dXJlKE8ucG9pbnRlcklkKSxOLmN1cnJlbnQ9bnVsbCxiLmN1cnJlbnQ9bnVsbCxaKXtjb25zdCBBPU8uY3VycmVudFRhcmdldCxNPXtvcmlnaW5hbEV2ZW50Ok8sZGVsdGE6Wn07dmcoWixtLnN3aXBlRGlyZWN0aW9uLG0uc3dpcGVUaHJlc2hvbGQpP1RsKFdrLHgsTSx7ZGlzY3JldGU6ITB9KTpUbChIayxwLE0se2Rpc2NyZXRlOiEwfSksQS5hZGRFdmVudExpc3RlbmVyKCJjbGljayIsJD0+JC5wcmV2ZW50RGVmYXVsdCgpLHtvbmNlOiEwfSl9fSl9KX0pfSksbS52aWV3cG9ydCl9KV19KTpudWxsfSksWms9ZT0+e2NvbnN0e19fc2NvcGVUb2FzdDp0LGNoaWxkcmVuOnIsLi4ubn09ZSxzPWh1KHB1LHQpLFthLG9dPXkudXNlU3RhdGUoITEpLFtsLGNdPXkudXNlU3RhdGUoITEpO3JldHVybiBYaygoKT0+byghMCkpLHkudXNlRWZmZWN0KCgpPT57Y29uc3QgdT13aW5kb3cuc2V0VGltZW91dCgoKT0+YyghMCksMWUzKTtyZXR1cm4oKT0+d2luZG93LmNsZWFyVGltZW91dCh1KX0sW10pLGw/bnVsbDppLmpzeChkaCx7YXNDaGlsZDohMCxjaGlsZHJlbjppLmpzeChubCx7Li4ubixjaGlsZHJlbjphJiZpLmpzeHMoaS5GcmFnbWVudCx7Y2hpbGRyZW46W3MubGFiZWwsIiAiLHJdfSl9KX0pfSxLaz0iVG9hc3RUaXRsZSIsTjA9eS5mb3J3YXJkUmVmKChlLHQpPT57Y29uc3R7X19zY29wZVRvYXN0OnIsLi4ubn09ZTtyZXR1cm4gaS5qc3goa2UuZGl2LHsuLi5uLHJlZjp0fSl9KTtOMC5kaXNwbGF5TmFtZT1Lazt2YXIgWWs9IlRvYXN0RGVzY3JpcHRpb24iLFMwPXkuZm9yd2FyZFJlZigoZSx0KT0+e2NvbnN0e19fc2NvcGVUb2FzdDpyLC4uLm59PWU7cmV0dXJuIGkuanN4KGtlLmRpdix7Li4ubixyZWY6dH0pfSk7UzAuZGlzcGxheU5hbWU9WWs7dmFyIGswPSJUb2FzdEFjdGlvbiIsRTA9eS5mb3J3YXJkUmVmKChlLHQpPT57Y29uc3R7YWx0VGV4dDpyLC4uLm59PWU7cmV0dXJuIHIudHJpbSgpP2kuanN4KF8wLHthbHRUZXh0OnIsYXNDaGlsZDohMCxjaGlsZHJlbjppLmpzeChoaCx7Li4ubixyZWY6dH0pfSk6KGNvbnNvbGUuZXJyb3IoYEludmFsaWQgcHJvcCBcYGFsdFRleHRcYCBzdXBwbGllZCB0byBcYCR7azB9XGAuIEV4cGVjdGVkIG5vbi1lbXB0eSBcYHN0cmluZ1xgLmApLG51bGwpfSk7RTAuZGlzcGxheU5hbWU9azA7dmFyIEMwPSJUb2FzdENsb3NlIixoaD15LmZvcndhcmRSZWYoKGUsdCk9Pntjb25zdHtfX3Njb3BlVG9hc3Q6ciwuLi5ufT1lLHM9R2soQzAscik7cmV0dXJuIGkuanN4KF8wLHthc0NoaWxkOiEwLGNoaWxkcmVuOmkuanN4KGtlLmJ1dHRvbix7dHlwZToiYnV0dG9uIiwuLi5uLHJlZjp0LG9uQ2xpY2s6d2UoZS5vbkNsaWNrLHMub25DbG9zZSl9KX0pfSk7aGguZGlzcGxheU5hbWU9QzA7dmFyIF8wPXkuZm9yd2FyZFJlZigoZSx0KT0+e2NvbnN0e19fc2NvcGVUb2FzdDpyLGFsdFRleHQ6biwuLi5zfT1lO3JldHVybiBpLmpzeChrZS5kaXYseyJkYXRhLXJhZGl4LXRvYXN0LWFubm91bmNlLWV4Y2x1ZGUiOiIiLCJkYXRhLXJhZGl4LXRvYXN0LWFubm91bmNlLWFsdCI6bnx8dm9pZCAwLC4uLnMscmVmOnR9KX0pO2Z1bmN0aW9uIFAwKGUpe2NvbnN0IHQ9W107cmV0dXJuIEFycmF5LmZyb20oZS5jaGlsZE5vZGVzKS5mb3JFYWNoKG49PntpZihuLm5vZGVUeXBlPT09bi5URVhUX05PREUmJm4udGV4dENvbnRlbnQmJnQucHVzaChuLnRleHRDb250ZW50KSxKayhuKSl7Y29uc3Qgcz1uLmFyaWFIaWRkZW58fG4uaGlkZGVufHxuLnN0eWxlLmRpc3BsYXk9PT0ibm9uZSIsYT1uLmRhdGFzZXQucmFkaXhUb2FzdEFubm91bmNlRXhjbHVkZT09PSIiO2lmKCFzKWlmKGEpe2NvbnN0IG89bi5kYXRhc2V0LnJhZGl4VG9hc3RBbm5vdW5jZUFsdDtvJiZ0LnB1c2gobyl9ZWxzZSB0LnB1c2goLi4uUDAobikpfX0pLHR9ZnVuY3Rpb24gVGwoZSx0LHIse2Rpc2NyZXRlOm59KXtjb25zdCBzPXIub3JpZ2luYWxFdmVudC5jdXJyZW50VGFyZ2V0LGE9bmV3IEN1c3RvbUV2ZW50KGUse2J1YmJsZXM6ITAsY2FuY2VsYWJsZTohMCxkZXRhaWw6cn0pO3QmJnMuYWRkRXZlbnRMaXN0ZW5lcihlLHQse29uY2U6ITB9KSxuP20wKHMsYSk6cy5kaXNwYXRjaEV2ZW50KGEpfXZhciB2Zz0oZSx0LHI9MCk9Pntjb25zdCBuPU1hdGguYWJzKGUueCkscz1NYXRoLmFicyhlLnkpLGE9bj5zO3JldHVybiB0PT09ImxlZnQifHx0PT09InJpZ2h0Ij9hJiZuPnI6IWEmJnM+cn07ZnVuY3Rpb24gWGsoZT0oKT0+e30pe2NvbnN0IHQ9cHIoZSk7RHQoKCk9PntsZXQgcj0wLG49MDtyZXR1cm4gcj13aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lKCgpPT5uPXdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUodCkpLCgpPT57d2luZG93LmNhbmNlbEFuaW1hdGlvbkZyYW1lKHIpLHdpbmRvdy5jYW5jZWxBbmltYXRpb25GcmFtZShuKX19LFt0XSl9ZnVuY3Rpb24gSmsoZSl7cmV0dXJuIGUubm9kZVR5cGU9PT1lLkVMRU1FTlRfTk9ERX1mdW5jdGlvbiBlRShlKXtjb25zdCB0PVtdLHI9ZG9jdW1lbnQuY3JlYXRlVHJlZVdhbGtlcihlLE5vZGVGaWx0ZXIuU0hPV19FTEVNRU5ULHthY2NlcHROb2RlOm49Pntjb25zdCBzPW4udGFnTmFtZT09PSJJTlBVVCImJm4udHlwZT09PSJoaWRkZW4iO3JldHVybiBuLmRpc2FibGVkfHxuLmhpZGRlbnx8cz9Ob2RlRmlsdGVyLkZJTFRFUl9TS0lQOm4udGFiSW5kZXg+PTA/Tm9kZUZpbHRlci5GSUxURVJfQUNDRVBUOk5vZGVGaWx0ZXIuRklMVEVSX1NLSVB9fSk7Zm9yKDtyLm5leHROb2RlKCk7KXQucHVzaChyLmN1cnJlbnROb2RlKTtyZXR1cm4gdH1mdW5jdGlvbiBjZChlKXtjb25zdCB0PWRvY3VtZW50LmFjdGl2ZUVsZW1lbnQ7cmV0dXJuIGUuc29tZShyPT5yPT09dD8hMDooci5mb2N1cygpLGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQhPT10KSl9dmFyIHRFPXYwLFQwPXcwLFIwPWowLEEwPU4wLE0wPVMwLE8wPUUwLEYwPWhoO2Z1bmN0aW9uIEkwKGUpe3ZhciB0LHIsbj0iIjtpZih0eXBlb2YgZT09InN0cmluZyJ8fHR5cGVvZiBlPT0ibnVtYmVyIiluKz1lO2Vsc2UgaWYodHlwZW9mIGU9PSJvYmplY3QiKWlmKEFycmF5LmlzQXJyYXkoZSkpe3ZhciBzPWUubGVuZ3RoO2Zvcih0PTA7dDxzO3QrKyllW3RdJiYocj1JMChlW3RdKSkmJihuJiYobis9IiAiKSxuKz1yKX1lbHNlIGZvcihyIGluIGUpZVtyXSYmKG4mJihuKz0iICIpLG4rPXIpO3JldHVybiBufWZ1bmN0aW9uIEwwKCl7Zm9yKHZhciBlLHQscj0wLG49IiIscz1hcmd1bWVudHMubGVuZ3RoO3I8cztyKyspKGU9YXJndW1lbnRzW3JdKSYmKHQ9STAoZSkpJiYobiYmKG4rPSIgIiksbis9dCk7cmV0dXJuIG59Y29uc3QgeWc9ZT0+dHlwZW9mIGU9PSJib29sZWFuIj9gJHtlfWA6ZT09PTA/IjAiOmUsd2c9TDAsZ3U9KGUsdCk9PnI9Pnt2YXIgbjtpZigodD09bnVsbD92b2lkIDA6dC52YXJpYW50cyk9PW51bGwpcmV0dXJuIHdnKGUscj09bnVsbD92b2lkIDA6ci5jbGFzcyxyPT1udWxsP3ZvaWQgMDpyLmNsYXNzTmFtZSk7Y29uc3R7dmFyaWFudHM6cyxkZWZhdWx0VmFyaWFudHM6YX09dCxvPU9iamVjdC5rZXlzKHMpLm1hcCh1PT57Y29uc3QgZD1yPT1udWxsP3ZvaWQgMDpyW3VdLGY9YT09bnVsbD92b2lkIDA6YVt1XTtpZihkPT09bnVsbClyZXR1cm4gbnVsbDtjb25zdCBwPXlnKGQpfHx5ZyhmKTtyZXR1cm4gc1t1XVtwXX0pLGw9ciYmT2JqZWN0LmVudHJpZXMocikucmVkdWNlKCh1LGQpPT57bGV0W2YscF09ZDtyZXR1cm4gcD09PXZvaWQgMHx8KHVbZl09cCksdX0se30pLGM9dD09bnVsbHx8KG49dC5jb21wb3VuZFZhcmlhbnRzKT09PW51bGx8fG49PT12b2lkIDA/dm9pZCAwOm4ucmVkdWNlKCh1LGQpPT57bGV0e2NsYXNzOmYsY2xhc3NOYW1lOnAsLi4ueH09ZDtyZXR1cm4gT2JqZWN0LmVudHJpZXMoeCkuZXZlcnkodj0+e2xldFttLHddPXY7cmV0dXJuIEFycmF5LmlzQXJyYXkodyk/dy5pbmNsdWRlcyh7Li4uYSwuLi5sfVttXSk6ey4uLmEsLi4ubH1bbV09PT13fSk/Wy4uLnUsZixwXTp1fSxbXSk7cmV0dXJuIHdnKGUsbyxjLHI9PW51bGw/dm9pZCAwOnIuY2xhc3Mscj09bnVsbD92b2lkIDA6ci5jbGFzc05hbWUpfTsvKioKICogQGxpY2Vuc2UgbHVjaWRlLXJlYWN0IHYwLjQ1My4wIC0gSVNDCiAqCiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIElTQyBsaWNlbnNlLgogKiBTZWUgdGhlIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS4KICovY29uc3QgckU9ZT0+ZS5yZXBsYWNlKC8oW2EtejAtOV0pKFtBLVpdKS9nLCIkMS0kMiIpLnRvTG93ZXJDYXNlKCksRDA9KC4uLmUpPT5lLmZpbHRlcigodCxyLG4pPT4hIXQmJm4uaW5kZXhPZih0KT09PXIpLmpvaW4oIiAiKTsvKioKICogQGxpY2Vuc2UgbHVjaWRlLXJlYWN0IHYwLjQ1My4wIC0gSVNDCiAqCiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIElTQyBsaWNlbnNlLgogKiBTZWUgdGhlIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS4KICovdmFyIG5FPXt4bWxuczoiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciLHdpZHRoOjI0LGhlaWdodDoyNCx2aWV3Qm94OiIwIDAgMjQgMjQiLGZpbGw6Im5vbmUiLHN0cm9rZToiY3VycmVudENvbG9yIixzdHJva2VXaWR0aDoyLHN0cm9rZUxpbmVjYXA6InJvdW5kIixzdHJva2VMaW5lam9pbjoicm91bmQifTsvKioKICogQGxpY2Vuc2UgbHVjaWRlLXJlYWN0IHYwLjQ1My4wIC0gSVNDCiAqCiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIElTQyBsaWNlbnNlLgogKiBTZWUgdGhlIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS4KICovY29uc3Qgc0U9eS5mb3J3YXJkUmVmKCh7Y29sb3I6ZT0iY3VycmVudENvbG9yIixzaXplOnQ9MjQsc3Ryb2tlV2lkdGg6cj0yLGFic29sdXRlU3Ryb2tlV2lkdGg6bixjbGFzc05hbWU6cz0iIixjaGlsZHJlbjphLGljb25Ob2RlOm8sLi4ubH0sYyk9PnkuY3JlYXRlRWxlbWVudCgic3ZnIix7cmVmOmMsLi4ubkUsd2lkdGg6dCxoZWlnaHQ6dCxzdHJva2U6ZSxzdHJva2VXaWR0aDpuP051bWJlcihyKSoyNC9OdW1iZXIodCk6cixjbGFzc05hbWU6RDAoImx1Y2lkZSIscyksLi4ubH0sWy4uLm8ubWFwKChbdSxkXSk9PnkuY3JlYXRlRWxlbWVudCh1LGQpKSwuLi5BcnJheS5pc0FycmF5KGEpP2E6W2FdXSkpOy8qKgogKiBAbGljZW5zZSBsdWNpZGUtcmVhY3QgdjAuNDUzLjAgLSBJU0MKICoKICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgSVNDIGxpY2Vuc2UuCiAqIFNlZSB0aGUgTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLgogKi9jb25zdCBkZT0oZSx0KT0+e2NvbnN0IHI9eS5mb3J3YXJkUmVmKCh7Y2xhc3NOYW1lOm4sLi4uc30sYSk9PnkuY3JlYXRlRWxlbWVudChzRSx7cmVmOmEsaWNvbk5vZGU6dCxjbGFzc05hbWU6RDAoYGx1Y2lkZS0ke3JFKGUpfWAsbiksLi4uc30pKTtyZXR1cm4gci5kaXNwbGF5TmFtZT1gJHtlfWAscn07LyoqCiAqIEBsaWNlbnNlIGx1Y2lkZS1yZWFjdCB2MC40NTMuMCAtIElTQwogKgogKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBJU0MgbGljZW5zZS4KICogU2VlIHRoZSBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuCiAqL2NvbnN0IEplPWRlKCJBY3Rpdml0eSIsW1sicGF0aCIse2Q6Ik0yMiAxMmgtMi40OGEyIDIgMCAwIDAtMS45MyAxLjQ2bC0yLjM1IDguMzZhLjI1LjI1IDAgMCAxLS40OCAwTDkuMjQgMi4xOGEuMjUuMjUgMCAwIDAtLjQ4IDBsLTIuMzUgOC4zNkEyIDIgMCAwIDEgNC40OSAxMkgyIixrZXk6IjE2OXpzZSJ9XV0pOy8qKgogKiBAbGljZW5zZSBsdWNpZGUtcmVhY3QgdjAuNDUzLjAgLSBJU0MKICoKICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgSVNDIGxpY2Vuc2UuCiAqIFNlZSB0aGUgTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLgogKi9jb25zdCBvaT1kZSgiQXJyb3dMZWZ0IixbWyJwYXRoIix7ZDoibTEyIDE5LTctNyA3LTciLGtleToiMWw3MjluIn1dLFsicGF0aCIse2Q6Ik0xOSAxMkg1IixrZXk6IngzeDB6bCJ9XV0pOy8qKgogKiBAbGljZW5zZSBsdWNpZGUtcmVhY3QgdjAuNDUzLjAgLSBJU0MKICoKICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgSVNDIGxpY2Vuc2UuCiAqIFNlZSB0aGUgTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLgogKi9jb25zdCBpRT1kZSgiQmVsbCIsW1sicGF0aCIse2Q6Ik02IDhhNiA2IDAgMCAxIDEyIDBjMCA3IDMgOSAzIDlIM3MzLTIgMy05IixrZXk6IjFxbzJzMiJ9XSxbInBhdGgiLHtkOiJNMTAuMyAyMWExLjk0IDEuOTQgMCAwIDAgMy40IDAiLGtleToicWdvMzVzIn1dXSk7LyoqCiAqIEBsaWNlbnNlIGx1Y2lkZS1yZWFjdCB2MC40NTMuMCAtIElTQwogKgogKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBJU0MgbGljZW5zZS4KICogU2VlIHRoZSBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuCiAqL2NvbnN0IGFFPWRlKCJCb29rT3BlbiIsW1sicGF0aCIse2Q6Ik0xMiA3djE0IixrZXk6IjFha3l0cyJ9XSxbInBhdGgiLHtkOiJNMyAxOGExIDEgMCAwIDEtMS0xVjRhMSAxIDAgMCAxIDEtMWg1YTQgNCAwIDAgMSA0IDQgNCA0IDAgMCAxIDQtNGg1YTEgMSAwIDAgMSAxIDF2MTNhMSAxIDAgMCAxLTEgMWgtNmEzIDMgMCAwIDAtMyAzIDMgMyAwIDAgMC0zLTN6IixrZXk6InJ1ajh5In1dXSk7LyoqCiAqIEBsaWNlbnNlIGx1Y2lkZS1yZWFjdCB2MC40NTMuMCAtIElTQwogKgogKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBJU0MgbGljZW5zZS4KICogU2VlIHRoZSBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuCiAqL2NvbnN0ICQwPWRlKCJDYWxlbmRhciIsW1sicGF0aCIse2Q6Ik04IDJ2NCIsa2V5OiIxY21weW0ifV0sWyJwYXRoIix7ZDoiTTE2IDJ2NCIsa2V5OiI0bTgxdmsifV0sWyJyZWN0Iix7d2lkdGg6IjE4IixoZWlnaHQ6IjE4Iix4OiIzIix5OiI0IixyeDoiMiIsa2V5OiIxaG9wY3kifV0sWyJwYXRoIix7ZDoiTTMgMTBoMTgiLGtleToiOHRvZW44In1dXSk7LyoqCiAqIEBsaWNlbnNlIGx1Y2lkZS1yZWFjdCB2MC40NTMuMCAtIElTQwogKgogKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBJU0MgbGljZW5zZS4KICogU2VlIHRoZSBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuCiAqL2NvbnN0IHNyPWRlKCJDaGFydENvbHVtbiIsW1sicGF0aCIse2Q6Ik0zIDN2MTZhMiAyIDAgMCAwIDIgMmgxNiIsa2V5OiJjMjRpNDgifV0sWyJwYXRoIix7ZDoiTTE4IDE3VjkiLGtleToiMmJ6NjBuIn1dLFsicGF0aCIse2Q6Ik0xMyAxN1Y1IixrZXk6IjFmcmR0OCJ9XSxbInBhdGgiLHtkOiJNOCAxN3YtMyIsa2V5OiIxN3NrYTAifV1dKTsvKioKICogQGxpY2Vuc2UgbHVjaWRlLXJlYWN0IHYwLjQ1My4wIC0gSVNDCiAqCiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIElTQyBsaWNlbnNlLgogKiBTZWUgdGhlIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS4KICovY29uc3QgejA9ZGUoIkNoZWNrIixbWyJwYXRoIix7ZDoiTTIwIDYgOSAxN2wtNS01IixrZXk6IjFnbWYyYyJ9XV0pOy8qKgogKiBAbGljZW5zZSBsdWNpZGUtcmVhY3QgdjAuNDUzLjAgLSBJU0MKICoKICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgSVNDIGxpY2Vuc2UuCiAqIFNlZSB0aGUgTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLgogKi9jb25zdCBsaT1kZSgiQ2hldnJvbkRvd24iLFtbInBhdGgiLHtkOiJtNiA5IDYgNiA2LTYiLGtleToicXJ1bnNsIn1dXSk7LyoqCiAqIEBsaWNlbnNlIGx1Y2lkZS1yZWFjdCB2MC40NTMuMCAtIElTQwogKgogKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBJU0MgbGljZW5zZS4KICogU2VlIHRoZSBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuCiAqL2NvbnN0IGpyPWRlKCJDaGV2cm9uUmlnaHQiLFtbInBhdGgiLHtkOiJtOSAxOCA2LTYtNi02IixrZXk6Im10aGh3cSJ9XV0pOy8qKgogKiBAbGljZW5zZSBsdWNpZGUtcmVhY3QgdjAuNDUzLjAgLSBJU0MKICoKICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgSVNDIGxpY2Vuc2UuCiAqIFNlZSB0aGUgTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLgogKi9jb25zdCBvRT1kZSgiQ2hldnJvblVwIixbWyJwYXRoIix7ZDoibTE4IDE1LTYtNi02IDYiLGtleToiMTUzdWR6In1dXSk7LyoqCiAqIEBsaWNlbnNlIGx1Y2lkZS1yZWFjdCB2MC40NTMuMCAtIElTQwogKgogKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBJU0MgbGljZW5zZS4KICogU2VlIHRoZSBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuCiAqL2NvbnN0IGxFPWRlKCJDaXJjbGVBbGVydCIsW1siY2lyY2xlIix7Y3g6IjEyIixjeToiMTIiLHI6IjEwIixrZXk6IjFtZ2xheSJ9XSxbImxpbmUiLHt4MToiMTIiLHgyOiIxMiIseTE6IjgiLHkyOiIxMiIsa2V5OiIxcGtldWgifV0sWyJsaW5lIix7eDE6IjEyIix4MjoiMTIuMDEiLHkxOiIxNiIseTI6IjE2IixrZXk6IjRkZnE5MCJ9XV0pOy8qKgogKiBAbGljZW5zZSBsdWNpZGUtcmVhY3QgdjAuNDUzLjAgLSBJU0MKICoKICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgSVNDIGxpY2Vuc2UuCiAqIFNlZSB0aGUgTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLgogKi9jb25zdCBjRT1kZSgiQ2lyY2xlQ2hlY2tCaWciLFtbInBhdGgiLHtkOiJNMjEuODAxIDEwQTEwIDEwIDAgMSAxIDE3IDMuMzM1IixrZXk6InlwczNjdCJ9XSxbInBhdGgiLHtkOiJtOSAxMSAzIDNMMjIgNCIsa2V5OiIxcGZsemwifV1dKTsvKioKICogQGxpY2Vuc2UgbHVjaWRlLXJlYWN0IHYwLjQ1My4wIC0gSVNDCiAqCiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIElTQyBsaWNlbnNlLgogKiBTZWUgdGhlIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS4KICovY29uc3QgUGM9ZGUoIkNpcmNsZSIsW1siY2lyY2xlIix7Y3g6IjEyIixjeToiMTIiLHI6IjEwIixrZXk6IjFtZ2xheSJ9XV0pOy8qKgogKiBAbGljZW5zZSBsdWNpZGUtcmVhY3QgdjAuNDUzLjAgLSBJU0MKICoKICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgSVNDIGxpY2Vuc2UuCiAqIFNlZSB0aGUgTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLgogKi9jb25zdCBQbz1kZSgiQ29nIixbWyJwYXRoIix7ZDoiTTEyIDIwYTggOCAwIDEgMCAwLTE2IDggOCAwIDAgMCAwIDE2WiIsa2V5OiJzb2J2ejUifV0sWyJwYXRoIix7ZDoiTTEyIDE0YTIgMiAwIDEgMCAwLTQgMiAyIDAgMCAwIDAgNFoiLGtleToiMTFpNDk2In1dLFsicGF0aCIse2Q6Ik0xMiAydjIiLGtleToidHVzMDNtIn1dLFsicGF0aCIse2Q6Ik0xMiAyMnYtMiIsa2V5OiIxb3NkY3EifV0sWyJwYXRoIix7ZDoibTE3IDIwLjY2LTEtMS43MyIsa2V5OiJlcTNvcmIifV0sWyJwYXRoIix7ZDoiTTExIDEwLjI3IDcgMy4zNCIsa2V5OiIxNnBmOWgifV0sWyJwYXRoIix7ZDoibTIwLjY2IDE3LTEuNzMtMSIsa2V5OiJzZzB2NmYifV0sWyJwYXRoIix7ZDoibTMuMzQgNyAxLjczIDEiLGtleToiMXVsb25kIn1dLFsicGF0aCIse2Q6Ik0xNCAxMmg4IixrZXk6IjRmNDNpOSJ9XSxbInBhdGgiLHtkOiJNMiAxMmgyIixrZXk6IjF0OGY4biJ9XSxbInBhdGgiLHtkOiJtMjAuNjYgNy0xLjczIDEiLGtleToiMW93MDVuIn1dLFsicGF0aCIse2Q6Im0zLjM0IDE3IDEuNzMtMSIsa2V5OiJudWs3NjQifV0sWyJwYXRoIix7ZDoibTE3IDMuMzQtMSAxLjczIixrZXk6IjJ3ZWw4cyJ9XSxbInBhdGgiLHtkOiJtMTEgMTMuNzMtNCA2LjkzIixrZXk6Ijc5NHR0ZyJ9XV0pOy8qKgogKiBAbGljZW5zZSBsdWNpZGUtcmVhY3QgdjAuNDUzLjAgLSBJU0MKICoKICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgSVNDIGxpY2Vuc2UuCiAqIFNlZSB0aGUgTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLgogKi9jb25zdCBWMD1kZSgiQ3Jvd24iLFtbInBhdGgiLHtkOiJNMTEuNTYyIDMuMjY2YS41LjUgMCAwIDEgLjg3NiAwTDE1LjM5IDguODdhMSAxIDAgMCAwIDEuNTE2LjI5NEwyMS4xODMgNS41YS41LjUgMCAwIDEgLjc5OC41MTlsLTIuODM0IDEwLjI0NmExIDEgMCAwIDEtLjk1Ni43MzRINS44MWExIDEgMCAwIDEtLjk1Ny0uNzM0TDIuMDIgNi4wMmEuNS41IDAgMCAxIC43OTgtLjUxOWw0LjI3NiAzLjY2NGExIDEgMCAwIDAgMS41MTYtLjI5NHoiLGtleToiMXZkYzU3In1dLFsicGF0aCIse2Q6Ik01IDIxaDE0IixrZXk6IjExYXd1MyJ9XV0pOy8qKgogKiBAbGljZW5zZSBsdWNpZGUtcmVhY3QgdjAuNDUzLjAgLSBJU0MKICoKICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgSVNDIGxpY2Vuc2UuCiAqIFNlZSB0aGUgTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLgogKi9jb25zdCBVMD1kZSgiRG9sbGFyU2lnbiIsW1sibGluZSIse3gxOiIxMiIseDI6IjEyIix5MToiMiIseTI6IjIyIixrZXk6IjdlcXlxaCJ9XSxbInBhdGgiLHtkOiJNMTcgNUg5LjVhMy41IDMuNSAwIDAgMCAwIDdoNWEzLjUgMy41IDAgMCAxIDAgN0g2IixrZXk6IjFiMHA0cyJ9XV0pOy8qKgogKiBAbGljZW5zZSBsdWNpZGUtcmVhY3QgdjAuNDUzLjAgLSBJU0MKICoKICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgSVNDIGxpY2Vuc2UuCiAqIFNlZSB0aGUgTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLgogKi9jb25zdCBCMD1kZSgiRG93bmxvYWQiLFtbInBhdGgiLHtkOiJNMjEgMTV2NGEyIDIgMCAwIDEtMiAySDVhMiAyIDAgMCAxLTItMnYtNCIsa2V5OiJpaDduM2gifV0sWyJwb2x5bGluZSIse3BvaW50czoiNyAxMCAxMiAxNSAxNyAxMCIsa2V5OiIyZ2dxdnkifV0sWyJsaW5lIix7eDE6IjEyIix4MjoiMTIiLHkxOiIxNSIseTI6IjMiLGtleToiMXZrMmplIn1dXSk7LyoqCiAqIEBsaWNlbnNlIGx1Y2lkZS1yZWFjdCB2MC40NTMuMCAtIElTQwogKgogKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBJU0MgbGljZW5zZS4KICogU2VlIHRoZSBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuCiAqL2NvbnN0IGJnPWRlKCJFbGxpcHNpc1ZlcnRpY2FsIixbWyJjaXJjbGUiLHtjeDoiMTIiLGN5OiIxMiIscjoiMSIsa2V5OiI0MWhpbGYifV0sWyJjaXJjbGUiLHtjeDoiMTIiLGN5OiI1IixyOiIxIixrZXk6Imd4ZW9iOSJ9XSxbImNpcmNsZSIse2N4OiIxMiIsY3k6IjE5IixyOiIxIixrZXk6Imx5ZXg5ayJ9XV0pOy8qKgogKiBAbGljZW5zZSBsdWNpZGUtcmVhY3QgdjAuNDUzLjAgLSBJU0MKICoKICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgSVNDIGxpY2Vuc2UuCiAqIFNlZSB0aGUgTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLgogKi9jb25zdCBIZj1kZSgiRXllIixbWyJwYXRoIix7ZDoiTTIuMDYyIDEyLjM0OGExIDEgMCAwIDEgMC0uNjk2IDEwLjc1IDEwLjc1IDAgMCAxIDE5Ljg3NiAwIDEgMSAwIDAgMSAwIC42OTYgMTAuNzUgMTAuNzUgMCAwIDEtMTkuODc2IDAiLGtleToiMW5jbGMwIn1dLFsiY2lyY2xlIix7Y3g6IjEyIixjeToiMTIiLHI6IjMiLGtleToiMXY3enJkIn1dXSk7LyoqCiAqIEBsaWNlbnNlIGx1Y2lkZS1yZWFjdCB2MC40NTMuMCAtIElTQwogKgogKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBJU0MgbGljZW5zZS4KICogU2VlIHRoZSBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuCiAqL2NvbnN0IEZuPWRlKCJGaWxlVGV4dCIsW1sicGF0aCIse2Q6Ik0xNSAySDZhMiAyIDAgMCAwLTIgMnYxNmEyIDIgMCAwIDAgMiAyaDEyYTIgMiAwIDAgMCAyLTJWN1oiLGtleToiMXJxZno3In1dLFsicGF0aCIse2Q6Ik0xNCAydjRhMiAyIDAgMCAwIDIgMmg0IixrZXk6InRucXJsYiJ9XSxbInBhdGgiLHtkOiJNMTAgOUg4IixrZXk6ImIxbXJsciJ9XSxbInBhdGgiLHtkOiJNMTYgMTNIOCIsa2V5OiJ0NGUwMDIifV0sWyJwYXRoIix7ZDoiTTE2IDE3SDgiLGtleToiejF1aDNhIn1dXSk7LyoqCiAqIEBsaWNlbnNlIGx1Y2lkZS1yZWFjdCB2MC40NTMuMCAtIElTQwogKgogKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBJU0MgbGljZW5zZS4KICogU2VlIHRoZSBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuCiAqL2NvbnN0IHVFPWRlKCJGbGFnIixbWyJwYXRoIix7ZDoiTTQgMTVzMS0xIDQtMSA1IDIgOCAyIDQtMSA0LTFWM3MtMSAxLTQgMS01LTItOC0yLTQgMS00IDF6IixrZXk6Imk5YjZ3byJ9XSxbImxpbmUiLHt4MToiNCIseDI6IjQiLHkxOiIyMiIseTI6IjE1IixrZXk6IjFjbTNudiJ9XV0pOy8qKgogKiBAbGljZW5zZSBsdWNpZGUtcmVhY3QgdjAuNDUzLjAgLSBJU0MKICoKICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgSVNDIGxpY2Vuc2UuCiAqIFNlZSB0aGUgTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLgogKi9jb25zdCBZcz1kZSgiRm9sZGVyIixbWyJwYXRoIix7ZDoiTTIwIDIwYTIgMiAwIDAgMCAyLTJWOGEyIDIgMCAwIDAtMi0yaC03LjlhMiAyIDAgMCAxLTEuNjktLjlMOS42IDMuOUEyIDIgMCAwIDAgNy45MyAzSDRhMiAyIDAgMCAwLTIgMnYxM2EyIDIgMCAwIDAgMiAyWiIsa2V5OiIxa3QzNjAifV1dKTsvKioKICogQGxpY2Vuc2UgbHVjaWRlLXJlYWN0IHYwLjQ1My4wIC0gSVNDCiAqCiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIElTQyBsaWNlbnNlLgogKiBTZWUgdGhlIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS4KICovY29uc3QgVGM9ZGUoIkdyYWR1YXRpb25DYXAiLFtbInBhdGgiLHtkOiJNMjEuNDIgMTAuOTIyYTEgMSAwIDAgMC0uMDE5LTEuODM4TDEyLjgzIDUuMThhMiAyIDAgMCAwLTEuNjYgMEwyLjYgOS4wOGExIDEgMCAwIDAgMCAxLjgzMmw4LjU3IDMuOTA4YTIgMiAwIDAgMCAxLjY2IDB6IixrZXk6Imo3NmpsMCJ9XSxbInBhdGgiLHtkOiJNMjIgMTB2NiIsa2V5OiIxbHU4ZjMifV0sWyJwYXRoIix7ZDoiTTYgMTIuNVYxNmE2IDMgMCAwIDAgMTIgMHYtMy41IixrZXk6IjFyOGxlZiJ9XV0pOy8qKgogKiBAbGljZW5zZSBsdWNpZGUtcmVhY3QgdjAuNDUzLjAgLSBJU0MKICoKICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgSVNDIGxpY2Vuc2UuCiAqIFNlZSB0aGUgTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLgogKi9jb25zdCBIMD1kZSgiR3JpZDN4MyIsW1sicmVjdCIse3dpZHRoOiIxOCIsaGVpZ2h0OiIxOCIseDoiMyIseToiMyIscng6IjIiLGtleToiYWZpdHY3In1dLFsicGF0aCIse2Q6Ik0zIDloMTgiLGtleToiMXB1ZGN0In1dLFsicGF0aCIse2Q6Ik0zIDE1aDE4IixrZXk6IjV4c2h1cCJ9XSxbInBhdGgiLHtkOiJNOSAzdjE4IixrZXk6ImZoM2hxYSJ9XSxbInBhdGgiLHtkOiJNMTUgM3YxOCIsa2V5OiIxNG52cDAifV1dKTsvKioKICogQGxpY2Vuc2UgbHVjaWRlLXJlYWN0IHYwLjQ1My4wIC0gSVNDCiAqCiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIElTQyBsaWNlbnNlLgogKiBTZWUgdGhlIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS4KICovY29uc3QgdWQ9ZGUoIkhpc3RvcnkiLFtbInBhdGgiLHtkOiJNMyAxMmE5IDkgMCAxIDAgOS05IDkuNzUgOS43NSAwIDAgMC02Ljc0IDIuNzRMMyA4IixrZXk6IjEzNTdlMyJ9XSxbInBhdGgiLHtkOiJNMyAzdjVoNSIsa2V5OiIxeGhxOGEifV0sWyJwYXRoIix7ZDoiTTEyIDd2NWw0IDIiLGtleToiMWZkdjJoIn1dXSk7LyoqCiAqIEBsaWNlbnNlIGx1Y2lkZS1yZWFjdCB2MC40NTMuMCAtIElTQwogKgogKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBJU0MgbGljZW5zZS4KICogU2VlIHRoZSBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuCiAqL2NvbnN0IGRFPWRlKCJIb3VzZSIsW1sicGF0aCIse2Q6Ik0xNSAyMXYtOGExIDEgMCAwIDAtMS0xaC00YTEgMSAwIDAgMC0xIDF2OCIsa2V5OiI1d3dscjUifV0sWyJwYXRoIix7ZDoiTTMgMTBhMiAyIDAgMCAxIC43MDktMS41MjhsNy01Ljk5OWEyIDIgMCAwIDEgMi41ODIgMGw3IDUuOTk5QTIgMiAwIDAgMSAyMSAxMHY5YTIgMiAwIDAgMS0yIDJINWEyIDIgMCAwIDEtMi0yeiIsa2V5OiIxZDBrZ3QifV1dKTsvKioKICogQGxpY2Vuc2UgbHVjaWRlLXJlYWN0IHYwLjQ1My4wIC0gSVNDCiAqCiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIElTQyBsaWNlbnNlLgogKiBTZWUgdGhlIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS4KICovY29uc3QgZkU9ZGUoIkxpc3QiLFtbInBhdGgiLHtkOiJNMyAxMmguMDEiLGtleToibmx6MjNrIn1dLFsicGF0aCIse2Q6Ik0zIDE4aC4wMSIsa2V5OiIxdHRhM2oifV0sWyJwYXRoIix7ZDoiTTMgNmguMDEiLGtleToiMXJxdHphIn1dLFsicGF0aCIse2Q6Ik04IDEyaDEzIixrZXk6IjF6YTd6YSJ9XSxbInBhdGgiLHtkOiJNOCAxOGgxMyIsa2V5OiIxbHg2bjMifV0sWyJwYXRoIix7ZDoiTTggNmgxMyIsa2V5OiJpazN2a2oifV1dKTsvKioKICogQGxpY2Vuc2UgbHVjaWRlLXJlYWN0IHYwLjQ1My4wIC0gSVNDCiAqCiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIElTQyBsaWNlbnNlLgogKiBTZWUgdGhlIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS4KICovY29uc3QgbUU9ZGUoIkxvZ091dCIsW1sicGF0aCIse2Q6Ik05IDIxSDVhMiAyIDAgMCAxLTItMlY1YTIgMiAwIDAgMSAyLTJoNCIsa2V5OiIxdWYzcnMifV0sWyJwb2x5bGluZSIse3BvaW50czoiMTYgMTcgMjEgMTIgMTYgNyIsa2V5OiIxZ2FiZHoifV0sWyJsaW5lIix7eDE6IjIxIix4MjoiOSIseTE6IjEyIix5MjoiMTIiLGtleToiMXV5b3M0In1dXSk7LyoqCiAqIEBsaWNlbnNlIGx1Y2lkZS1yZWFjdCB2MC40NTMuMCAtIElTQwogKgogKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBJU0MgbGljZW5zZS4KICogU2VlIHRoZSBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuCiAqL2NvbnN0IGhFPWRlKCJNZW51IixbWyJsaW5lIix7eDE6IjQiLHgyOiIyMCIseTE6IjEyIix5MjoiMTIiLGtleToiMWUwYTlpIn1dLFsibGluZSIse3gxOiI0Iix4MjoiMjAiLHkxOiI2Iix5MjoiNiIsa2V5OiIxb3dvYjMifV0sWyJsaW5lIix7eDE6IjQiLHgyOiIyMCIseTE6IjE4Iix5MjoiMTgiLGtleToieWs1emoxIn1dXSk7LyoqCiAqIEBsaWNlbnNlIGx1Y2lkZS1yZWFjdCB2MC40NTMuMCAtIElTQwogKgogKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBJU0MgbGljZW5zZS4KICogU2VlIHRoZSBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuCiAqL2NvbnN0IHBFPWRlKCJNaW51cyIsW1sicGF0aCIse2Q6Ik01IDEyaDE0IixrZXk6IjFheXMwaCJ9XV0pOy8qKgogKiBAbGljZW5zZSBsdWNpZGUtcmVhY3QgdjAuNDUzLjAgLSBJU0MKICoKICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgSVNDIGxpY2Vuc2UuCiAqIFNlZSB0aGUgTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLgogKi9jb25zdCBnRT1kZSgiTW92ZURvd24iLFtbInBhdGgiLHtkOiJNOCAxOEwxMiAyMkwxNiAxOCIsa2V5OiJjc2t2ZnYifV0sWyJwYXRoIix7ZDoiTTEyIDJWMjIiLGtleToicjg5cnprIn1dXSk7LyoqCiAqIEBsaWNlbnNlIGx1Y2lkZS1yZWFjdCB2MC40NTMuMCAtIElTQwogKgogKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBJU0MgbGljZW5zZS4KICogU2VlIHRoZSBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuCiAqL2NvbnN0IHhFPWRlKCJNb3ZlVXAiLFtbInBhdGgiLHtkOiJNOCA2TDEyIDJMMTYgNiIsa2V5OiIxeXZreXgifV0sWyJwYXRoIix7ZDoiTTEyIDJWMjIiLGtleToicjg5cnprIn1dXSk7LyoqCiAqIEBsaWNlbnNlIGx1Y2lkZS1yZWFjdCB2MC40NTMuMCAtIElTQwogKgogKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBJU0MgbGljZW5zZS4KICogU2VlIHRoZSBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuCiAqL2NvbnN0IFdmPWRlKCJOZXR3b3JrIixbWyJyZWN0Iix7eDoiMTYiLHk6IjE2Iix3aWR0aDoiNiIsaGVpZ2h0OiI2IixyeDoiMSIsa2V5OiI0cTJ6ZzAifV0sWyJyZWN0Iix7eDoiMiIseToiMTYiLHdpZHRoOiI2IixoZWlnaHQ6IjYiLHJ4OiIxIixrZXk6IjhjdmhiOSJ9XSxbInJlY3QiLHt4OiI5Iix5OiIyIix3aWR0aDoiNiIsaGVpZ2h0OiI2IixyeDoiMSIsa2V5OiIxZWdiNzAifV0sWyJwYXRoIix7ZDoiTTUgMTZ2LTNhMSAxIDAgMCAxIDEtMWgxMmExIDEgMCAwIDEgMSAxdjMiLGtleToiMWpzZjlwIn1dLFsicGF0aCIse2Q6Ik0xMiAxMlY4IixrZXk6IjI4NzR6ZCJ9XV0pOy8qKgogKiBAbGljZW5zZSBsdWNpZGUtcmVhY3QgdjAuNDUzLjAgLSBJU0MKICoKICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgSVNDIGxpY2Vuc2UuCiAqIFNlZSB0aGUgTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLgogKi9jb25zdCBnYT1kZSgiUGVuTGluZSIsW1sicGF0aCIse2Q6Ik0xMiAyMGg5IixrZXk6InQyZHU3YiJ9XSxbInBhdGgiLHtkOiJNMTYuMzc2IDMuNjIyYTEgMSAwIDAgMSAzLjAwMiAzLjAwMkw3LjM2OCAxOC42MzVhMiAyIDAgMCAxLS44NTUuNTA2bC0yLjg3Mi44MzhhLjUuNSAwIDAgMS0uNjItLjYybC44MzgtMi44NzJhMiAyIDAgMCAxIC41MDYtLjg1NHoiLGtleToiMXlrY3Z5In1dXSk7LyoqCiAqIEBsaWNlbnNlIGx1Y2lkZS1yZWFjdCB2MC40NTMuMCAtIElTQwogKgogKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBJU0MgbGljZW5zZS4KICogU2VlIHRoZSBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuCiAqL2NvbnN0IEh0PWRlKCJQbHVzIixbWyJwYXRoIix7ZDoiTTUgMTJoMTQiLGtleToiMWF5czBoIn1dLFsicGF0aCIse2Q6Ik0xMiA1djE0IixrZXk6InM2OTlsZSJ9XV0pOy8qKgogKiBAbGljZW5zZSBsdWNpZGUtcmVhY3QgdjAuNDUzLjAgLSBJU0MKICoKICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgSVNDIGxpY2Vuc2UuCiAqIFNlZSB0aGUgTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLgogKi9jb25zdCBwaD1kZSgiU2F2ZSIsW1sicGF0aCIse2Q6Ik0xNS4yIDNhMiAyIDAgMCAxIDEuNC42bDMuOCAzLjhhMiAyIDAgMCAxIC42IDEuNFYxOWEyIDIgMCAwIDEtMiAySDVhMiAyIDAgMCAxLTItMlY1YTIgMiAwIDAgMSAyLTJ6IixrZXk6IjFjODQ3NiJ9XSxbInBhdGgiLHtkOiJNMTcgMjF2LTdhMSAxIDAgMCAwLTEtMUg4YTEgMSAwIDAgMC0xIDF2NyIsa2V5OiIxeWR0b3MifV0sWyJwYXRoIix7ZDoiTTcgM3Y0YTEgMSAwIDAgMCAxIDFoNyIsa2V5OiJ0NTF1NzMifV1dKTsvKioKICogQGxpY2Vuc2UgbHVjaWRlLXJlYWN0IHYwLjQ1My4wIC0gSVNDCiAqCiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIElTQyBsaWNlbnNlLgogKiBTZWUgdGhlIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS4KICovY29uc3QgVzA9ZGUoIlNlYXJjaCIsW1siY2lyY2xlIix7Y3g6IjExIixjeToiMTEiLHI6IjgiLGtleToiNGVqOTd1In1dLFsicGF0aCIse2Q6Im0yMSAyMS00LjMtNC4zIixrZXk6IjFxaWUzcSJ9XV0pOy8qKgogKiBAbGljZW5zZSBsdWNpZGUtcmVhY3QgdjAuNDUzLjAgLSBJU0MKICoKICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgSVNDIGxpY2Vuc2UuCiAqIFNlZSB0aGUgTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLgogKi9jb25zdCB2RT1kZSgiU2V0dGluZ3MiLFtbInBhdGgiLHtkOiJNMTIuMjIgMmgtLjQ0YTIgMiAwIDAgMC0yIDJ2LjE4YTIgMiAwIDAgMS0xIDEuNzNsLS40My4yNWEyIDIgMCAwIDEtMiAwbC0uMTUtLjA4YTIgMiAwIDAgMC0yLjczLjczbC0uMjIuMzhhMiAyIDAgMCAwIC43MyAyLjczbC4xNS4xYTIgMiAwIDAgMSAxIDEuNzJ2LjUxYTIgMiAwIDAgMS0xIDEuNzRsLS4xNS4wOWEyIDIgMCAwIDAtLjczIDIuNzNsLjIyLjM4YTIgMiAwIDAgMCAyLjczLjczbC4xNS0uMDhhMiAyIDAgMCAxIDIgMGwuNDMuMjVhMiAyIDAgMCAxIDEgMS43M1YyMGEyIDIgMCAwIDAgMiAyaC40NGEyIDIgMCAwIDAgMi0ydi0uMThhMiAyIDAgMCAxIDEtMS43M2wuNDMtLjI1YTIgMiAwIDAgMSAyIDBsLjE1LjA4YTIgMiAwIDAgMCAyLjczLS43M2wuMjItLjM5YTIgMiAwIDAgMC0uNzMtMi43M2wtLjE1LS4wOGEyIDIgMCAwIDEtMS0xLjc0di0uNWEyIDIgMCAwIDEgMS0xLjc0bC4xNS0uMDlhMiAyIDAgMCAwIC43My0yLjczbC0uMjItLjM4YTIgMiAwIDAgMC0yLjczLS43M2wtLjE1LjA4YTIgMiAwIDAgMS0yIDBsLS40My0uMjVhMiAyIDAgMCAxLTEtMS43M1Y0YTIgMiAwIDAgMC0yLTJ6IixrZXk6IjFxbWUyZiJ9XSxbImNpcmNsZSIse2N4OiIxMiIsY3k6IjEyIixyOiIzIixrZXk6IjF2N3pyZCJ9XV0pOy8qKgogKiBAbGljZW5zZSBsdWNpZGUtcmVhY3QgdjAuNDUzLjAgLSBJU0MKICoKICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgSVNDIGxpY2Vuc2UuCiAqIFNlZSB0aGUgTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLgogKi9jb25zdCB2cz1kZSgiU2hpZWxkIixbWyJwYXRoIix7ZDoiTTIwIDEzYzAgNS0zLjUgNy41LTcuNjYgOC45NWExIDEgMCAwIDEtLjY3LS4wMUM3LjUgMjAuNSA0IDE4IDQgMTNWNmExIDEgMCAwIDEgMS0xYzIgMCA0LjUtMS4yIDYuMjQtMi43MmExLjE3IDEuMTcgMCAwIDEgMS41MiAwQzE0LjUxIDMuODEgMTcgNSAxOSA1YTEgMSAwIDAgMSAxIDF6IixrZXk6Im9lbDQxeSJ9XV0pOy8qKgogKiBAbGljZW5zZSBsdWNpZGUtcmVhY3QgdjAuNDUzLjAgLSBJU0MKICoKICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgSVNDIGxpY2Vuc2UuCiAqIFNlZSB0aGUgTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLgogKi9jb25zdCB5RT1kZSgiU3F1YXJlUGVuIixbWyJwYXRoIix7ZDoiTTEyIDNINWEyIDIgMCAwIDAtMiAydjE0YTIgMiAwIDAgMCAyIDJoMTRhMiAyIDAgMCAwIDItMnYtNyIsa2V5OiIxbTB2NmcifV0sWyJwYXRoIix7ZDoiTTE4LjM3NSAyLjYyNWExIDEgMCAwIDEgMyAzbC05LjAxMyA5LjAxNGEyIDIgMCAwIDEtLjg1My41MDVsLTIuODczLjg0YS41LjUgMCAwIDEtLjYyLS42MmwuODQtMi44NzNhMiAyIDAgMCAxIC41MDYtLjg1MnoiLGtleToib2hyYmcyIn1dXSk7LyoqCiAqIEBsaWNlbnNlIGx1Y2lkZS1yZWFjdCB2MC40NTMuMCAtIElTQwogKgogKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBJU0MgbGljZW5zZS4KICogU2VlIHRoZSBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuCiAqL2NvbnN0IHdFPWRlKCJTdGFyIixbWyJwb2x5Z29uIix7cG9pbnRzOiIxMiAyIDE1LjA5IDguMjYgMjIgOS4yNyAxNyAxNC4xNCAxOC4xOCAyMS4wMiAxMiAxNy43NyA1LjgyIDIxLjAyIDcgMTQuMTQgMiA5LjI3IDguOTEgOC4yNiAxMiAyIixrZXk6IjhmNjZwNiJ9XV0pOy8qKgogKiBAbGljZW5zZSBsdWNpZGUtcmVhY3QgdjAuNDUzLjAgLSBJU0MKICoKICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgSVNDIGxpY2Vuc2UuCiAqIFNlZSB0aGUgTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLgogKi9jb25zdCBfcj1kZSgiVGFyZ2V0IixbWyJjaXJjbGUiLHtjeDoiMTIiLGN5OiIxMiIscjoiMTAiLGtleToiMW1nbGF5In1dLFsiY2lyY2xlIix7Y3g6IjEyIixjeToiMTIiLHI6IjYiLGtleToiMXZsZnJoIn1dLFsiY2lyY2xlIix7Y3g6IjEyIixjeToiMTIiLHI6IjIiLGtleToiMWM5cDc4In1dXSk7LyoqCiAqIEBsaWNlbnNlIGx1Y2lkZS1yZWFjdCB2MC40NTMuMCAtIElTQwogKgogKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBJU0MgbGljZW5zZS4KICogU2VlIHRoZSBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuCiAqL2NvbnN0IFJjPWRlKCJUcmFzaDIiLFtbInBhdGgiLHtkOiJNMyA2aDE4IixrZXk6ImQwd20waiJ9XSxbInBhdGgiLHtkOiJNMTkgNnYxNGMwIDEtMSAyLTIgMkg3Yy0xIDAtMi0xLTItMlY2IixrZXk6IjRhbHJ0NCJ9XSxbInBhdGgiLHtkOiJNOCA2VjRjMC0xIDEtMiAyLTJoNGMxIDAgMiAxIDIgMnYyIixrZXk6InYwN3MwZSJ9XSxbImxpbmUiLHt4MToiMTAiLHgyOiIxMCIseTE6IjExIix5MjoiMTciLGtleToiMXV1ZnI1In1dLFsibGluZSIse3gxOiIxNCIseDI6IjE0Iix5MToiMTEiLHkyOiIxNyIsa2V5OiJ4dHhrZCJ9XV0pOy8qKgogKiBAbGljZW5zZSBsdWNpZGUtcmVhY3QgdjAuNDUzLjAgLSBJU0MKICoKICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgSVNDIGxpY2Vuc2UuCiAqIFNlZSB0aGUgTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLgogKi9jb25zdCBiRT1kZSgiVHJlZVBpbmUiLFtbInBhdGgiLHtkOiJtMTcgMTQgMyAzLjNhMSAxIDAgMCAxLS43IDEuN0g0LjdhMSAxIDAgMCAxLS43LTEuN0w3IDE0aC0uM2ExIDEgMCAwIDEtLjctMS43TDkgOWgtLjJBMSAxIDAgMCAxIDggNy4zTDEyIDNsNCA0LjNhMSAxIDAgMCAxLS44IDEuN0gxNWwzIDMuM2ExIDEgMCAwIDEtLjcgMS43SDE3WiIsa2V5OiJjcHl1Z3EifV0sWyJwYXRoIix7ZDoiTTEyIDIydi0zIixrZXk6ImttempsbyJ9XV0pOy8qKgogKiBAbGljZW5zZSBsdWNpZGUtcmVhY3QgdjAuNDUzLjAgLSBJU0MKICoKICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgSVNDIGxpY2Vuc2UuCiAqIFNlZSB0aGUgTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLgogKi9jb25zdCBqRT1kZSgiVHJlbmRpbmdEb3duIixbWyJwb2x5bGluZSIse3BvaW50czoiMjIgMTcgMTMuNSA4LjUgOC41IDEzLjUgMiA3IixrZXk6IjFyMnQ3ayJ9XSxbInBvbHlsaW5lIix7cG9pbnRzOiIxNiAxNyAyMiAxNyAyMiAxMSIsa2V5OiIxMXVpdXUifV1dKTsvKioKICogQGxpY2Vuc2UgbHVjaWRlLXJlYWN0IHYwLjQ1My4wIC0gSVNDCiAqCiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIElTQyBsaWNlbnNlLgogKiBTZWUgdGhlIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS4KICovY29uc3QgVG89ZGUoIlRyZW5kaW5nVXAiLFtbInBvbHlsaW5lIix7cG9pbnRzOiIyMiA3IDEzLjUgMTUuNSA4LjUgMTAuNSAyIDE3IixrZXk6IjEyNmw5MCJ9XSxbInBvbHlsaW5lIix7cG9pbnRzOiIxNiA3IDIyIDcgMjIgMTMiLGtleToia3d2OHdkIn1dXSk7LyoqCiAqIEBsaWNlbnNlIGx1Y2lkZS1yZWFjdCB2MC40NTMuMCAtIElTQwogKgogKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBJU0MgbGljZW5zZS4KICogU2VlIHRoZSBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuCiAqL2NvbnN0IGpnPWRlKCJUcmlhbmdsZUFsZXJ0IixbWyJwYXRoIix7ZDoibTIxLjczIDE4LTgtMTRhMiAyIDAgMCAwLTMuNDggMGwtOCAxNEEyIDIgMCAwIDAgNCAyMWgxNmEyIDIgMCAwIDAgMS43My0zIixrZXk6Indtb2VucSJ9XSxbInBhdGgiLHtkOiJNMTIgOXY0IixrZXk6Imp1enB1NyJ9XSxbInBhdGgiLHtkOiJNMTIgMTdoLjAxIixrZXk6InAzMnAwNSJ9XV0pOy8qKgogKiBAbGljZW5zZSBsdWNpZGUtcmVhY3QgdjAuNDUzLjAgLSBJU0MKICoKICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgSVNDIGxpY2Vuc2UuCiAqIFNlZSB0aGUgTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLgogKi9jb25zdCBxMD1kZSgiVXNlciIsW1sicGF0aCIse2Q6Ik0xOSAyMXYtMmE0IDQgMCAwIDAtNC00SDlhNCA0IDAgMCAwLTQgNHYyIixrZXk6Ijk3NWtlbCJ9XSxbImNpcmNsZSIse2N4OiIxMiIsY3k6IjciLHI6IjQiLGtleToiMTd5czBkIn1dXSk7LyoqCiAqIEBsaWNlbnNlIGx1Y2lkZS1yZWFjdCB2MC40NTMuMCAtIElTQwogKgogKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBJU0MgbGljZW5zZS4KICogU2VlIHRoZSBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuCiAqL2NvbnN0IEcwPWRlKCJVc2VycyIsW1sicGF0aCIse2Q6Ik0xNiAyMXYtMmE0IDQgMCAwIDAtNC00SDZhNCA0IDAgMCAwLTQgNHYyIixrZXk6IjF5eWl0cSJ9XSxbImNpcmNsZSIse2N4OiI5IixjeToiNyIscjoiNCIsa2V5OiJudWZrOCJ9XSxbInBhdGgiLHtkOiJNMjIgMjF2LTJhNCA0IDAgMCAwLTMtMy44NyIsa2V5OiJrc2hlZ2QifV0sWyJwYXRoIix7ZDoiTTE2IDMuMTNhNCA0IDAgMCAxIDAgNy43NSIsa2V5OiIxZGE5Y2UifV1dKTsvKioKICogQGxpY2Vuc2UgbHVjaWRlLXJlYWN0IHYwLjQ1My4wIC0gSVNDCiAqCiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIElTQyBsaWNlbnNlLgogKiBTZWUgdGhlIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS4KICovY29uc3QgTkU9ZGUoIldvcmtmbG93IixbWyJyZWN0Iix7d2lkdGg6IjgiLGhlaWdodDoiOCIseDoiMyIseToiMyIscng6IjIiLGtleToiYnkydzlmIn1dLFsicGF0aCIse2Q6Ik03IDExdjRhMiAyIDAgMCAwIDIgMmg0IixrZXk6Inhrbjd5biJ9XSxbInJlY3QiLHt3aWR0aDoiOCIsaGVpZ2h0OiI4Iix4OiIxMyIseToiMTMiLHJ4OiIyIixrZXk6IjFjZ212biJ9XV0pOy8qKgogKiBAbGljZW5zZSBsdWNpZGUtcmVhY3QgdjAuNDUzLjAgLSBJU0MKICoKICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgSVNDIGxpY2Vuc2UuCiAqIFNlZSB0aGUgTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLgogKi9jb25zdCBnaD1kZSgiWCIsW1sicGF0aCIse2Q6Ik0xOCA2IDYgMTgiLGtleToiMWJsNWY4In1dLFsicGF0aCIse2Q6Im02IDYgMTIgMTIiLGtleToiZDhiazZ2In1dXSkseGg9Ii0iLFNFPWU9Pntjb25zdCB0PUVFKGUpLHtjb25mbGljdGluZ0NsYXNzR3JvdXBzOnIsY29uZmxpY3RpbmdDbGFzc0dyb3VwTW9kaWZpZXJzOm59PWU7cmV0dXJue2dldENsYXNzR3JvdXBJZDpvPT57Y29uc3QgbD1vLnNwbGl0KHhoKTtyZXR1cm4gbFswXT09PSIiJiZsLmxlbmd0aCE9PTEmJmwuc2hpZnQoKSxRMChsLHQpfHxrRShvKX0sZ2V0Q29uZmxpY3RpbmdDbGFzc0dyb3VwSWRzOihvLGwpPT57Y29uc3QgYz1yW29dfHxbXTtyZXR1cm4gbCYmbltvXT9bLi4uYywuLi5uW29dXTpjfX19LFEwPShlLHQpPT57dmFyIG87aWYoZS5sZW5ndGg9PT0wKXJldHVybiB0LmNsYXNzR3JvdXBJZDtjb25zdCByPWVbMF0sbj10Lm5leHRQYXJ0LmdldChyKSxzPW4/UTAoZS5zbGljZSgxKSxuKTp2b2lkIDA7aWYocylyZXR1cm4gcztpZih0LnZhbGlkYXRvcnMubGVuZ3RoPT09MClyZXR1cm47Y29uc3QgYT1lLmpvaW4oeGgpO3JldHVybihvPXQudmFsaWRhdG9ycy5maW5kKCh7dmFsaWRhdG9yOmx9KT0+bChhKSkpPT1udWxsP3ZvaWQgMDpvLmNsYXNzR3JvdXBJZH0sTmc9L15cWyguKylcXSQvLGtFPWU9PntpZihOZy50ZXN0KGUpKXtjb25zdCB0PU5nLmV4ZWMoZSlbMV0scj10PT1udWxsP3ZvaWQgMDp0LnN1YnN0cmluZygwLHQuaW5kZXhPZigiOiIpKTtpZihyKXJldHVybiJhcmJpdHJhcnkuLiIrcn19LEVFPWU9Pntjb25zdHt0aGVtZTp0LHByZWZpeDpyfT1lLG49e25leHRQYXJ0Om5ldyBNYXAsdmFsaWRhdG9yczpbXX07cmV0dXJuIF9FKE9iamVjdC5lbnRyaWVzKGUuY2xhc3NHcm91cHMpLHIpLmZvckVhY2goKFthLG9dKT0+e3FmKG8sbixhLHQpfSksbn0scWY9KGUsdCxyLG4pPT57ZS5mb3JFYWNoKHM9PntpZih0eXBlb2Ygcz09InN0cmluZyIpe2NvbnN0IGE9cz09PSIiP3Q6U2codCxzKTthLmNsYXNzR3JvdXBJZD1yO3JldHVybn1pZih0eXBlb2Ygcz09ImZ1bmN0aW9uIil7aWYoQ0Uocykpe3FmKHMobiksdCxyLG4pO3JldHVybn10LnZhbGlkYXRvcnMucHVzaCh7dmFsaWRhdG9yOnMsY2xhc3NHcm91cElkOnJ9KTtyZXR1cm59T2JqZWN0LmVudHJpZXMocykuZm9yRWFjaCgoW2Esb10pPT57cWYobyxTZyh0LGEpLHIsbil9KX0pfSxTZz0oZSx0KT0+e2xldCByPWU7cmV0dXJuIHQuc3BsaXQoeGgpLmZvckVhY2gobj0+e3IubmV4dFBhcnQuaGFzKG4pfHxyLm5leHRQYXJ0LnNldChuLHtuZXh0UGFydDpuZXcgTWFwLHZhbGlkYXRvcnM6W119KSxyPXIubmV4dFBhcnQuZ2V0KG4pfSkscn0sQ0U9ZT0+ZS5pc1RoZW1lR2V0dGVyLF9FPShlLHQpPT50P2UubWFwKChbcixuXSk9Pntjb25zdCBzPW4ubWFwKGE9PnR5cGVvZiBhPT0ic3RyaW5nIj90K2E6dHlwZW9mIGE9PSJvYmplY3QiP09iamVjdC5mcm9tRW50cmllcyhPYmplY3QuZW50cmllcyhhKS5tYXAoKFtvLGxdKT0+W3QrbyxsXSkpOmEpO3JldHVybltyLHNdfSk6ZSxQRT1lPT57aWYoZTwxKXJldHVybntnZXQ6KCk9Pnt9LHNldDooKT0+e319O2xldCB0PTAscj1uZXcgTWFwLG49bmV3IE1hcDtjb25zdCBzPShhLG8pPT57ci5zZXQoYSxvKSx0KyssdD5lJiYodD0wLG49cixyPW5ldyBNYXApfTtyZXR1cm57Z2V0KGEpe2xldCBvPXIuZ2V0KGEpO2lmKG8hPT12b2lkIDApcmV0dXJuIG87aWYoKG89bi5nZXQoYSkpIT09dm9pZCAwKXJldHVybiBzKGEsbyksb30sc2V0KGEsbyl7ci5oYXMoYSk/ci5zZXQoYSxvKTpzKGEsbyl9fX0sWjA9IiEiLFRFPWU9Pntjb25zdHtzZXBhcmF0b3I6dCxleHBlcmltZW50YWxQYXJzZUNsYXNzTmFtZTpyfT1lLG49dC5sZW5ndGg9PT0xLHM9dFswXSxhPXQubGVuZ3RoLG89bD0+e2NvbnN0IGM9W107bGV0IHU9MCxkPTAsZjtmb3IobGV0IHc9MDt3PGwubGVuZ3RoO3crKyl7bGV0IGg9bFt3XTtpZih1PT09MCl7aWYoaD09PXMmJihufHxsLnNsaWNlKHcsdythKT09PXQpKXtjLnB1c2gobC5zbGljZShkLHcpKSxkPXcrYTtjb250aW51ZX1pZihoPT09Ii8iKXtmPXc7Y29udGludWV9fWg9PT0iWyI/dSsrOmg9PT0iXSImJnUtLX1jb25zdCBwPWMubGVuZ3RoPT09MD9sOmwuc3Vic3RyaW5nKGQpLHg9cC5zdGFydHNXaXRoKFowKSx2PXg/cC5zdWJzdHJpbmcoMSk6cCxtPWYmJmY+ZD9mLWQ6dm9pZCAwO3JldHVybnttb2RpZmllcnM6YyxoYXNJbXBvcnRhbnRNb2RpZmllcjp4LGJhc2VDbGFzc05hbWU6dixtYXliZVBvc3RmaXhNb2RpZmllclBvc2l0aW9uOm19fTtyZXR1cm4gcj9sPT5yKHtjbGFzc05hbWU6bCxwYXJzZUNsYXNzTmFtZTpvfSk6b30sUkU9ZT0+e2lmKGUubGVuZ3RoPD0xKXJldHVybiBlO2NvbnN0IHQ9W107bGV0IHI9W107cmV0dXJuIGUuZm9yRWFjaChuPT57blswXT09PSJbIj8odC5wdXNoKC4uLnIuc29ydCgpLG4pLHI9W10pOnIucHVzaChuKX0pLHQucHVzaCguLi5yLnNvcnQoKSksdH0sQUU9ZT0+KHtjYWNoZTpQRShlLmNhY2hlU2l6ZSkscGFyc2VDbGFzc05hbWU6VEUoZSksLi4uU0UoZSl9KSxNRT0vXHMrLyxPRT0oZSx0KT0+e2NvbnN0e3BhcnNlQ2xhc3NOYW1lOnIsZ2V0Q2xhc3NHcm91cElkOm4sZ2V0Q29uZmxpY3RpbmdDbGFzc0dyb3VwSWRzOnN9PXQsYT1bXSxvPWUudHJpbSgpLnNwbGl0KE1FKTtsZXQgbD0iIjtmb3IobGV0IGM9by5sZW5ndGgtMTtjPj0wO2MtPTEpe2NvbnN0IHU9b1tjXSx7bW9kaWZpZXJzOmQsaGFzSW1wb3J0YW50TW9kaWZpZXI6ZixiYXNlQ2xhc3NOYW1lOnAsbWF5YmVQb3N0Zml4TW9kaWZpZXJQb3NpdGlvbjp4fT1yKHUpO2xldCB2PSEheCxtPW4odj9wLnN1YnN0cmluZygwLHgpOnApO2lmKCFtKXtpZighdil7bD11KyhsLmxlbmd0aD4wPyIgIitsOmwpO2NvbnRpbnVlfWlmKG09bihwKSwhbSl7bD11KyhsLmxlbmd0aD4wPyIgIitsOmwpO2NvbnRpbnVlfXY9ITF9Y29uc3Qgdz1SRShkKS5qb2luKCI6IiksaD1mP3crWjA6dyxnPWgrbTtpZihhLmluY2x1ZGVzKGcpKWNvbnRpbnVlO2EucHVzaChnKTtjb25zdCBiPXMobSx2KTtmb3IobGV0IE49MDtOPGIubGVuZ3RoOysrTil7Y29uc3QgUz1iW05dO2EucHVzaChoK1MpfWw9dSsobC5sZW5ndGg+MD8iICIrbDpsKX1yZXR1cm4gbH07ZnVuY3Rpb24gRkUoKXtsZXQgZT0wLHQscixuPSIiO2Zvcig7ZTxhcmd1bWVudHMubGVuZ3RoOykodD1hcmd1bWVudHNbZSsrXSkmJihyPUswKHQpKSYmKG4mJihuKz0iICIpLG4rPXIpO3JldHVybiBufWNvbnN0IEswPWU9PntpZih0eXBlb2YgZT09InN0cmluZyIpcmV0dXJuIGU7bGV0IHQscj0iIjtmb3IobGV0IG49MDtuPGUubGVuZ3RoO24rKyllW25dJiYodD1LMChlW25dKSkmJihyJiYocis9IiAiKSxyKz10KTtyZXR1cm4gcn07ZnVuY3Rpb24gSUUoZSwuLi50KXtsZXQgcixuLHMsYT1vO2Z1bmN0aW9uIG8oYyl7Y29uc3QgdT10LnJlZHVjZSgoZCxmKT0+ZihkKSxlKCkpO3JldHVybiByPUFFKHUpLG49ci5jYWNoZS5nZXQscz1yLmNhY2hlLnNldCxhPWwsbChjKX1mdW5jdGlvbiBsKGMpe2NvbnN0IHU9bihjKTtpZih1KXJldHVybiB1O2NvbnN0IGQ9T0UoYyxyKTtyZXR1cm4gcyhjLGQpLGR9cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIGEoRkUuYXBwbHkobnVsbCxhcmd1bWVudHMpKX19Y29uc3QgQmU9ZT0+e2NvbnN0IHQ9cj0+cltlXXx8W107cmV0dXJuIHQuaXNUaGVtZUdldHRlcj0hMCx0fSxZMD0vXlxbKD86KFthLXotXSspOik/KC4rKVxdJC9pLExFPS9eXGQrXC9cZCskLyxERT1uZXcgU2V0KFsicHgiLCJmdWxsIiwic2NyZWVuIl0pLCRFPS9eKFxkKyhcLlxkKyk/KT8oeHN8c218bWR8bGd8eGwpJC8sekU9L1xkKyglfHB4fHI/ZW18W3NkbF0/dihbaHdpYl18bWlufG1heCl8cHR8cGN8aW58Y218bW18Y2FwfGNofGV4fHI/bGh8Y3Eod3xofGl8YnxtaW58bWF4KSl8XGIoY2FsY3xtaW58bWF4fGNsYW1wKVwoLitcKXxeMCQvLFZFPS9eKHJnYmE/fGhzbGE/fGh3Ynwob2spPyhsYWJ8bGNoKSlcKC4rXCkkLyxVRT0vXihpbnNldF8pPy0/KChcZCspP1wuPyhcZCspW2Etel0rfDApXy0/KChcZCspP1wuPyhcZCspW2Etel0rfDApLyxCRT0vXih1cmx8aW1hZ2V8aW1hZ2Utc2V0fGNyb3NzLWZhZGV8ZWxlbWVudHwocmVwZWF0aW5nLSk/KGxpbmVhcnxyYWRpYWx8Y29uaWMpLWdyYWRpZW50KVwoLitcKSQvLGduPWU9PkhpKGUpfHxERS5oYXMoZSl8fExFLnRlc3QoZSksQm49ZT0+X2EoZSwibGVuZ3RoIixZRSksSGk9ZT0+ISFlJiYhTnVtYmVyLmlzTmFOKE51bWJlcihlKSksZGQ9ZT0+X2EoZSwibnVtYmVyIixIaSksemE9ZT0+ISFlJiZOdW1iZXIuaXNJbnRlZ2VyKE51bWJlcihlKSksSEU9ZT0+ZS5lbmRzV2l0aCgiJSIpJiZIaShlLnNsaWNlKDAsLTEpKSx4ZT1lPT5ZMC50ZXN0KGUpLEhuPWU9PiRFLnRlc3QoZSksV0U9bmV3IFNldChbImxlbmd0aCIsInNpemUiLCJwZXJjZW50YWdlIl0pLHFFPWU9Pl9hKGUsV0UsWDApLEdFPWU9Pl9hKGUsInBvc2l0aW9uIixYMCksUUU9bmV3IFNldChbImltYWdlIiwidXJsIl0pLFpFPWU9Pl9hKGUsUUUsSkUpLEtFPWU9Pl9hKGUsIiIsWEUpLFZhPSgpPT4hMCxfYT0oZSx0LHIpPT57Y29uc3Qgbj1ZMC5leGVjKGUpO3JldHVybiBuP25bMV0/dHlwZW9mIHQ9PSJzdHJpbmciP25bMV09PT10OnQuaGFzKG5bMV0pOnIoblsyXSk6ITF9LFlFPWU9PnpFLnRlc3QoZSkmJiFWRS50ZXN0KGUpLFgwPSgpPT4hMSxYRT1lPT5VRS50ZXN0KGUpLEpFPWU9PkJFLnRlc3QoZSksZTI9KCk9Pntjb25zdCBlPUJlKCJjb2xvcnMiKSx0PUJlKCJzcGFjaW5nIikscj1CZSgiYmx1ciIpLG49QmUoImJyaWdodG5lc3MiKSxzPUJlKCJib3JkZXJDb2xvciIpLGE9QmUoImJvcmRlclJhZGl1cyIpLG89QmUoImJvcmRlclNwYWNpbmciKSxsPUJlKCJib3JkZXJXaWR0aCIpLGM9QmUoImNvbnRyYXN0IiksdT1CZSgiZ3JheXNjYWxlIiksZD1CZSgiaHVlUm90YXRlIiksZj1CZSgiaW52ZXJ0IikscD1CZSgiZ2FwIikseD1CZSgiZ3JhZGllbnRDb2xvclN0b3BzIiksdj1CZSgiZ3JhZGllbnRDb2xvclN0b3BQb3NpdGlvbnMiKSxtPUJlKCJpbnNldCIpLHc9QmUoIm1hcmdpbiIpLGg9QmUoIm9wYWNpdHkiKSxnPUJlKCJwYWRkaW5nIiksYj1CZSgic2F0dXJhdGUiKSxOPUJlKCJzY2FsZSIpLFM9QmUoInNlcGlhIiksXz1CZSgic2tldyIpLGs9QmUoInNwYWNlIiksVD1CZSgidHJhbnNsYXRlIiksTD0oKT0+WyJhdXRvIiwiY29udGFpbiIsIm5vbmUiXSxQPSgpPT5bImF1dG8iLCJoaWRkZW4iLCJjbGlwIiwidmlzaWJsZSIsInNjcm9sbCJdLGo9KCk9PlsiYXV0byIseGUsdF0sST0oKT0+W3hlLHRdLFY9KCk9PlsiIixnbixCbl0sTz0oKT0+WyJhdXRvIixIaSx4ZV0sWj0oKT0+WyJib3R0b20iLCJjZW50ZXIiLCJsZWZ0IiwibGVmdC1ib3R0b20iLCJsZWZ0LXRvcCIsInJpZ2h0IiwicmlnaHQtYm90dG9tIiwicmlnaHQtdG9wIiwidG9wIl0sUT0oKT0+WyJzb2xpZCIsImRhc2hlZCIsImRvdHRlZCIsImRvdWJsZSIsIm5vbmUiXSxBPSgpPT5bIm5vcm1hbCIsIm11bHRpcGx5Iiwic2NyZWVuIiwib3ZlcmxheSIsImRhcmtlbiIsImxpZ2h0ZW4iLCJjb2xvci1kb2RnZSIsImNvbG9yLWJ1cm4iLCJoYXJkLWxpZ2h0Iiwic29mdC1saWdodCIsImRpZmZlcmVuY2UiLCJleGNsdXNpb24iLCJodWUiLCJzYXR1cmF0aW9uIiwiY29sb3IiLCJsdW1pbm9zaXR5Il0sTT0oKT0+WyJzdGFydCIsImVuZCIsImNlbnRlciIsImJldHdlZW4iLCJhcm91bmQiLCJldmVubHkiLCJzdHJldGNoIl0sJD0oKT0+WyIiLCIwIix4ZV0sRD0oKT0+WyJhdXRvIiwiYXZvaWQiLCJhbGwiLCJhdm9pZC1wYWdlIiwicGFnZSIsImxlZnQiLCJyaWdodCIsImNvbHVtbiJdLFI9KCk9PltIaSx4ZV07cmV0dXJue2NhY2hlU2l6ZTo1MDAsc2VwYXJhdG9yOiI6Iix0aGVtZTp7Y29sb3JzOltWYV0sc3BhY2luZzpbZ24sQm5dLGJsdXI6WyJub25lIiwiIixIbix4ZV0sYnJpZ2h0bmVzczpSKCksYm9yZGVyQ29sb3I6W2VdLGJvcmRlclJhZGl1czpbIm5vbmUiLCIiLCJmdWxsIixIbix4ZV0sYm9yZGVyU3BhY2luZzpJKCksYm9yZGVyV2lkdGg6VigpLGNvbnRyYXN0OlIoKSxncmF5c2NhbGU6JCgpLGh1ZVJvdGF0ZTpSKCksaW52ZXJ0OiQoKSxnYXA6SSgpLGdyYWRpZW50Q29sb3JTdG9wczpbZV0sZ3JhZGllbnRDb2xvclN0b3BQb3NpdGlvbnM6W0hFLEJuXSxpbnNldDpqKCksbWFyZ2luOmooKSxvcGFjaXR5OlIoKSxwYWRkaW5nOkkoKSxzYXR1cmF0ZTpSKCksc2NhbGU6UigpLHNlcGlhOiQoKSxza2V3OlIoKSxzcGFjZTpJKCksdHJhbnNsYXRlOkkoKX0sY2xhc3NHcm91cHM6e2FzcGVjdDpbe2FzcGVjdDpbImF1dG8iLCJzcXVhcmUiLCJ2aWRlbyIseGVdfV0sY29udGFpbmVyOlsiY29udGFpbmVyIl0sY29sdW1uczpbe2NvbHVtbnM6W0huXX1dLCJicmVhay1hZnRlciI6W3siYnJlYWstYWZ0ZXIiOkQoKX1dLCJicmVhay1iZWZvcmUiOlt7ImJyZWFrLWJlZm9yZSI6RCgpfV0sImJyZWFrLWluc2lkZSI6W3siYnJlYWstaW5zaWRlIjpbImF1dG8iLCJhdm9pZCIsImF2b2lkLXBhZ2UiLCJhdm9pZC1jb2x1bW4iXX1dLCJib3gtZGVjb3JhdGlvbiI6W3siYm94LWRlY29yYXRpb24iOlsic2xpY2UiLCJjbG9uZSJdfV0sYm94Olt7Ym94OlsiYm9yZGVyIiwiY29udGVudCJdfV0sZGlzcGxheTpbImJsb2NrIiwiaW5saW5lLWJsb2NrIiwiaW5saW5lIiwiZmxleCIsImlubGluZS1mbGV4IiwidGFibGUiLCJpbmxpbmUtdGFibGUiLCJ0YWJsZS1jYXB0aW9uIiwidGFibGUtY2VsbCIsInRhYmxlLWNvbHVtbiIsInRhYmxlLWNvbHVtbi1ncm91cCIsInRhYmxlLWZvb3Rlci1ncm91cCIsInRhYmxlLWhlYWRlci1ncm91cCIsInRhYmxlLXJvdy1ncm91cCIsInRhYmxlLXJvdyIsImZsb3ctcm9vdCIsImdyaWQiLCJpbmxpbmUtZ3JpZCIsImNvbnRlbnRzIiwibGlzdC1pdGVtIiwiaGlkZGVuIl0sZmxvYXQ6W3tmbG9hdDpbInJpZ2h0IiwibGVmdCIsIm5vbmUiLCJzdGFydCIsImVuZCJdfV0sY2xlYXI6W3tjbGVhcjpbImxlZnQiLCJyaWdodCIsImJvdGgiLCJub25lIiwic3RhcnQiLCJlbmQiXX1dLGlzb2xhdGlvbjpbImlzb2xhdGUiLCJpc29sYXRpb24tYXV0byJdLCJvYmplY3QtZml0Ijpbe29iamVjdDpbImNvbnRhaW4iLCJjb3ZlciIsImZpbGwiLCJub25lIiwic2NhbGUtZG93biJdfV0sIm9iamVjdC1wb3NpdGlvbiI6W3tvYmplY3Q6Wy4uLlooKSx4ZV19XSxvdmVyZmxvdzpbe292ZXJmbG93OlAoKX1dLCJvdmVyZmxvdy14IjpbeyJvdmVyZmxvdy14IjpQKCl9XSwib3ZlcmZsb3cteSI6W3sib3ZlcmZsb3cteSI6UCgpfV0sb3ZlcnNjcm9sbDpbe292ZXJzY3JvbGw6TCgpfV0sIm92ZXJzY3JvbGwteCI6W3sib3ZlcnNjcm9sbC14IjpMKCl9XSwib3ZlcnNjcm9sbC15IjpbeyJvdmVyc2Nyb2xsLXkiOkwoKX1dLHBvc2l0aW9uOlsic3RhdGljIiwiZml4ZWQiLCJhYnNvbHV0ZSIsInJlbGF0aXZlIiwic3RpY2t5Il0saW5zZXQ6W3tpbnNldDpbbV19XSwiaW5zZXQteCI6W3siaW5zZXQteCI6W21dfV0sImluc2V0LXkiOlt7Imluc2V0LXkiOlttXX1dLHN0YXJ0Olt7c3RhcnQ6W21dfV0sZW5kOlt7ZW5kOlttXX1dLHRvcDpbe3RvcDpbbV19XSxyaWdodDpbe3JpZ2h0OlttXX1dLGJvdHRvbTpbe2JvdHRvbTpbbV19XSxsZWZ0Olt7bGVmdDpbbV19XSx2aXNpYmlsaXR5OlsidmlzaWJsZSIsImludmlzaWJsZSIsImNvbGxhcHNlIl0sejpbe3o6WyJhdXRvIix6YSx4ZV19XSxiYXNpczpbe2Jhc2lzOmooKX1dLCJmbGV4LWRpcmVjdGlvbiI6W3tmbGV4Olsicm93Iiwicm93LXJldmVyc2UiLCJjb2wiLCJjb2wtcmV2ZXJzZSJdfV0sImZsZXgtd3JhcCI6W3tmbGV4Olsid3JhcCIsIndyYXAtcmV2ZXJzZSIsIm5vd3JhcCJdfV0sZmxleDpbe2ZsZXg6WyIxIiwiYXV0byIsImluaXRpYWwiLCJub25lIix4ZV19XSxncm93Olt7Z3JvdzokKCl9XSxzaHJpbms6W3tzaHJpbms6JCgpfV0sb3JkZXI6W3tvcmRlcjpbImZpcnN0IiwibGFzdCIsIm5vbmUiLHphLHhlXX1dLCJncmlkLWNvbHMiOlt7ImdyaWQtY29scyI6W1ZhXX1dLCJjb2wtc3RhcnQtZW5kIjpbe2NvbDpbImF1dG8iLHtzcGFuOlsiZnVsbCIsemEseGVdfSx4ZV19XSwiY29sLXN0YXJ0IjpbeyJjb2wtc3RhcnQiOk8oKX1dLCJjb2wtZW5kIjpbeyJjb2wtZW5kIjpPKCl9XSwiZ3JpZC1yb3dzIjpbeyJncmlkLXJvd3MiOltWYV19XSwicm93LXN0YXJ0LWVuZCI6W3tyb3c6WyJhdXRvIix7c3BhbjpbemEseGVdfSx4ZV19XSwicm93LXN0YXJ0IjpbeyJyb3ctc3RhcnQiOk8oKX1dLCJyb3ctZW5kIjpbeyJyb3ctZW5kIjpPKCl9XSwiZ3JpZC1mbG93IjpbeyJncmlkLWZsb3ciOlsicm93IiwiY29sIiwiZGVuc2UiLCJyb3ctZGVuc2UiLCJjb2wtZGVuc2UiXX1dLCJhdXRvLWNvbHMiOlt7ImF1dG8tY29scyI6WyJhdXRvIiwibWluIiwibWF4IiwiZnIiLHhlXX1dLCJhdXRvLXJvd3MiOlt7ImF1dG8tcm93cyI6WyJhdXRvIiwibWluIiwibWF4IiwiZnIiLHhlXX1dLGdhcDpbe2dhcDpbcF19XSwiZ2FwLXgiOlt7ImdhcC14IjpbcF19XSwiZ2FwLXkiOlt7ImdhcC15IjpbcF19XSwianVzdGlmeS1jb250ZW50Ijpbe2p1c3RpZnk6WyJub3JtYWwiLC4uLk0oKV19XSwianVzdGlmeS1pdGVtcyI6W3sianVzdGlmeS1pdGVtcyI6WyJzdGFydCIsImVuZCIsImNlbnRlciIsInN0cmV0Y2giXX1dLCJqdXN0aWZ5LXNlbGYiOlt7Imp1c3RpZnktc2VsZiI6WyJhdXRvIiwic3RhcnQiLCJlbmQiLCJjZW50ZXIiLCJzdHJldGNoIl19XSwiYWxpZ24tY29udGVudCI6W3tjb250ZW50Olsibm9ybWFsIiwuLi5NKCksImJhc2VsaW5lIl19XSwiYWxpZ24taXRlbXMiOlt7aXRlbXM6WyJzdGFydCIsImVuZCIsImNlbnRlciIsImJhc2VsaW5lIiwic3RyZXRjaCJdfV0sImFsaWduLXNlbGYiOlt7c2VsZjpbImF1dG8iLCJzdGFydCIsImVuZCIsImNlbnRlciIsInN0cmV0Y2giLCJiYXNlbGluZSJdfV0sInBsYWNlLWNvbnRlbnQiOlt7InBsYWNlLWNvbnRlbnQiOlsuLi5NKCksImJhc2VsaW5lIl19XSwicGxhY2UtaXRlbXMiOlt7InBsYWNlLWl0ZW1zIjpbInN0YXJ0IiwiZW5kIiwiY2VudGVyIiwiYmFzZWxpbmUiLCJzdHJldGNoIl19XSwicGxhY2Utc2VsZiI6W3sicGxhY2Utc2VsZiI6WyJhdXRvIiwic3RhcnQiLCJlbmQiLCJjZW50ZXIiLCJzdHJldGNoIl19XSxwOlt7cDpbZ119XSxweDpbe3B4OltnXX1dLHB5Olt7cHk6W2ddfV0scHM6W3twczpbZ119XSxwZTpbe3BlOltnXX1dLHB0Olt7cHQ6W2ddfV0scHI6W3twcjpbZ119XSxwYjpbe3BiOltnXX1dLHBsOlt7cGw6W2ddfV0sbTpbe206W3ddfV0sbXg6W3tteDpbd119XSxteTpbe215Olt3XX1dLG1zOlt7bXM6W3ddfV0sbWU6W3ttZTpbd119XSxtdDpbe210Olt3XX1dLG1yOlt7bXI6W3ddfV0sbWI6W3ttYjpbd119XSxtbDpbe21sOlt3XX1dLCJzcGFjZS14IjpbeyJzcGFjZS14Ijpba119XSwic3BhY2UteC1yZXZlcnNlIjpbInNwYWNlLXgtcmV2ZXJzZSJdLCJzcGFjZS15IjpbeyJzcGFjZS15Ijpba119XSwic3BhY2UteS1yZXZlcnNlIjpbInNwYWNlLXktcmV2ZXJzZSJdLHc6W3t3OlsiYXV0byIsIm1pbiIsIm1heCIsImZpdCIsInN2dyIsImx2dyIsImR2dyIseGUsdF19XSwibWluLXciOlt7Im1pbi13IjpbeGUsdCwibWluIiwibWF4IiwiZml0Il19XSwibWF4LXciOlt7Im1heC13IjpbeGUsdCwibm9uZSIsImZ1bGwiLCJtaW4iLCJtYXgiLCJmaXQiLCJwcm9zZSIse3NjcmVlbjpbSG5dfSxIbl19XSxoOlt7aDpbeGUsdCwiYXV0byIsIm1pbiIsIm1heCIsImZpdCIsInN2aCIsImx2aCIsImR2aCJdfV0sIm1pbi1oIjpbeyJtaW4taCI6W3hlLHQsIm1pbiIsIm1heCIsImZpdCIsInN2aCIsImx2aCIsImR2aCJdfV0sIm1heC1oIjpbeyJtYXgtaCI6W3hlLHQsIm1pbiIsIm1heCIsImZpdCIsInN2aCIsImx2aCIsImR2aCJdfV0sc2l6ZTpbe3NpemU6W3hlLHQsImF1dG8iLCJtaW4iLCJtYXgiLCJmaXQiXX1dLCJmb250LXNpemUiOlt7dGV4dDpbImJhc2UiLEhuLEJuXX1dLCJmb250LXNtb290aGluZyI6WyJhbnRpYWxpYXNlZCIsInN1YnBpeGVsLWFudGlhbGlhc2VkIl0sImZvbnQtc3R5bGUiOlsiaXRhbGljIiwibm90LWl0YWxpYyJdLCJmb250LXdlaWdodCI6W3tmb250OlsidGhpbiIsImV4dHJhbGlnaHQiLCJsaWdodCIsIm5vcm1hbCIsIm1lZGl1bSIsInNlbWlib2xkIiwiYm9sZCIsImV4dHJhYm9sZCIsImJsYWNrIixkZF19XSwiZm9udC1mYW1pbHkiOlt7Zm9udDpbVmFdfV0sImZ2bi1ub3JtYWwiOlsibm9ybWFsLW51bXMiXSwiZnZuLW9yZGluYWwiOlsib3JkaW5hbCJdLCJmdm4tc2xhc2hlZC16ZXJvIjpbInNsYXNoZWQtemVybyJdLCJmdm4tZmlndXJlIjpbImxpbmluZy1udW1zIiwib2xkc3R5bGUtbnVtcyJdLCJmdm4tc3BhY2luZyI6WyJwcm9wb3J0aW9uYWwtbnVtcyIsInRhYnVsYXItbnVtcyJdLCJmdm4tZnJhY3Rpb24iOlsiZGlhZ29uYWwtZnJhY3Rpb25zIiwic3RhY2tlZC1mcmFjdGlvbnMiXSx0cmFja2luZzpbe3RyYWNraW5nOlsidGlnaHRlciIsInRpZ2h0Iiwibm9ybWFsIiwid2lkZSIsIndpZGVyIiwid2lkZXN0Iix4ZV19XSwibGluZS1jbGFtcCI6W3sibGluZS1jbGFtcCI6WyJub25lIixIaSxkZF19XSxsZWFkaW5nOlt7bGVhZGluZzpbIm5vbmUiLCJ0aWdodCIsInNudWciLCJub3JtYWwiLCJyZWxheGVkIiwibG9vc2UiLGduLHhlXX1dLCJsaXN0LWltYWdlIjpbeyJsaXN0LWltYWdlIjpbIm5vbmUiLHhlXX1dLCJsaXN0LXN0eWxlLXR5cGUiOlt7bGlzdDpbIm5vbmUiLCJkaXNjIiwiZGVjaW1hbCIseGVdfV0sImxpc3Qtc3R5bGUtcG9zaXRpb24iOlt7bGlzdDpbImluc2lkZSIsIm91dHNpZGUiXX1dLCJwbGFjZWhvbGRlci1jb2xvciI6W3twbGFjZWhvbGRlcjpbZV19XSwicGxhY2Vob2xkZXItb3BhY2l0eSI6W3sicGxhY2Vob2xkZXItb3BhY2l0eSI6W2hdfV0sInRleHQtYWxpZ25tZW50Ijpbe3RleHQ6WyJsZWZ0IiwiY2VudGVyIiwicmlnaHQiLCJqdXN0aWZ5Iiwic3RhcnQiLCJlbmQiXX1dLCJ0ZXh0LWNvbG9yIjpbe3RleHQ6W2VdfV0sInRleHQtb3BhY2l0eSI6W3sidGV4dC1vcGFjaXR5IjpbaF19XSwidGV4dC1kZWNvcmF0aW9uIjpbInVuZGVybGluZSIsIm92ZXJsaW5lIiwibGluZS10aHJvdWdoIiwibm8tdW5kZXJsaW5lIl0sInRleHQtZGVjb3JhdGlvbi1zdHlsZSI6W3tkZWNvcmF0aW9uOlsuLi5RKCksIndhdnkiXX1dLCJ0ZXh0LWRlY29yYXRpb24tdGhpY2tuZXNzIjpbe2RlY29yYXRpb246WyJhdXRvIiwiZnJvbS1mb250IixnbixCbl19XSwidW5kZXJsaW5lLW9mZnNldCI6W3sidW5kZXJsaW5lLW9mZnNldCI6WyJhdXRvIixnbix4ZV19XSwidGV4dC1kZWNvcmF0aW9uLWNvbG9yIjpbe2RlY29yYXRpb246W2VdfV0sInRleHQtdHJhbnNmb3JtIjpbInVwcGVyY2FzZSIsImxvd2VyY2FzZSIsImNhcGl0YWxpemUiLCJub3JtYWwtY2FzZSJdLCJ0ZXh0LW92ZXJmbG93IjpbInRydW5jYXRlIiwidGV4dC1lbGxpcHNpcyIsInRleHQtY2xpcCJdLCJ0ZXh0LXdyYXAiOlt7dGV4dDpbIndyYXAiLCJub3dyYXAiLCJiYWxhbmNlIiwicHJldHR5Il19XSxpbmRlbnQ6W3tpbmRlbnQ6SSgpfV0sInZlcnRpY2FsLWFsaWduIjpbe2FsaWduOlsiYmFzZWxpbmUiLCJ0b3AiLCJtaWRkbGUiLCJib3R0b20iLCJ0ZXh0LXRvcCIsInRleHQtYm90dG9tIiwic3ViIiwic3VwZXIiLHhlXX1dLHdoaXRlc3BhY2U6W3t3aGl0ZXNwYWNlOlsibm9ybWFsIiwibm93cmFwIiwicHJlIiwicHJlLWxpbmUiLCJwcmUtd3JhcCIsImJyZWFrLXNwYWNlcyJdfV0sYnJlYWs6W3ticmVhazpbIm5vcm1hbCIsIndvcmRzIiwiYWxsIiwia2VlcCJdfV0saHlwaGVuczpbe2h5cGhlbnM6WyJub25lIiwibWFudWFsIiwiYXV0byJdfV0sY29udGVudDpbe2NvbnRlbnQ6WyJub25lIix4ZV19XSwiYmctYXR0YWNobWVudCI6W3tiZzpbImZpeGVkIiwibG9jYWwiLCJzY3JvbGwiXX1dLCJiZy1jbGlwIjpbeyJiZy1jbGlwIjpbImJvcmRlciIsInBhZGRpbmciLCJjb250ZW50IiwidGV4dCJdfV0sImJnLW9wYWNpdHkiOlt7ImJnLW9wYWNpdHkiOltoXX1dLCJiZy1vcmlnaW4iOlt7ImJnLW9yaWdpbiI6WyJib3JkZXIiLCJwYWRkaW5nIiwiY29udGVudCJdfV0sImJnLXBvc2l0aW9uIjpbe2JnOlsuLi5aKCksR0VdfV0sImJnLXJlcGVhdCI6W3tiZzpbIm5vLXJlcGVhdCIse3JlcGVhdDpbIiIsIngiLCJ5Iiwicm91bmQiLCJzcGFjZSJdfV19XSwiYmctc2l6ZSI6W3tiZzpbImF1dG8iLCJjb3ZlciIsImNvbnRhaW4iLHFFXX1dLCJiZy1pbWFnZSI6W3tiZzpbIm5vbmUiLHsiZ3JhZGllbnQtdG8iOlsidCIsInRyIiwiciIsImJyIiwiYiIsImJsIiwibCIsInRsIl19LFpFXX1dLCJiZy1jb2xvciI6W3tiZzpbZV19XSwiZ3JhZGllbnQtZnJvbS1wb3MiOlt7ZnJvbTpbdl19XSwiZ3JhZGllbnQtdmlhLXBvcyI6W3t2aWE6W3ZdfV0sImdyYWRpZW50LXRvLXBvcyI6W3t0bzpbdl19XSwiZ3JhZGllbnQtZnJvbSI6W3tmcm9tOlt4XX1dLCJncmFkaWVudC12aWEiOlt7dmlhOlt4XX1dLCJncmFkaWVudC10byI6W3t0bzpbeF19XSxyb3VuZGVkOlt7cm91bmRlZDpbYV19XSwicm91bmRlZC1zIjpbeyJyb3VuZGVkLXMiOlthXX1dLCJyb3VuZGVkLWUiOlt7InJvdW5kZWQtZSI6W2FdfV0sInJvdW5kZWQtdCI6W3sicm91bmRlZC10IjpbYV19XSwicm91bmRlZC1yIjpbeyJyb3VuZGVkLXIiOlthXX1dLCJyb3VuZGVkLWIiOlt7InJvdW5kZWQtYiI6W2FdfV0sInJvdW5kZWQtbCI6W3sicm91bmRlZC1sIjpbYV19XSwicm91bmRlZC1zcyI6W3sicm91bmRlZC1zcyI6W2FdfV0sInJvdW5kZWQtc2UiOlt7InJvdW5kZWQtc2UiOlthXX1dLCJyb3VuZGVkLWVlIjpbeyJyb3VuZGVkLWVlIjpbYV19XSwicm91bmRlZC1lcyI6W3sicm91bmRlZC1lcyI6W2FdfV0sInJvdW5kZWQtdGwiOlt7InJvdW5kZWQtdGwiOlthXX1dLCJyb3VuZGVkLXRyIjpbeyJyb3VuZGVkLXRyIjpbYV19XSwicm91bmRlZC1iciI6W3sicm91bmRlZC1iciI6W2FdfV0sInJvdW5kZWQtYmwiOlt7InJvdW5kZWQtYmwiOlthXX1dLCJib3JkZXItdyI6W3tib3JkZXI6W2xdfV0sImJvcmRlci13LXgiOlt7ImJvcmRlci14IjpbbF19XSwiYm9yZGVyLXcteSI6W3siYm9yZGVyLXkiOltsXX1dLCJib3JkZXItdy1zIjpbeyJib3JkZXItcyI6W2xdfV0sImJvcmRlci13LWUiOlt7ImJvcmRlci1lIjpbbF19XSwiYm9yZGVyLXctdCI6W3siYm9yZGVyLXQiOltsXX1dLCJib3JkZXItdy1yIjpbeyJib3JkZXItciI6W2xdfV0sImJvcmRlci13LWIiOlt7ImJvcmRlci1iIjpbbF19XSwiYm9yZGVyLXctbCI6W3siYm9yZGVyLWwiOltsXX1dLCJib3JkZXItb3BhY2l0eSI6W3siYm9yZGVyLW9wYWNpdHkiOltoXX1dLCJib3JkZXItc3R5bGUiOlt7Ym9yZGVyOlsuLi5RKCksImhpZGRlbiJdfV0sImRpdmlkZS14IjpbeyJkaXZpZGUteCI6W2xdfV0sImRpdmlkZS14LXJldmVyc2UiOlsiZGl2aWRlLXgtcmV2ZXJzZSJdLCJkaXZpZGUteSI6W3siZGl2aWRlLXkiOltsXX1dLCJkaXZpZGUteS1yZXZlcnNlIjpbImRpdmlkZS15LXJldmVyc2UiXSwiZGl2aWRlLW9wYWNpdHkiOlt7ImRpdmlkZS1vcGFjaXR5IjpbaF19XSwiZGl2aWRlLXN0eWxlIjpbe2RpdmlkZTpRKCl9XSwiYm9yZGVyLWNvbG9yIjpbe2JvcmRlcjpbc119XSwiYm9yZGVyLWNvbG9yLXgiOlt7ImJvcmRlci14Ijpbc119XSwiYm9yZGVyLWNvbG9yLXkiOlt7ImJvcmRlci15Ijpbc119XSwiYm9yZGVyLWNvbG9yLXMiOlt7ImJvcmRlci1zIjpbc119XSwiYm9yZGVyLWNvbG9yLWUiOlt7ImJvcmRlci1lIjpbc119XSwiYm9yZGVyLWNvbG9yLXQiOlt7ImJvcmRlci10Ijpbc119XSwiYm9yZGVyLWNvbG9yLXIiOlt7ImJvcmRlci1yIjpbc119XSwiYm9yZGVyLWNvbG9yLWIiOlt7ImJvcmRlci1iIjpbc119XSwiYm9yZGVyLWNvbG9yLWwiOlt7ImJvcmRlci1sIjpbc119XSwiZGl2aWRlLWNvbG9yIjpbe2RpdmlkZTpbc119XSwib3V0bGluZS1zdHlsZSI6W3tvdXRsaW5lOlsiIiwuLi5RKCldfV0sIm91dGxpbmUtb2Zmc2V0IjpbeyJvdXRsaW5lLW9mZnNldCI6W2duLHhlXX1dLCJvdXRsaW5lLXciOlt7b3V0bGluZTpbZ24sQm5dfV0sIm91dGxpbmUtY29sb3IiOlt7b3V0bGluZTpbZV19XSwicmluZy13Ijpbe3Jpbmc6VigpfV0sInJpbmctdy1pbnNldCI6WyJyaW5nLWluc2V0Il0sInJpbmctY29sb3IiOlt7cmluZzpbZV19XSwicmluZy1vcGFjaXR5IjpbeyJyaW5nLW9wYWNpdHkiOltoXX1dLCJyaW5nLW9mZnNldC13IjpbeyJyaW5nLW9mZnNldCI6W2duLEJuXX1dLCJyaW5nLW9mZnNldC1jb2xvciI6W3sicmluZy1vZmZzZXQiOltlXX1dLHNoYWRvdzpbe3NoYWRvdzpbIiIsImlubmVyIiwibm9uZSIsSG4sS0VdfV0sInNoYWRvdy1jb2xvciI6W3tzaGFkb3c6W1ZhXX1dLG9wYWNpdHk6W3tvcGFjaXR5OltoXX1dLCJtaXgtYmxlbmQiOlt7Im1peC1ibGVuZCI6Wy4uLkEoKSwicGx1cy1saWdodGVyIiwicGx1cy1kYXJrZXIiXX1dLCJiZy1ibGVuZCI6W3siYmctYmxlbmQiOkEoKX1dLGZpbHRlcjpbe2ZpbHRlcjpbIiIsIm5vbmUiXX1dLGJsdXI6W3tibHVyOltyXX1dLGJyaWdodG5lc3M6W3ticmlnaHRuZXNzOltuXX1dLGNvbnRyYXN0Olt7Y29udHJhc3Q6W2NdfV0sImRyb3Atc2hhZG93IjpbeyJkcm9wLXNoYWRvdyI6WyIiLCJub25lIixIbix4ZV19XSxncmF5c2NhbGU6W3tncmF5c2NhbGU6W3VdfV0sImh1ZS1yb3RhdGUiOlt7Imh1ZS1yb3RhdGUiOltkXX1dLGludmVydDpbe2ludmVydDpbZl19XSxzYXR1cmF0ZTpbe3NhdHVyYXRlOltiXX1dLHNlcGlhOlt7c2VwaWE6W1NdfV0sImJhY2tkcm9wLWZpbHRlciI6W3siYmFja2Ryb3AtZmlsdGVyIjpbIiIsIm5vbmUiXX1dLCJiYWNrZHJvcC1ibHVyIjpbeyJiYWNrZHJvcC1ibHVyIjpbcl19XSwiYmFja2Ryb3AtYnJpZ2h0bmVzcyI6W3siYmFja2Ryb3AtYnJpZ2h0bmVzcyI6W25dfV0sImJhY2tkcm9wLWNvbnRyYXN0IjpbeyJiYWNrZHJvcC1jb250cmFzdCI6W2NdfV0sImJhY2tkcm9wLWdyYXlzY2FsZSI6W3siYmFja2Ryb3AtZ3JheXNjYWxlIjpbdV19XSwiYmFja2Ryb3AtaHVlLXJvdGF0ZSI6W3siYmFja2Ryb3AtaHVlLXJvdGF0ZSI6W2RdfV0sImJhY2tkcm9wLWludmVydCI6W3siYmFja2Ryb3AtaW52ZXJ0IjpbZl19XSwiYmFja2Ryb3Atb3BhY2l0eSI6W3siYmFja2Ryb3Atb3BhY2l0eSI6W2hdfV0sImJhY2tkcm9wLXNhdHVyYXRlIjpbeyJiYWNrZHJvcC1zYXR1cmF0ZSI6W2JdfV0sImJhY2tkcm9wLXNlcGlhIjpbeyJiYWNrZHJvcC1zZXBpYSI6W1NdfV0sImJvcmRlci1jb2xsYXBzZSI6W3tib3JkZXI6WyJjb2xsYXBzZSIsInNlcGFyYXRlIl19XSwiYm9yZGVyLXNwYWNpbmciOlt7ImJvcmRlci1zcGFjaW5nIjpbb119XSwiYm9yZGVyLXNwYWNpbmcteCI6W3siYm9yZGVyLXNwYWNpbmcteCI6W29dfV0sImJvcmRlci1zcGFjaW5nLXkiOlt7ImJvcmRlci1zcGFjaW5nLXkiOltvXX1dLCJ0YWJsZS1sYXlvdXQiOlt7dGFibGU6WyJhdXRvIiwiZml4ZWQiXX1dLGNhcHRpb246W3tjYXB0aW9uOlsidG9wIiwiYm90dG9tIl19XSx0cmFuc2l0aW9uOlt7dHJhbnNpdGlvbjpbIm5vbmUiLCJhbGwiLCIiLCJjb2xvcnMiLCJvcGFjaXR5Iiwic2hhZG93IiwidHJhbnNmb3JtIix4ZV19XSxkdXJhdGlvbjpbe2R1cmF0aW9uOlIoKX1dLGVhc2U6W3tlYXNlOlsibGluZWFyIiwiaW4iLCJvdXQiLCJpbi1vdXQiLHhlXX1dLGRlbGF5Olt7ZGVsYXk6UigpfV0sYW5pbWF0ZTpbe2FuaW1hdGU6WyJub25lIiwic3BpbiIsInBpbmciLCJwdWxzZSIsImJvdW5jZSIseGVdfV0sdHJhbnNmb3JtOlt7dHJhbnNmb3JtOlsiIiwiZ3B1Iiwibm9uZSJdfV0sc2NhbGU6W3tzY2FsZTpbTl19XSwic2NhbGUteCI6W3sic2NhbGUteCI6W05dfV0sInNjYWxlLXkiOlt7InNjYWxlLXkiOltOXX1dLHJvdGF0ZTpbe3JvdGF0ZTpbemEseGVdfV0sInRyYW5zbGF0ZS14IjpbeyJ0cmFuc2xhdGUteCI6W1RdfV0sInRyYW5zbGF0ZS15IjpbeyJ0cmFuc2xhdGUteSI6W1RdfV0sInNrZXcteCI6W3sic2tldy14IjpbX119XSwic2tldy15IjpbeyJza2V3LXkiOltfXX1dLCJ0cmFuc2Zvcm0tb3JpZ2luIjpbe29yaWdpbjpbImNlbnRlciIsInRvcCIsInRvcC1yaWdodCIsInJpZ2h0IiwiYm90dG9tLXJpZ2h0IiwiYm90dG9tIiwiYm90dG9tLWxlZnQiLCJsZWZ0IiwidG9wLWxlZnQiLHhlXX1dLGFjY2VudDpbe2FjY2VudDpbImF1dG8iLGVdfV0sYXBwZWFyYW5jZTpbe2FwcGVhcmFuY2U6WyJub25lIiwiYXV0byJdfV0sY3Vyc29yOlt7Y3Vyc29yOlsiYXV0byIsImRlZmF1bHQiLCJwb2ludGVyIiwid2FpdCIsInRleHQiLCJtb3ZlIiwiaGVscCIsIm5vdC1hbGxvd2VkIiwibm9uZSIsImNvbnRleHQtbWVudSIsInByb2dyZXNzIiwiY2VsbCIsImNyb3NzaGFpciIsInZlcnRpY2FsLXRleHQiLCJhbGlhcyIsImNvcHkiLCJuby1kcm9wIiwiZ3JhYiIsImdyYWJiaW5nIiwiYWxsLXNjcm9sbCIsImNvbC1yZXNpemUiLCJyb3ctcmVzaXplIiwibi1yZXNpemUiLCJlLXJlc2l6ZSIsInMtcmVzaXplIiwidy1yZXNpemUiLCJuZS1yZXNpemUiLCJudy1yZXNpemUiLCJzZS1yZXNpemUiLCJzdy1yZXNpemUiLCJldy1yZXNpemUiLCJucy1yZXNpemUiLCJuZXN3LXJlc2l6ZSIsIm53c2UtcmVzaXplIiwiem9vbS1pbiIsInpvb20tb3V0Iix4ZV19XSwiY2FyZXQtY29sb3IiOlt7Y2FyZXQ6W2VdfV0sInBvaW50ZXItZXZlbnRzIjpbeyJwb2ludGVyLWV2ZW50cyI6WyJub25lIiwiYXV0byJdfV0scmVzaXplOlt7cmVzaXplOlsibm9uZSIsInkiLCJ4IiwiIl19XSwic2Nyb2xsLWJlaGF2aW9yIjpbe3Njcm9sbDpbImF1dG8iLCJzbW9vdGgiXX1dLCJzY3JvbGwtbSI6W3sic2Nyb2xsLW0iOkkoKX1dLCJzY3JvbGwtbXgiOlt7InNjcm9sbC1teCI6SSgpfV0sInNjcm9sbC1teSI6W3sic2Nyb2xsLW15IjpJKCl9XSwic2Nyb2xsLW1zIjpbeyJzY3JvbGwtbXMiOkkoKX1dLCJzY3JvbGwtbWUiOlt7InNjcm9sbC1tZSI6SSgpfV0sInNjcm9sbC1tdCI6W3sic2Nyb2xsLW10IjpJKCl9XSwic2Nyb2xsLW1yIjpbeyJzY3JvbGwtbXIiOkkoKX1dLCJzY3JvbGwtbWIiOlt7InNjcm9sbC1tYiI6SSgpfV0sInNjcm9sbC1tbCI6W3sic2Nyb2xsLW1sIjpJKCl9XSwic2Nyb2xsLXAiOlt7InNjcm9sbC1wIjpJKCl9XSwic2Nyb2xsLXB4IjpbeyJzY3JvbGwtcHgiOkkoKX1dLCJzY3JvbGwtcHkiOlt7InNjcm9sbC1weSI6SSgpfV0sInNjcm9sbC1wcyI6W3sic2Nyb2xsLXBzIjpJKCl9XSwic2Nyb2xsLXBlIjpbeyJzY3JvbGwtcGUiOkkoKX1dLCJzY3JvbGwtcHQiOlt7InNjcm9sbC1wdCI6SSgpfV0sInNjcm9sbC1wciI6W3sic2Nyb2xsLXByIjpJKCl9XSwic2Nyb2xsLXBiIjpbeyJzY3JvbGwtcGIiOkkoKX1dLCJzY3JvbGwtcGwiOlt7InNjcm9sbC1wbCI6SSgpfV0sInNuYXAtYWxpZ24iOlt7c25hcDpbInN0YXJ0IiwiZW5kIiwiY2VudGVyIiwiYWxpZ24tbm9uZSJdfV0sInNuYXAtc3RvcCI6W3tzbmFwOlsibm9ybWFsIiwiYWx3YXlzIl19XSwic25hcC10eXBlIjpbe3NuYXA6WyJub25lIiwieCIsInkiLCJib3RoIl19XSwic25hcC1zdHJpY3RuZXNzIjpbe3NuYXA6WyJtYW5kYXRvcnkiLCJwcm94aW1pdHkiXX1dLHRvdWNoOlt7dG91Y2g6WyJhdXRvIiwibm9uZSIsIm1hbmlwdWxhdGlvbiJdfV0sInRvdWNoLXgiOlt7InRvdWNoLXBhbiI6WyJ4IiwibGVmdCIsInJpZ2h0Il19XSwidG91Y2gteSI6W3sidG91Y2gtcGFuIjpbInkiLCJ1cCIsImRvd24iXX1dLCJ0b3VjaC1weiI6WyJ0b3VjaC1waW5jaC16b29tIl0sc2VsZWN0Olt7c2VsZWN0Olsibm9uZSIsInRleHQiLCJhbGwiLCJhdXRvIl19XSwid2lsbC1jaGFuZ2UiOlt7IndpbGwtY2hhbmdlIjpbImF1dG8iLCJzY3JvbGwiLCJjb250ZW50cyIsInRyYW5zZm9ybSIseGVdfV0sZmlsbDpbe2ZpbGw6W2UsIm5vbmUiXX1dLCJzdHJva2UtdyI6W3tzdHJva2U6W2duLEJuLGRkXX1dLHN0cm9rZTpbe3N0cm9rZTpbZSwibm9uZSJdfV0sc3I6WyJzci1vbmx5Iiwibm90LXNyLW9ubHkiXSwiZm9yY2VkLWNvbG9yLWFkanVzdCI6W3siZm9yY2VkLWNvbG9yLWFkanVzdCI6WyJhdXRvIiwibm9uZSJdfV19LGNvbmZsaWN0aW5nQ2xhc3NHcm91cHM6e292ZXJmbG93Olsib3ZlcmZsb3cteCIsIm92ZXJmbG93LXkiXSxvdmVyc2Nyb2xsOlsib3ZlcnNjcm9sbC14Iiwib3ZlcnNjcm9sbC15Il0saW5zZXQ6WyJpbnNldC14IiwiaW5zZXQteSIsInN0YXJ0IiwiZW5kIiwidG9wIiwicmlnaHQiLCJib3R0b20iLCJsZWZ0Il0sImluc2V0LXgiOlsicmlnaHQiLCJsZWZ0Il0sImluc2V0LXkiOlsidG9wIiwiYm90dG9tIl0sZmxleDpbImJhc2lzIiwiZ3JvdyIsInNocmluayJdLGdhcDpbImdhcC14IiwiZ2FwLXkiXSxwOlsicHgiLCJweSIsInBzIiwicGUiLCJwdCIsInByIiwicGIiLCJwbCJdLHB4OlsicHIiLCJwbCJdLHB5OlsicHQiLCJwYiJdLG06WyJteCIsIm15IiwibXMiLCJtZSIsIm10IiwibXIiLCJtYiIsIm1sIl0sbXg6WyJtciIsIm1sIl0sbXk6WyJtdCIsIm1iIl0sc2l6ZTpbInciLCJoIl0sImZvbnQtc2l6ZSI6WyJsZWFkaW5nIl0sImZ2bi1ub3JtYWwiOlsiZnZuLW9yZGluYWwiLCJmdm4tc2xhc2hlZC16ZXJvIiwiZnZuLWZpZ3VyZSIsImZ2bi1zcGFjaW5nIiwiZnZuLWZyYWN0aW9uIl0sImZ2bi1vcmRpbmFsIjpbImZ2bi1ub3JtYWwiXSwiZnZuLXNsYXNoZWQtemVybyI6WyJmdm4tbm9ybWFsIl0sImZ2bi1maWd1cmUiOlsiZnZuLW5vcm1hbCJdLCJmdm4tc3BhY2luZyI6WyJmdm4tbm9ybWFsIl0sImZ2bi1mcmFjdGlvbiI6WyJmdm4tbm9ybWFsIl0sImxpbmUtY2xhbXAiOlsiZGlzcGxheSIsIm92ZXJmbG93Il0scm91bmRlZDpbInJvdW5kZWQtcyIsInJvdW5kZWQtZSIsInJvdW5kZWQtdCIsInJvdW5kZWQtciIsInJvdW5kZWQtYiIsInJvdW5kZWQtbCIsInJvdW5kZWQtc3MiLCJyb3VuZGVkLXNlIiwicm91bmRlZC1lZSIsInJvdW5kZWQtZXMiLCJyb3VuZGVkLXRsIiwicm91bmRlZC10ciIsInJvdW5kZWQtYnIiLCJyb3VuZGVkLWJsIl0sInJvdW5kZWQtcyI6WyJyb3VuZGVkLXNzIiwicm91bmRlZC1lcyJdLCJyb3VuZGVkLWUiOlsicm91bmRlZC1zZSIsInJvdW5kZWQtZWUiXSwicm91bmRlZC10IjpbInJvdW5kZWQtdGwiLCJyb3VuZGVkLXRyIl0sInJvdW5kZWQtciI6WyJyb3VuZGVkLXRyIiwicm91bmRlZC1iciJdLCJyb3VuZGVkLWIiOlsicm91bmRlZC1iciIsInJvdW5kZWQtYmwiXSwicm91bmRlZC1sIjpbInJvdW5kZWQtdGwiLCJyb3VuZGVkLWJsIl0sImJvcmRlci1zcGFjaW5nIjpbImJvcmRlci1zcGFjaW5nLXgiLCJib3JkZXItc3BhY2luZy15Il0sImJvcmRlci13IjpbImJvcmRlci13LXMiLCJib3JkZXItdy1lIiwiYm9yZGVyLXctdCIsImJvcmRlci13LXIiLCJib3JkZXItdy1iIiwiYm9yZGVyLXctbCJdLCJib3JkZXItdy14IjpbImJvcmRlci13LXIiLCJib3JkZXItdy1sIl0sImJvcmRlci13LXkiOlsiYm9yZGVyLXctdCIsImJvcmRlci13LWIiXSwiYm9yZGVyLWNvbG9yIjpbImJvcmRlci1jb2xvci1zIiwiYm9yZGVyLWNvbG9yLWUiLCJib3JkZXItY29sb3ItdCIsImJvcmRlci1jb2xvci1yIiwiYm9yZGVyLWNvbG9yLWIiLCJib3JkZXItY29sb3ItbCJdLCJib3JkZXItY29sb3IteCI6WyJib3JkZXItY29sb3ItciIsImJvcmRlci1jb2xvci1sIl0sImJvcmRlci1jb2xvci15IjpbImJvcmRlci1jb2xvci10IiwiYm9yZGVyLWNvbG9yLWIiXSwic2Nyb2xsLW0iOlsic2Nyb2xsLW14Iiwic2Nyb2xsLW15Iiwic2Nyb2xsLW1zIiwic2Nyb2xsLW1lIiwic2Nyb2xsLW10Iiwic2Nyb2xsLW1yIiwic2Nyb2xsLW1iIiwic2Nyb2xsLW1sIl0sInNjcm9sbC1teCI6WyJzY3JvbGwtbXIiLCJzY3JvbGwtbWwiXSwic2Nyb2xsLW15IjpbInNjcm9sbC1tdCIsInNjcm9sbC1tYiJdLCJzY3JvbGwtcCI6WyJzY3JvbGwtcHgiLCJzY3JvbGwtcHkiLCJzY3JvbGwtcHMiLCJzY3JvbGwtcGUiLCJzY3JvbGwtcHQiLCJzY3JvbGwtcHIiLCJzY3JvbGwtcGIiLCJzY3JvbGwtcGwiXSwic2Nyb2xsLXB4IjpbInNjcm9sbC1wciIsInNjcm9sbC1wbCJdLCJzY3JvbGwtcHkiOlsic2Nyb2xsLXB0Iiwic2Nyb2xsLXBiIl0sdG91Y2g6WyJ0b3VjaC14IiwidG91Y2gteSIsInRvdWNoLXB6Il0sInRvdWNoLXgiOlsidG91Y2giXSwidG91Y2gteSI6WyJ0b3VjaCJdLCJ0b3VjaC1weiI6WyJ0b3VjaCJdfSxjb25mbGljdGluZ0NsYXNzR3JvdXBNb2RpZmllcnM6eyJmb250LXNpemUiOlsibGVhZGluZyJdfX19LHQyPUlFKGUyKTtmdW5jdGlvbiBOZSguLi5lKXtyZXR1cm4gdDIoTDAoZSkpfWNvbnN0IHIyPXRFLEowPXkuZm9yd2FyZFJlZigoe2NsYXNzTmFtZTplLC4uLnR9LHIpPT5pLmpzeChUMCx7cmVmOnIsY2xhc3NOYW1lOk5lKCJmaXhlZCB0b3AtMCB6LVsxMDBdIGZsZXggbWF4LWgtc2NyZWVuIHctZnVsbCBmbGV4LWNvbC1yZXZlcnNlIHAtNCBzbTpib3R0b20tMCBzbTpyaWdodC0wIHNtOnRvcC1hdXRvIHNtOmZsZXgtY29sIG1kOm1heC13LVs0MjBweF0iLGUpLC4uLnR9KSk7SjAuZGlzcGxheU5hbWU9VDAuZGlzcGxheU5hbWU7Y29uc3QgbjI9Z3UoImdyb3VwIHBvaW50ZXItZXZlbnRzLWF1dG8gcmVsYXRpdmUgZmxleCB3LWZ1bGwgaXRlbXMtY2VudGVyIGp1c3RpZnktYmV0d2VlbiBzcGFjZS14LTQgb3ZlcmZsb3ctaGlkZGVuIHJvdW5kZWQtbWQgYm9yZGVyIHAtNiBwci04IHNoYWRvdy1sZyB0cmFuc2l0aW9uLWFsbCBkYXRhLVtzd2lwZT1jYW5jZWxdOnRyYW5zbGF0ZS14LTAgZGF0YS1bc3dpcGU9ZW5kXTp0cmFuc2xhdGUteC1bdmFyKC0tcmFkaXgtdG9hc3Qtc3dpcGUtZW5kLXgpXSBkYXRhLVtzd2lwZT1tb3ZlXTp0cmFuc2xhdGUteC1bdmFyKC0tcmFkaXgtdG9hc3Qtc3dpcGUtbW92ZS14KV0gZGF0YS1bc3dpcGU9bW92ZV06dHJhbnNpdGlvbi1ub25lIGRhdGEtW3N0YXRlPW9wZW5dOmFuaW1hdGUtaW4gZGF0YS1bc3RhdGU9Y2xvc2VkXTphbmltYXRlLW91dCBkYXRhLVtzd2lwZT1lbmRdOmFuaW1hdGUtb3V0IGRhdGEtW3N0YXRlPWNsb3NlZF06ZmFkZS1vdXQtODAgZGF0YS1bc3RhdGU9Y2xvc2VkXTpzbGlkZS1vdXQtdG8tcmlnaHQtZnVsbCBkYXRhLVtzdGF0ZT1vcGVuXTpzbGlkZS1pbi1mcm9tLXRvcC1mdWxsIGRhdGEtW3N0YXRlPW9wZW5dOnNtOnNsaWRlLWluLWZyb20tYm90dG9tLWZ1bGwiLHt2YXJpYW50czp7dmFyaWFudDp7ZGVmYXVsdDoiYm9yZGVyIGJnLWJhY2tncm91bmQgdGV4dC1mb3JlZ3JvdW5kIixkZXN0cnVjdGl2ZToiZGVzdHJ1Y3RpdmUgZ3JvdXAgYm9yZGVyLWRlc3RydWN0aXZlIGJnLWRlc3RydWN0aXZlIHRleHQtZGVzdHJ1Y3RpdmUtZm9yZWdyb3VuZCJ9fSxkZWZhdWx0VmFyaWFudHM6e3ZhcmlhbnQ6ImRlZmF1bHQifX0pLGV3PXkuZm9yd2FyZFJlZigoe2NsYXNzTmFtZTplLHZhcmlhbnQ6dCwuLi5yfSxuKT0+aS5qc3goUjAse3JlZjpuLGNsYXNzTmFtZTpOZShuMih7dmFyaWFudDp0fSksZSksLi4ucn0pKTtldy5kaXNwbGF5TmFtZT1SMC5kaXNwbGF5TmFtZTtjb25zdCBzMj15LmZvcndhcmRSZWYoKHtjbGFzc05hbWU6ZSwuLi50fSxyKT0+aS5qc3goTzAse3JlZjpyLGNsYXNzTmFtZTpOZSgiaW5saW5lLWZsZXggaC04IHNocmluay0wIGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWNlbnRlciByb3VuZGVkLW1kIGJvcmRlciBiZy10cmFuc3BhcmVudCBweC0zIHRleHQtc20gZm9udC1tZWRpdW0gcmluZy1vZmZzZXQtYmFja2dyb3VuZCB0cmFuc2l0aW9uLWNvbG9ycyBob3ZlcjpiZy1zZWNvbmRhcnkgZm9jdXM6b3V0bGluZS1ub25lIGZvY3VzOnJpbmctMiBmb2N1czpyaW5nLXJpbmcgZm9jdXM6cmluZy1vZmZzZXQtMiBkaXNhYmxlZDpwb2ludGVyLWV2ZW50cy1ub25lIGRpc2FibGVkOm9wYWNpdHktNTAgZ3JvdXAtWy5kZXN0cnVjdGl2ZV06Ym9yZGVyLW11dGVkLzQwIGdyb3VwLVsuZGVzdHJ1Y3RpdmVdOmhvdmVyOmJvcmRlci1kZXN0cnVjdGl2ZS8zMCBncm91cC1bLmRlc3RydWN0aXZlXTpob3ZlcjpiZy1kZXN0cnVjdGl2ZSBncm91cC1bLmRlc3RydWN0aXZlXTpob3Zlcjp0ZXh0LWRlc3RydWN0aXZlLWZvcmVncm91bmQgZ3JvdXAtWy5kZXN0cnVjdGl2ZV06Zm9jdXM6cmluZy1kZXN0cnVjdGl2ZSIsZSksLi4udH0pKTtzMi5kaXNwbGF5TmFtZT1PMC5kaXNwbGF5TmFtZTtjb25zdCB0dz15LmZvcndhcmRSZWYoKHtjbGFzc05hbWU6ZSwuLi50fSxyKT0+aS5qc3goRjAse3JlZjpyLGNsYXNzTmFtZTpOZSgiYWJzb2x1dGUgcmlnaHQtMiB0b3AtMiByb3VuZGVkLW1kIHAtMSB0ZXh0LWZvcmVncm91bmQvNTAgb3BhY2l0eS0wIHRyYW5zaXRpb24tb3BhY2l0eSBob3Zlcjp0ZXh0LWZvcmVncm91bmQgZm9jdXM6b3BhY2l0eS0xMDAgZm9jdXM6b3V0bGluZS1ub25lIGZvY3VzOnJpbmctMiBncm91cC1ob3ZlcjpvcGFjaXR5LTEwMCBncm91cC1bLmRlc3RydWN0aXZlXTp0ZXh0LXJlZC0zMDAgZ3JvdXAtWy5kZXN0cnVjdGl2ZV06aG92ZXI6dGV4dC1yZWQtNTAgZ3JvdXAtWy5kZXN0cnVjdGl2ZV06Zm9jdXM6cmluZy1yZWQtNDAwIGdyb3VwLVsuZGVzdHJ1Y3RpdmVdOmZvY3VzOnJpbmctb2Zmc2V0LXJlZC02MDAiLGUpLCJ0b2FzdC1jbG9zZSI6IiIsLi4udCxjaGlsZHJlbjppLmpzeChnaCx7Y2xhc3NOYW1lOiJoLTQgdy00In0pfSkpO3R3LmRpc3BsYXlOYW1lPUYwLmRpc3BsYXlOYW1lO2NvbnN0IHJ3PXkuZm9yd2FyZFJlZigoe2NsYXNzTmFtZTplLC4uLnR9LHIpPT5pLmpzeChBMCx7cmVmOnIsY2xhc3NOYW1lOk5lKCJ0ZXh0LXNtIGZvbnQtc2VtaWJvbGQiLGUpLC4uLnR9KSk7cncuZGlzcGxheU5hbWU9QTAuZGlzcGxheU5hbWU7Y29uc3Qgbnc9eS5mb3J3YXJkUmVmKCh7Y2xhc3NOYW1lOmUsLi4udH0scik9PmkuanN4KE0wLHtyZWY6cixjbGFzc05hbWU6TmUoInRleHQtc20gb3BhY2l0eS05MCIsZSksLi4udH0pKTtudy5kaXNwbGF5TmFtZT1NMC5kaXNwbGF5TmFtZTtmdW5jdGlvbiBpMigpe2NvbnN0e3RvYXN0czplfT1obigpO3JldHVybiBpLmpzeHMocjIse2NoaWxkcmVuOltlLm1hcChmdW5jdGlvbih7aWQ6dCx0aXRsZTpyLGRlc2NyaXB0aW9uOm4sYWN0aW9uOnMsLi4uYX0pe3JldHVybiBpLmpzeHMoZXcsey4uLmEsY2hpbGRyZW46W2kuanN4cygiZGl2Iix7Y2xhc3NOYW1lOiJncmlkIGdhcC0xIixjaGlsZHJlbjpbciYmaS5qc3gocncse2NoaWxkcmVuOnJ9KSxuJiZpLmpzeChudyx7Y2hpbGRyZW46bn0pXX0pLHMsaS5qc3godHcse30pXX0sdCl9KSxpLmpzeChKMCx7fSldfSl9dmFyIGEyPU14WyIgdXNlSWQgIi50cmltKCkudG9TdHJpbmcoKV18fCgoKT0+e30pLG8yPTA7ZnVuY3Rpb24gdmgoZSl7Y29uc3RbdCxyXT15LnVzZVN0YXRlKGEyKCkpO3JldHVybiBEdCgoKT0+e3Iobj0+bj8/U3RyaW5nKG8yKyspKX0sW2VdKSx0P2ByYWRpeC0ke3R9YDoiIn1jb25zdCBsMj1bInRvcCIsInJpZ2h0IiwiYm90dG9tIiwibGVmdCJdLGpzPU1hdGgubWluLGNyPU1hdGgubWF4LEFjPU1hdGgucm91bmQsUmw9TWF0aC5mbG9vcixjbj1lPT4oe3g6ZSx5OmV9KSxjMj17bGVmdDoicmlnaHQiLHJpZ2h0OiJsZWZ0Iixib3R0b206InRvcCIsdG9wOiJib3R0b20ifSx1Mj17c3RhcnQ6ImVuZCIsZW5kOiJzdGFydCJ9O2Z1bmN0aW9uIEdmKGUsdCxyKXtyZXR1cm4gY3IoZSxqcyh0LHIpKX1mdW5jdGlvbiBJbihlLHQpe3JldHVybiB0eXBlb2YgZT09ImZ1bmN0aW9uIj9lKHQpOmV9ZnVuY3Rpb24gTG4oZSl7cmV0dXJuIGUuc3BsaXQoIi0iKVswXX1mdW5jdGlvbiBQYShlKXtyZXR1cm4gZS5zcGxpdCgiLSIpWzFdfWZ1bmN0aW9uIHloKGUpe3JldHVybiBlPT09IngiPyJ5IjoieCJ9ZnVuY3Rpb24gd2goZSl7cmV0dXJuIGU9PT0ieSI/ImhlaWdodCI6IndpZHRoIn1mdW5jdGlvbiBOcyhlKXtyZXR1cm5bInRvcCIsImJvdHRvbSJdLmluY2x1ZGVzKExuKGUpKT8ieSI6IngifWZ1bmN0aW9uIGJoKGUpe3JldHVybiB5aChOcyhlKSl9ZnVuY3Rpb24gZDIoZSx0LHIpe3I9PT12b2lkIDAmJihyPSExKTtjb25zdCBuPVBhKGUpLHM9YmgoZSksYT13aChzKTtsZXQgbz1zPT09IngiP249PT0ocj8iZW5kIjoic3RhcnQiKT8icmlnaHQiOiJsZWZ0IjpuPT09InN0YXJ0Ij8iYm90dG9tIjoidG9wIjtyZXR1cm4gdC5yZWZlcmVuY2VbYV0+dC5mbG9hdGluZ1thXSYmKG89TWMobykpLFtvLE1jKG8pXX1mdW5jdGlvbiBmMihlKXtjb25zdCB0PU1jKGUpO3JldHVybltRZihlKSx0LFFmKHQpXX1mdW5jdGlvbiBRZihlKXtyZXR1cm4gZS5yZXBsYWNlKC9zdGFydHxlbmQvZyx0PT51Mlt0XSl9ZnVuY3Rpb24gbTIoZSx0LHIpe2NvbnN0IG49WyJsZWZ0IiwicmlnaHQiXSxzPVsicmlnaHQiLCJsZWZ0Il0sYT1bInRvcCIsImJvdHRvbSJdLG89WyJib3R0b20iLCJ0b3AiXTtzd2l0Y2goZSl7Y2FzZSJ0b3AiOmNhc2UiYm90dG9tIjpyZXR1cm4gcj90P3M6bjp0P246cztjYXNlImxlZnQiOmNhc2UicmlnaHQiOnJldHVybiB0P2E6bztkZWZhdWx0OnJldHVybltdfX1mdW5jdGlvbiBoMihlLHQscixuKXtjb25zdCBzPVBhKGUpO2xldCBhPW0yKExuKGUpLHI9PT0ic3RhcnQiLG4pO3JldHVybiBzJiYoYT1hLm1hcChvPT5vKyItIitzKSx0JiYoYT1hLmNvbmNhdChhLm1hcChRZikpKSksYX1mdW5jdGlvbiBNYyhlKXtyZXR1cm4gZS5yZXBsYWNlKC9sZWZ0fHJpZ2h0fGJvdHRvbXx0b3AvZyx0PT5jMlt0XSl9ZnVuY3Rpb24gcDIoZSl7cmV0dXJue3RvcDowLHJpZ2h0OjAsYm90dG9tOjAsbGVmdDowLC4uLmV9fWZ1bmN0aW9uIHN3KGUpe3JldHVybiB0eXBlb2YgZSE9Im51bWJlciI/cDIoZSk6e3RvcDplLHJpZ2h0OmUsYm90dG9tOmUsbGVmdDplfX1mdW5jdGlvbiBPYyhlKXtjb25zdHt4OnQseTpyLHdpZHRoOm4saGVpZ2h0OnN9PWU7cmV0dXJue3dpZHRoOm4saGVpZ2h0OnMsdG9wOnIsbGVmdDp0LHJpZ2h0OnQrbixib3R0b206citzLHg6dCx5OnJ9fWZ1bmN0aW9uIGtnKGUsdCxyKXtsZXR7cmVmZXJlbmNlOm4sZmxvYXRpbmc6c309ZTtjb25zdCBhPU5zKHQpLG89YmgodCksbD13aChvKSxjPUxuKHQpLHU9YT09PSJ5IixkPW4ueCtuLndpZHRoLzItcy53aWR0aC8yLGY9bi55K24uaGVpZ2h0LzItcy5oZWlnaHQvMixwPW5bbF0vMi1zW2xdLzI7bGV0IHg7c3dpdGNoKGMpe2Nhc2UidG9wIjp4PXt4OmQseTpuLnktcy5oZWlnaHR9O2JyZWFrO2Nhc2UiYm90dG9tIjp4PXt4OmQseTpuLnkrbi5oZWlnaHR9O2JyZWFrO2Nhc2UicmlnaHQiOng9e3g6bi54K24ud2lkdGgseTpmfTticmVhaztjYXNlImxlZnQiOng9e3g6bi54LXMud2lkdGgseTpmfTticmVhaztkZWZhdWx0Ong9e3g6bi54LHk6bi55fX1zd2l0Y2goUGEodCkpe2Nhc2Uic3RhcnQiOnhbb10tPXAqKHImJnU/LTE6MSk7YnJlYWs7Y2FzZSJlbmQiOnhbb10rPXAqKHImJnU/LTE6MSk7YnJlYWt9cmV0dXJuIHh9Y29uc3QgZzI9YXN5bmMoZSx0LHIpPT57Y29uc3R7cGxhY2VtZW50Om49ImJvdHRvbSIsc3RyYXRlZ3k6cz0iYWJzb2x1dGUiLG1pZGRsZXdhcmU6YT1bXSxwbGF0Zm9ybTpvfT1yLGw9YS5maWx0ZXIoQm9vbGVhbiksYz1hd2FpdChvLmlzUlRMPT1udWxsP3ZvaWQgMDpvLmlzUlRMKHQpKTtsZXQgdT1hd2FpdCBvLmdldEVsZW1lbnRSZWN0cyh7cmVmZXJlbmNlOmUsZmxvYXRpbmc6dCxzdHJhdGVneTpzfSkse3g6ZCx5OmZ9PWtnKHUsbixjKSxwPW4seD17fSx2PTA7Zm9yKGxldCBtPTA7bTxsLmxlbmd0aDttKyspe2NvbnN0e25hbWU6dyxmbjpofT1sW21dLHt4OmcseTpiLGRhdGE6TixyZXNldDpTfT1hd2FpdCBoKHt4OmQseTpmLGluaXRpYWxQbGFjZW1lbnQ6bixwbGFjZW1lbnQ6cCxzdHJhdGVneTpzLG1pZGRsZXdhcmVEYXRhOngscmVjdHM6dSxwbGF0Zm9ybTpvLGVsZW1lbnRzOntyZWZlcmVuY2U6ZSxmbG9hdGluZzp0fX0pO2Q9Zz8/ZCxmPWI/P2YseD17Li4ueCxbd106ey4uLnhbd10sLi4uTn19LFMmJnY8PTUwJiYodisrLHR5cGVvZiBTPT0ib2JqZWN0IiYmKFMucGxhY2VtZW50JiYocD1TLnBsYWNlbWVudCksUy5yZWN0cyYmKHU9Uy5yZWN0cz09PSEwP2F3YWl0IG8uZ2V0RWxlbWVudFJlY3RzKHtyZWZlcmVuY2U6ZSxmbG9hdGluZzp0LHN0cmF0ZWd5OnN9KTpTLnJlY3RzKSx7eDpkLHk6Zn09a2codSxwLGMpKSxtPS0xKX1yZXR1cm57eDpkLHk6ZixwbGFjZW1lbnQ6cCxzdHJhdGVneTpzLG1pZGRsZXdhcmVEYXRhOnh9fTthc3luYyBmdW5jdGlvbiBSbyhlLHQpe3ZhciByO3Q9PT12b2lkIDAmJih0PXt9KTtjb25zdHt4Om4seTpzLHBsYXRmb3JtOmEscmVjdHM6byxlbGVtZW50czpsLHN0cmF0ZWd5OmN9PWUse2JvdW5kYXJ5OnU9ImNsaXBwaW5nQW5jZXN0b3JzIixyb290Qm91bmRhcnk6ZD0idmlld3BvcnQiLGVsZW1lbnRDb250ZXh0OmY9ImZsb2F0aW5nIixhbHRCb3VuZGFyeTpwPSExLHBhZGRpbmc6eD0wfT1Jbih0LGUpLHY9c3coeCksdz1sW3A/Zj09PSJmbG9hdGluZyI/InJlZmVyZW5jZSI6ImZsb2F0aW5nIjpmXSxoPU9jKGF3YWl0IGEuZ2V0Q2xpcHBpbmdSZWN0KHtlbGVtZW50OihyPWF3YWl0KGEuaXNFbGVtZW50PT1udWxsP3ZvaWQgMDphLmlzRWxlbWVudCh3KSkpPT1udWxsfHxyP3c6dy5jb250ZXh0RWxlbWVudHx8YXdhaXQoYS5nZXREb2N1bWVudEVsZW1lbnQ9PW51bGw/dm9pZCAwOmEuZ2V0RG9jdW1lbnRFbGVtZW50KGwuZmxvYXRpbmcpKSxib3VuZGFyeTp1LHJvb3RCb3VuZGFyeTpkLHN0cmF0ZWd5OmN9KSksZz1mPT09ImZsb2F0aW5nIj97eDpuLHk6cyx3aWR0aDpvLmZsb2F0aW5nLndpZHRoLGhlaWdodDpvLmZsb2F0aW5nLmhlaWdodH06by5yZWZlcmVuY2UsYj1hd2FpdChhLmdldE9mZnNldFBhcmVudD09bnVsbD92b2lkIDA6YS5nZXRPZmZzZXRQYXJlbnQobC5mbG9hdGluZykpLE49YXdhaXQoYS5pc0VsZW1lbnQ9PW51bGw/dm9pZCAwOmEuaXNFbGVtZW50KGIpKT9hd2FpdChhLmdldFNjYWxlPT1udWxsP3ZvaWQgMDphLmdldFNjYWxlKGIpKXx8e3g6MSx5OjF9Ont4OjEseToxfSxTPU9jKGEuY29udmVydE9mZnNldFBhcmVudFJlbGF0aXZlUmVjdFRvVmlld3BvcnRSZWxhdGl2ZVJlY3Q/YXdhaXQgYS5jb252ZXJ0T2Zmc2V0UGFyZW50UmVsYXRpdmVSZWN0VG9WaWV3cG9ydFJlbGF0aXZlUmVjdCh7ZWxlbWVudHM6bCxyZWN0Omcsb2Zmc2V0UGFyZW50OmIsc3RyYXRlZ3k6Y30pOmcpO3JldHVybnt0b3A6KGgudG9wLVMudG9wK3YudG9wKS9OLnksYm90dG9tOihTLmJvdHRvbS1oLmJvdHRvbSt2LmJvdHRvbSkvTi55LGxlZnQ6KGgubGVmdC1TLmxlZnQrdi5sZWZ0KS9OLngscmlnaHQ6KFMucmlnaHQtaC5yaWdodCt2LnJpZ2h0KS9OLnh9fWNvbnN0IHgyPWU9Pih7bmFtZToiYXJyb3ciLG9wdGlvbnM6ZSxhc3luYyBmbih0KXtjb25zdHt4OnIseTpuLHBsYWNlbWVudDpzLHJlY3RzOmEscGxhdGZvcm06byxlbGVtZW50czpsLG1pZGRsZXdhcmVEYXRhOmN9PXQse2VsZW1lbnQ6dSxwYWRkaW5nOmQ9MH09SW4oZSx0KXx8e307aWYodT09bnVsbClyZXR1cm57fTtjb25zdCBmPXN3KGQpLHA9e3g6cix5Om59LHg9Ymgocyksdj13aCh4KSxtPWF3YWl0IG8uZ2V0RGltZW5zaW9ucyh1KSx3PXg9PT0ieSIsaD13PyJ0b3AiOiJsZWZ0IixnPXc/ImJvdHRvbSI6InJpZ2h0IixiPXc/ImNsaWVudEhlaWdodCI6ImNsaWVudFdpZHRoIixOPWEucmVmZXJlbmNlW3ZdK2EucmVmZXJlbmNlW3hdLXBbeF0tYS5mbG9hdGluZ1t2XSxTPXBbeF0tYS5yZWZlcmVuY2VbeF0sXz1hd2FpdChvLmdldE9mZnNldFBhcmVudD09bnVsbD92b2lkIDA6by5nZXRPZmZzZXRQYXJlbnQodSkpO2xldCBrPV8/X1tiXTowOygha3x8IWF3YWl0KG8uaXNFbGVtZW50PT1udWxsP3ZvaWQgMDpvLmlzRWxlbWVudChfKSkpJiYoaz1sLmZsb2F0aW5nW2JdfHxhLmZsb2F0aW5nW3ZdKTtjb25zdCBUPU4vMi1TLzIsTD1rLzItbVt2XS8yLTEsUD1qcyhmW2hdLEwpLGo9anMoZltnXSxMKSxJPVAsVj1rLW1bdl0taixPPWsvMi1tW3ZdLzIrVCxaPUdmKEksTyxWKSxRPSFjLmFycm93JiZQYShzKSE9bnVsbCYmTyE9PVomJmEucmVmZXJlbmNlW3ZdLzItKE88ST9QOmopLW1bdl0vMjwwLEE9UT9PPEk/Ty1JOk8tVjowO3JldHVybntbeF06cFt4XStBLGRhdGE6e1t4XTpaLGNlbnRlck9mZnNldDpPLVotQSwuLi5RJiZ7YWxpZ25tZW50T2Zmc2V0OkF9fSxyZXNldDpRfX19KSx2Mj1mdW5jdGlvbihlKXtyZXR1cm4gZT09PXZvaWQgMCYmKGU9e30pLHtuYW1lOiJmbGlwIixvcHRpb25zOmUsYXN5bmMgZm4odCl7dmFyIHIsbjtjb25zdHtwbGFjZW1lbnQ6cyxtaWRkbGV3YXJlRGF0YTphLHJlY3RzOm8saW5pdGlhbFBsYWNlbWVudDpsLHBsYXRmb3JtOmMsZWxlbWVudHM6dX09dCx7bWFpbkF4aXM6ZD0hMCxjcm9zc0F4aXM6Zj0hMCxmYWxsYmFja1BsYWNlbWVudHM6cCxmYWxsYmFja1N0cmF0ZWd5Ong9ImJlc3RGaXQiLGZhbGxiYWNrQXhpc1NpZGVEaXJlY3Rpb246dj0ibm9uZSIsZmxpcEFsaWdubWVudDptPSEwLC4uLnd9PUluKGUsdCk7aWYoKHI9YS5hcnJvdykhPW51bGwmJnIuYWxpZ25tZW50T2Zmc2V0KXJldHVybnt9O2NvbnN0IGg9TG4ocyksZz1OcyhsKSxiPUxuKGwpPT09bCxOPWF3YWl0KGMuaXNSVEw9PW51bGw/dm9pZCAwOmMuaXNSVEwodS5mbG9hdGluZykpLFM9cHx8KGJ8fCFtP1tNYyhsKV06ZjIobCkpLF89diE9PSJub25lIjshcCYmXyYmUy5wdXNoKC4uLmgyKGwsbSx2LE4pKTtjb25zdCBrPVtsLC4uLlNdLFQ9YXdhaXQgUm8odCx3KSxMPVtdO2xldCBQPSgobj1hLmZsaXApPT1udWxsP3ZvaWQgMDpuLm92ZXJmbG93cyl8fFtdO2lmKGQmJkwucHVzaChUW2hdKSxmKXtjb25zdCBPPWQyKHMsbyxOKTtMLnB1c2goVFtPWzBdXSxUW09bMV1dKX1pZihQPVsuLi5QLHtwbGFjZW1lbnQ6cyxvdmVyZmxvd3M6TH1dLCFMLmV2ZXJ5KE89Pk88PTApKXt2YXIgaixJO2NvbnN0IE89KCgoaj1hLmZsaXApPT1udWxsP3ZvaWQgMDpqLmluZGV4KXx8MCkrMSxaPWtbT107aWYoWilyZXR1cm57ZGF0YTp7aW5kZXg6TyxvdmVyZmxvd3M6UH0scmVzZXQ6e3BsYWNlbWVudDpafX07bGV0IFE9KEk9UC5maWx0ZXIoQT0+QS5vdmVyZmxvd3NbMF08PTApLnNvcnQoKEEsTSk9PkEub3ZlcmZsb3dzWzFdLU0ub3ZlcmZsb3dzWzFdKVswXSk9PW51bGw/dm9pZCAwOkkucGxhY2VtZW50O2lmKCFRKXN3aXRjaCh4KXtjYXNlImJlc3RGaXQiOnt2YXIgVjtjb25zdCBBPShWPVAuZmlsdGVyKE09PntpZihfKXtjb25zdCAkPU5zKE0ucGxhY2VtZW50KTtyZXR1cm4gJD09PWd8fCQ9PT0ieSJ9cmV0dXJuITB9KS5tYXAoTT0+W00ucGxhY2VtZW50LE0ub3ZlcmZsb3dzLmZpbHRlcigkPT4kPjApLnJlZHVjZSgoJCxEKT0+JCtELDApXSkuc29ydCgoTSwkKT0+TVsxXS0kWzFdKVswXSk9PW51bGw/dm9pZCAwOlZbMF07QSYmKFE9QSk7YnJlYWt9Y2FzZSJpbml0aWFsUGxhY2VtZW50IjpRPWw7YnJlYWt9aWYocyE9PVEpcmV0dXJue3Jlc2V0OntwbGFjZW1lbnQ6UX19fXJldHVybnt9fX19O2Z1bmN0aW9uIEVnKGUsdCl7cmV0dXJue3RvcDplLnRvcC10LmhlaWdodCxyaWdodDplLnJpZ2h0LXQud2lkdGgsYm90dG9tOmUuYm90dG9tLXQuaGVpZ2h0LGxlZnQ6ZS5sZWZ0LXQud2lkdGh9fWZ1bmN0aW9uIENnKGUpe3JldHVybiBsMi5zb21lKHQ9PmVbdF0+PTApfWNvbnN0IHkyPWZ1bmN0aW9uKGUpe3JldHVybiBlPT09dm9pZCAwJiYoZT17fSkse25hbWU6ImhpZGUiLG9wdGlvbnM6ZSxhc3luYyBmbih0KXtjb25zdHtyZWN0czpyfT10LHtzdHJhdGVneTpuPSJyZWZlcmVuY2VIaWRkZW4iLC4uLnN9PUluKGUsdCk7c3dpdGNoKG4pe2Nhc2UicmVmZXJlbmNlSGlkZGVuIjp7Y29uc3QgYT1hd2FpdCBSbyh0LHsuLi5zLGVsZW1lbnRDb250ZXh0OiJyZWZlcmVuY2UifSksbz1FZyhhLHIucmVmZXJlbmNlKTtyZXR1cm57ZGF0YTp7cmVmZXJlbmNlSGlkZGVuT2Zmc2V0czpvLHJlZmVyZW5jZUhpZGRlbjpDZyhvKX19fWNhc2UiZXNjYXBlZCI6e2NvbnN0IGE9YXdhaXQgUm8odCx7Li4ucyxhbHRCb3VuZGFyeTohMH0pLG89RWcoYSxyLmZsb2F0aW5nKTtyZXR1cm57ZGF0YTp7ZXNjYXBlZE9mZnNldHM6byxlc2NhcGVkOkNnKG8pfX19ZGVmYXVsdDpyZXR1cm57fX19fX07YXN5bmMgZnVuY3Rpb24gdzIoZSx0KXtjb25zdHtwbGFjZW1lbnQ6cixwbGF0Zm9ybTpuLGVsZW1lbnRzOnN9PWUsYT1hd2FpdChuLmlzUlRMPT1udWxsP3ZvaWQgMDpuLmlzUlRMKHMuZmxvYXRpbmcpKSxvPUxuKHIpLGw9UGEociksYz1OcyhyKT09PSJ5Iix1PVsibGVmdCIsInRvcCJdLmluY2x1ZGVzKG8pPy0xOjEsZD1hJiZjPy0xOjEsZj1Jbih0LGUpO2xldHttYWluQXhpczpwLGNyb3NzQXhpczp4LGFsaWdubWVudEF4aXM6dn09dHlwZW9mIGY9PSJudW1iZXIiP3ttYWluQXhpczpmLGNyb3NzQXhpczowLGFsaWdubWVudEF4aXM6bnVsbH06e21haW5BeGlzOmYubWFpbkF4aXN8fDAsY3Jvc3NBeGlzOmYuY3Jvc3NBeGlzfHwwLGFsaWdubWVudEF4aXM6Zi5hbGlnbm1lbnRBeGlzfTtyZXR1cm4gbCYmdHlwZW9mIHY9PSJudW1iZXIiJiYoeD1sPT09ImVuZCI/diotMTp2KSxjP3t4OngqZCx5OnAqdX06e3g6cCp1LHk6eCpkfX1jb25zdCBiMj1mdW5jdGlvbihlKXtyZXR1cm4gZT09PXZvaWQgMCYmKGU9MCkse25hbWU6Im9mZnNldCIsb3B0aW9uczplLGFzeW5jIGZuKHQpe3ZhciByLG47Y29uc3R7eDpzLHk6YSxwbGFjZW1lbnQ6byxtaWRkbGV3YXJlRGF0YTpsfT10LGM9YXdhaXQgdzIodCxlKTtyZXR1cm4gbz09PSgocj1sLm9mZnNldCk9PW51bGw/dm9pZCAwOnIucGxhY2VtZW50KSYmKG49bC5hcnJvdykhPW51bGwmJm4uYWxpZ25tZW50T2Zmc2V0P3t9Ont4OnMrYy54LHk6YStjLnksZGF0YTp7Li4uYyxwbGFjZW1lbnQ6b319fX19LGoyPWZ1bmN0aW9uKGUpe3JldHVybiBlPT09dm9pZCAwJiYoZT17fSkse25hbWU6InNoaWZ0IixvcHRpb25zOmUsYXN5bmMgZm4odCl7Y29uc3R7eDpyLHk6bixwbGFjZW1lbnQ6c309dCx7bWFpbkF4aXM6YT0hMCxjcm9zc0F4aXM6bz0hMSxsaW1pdGVyOmw9e2ZuOnc9PntsZXR7eDpoLHk6Z309dztyZXR1cm57eDpoLHk6Z319fSwuLi5jfT1JbihlLHQpLHU9e3g6cix5Om59LGQ9YXdhaXQgUm8odCxjKSxmPU5zKExuKHMpKSxwPXloKGYpO2xldCB4PXVbcF0sdj11W2ZdO2lmKGEpe2NvbnN0IHc9cD09PSJ5Ij8idG9wIjoibGVmdCIsaD1wPT09InkiPyJib3R0b20iOiJyaWdodCIsZz14K2Rbd10sYj14LWRbaF07eD1HZihnLHgsYil9aWYobyl7Y29uc3Qgdz1mPT09InkiPyJ0b3AiOiJsZWZ0IixoPWY9PT0ieSI/ImJvdHRvbSI6InJpZ2h0IixnPXYrZFt3XSxiPXYtZFtoXTt2PUdmKGcsdixiKX1jb25zdCBtPWwuZm4oey4uLnQsW3BdOngsW2ZdOnZ9KTtyZXR1cm57Li4ubSxkYXRhOnt4Om0ueC1yLHk6bS55LW4sZW5hYmxlZDp7W3BdOmEsW2ZdOm99fX19fX0sTjI9ZnVuY3Rpb24oZSl7cmV0dXJuIGU9PT12b2lkIDAmJihlPXt9KSx7b3B0aW9uczplLGZuKHQpe2NvbnN0e3g6cix5Om4scGxhY2VtZW50OnMscmVjdHM6YSxtaWRkbGV3YXJlRGF0YTpvfT10LHtvZmZzZXQ6bD0wLG1haW5BeGlzOmM9ITAsY3Jvc3NBeGlzOnU9ITB9PUluKGUsdCksZD17eDpyLHk6bn0sZj1OcyhzKSxwPXloKGYpO2xldCB4PWRbcF0sdj1kW2ZdO2NvbnN0IG09SW4obCx0KSx3PXR5cGVvZiBtPT0ibnVtYmVyIj97bWFpbkF4aXM6bSxjcm9zc0F4aXM6MH06e21haW5BeGlzOjAsY3Jvc3NBeGlzOjAsLi4ubX07aWYoYyl7Y29uc3QgYj1wPT09InkiPyJoZWlnaHQiOiJ3aWR0aCIsTj1hLnJlZmVyZW5jZVtwXS1hLmZsb2F0aW5nW2JdK3cubWFpbkF4aXMsUz1hLnJlZmVyZW5jZVtwXSthLnJlZmVyZW5jZVtiXS13Lm1haW5BeGlzO3g8Tj94PU46eD5TJiYoeD1TKX1pZih1KXt2YXIgaCxnO2NvbnN0IGI9cD09PSJ5Ij8id2lkdGgiOiJoZWlnaHQiLE49WyJ0b3AiLCJsZWZ0Il0uaW5jbHVkZXMoTG4ocykpLFM9YS5yZWZlcmVuY2VbZl0tYS5mbG9hdGluZ1tiXSsoTiYmKChoPW8ub2Zmc2V0KT09bnVsbD92b2lkIDA6aFtmXSl8fDApKyhOPzA6dy5jcm9zc0F4aXMpLF89YS5yZWZlcmVuY2VbZl0rYS5yZWZlcmVuY2VbYl0rKE4/MDooKGc9by5vZmZzZXQpPT1udWxsP3ZvaWQgMDpnW2ZdKXx8MCktKE4/dy5jcm9zc0F4aXM6MCk7djxTP3Y9Uzp2Pl8mJih2PV8pfXJldHVybntbcF06eCxbZl06dn19fX0sUzI9ZnVuY3Rpb24oZSl7cmV0dXJuIGU9PT12b2lkIDAmJihlPXt9KSx7bmFtZToic2l6ZSIsb3B0aW9uczplLGFzeW5jIGZuKHQpe3ZhciByLG47Y29uc3R7cGxhY2VtZW50OnMscmVjdHM6YSxwbGF0Zm9ybTpvLGVsZW1lbnRzOmx9PXQse2FwcGx5OmM9KCk9Pnt9LC4uLnV9PUluKGUsdCksZD1hd2FpdCBSbyh0LHUpLGY9TG4ocykscD1QYShzKSx4PU5zKHMpPT09InkiLHt3aWR0aDp2LGhlaWdodDptfT1hLmZsb2F0aW5nO2xldCB3LGg7Zj09PSJ0b3AifHxmPT09ImJvdHRvbSI/KHc9ZixoPXA9PT0oYXdhaXQoby5pc1JUTD09bnVsbD92b2lkIDA6by5pc1JUTChsLmZsb2F0aW5nKSk/InN0YXJ0IjoiZW5kIik/ImxlZnQiOiJyaWdodCIpOihoPWYsdz1wPT09ImVuZCI/InRvcCI6ImJvdHRvbSIpO2NvbnN0IGc9bS1kLnRvcC1kLmJvdHRvbSxiPXYtZC5sZWZ0LWQucmlnaHQsTj1qcyhtLWRbd10sZyksUz1qcyh2LWRbaF0sYiksXz0hdC5taWRkbGV3YXJlRGF0YS5zaGlmdDtsZXQgaz1OLFQ9UztpZigocj10Lm1pZGRsZXdhcmVEYXRhLnNoaWZ0KSE9bnVsbCYmci5lbmFibGVkLngmJihUPWIpLChuPXQubWlkZGxld2FyZURhdGEuc2hpZnQpIT1udWxsJiZuLmVuYWJsZWQueSYmKGs9ZyksXyYmIXApe2NvbnN0IFA9Y3IoZC5sZWZ0LDApLGo9Y3IoZC5yaWdodCwwKSxJPWNyKGQudG9wLDApLFY9Y3IoZC5ib3R0b20sMCk7eD9UPXYtMiooUCE9PTB8fGohPT0wP1ArajpjcihkLmxlZnQsZC5yaWdodCkpOms9bS0yKihJIT09MHx8ViE9PTA/SStWOmNyKGQudG9wLGQuYm90dG9tKSl9YXdhaXQgYyh7Li4udCxhdmFpbGFibGVXaWR0aDpULGF2YWlsYWJsZUhlaWdodDprfSk7Y29uc3QgTD1hd2FpdCBvLmdldERpbWVuc2lvbnMobC5mbG9hdGluZyk7cmV0dXJuIHYhPT1MLndpZHRofHxtIT09TC5oZWlnaHQ/e3Jlc2V0OntyZWN0czohMH19Ont9fX19O2Z1bmN0aW9uIHh1KCl7cmV0dXJuIHR5cGVvZiB3aW5kb3c8InUifWZ1bmN0aW9uIFRhKGUpe3JldHVybiBpdyhlKT8oZS5ub2RlTmFtZXx8IiIpLnRvTG93ZXJDYXNlKCk6IiNkb2N1bWVudCJ9ZnVuY3Rpb24gZnIoZSl7dmFyIHQ7cmV0dXJuKGU9PW51bGx8fCh0PWUub3duZXJEb2N1bWVudCk9PW51bGw/dm9pZCAwOnQuZGVmYXVsdFZpZXcpfHx3aW5kb3d9ZnVuY3Rpb24gcG4oZSl7dmFyIHQ7cmV0dXJuKHQ9KGl3KGUpP2Uub3duZXJEb2N1bWVudDplLmRvY3VtZW50KXx8d2luZG93LmRvY3VtZW50KT09bnVsbD92b2lkIDA6dC5kb2N1bWVudEVsZW1lbnR9ZnVuY3Rpb24gaXcoZSl7cmV0dXJuIHh1KCk/ZSBpbnN0YW5jZW9mIE5vZGV8fGUgaW5zdGFuY2VvZiBmcihlKS5Ob2RlOiExfWZ1bmN0aW9uIFVyKGUpe3JldHVybiB4dSgpP2UgaW5zdGFuY2VvZiBFbGVtZW50fHxlIGluc3RhbmNlb2YgZnIoZSkuRWxlbWVudDohMX1mdW5jdGlvbiBkbihlKXtyZXR1cm4geHUoKT9lIGluc3RhbmNlb2YgSFRNTEVsZW1lbnR8fGUgaW5zdGFuY2VvZiBmcihlKS5IVE1MRWxlbWVudDohMX1mdW5jdGlvbiBfZyhlKXtyZXR1cm4heHUoKXx8dHlwZW9mIFNoYWRvd1Jvb3Q+InUiPyExOmUgaW5zdGFuY2VvZiBTaGFkb3dSb290fHxlIGluc3RhbmNlb2YgZnIoZSkuU2hhZG93Um9vdH1mdW5jdGlvbiBzbChlKXtjb25zdHtvdmVyZmxvdzp0LG92ZXJmbG93WDpyLG92ZXJmbG93WTpuLGRpc3BsYXk6c309QnIoZSk7cmV0dXJuL2F1dG98c2Nyb2xsfG92ZXJsYXl8aGlkZGVufGNsaXAvLnRlc3QodCtuK3IpJiYhWyJpbmxpbmUiLCJjb250ZW50cyJdLmluY2x1ZGVzKHMpfWZ1bmN0aW9uIGsyKGUpe3JldHVyblsidGFibGUiLCJ0ZCIsInRoIl0uaW5jbHVkZXMoVGEoZSkpfWZ1bmN0aW9uIHZ1KGUpe3JldHVyblsiOnBvcG92ZXItb3BlbiIsIjptb2RhbCJdLnNvbWUodD0+e3RyeXtyZXR1cm4gZS5tYXRjaGVzKHQpfWNhdGNoe3JldHVybiExfX0pfWZ1bmN0aW9uIGpoKGUpe2NvbnN0IHQ9TmgoKSxyPVVyKGUpP0JyKGUpOmU7cmV0dXJuWyJ0cmFuc2Zvcm0iLCJ0cmFuc2xhdGUiLCJzY2FsZSIsInJvdGF0ZSIsInBlcnNwZWN0aXZlIl0uc29tZShuPT5yW25dP3Jbbl0hPT0ibm9uZSI6ITEpfHwoci5jb250YWluZXJUeXBlP3IuY29udGFpbmVyVHlwZSE9PSJub3JtYWwiOiExKXx8IXQmJihyLmJhY2tkcm9wRmlsdGVyP3IuYmFja2Ryb3BGaWx0ZXIhPT0ibm9uZSI6ITEpfHwhdCYmKHIuZmlsdGVyP3IuZmlsdGVyIT09Im5vbmUiOiExKXx8WyJ0cmFuc2Zvcm0iLCJ0cmFuc2xhdGUiLCJzY2FsZSIsInJvdGF0ZSIsInBlcnNwZWN0aXZlIiwiZmlsdGVyIl0uc29tZShuPT4oci53aWxsQ2hhbmdlfHwiIikuaW5jbHVkZXMobikpfHxbInBhaW50IiwibGF5b3V0Iiwic3RyaWN0IiwiY29udGVudCJdLnNvbWUobj0+KHIuY29udGFpbnx8IiIpLmluY2x1ZGVzKG4pKX1mdW5jdGlvbiBFMihlKXtsZXQgdD1TcyhlKTtmb3IoO2RuKHQpJiYheGEodCk7KXtpZihqaCh0KSlyZXR1cm4gdDtpZih2dSh0KSlyZXR1cm4gbnVsbDt0PVNzKHQpfXJldHVybiBudWxsfWZ1bmN0aW9uIE5oKCl7cmV0dXJuIHR5cGVvZiBDU1M+InUifHwhQ1NTLnN1cHBvcnRzPyExOkNTUy5zdXBwb3J0cygiLXdlYmtpdC1iYWNrZHJvcC1maWx0ZXIiLCJub25lIil9ZnVuY3Rpb24geGEoZSl7cmV0dXJuWyJodG1sIiwiYm9keSIsIiNkb2N1bWVudCJdLmluY2x1ZGVzKFRhKGUpKX1mdW5jdGlvbiBCcihlKXtyZXR1cm4gZnIoZSkuZ2V0Q29tcHV0ZWRTdHlsZShlKX1mdW5jdGlvbiB5dShlKXtyZXR1cm4gVXIoZSk/e3Njcm9sbExlZnQ6ZS5zY3JvbGxMZWZ0LHNjcm9sbFRvcDplLnNjcm9sbFRvcH06e3Njcm9sbExlZnQ6ZS5zY3JvbGxYLHNjcm9sbFRvcDplLnNjcm9sbFl9fWZ1bmN0aW9uIFNzKGUpe2lmKFRhKGUpPT09Imh0bWwiKXJldHVybiBlO2NvbnN0IHQ9ZS5hc3NpZ25lZFNsb3R8fGUucGFyZW50Tm9kZXx8X2coZSkmJmUuaG9zdHx8cG4oZSk7cmV0dXJuIF9nKHQpP3QuaG9zdDp0fWZ1bmN0aW9uIGF3KGUpe2NvbnN0IHQ9U3MoZSk7cmV0dXJuIHhhKHQpP2Uub3duZXJEb2N1bWVudD9lLm93bmVyRG9jdW1lbnQuYm9keTplLmJvZHk6ZG4odCkmJnNsKHQpP3Q6YXcodCl9ZnVuY3Rpb24gQW8oZSx0LHIpe3ZhciBuO3Q9PT12b2lkIDAmJih0PVtdKSxyPT09dm9pZCAwJiYocj0hMCk7Y29uc3Qgcz1hdyhlKSxhPXM9PT0oKG49ZS5vd25lckRvY3VtZW50KT09bnVsbD92b2lkIDA6bi5ib2R5KSxvPWZyKHMpO2lmKGEpe2NvbnN0IGw9WmYobyk7cmV0dXJuIHQuY29uY2F0KG8sby52aXN1YWxWaWV3cG9ydHx8W10sc2wocyk/czpbXSxsJiZyP0FvKGwpOltdKX1yZXR1cm4gdC5jb25jYXQocyxBbyhzLFtdLHIpKX1mdW5jdGlvbiBaZihlKXtyZXR1cm4gZS5wYXJlbnQmJk9iamVjdC5nZXRQcm90b3R5cGVPZihlLnBhcmVudCk/ZS5mcmFtZUVsZW1lbnQ6bnVsbH1mdW5jdGlvbiBvdyhlKXtjb25zdCB0PUJyKGUpO2xldCByPXBhcnNlRmxvYXQodC53aWR0aCl8fDAsbj1wYXJzZUZsb2F0KHQuaGVpZ2h0KXx8MDtjb25zdCBzPWRuKGUpLGE9cz9lLm9mZnNldFdpZHRoOnIsbz1zP2Uub2Zmc2V0SGVpZ2h0Om4sbD1BYyhyKSE9PWF8fEFjKG4pIT09bztyZXR1cm4gbCYmKHI9YSxuPW8pLHt3aWR0aDpyLGhlaWdodDpuLCQ6bH19ZnVuY3Rpb24gU2goZSl7cmV0dXJuIFVyKGUpP2U6ZS5jb250ZXh0RWxlbWVudH1mdW5jdGlvbiBXaShlKXtjb25zdCB0PVNoKGUpO2lmKCFkbih0KSlyZXR1cm4gY24oMSk7Y29uc3Qgcj10LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLHt3aWR0aDpuLGhlaWdodDpzLCQ6YX09b3codCk7bGV0IG89KGE/QWMoci53aWR0aCk6ci53aWR0aCkvbixsPShhP0FjKHIuaGVpZ2h0KTpyLmhlaWdodCkvcztyZXR1cm4oIW98fCFOdW1iZXIuaXNGaW5pdGUobykpJiYobz0xKSwoIWx8fCFOdW1iZXIuaXNGaW5pdGUobCkpJiYobD0xKSx7eDpvLHk6bH19Y29uc3QgQzI9Y24oMCk7ZnVuY3Rpb24gbHcoZSl7Y29uc3QgdD1mcihlKTtyZXR1cm4hTmgoKXx8IXQudmlzdWFsVmlld3BvcnQ/QzI6e3g6dC52aXN1YWxWaWV3cG9ydC5vZmZzZXRMZWZ0LHk6dC52aXN1YWxWaWV3cG9ydC5vZmZzZXRUb3B9fWZ1bmN0aW9uIF8yKGUsdCxyKXtyZXR1cm4gdD09PXZvaWQgMCYmKHQ9ITEpLCFyfHx0JiZyIT09ZnIoZSk/ITE6dH1mdW5jdGlvbiBjaShlLHQscixuKXt0PT09dm9pZCAwJiYodD0hMSkscj09PXZvaWQgMCYmKHI9ITEpO2NvbnN0IHM9ZS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKSxhPVNoKGUpO2xldCBvPWNuKDEpO3QmJihuP1VyKG4pJiYobz1XaShuKSk6bz1XaShlKSk7Y29uc3QgbD1fMihhLHIsbik/bHcoYSk6Y24oMCk7bGV0IGM9KHMubGVmdCtsLngpL28ueCx1PShzLnRvcCtsLnkpL28ueSxkPXMud2lkdGgvby54LGY9cy5oZWlnaHQvby55O2lmKGEpe2NvbnN0IHA9ZnIoYSkseD1uJiZVcihuKT9mcihuKTpuO2xldCB2PXAsbT1aZih2KTtmb3IoO20mJm4mJnghPT12Oyl7Y29uc3Qgdz1XaShtKSxoPW0uZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCksZz1CcihtKSxiPWgubGVmdCsobS5jbGllbnRMZWZ0K3BhcnNlRmxvYXQoZy5wYWRkaW5nTGVmdCkpKncueCxOPWgudG9wKyhtLmNsaWVudFRvcCtwYXJzZUZsb2F0KGcucGFkZGluZ1RvcCkpKncueTtjKj13LngsdSo9dy55LGQqPXcueCxmKj13LnksYys9Yix1Kz1OLHY9ZnIobSksbT1aZih2KX19cmV0dXJuIE9jKHt3aWR0aDpkLGhlaWdodDpmLHg6Yyx5OnV9KX1mdW5jdGlvbiBraChlLHQpe2NvbnN0IHI9eXUoZSkuc2Nyb2xsTGVmdDtyZXR1cm4gdD90LmxlZnQrcjpjaShwbihlKSkubGVmdCtyfWZ1bmN0aW9uIGN3KGUsdCxyKXtyPT09dm9pZCAwJiYocj0hMSk7Y29uc3Qgbj1lLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLHM9bi5sZWZ0K3Quc2Nyb2xsTGVmdC0ocj8wOmtoKGUsbikpLGE9bi50b3ArdC5zY3JvbGxUb3A7cmV0dXJue3g6cyx5OmF9fWZ1bmN0aW9uIFAyKGUpe2xldHtlbGVtZW50czp0LHJlY3Q6cixvZmZzZXRQYXJlbnQ6bixzdHJhdGVneTpzfT1lO2NvbnN0IGE9cz09PSJmaXhlZCIsbz1wbihuKSxsPXQ/dnUodC5mbG9hdGluZyk6ITE7aWYobj09PW98fGwmJmEpcmV0dXJuIHI7bGV0IGM9e3Njcm9sbExlZnQ6MCxzY3JvbGxUb3A6MH0sdT1jbigxKTtjb25zdCBkPWNuKDApLGY9ZG4obik7aWYoKGZ8fCFmJiYhYSkmJigoVGEobikhPT0iYm9keSJ8fHNsKG8pKSYmKGM9eXUobikpLGRuKG4pKSl7Y29uc3QgeD1jaShuKTt1PVdpKG4pLGQueD14Lngrbi5jbGllbnRMZWZ0LGQueT14Lnkrbi5jbGllbnRUb3B9Y29uc3QgcD1vJiYhZiYmIWE/Y3cobyxjLCEwKTpjbigwKTtyZXR1cm57d2lkdGg6ci53aWR0aCp1LngsaGVpZ2h0OnIuaGVpZ2h0KnUueSx4OnIueCp1LngtYy5zY3JvbGxMZWZ0KnUueCtkLngrcC54LHk6ci55KnUueS1jLnNjcm9sbFRvcCp1LnkrZC55K3AueX19ZnVuY3Rpb24gVDIoZSl7cmV0dXJuIEFycmF5LmZyb20oZS5nZXRDbGllbnRSZWN0cygpKX1mdW5jdGlvbiBSMihlKXtjb25zdCB0PXBuKGUpLHI9eXUoZSksbj1lLm93bmVyRG9jdW1lbnQuYm9keSxzPWNyKHQuc2Nyb2xsV2lkdGgsdC5jbGllbnRXaWR0aCxuLnNjcm9sbFdpZHRoLG4uY2xpZW50V2lkdGgpLGE9Y3IodC5zY3JvbGxIZWlnaHQsdC5jbGllbnRIZWlnaHQsbi5zY3JvbGxIZWlnaHQsbi5jbGllbnRIZWlnaHQpO2xldCBvPS1yLnNjcm9sbExlZnQra2goZSk7Y29uc3QgbD0tci5zY3JvbGxUb3A7cmV0dXJuIEJyKG4pLmRpcmVjdGlvbj09PSJydGwiJiYobys9Y3IodC5jbGllbnRXaWR0aCxuLmNsaWVudFdpZHRoKS1zKSx7d2lkdGg6cyxoZWlnaHQ6YSx4Om8seTpsfX1mdW5jdGlvbiBBMihlLHQpe2NvbnN0IHI9ZnIoZSksbj1wbihlKSxzPXIudmlzdWFsVmlld3BvcnQ7bGV0IGE9bi5jbGllbnRXaWR0aCxvPW4uY2xpZW50SGVpZ2h0LGw9MCxjPTA7aWYocyl7YT1zLndpZHRoLG89cy5oZWlnaHQ7Y29uc3QgdT1OaCgpOyghdXx8dSYmdD09PSJmaXhlZCIpJiYobD1zLm9mZnNldExlZnQsYz1zLm9mZnNldFRvcCl9cmV0dXJue3dpZHRoOmEsaGVpZ2h0Om8seDpsLHk6Y319ZnVuY3Rpb24gTTIoZSx0KXtjb25zdCByPWNpKGUsITAsdD09PSJmaXhlZCIpLG49ci50b3ArZS5jbGllbnRUb3Ascz1yLmxlZnQrZS5jbGllbnRMZWZ0LGE9ZG4oZSk/V2koZSk6Y24oMSksbz1lLmNsaWVudFdpZHRoKmEueCxsPWUuY2xpZW50SGVpZ2h0KmEueSxjPXMqYS54LHU9biphLnk7cmV0dXJue3dpZHRoOm8saGVpZ2h0OmwseDpjLHk6dX19ZnVuY3Rpb24gUGcoZSx0LHIpe2xldCBuO2lmKHQ9PT0idmlld3BvcnQiKW49QTIoZSxyKTtlbHNlIGlmKHQ9PT0iZG9jdW1lbnQiKW49UjIocG4oZSkpO2Vsc2UgaWYoVXIodCkpbj1NMih0LHIpO2Vsc2V7Y29uc3Qgcz1sdyhlKTtuPXt4OnQueC1zLngseTp0Lnktcy55LHdpZHRoOnQud2lkdGgsaGVpZ2h0OnQuaGVpZ2h0fX1yZXR1cm4gT2Mobil9ZnVuY3Rpb24gdXcoZSx0KXtjb25zdCByPVNzKGUpO3JldHVybiByPT09dHx8IVVyKHIpfHx4YShyKT8hMTpCcihyKS5wb3NpdGlvbj09PSJmaXhlZCJ8fHV3KHIsdCl9ZnVuY3Rpb24gTzIoZSx0KXtjb25zdCByPXQuZ2V0KGUpO2lmKHIpcmV0dXJuIHI7bGV0IG49QW8oZSxbXSwhMSkuZmlsdGVyKGw9PlVyKGwpJiZUYShsKSE9PSJib2R5Iikscz1udWxsO2NvbnN0IGE9QnIoZSkucG9zaXRpb249PT0iZml4ZWQiO2xldCBvPWE/U3MoZSk6ZTtmb3IoO1VyKG8pJiYheGEobyk7KXtjb25zdCBsPUJyKG8pLGM9amgobyk7IWMmJmwucG9zaXRpb249PT0iZml4ZWQiJiYocz1udWxsKSwoYT8hYyYmIXM6IWMmJmwucG9zaXRpb249PT0ic3RhdGljIiYmISFzJiZbImFic29sdXRlIiwiZml4ZWQiXS5pbmNsdWRlcyhzLnBvc2l0aW9uKXx8c2wobykmJiFjJiZ1dyhlLG8pKT9uPW4uZmlsdGVyKGQ9PmQhPT1vKTpzPWwsbz1TcyhvKX1yZXR1cm4gdC5zZXQoZSxuKSxufWZ1bmN0aW9uIEYyKGUpe2xldHtlbGVtZW50OnQsYm91bmRhcnk6cixyb290Qm91bmRhcnk6bixzdHJhdGVneTpzfT1lO2NvbnN0IG89Wy4uLnI9PT0iY2xpcHBpbmdBbmNlc3RvcnMiP3Z1KHQpP1tdOk8yKHQsdGhpcy5fYyk6W10uY29uY2F0KHIpLG5dLGw9b1swXSxjPW8ucmVkdWNlKCh1LGQpPT57Y29uc3QgZj1QZyh0LGQscyk7cmV0dXJuIHUudG9wPWNyKGYudG9wLHUudG9wKSx1LnJpZ2h0PWpzKGYucmlnaHQsdS5yaWdodCksdS5ib3R0b209anMoZi5ib3R0b20sdS5ib3R0b20pLHUubGVmdD1jcihmLmxlZnQsdS5sZWZ0KSx1fSxQZyh0LGwscykpO3JldHVybnt3aWR0aDpjLnJpZ2h0LWMubGVmdCxoZWlnaHQ6Yy5ib3R0b20tYy50b3AseDpjLmxlZnQseTpjLnRvcH19ZnVuY3Rpb24gSTIoZSl7Y29uc3R7d2lkdGg6dCxoZWlnaHQ6cn09b3coZSk7cmV0dXJue3dpZHRoOnQsaGVpZ2h0OnJ9fWZ1bmN0aW9uIEwyKGUsdCxyKXtjb25zdCBuPWRuKHQpLHM9cG4odCksYT1yPT09ImZpeGVkIixvPWNpKGUsITAsYSx0KTtsZXQgbD17c2Nyb2xsTGVmdDowLHNjcm9sbFRvcDowfTtjb25zdCBjPWNuKDApO2lmKG58fCFuJiYhYSlpZigoVGEodCkhPT0iYm9keSJ8fHNsKHMpKSYmKGw9eXUodCkpLG4pe2NvbnN0IHA9Y2kodCwhMCxhLHQpO2MueD1wLngrdC5jbGllbnRMZWZ0LGMueT1wLnkrdC5jbGllbnRUb3B9ZWxzZSBzJiYoYy54PWtoKHMpKTtjb25zdCB1PXMmJiFuJiYhYT9jdyhzLGwpOmNuKDApLGQ9by5sZWZ0K2wuc2Nyb2xsTGVmdC1jLngtdS54LGY9by50b3ArbC5zY3JvbGxUb3AtYy55LXUueTtyZXR1cm57eDpkLHk6Zix3aWR0aDpvLndpZHRoLGhlaWdodDpvLmhlaWdodH19ZnVuY3Rpb24gZmQoZSl7cmV0dXJuIEJyKGUpLnBvc2l0aW9uPT09InN0YXRpYyJ9ZnVuY3Rpb24gVGcoZSx0KXtpZighZG4oZSl8fEJyKGUpLnBvc2l0aW9uPT09ImZpeGVkIilyZXR1cm4gbnVsbDtpZih0KXJldHVybiB0KGUpO2xldCByPWUub2Zmc2V0UGFyZW50O3JldHVybiBwbihlKT09PXImJihyPXIub3duZXJEb2N1bWVudC5ib2R5KSxyfWZ1bmN0aW9uIGR3KGUsdCl7Y29uc3Qgcj1mcihlKTtpZih2dShlKSlyZXR1cm4gcjtpZighZG4oZSkpe2xldCBzPVNzKGUpO2Zvcig7cyYmIXhhKHMpOyl7aWYoVXIocykmJiFmZChzKSlyZXR1cm4gcztzPVNzKHMpfXJldHVybiByfWxldCBuPVRnKGUsdCk7Zm9yKDtuJiZrMihuKSYmZmQobik7KW49VGcobix0KTtyZXR1cm4gbiYmeGEobikmJmZkKG4pJiYhamgobik/cjpufHxFMihlKXx8cn1jb25zdCBEMj1hc3luYyBmdW5jdGlvbihlKXtjb25zdCB0PXRoaXMuZ2V0T2Zmc2V0UGFyZW50fHxkdyxyPXRoaXMuZ2V0RGltZW5zaW9ucyxuPWF3YWl0IHIoZS5mbG9hdGluZyk7cmV0dXJue3JlZmVyZW5jZTpMMihlLnJlZmVyZW5jZSxhd2FpdCB0KGUuZmxvYXRpbmcpLGUuc3RyYXRlZ3kpLGZsb2F0aW5nOnt4OjAseTowLHdpZHRoOm4ud2lkdGgsaGVpZ2h0Om4uaGVpZ2h0fX19O2Z1bmN0aW9uICQyKGUpe3JldHVybiBCcihlKS5kaXJlY3Rpb249PT0icnRsIn1jb25zdCB6Mj17Y29udmVydE9mZnNldFBhcmVudFJlbGF0aXZlUmVjdFRvVmlld3BvcnRSZWxhdGl2ZVJlY3Q6UDIsZ2V0RG9jdW1lbnRFbGVtZW50OnBuLGdldENsaXBwaW5nUmVjdDpGMixnZXRPZmZzZXRQYXJlbnQ6ZHcsZ2V0RWxlbWVudFJlY3RzOkQyLGdldENsaWVudFJlY3RzOlQyLGdldERpbWVuc2lvbnM6STIsZ2V0U2NhbGU6V2ksaXNFbGVtZW50OlVyLGlzUlRMOiQyfTtmdW5jdGlvbiBmdyhlLHQpe3JldHVybiBlLng9PT10LngmJmUueT09PXQueSYmZS53aWR0aD09PXQud2lkdGgmJmUuaGVpZ2h0PT09dC5oZWlnaHR9ZnVuY3Rpb24gVjIoZSx0KXtsZXQgcj1udWxsLG47Y29uc3Qgcz1wbihlKTtmdW5jdGlvbiBhKCl7dmFyIGw7Y2xlYXJUaW1lb3V0KG4pLChsPXIpPT1udWxsfHxsLmRpc2Nvbm5lY3QoKSxyPW51bGx9ZnVuY3Rpb24gbyhsLGMpe2w9PT12b2lkIDAmJihsPSExKSxjPT09dm9pZCAwJiYoYz0xKSxhKCk7Y29uc3QgdT1lLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLHtsZWZ0OmQsdG9wOmYsd2lkdGg6cCxoZWlnaHQ6eH09dTtpZihsfHx0KCksIXB8fCF4KXJldHVybjtjb25zdCB2PVJsKGYpLG09Umwocy5jbGllbnRXaWR0aC0oZCtwKSksdz1SbChzLmNsaWVudEhlaWdodC0oZit4KSksaD1SbChkKSxiPXtyb290TWFyZ2luOi12KyJweCAiKy1tKyJweCAiKy13KyJweCAiKy1oKyJweCIsdGhyZXNob2xkOmNyKDAsanMoMSxjKSl8fDF9O2xldCBOPSEwO2Z1bmN0aW9uIFMoXyl7Y29uc3Qgaz1fWzBdLmludGVyc2VjdGlvblJhdGlvO2lmKGshPT1jKXtpZighTilyZXR1cm4gbygpO2s/byghMSxrKTpuPXNldFRpbWVvdXQoKCk9PntvKCExLDFlLTcpfSwxZTMpfWs9PT0xJiYhZncodSxlLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpKSYmbygpLE49ITF9dHJ5e3I9bmV3IEludGVyc2VjdGlvbk9ic2VydmVyKFMsey4uLmIscm9vdDpzLm93bmVyRG9jdW1lbnR9KX1jYXRjaHtyPW5ldyBJbnRlcnNlY3Rpb25PYnNlcnZlcihTLGIpfXIub2JzZXJ2ZShlKX1yZXR1cm4gbyghMCksYX1mdW5jdGlvbiBVMihlLHQscixuKXtuPT09dm9pZCAwJiYobj17fSk7Y29uc3R7YW5jZXN0b3JTY3JvbGw6cz0hMCxhbmNlc3RvclJlc2l6ZTphPSEwLGVsZW1lbnRSZXNpemU6bz10eXBlb2YgUmVzaXplT2JzZXJ2ZXI9PSJmdW5jdGlvbiIsbGF5b3V0U2hpZnQ6bD10eXBlb2YgSW50ZXJzZWN0aW9uT2JzZXJ2ZXI9PSJmdW5jdGlvbiIsYW5pbWF0aW9uRnJhbWU6Yz0hMX09bix1PVNoKGUpLGQ9c3x8YT9bLi4udT9Bbyh1KTpbXSwuLi5Bbyh0KV06W107ZC5mb3JFYWNoKGg9PntzJiZoLmFkZEV2ZW50TGlzdGVuZXIoInNjcm9sbCIscix7cGFzc2l2ZTohMH0pLGEmJmguYWRkRXZlbnRMaXN0ZW5lcigicmVzaXplIixyKX0pO2NvbnN0IGY9dSYmbD9WMih1LHIpOm51bGw7bGV0IHA9LTEseD1udWxsO28mJih4PW5ldyBSZXNpemVPYnNlcnZlcihoPT57bGV0W2ddPWg7ZyYmZy50YXJnZXQ9PT11JiZ4JiYoeC51bm9ic2VydmUodCksY2FuY2VsQW5pbWF0aW9uRnJhbWUocCkscD1yZXF1ZXN0QW5pbWF0aW9uRnJhbWUoKCk9Pnt2YXIgYjsoYj14KT09bnVsbHx8Yi5vYnNlcnZlKHQpfSkpLHIoKX0pLHUmJiFjJiZ4Lm9ic2VydmUodSkseC5vYnNlcnZlKHQpKTtsZXQgdixtPWM/Y2koZSk6bnVsbDtjJiZ3KCk7ZnVuY3Rpb24gdygpe2NvbnN0IGg9Y2koZSk7bSYmIWZ3KG0saCkmJnIoKSxtPWgsdj1yZXF1ZXN0QW5pbWF0aW9uRnJhbWUodyl9cmV0dXJuIHIoKSwoKT0+e3ZhciBoO2QuZm9yRWFjaChnPT57cyYmZy5yZW1vdmVFdmVudExpc3RlbmVyKCJzY3JvbGwiLHIpLGEmJmcucmVtb3ZlRXZlbnRMaXN0ZW5lcigicmVzaXplIixyKX0pLGY9PW51bGx8fGYoKSwoaD14KT09bnVsbHx8aC5kaXNjb25uZWN0KCkseD1udWxsLGMmJmNhbmNlbEFuaW1hdGlvbkZyYW1lKHYpfX1jb25zdCBCMj1iMixIMj1qMixXMj12MixxMj1TMixHMj15MixSZz14MixRMj1OMixaMj0oZSx0LHIpPT57Y29uc3Qgbj1uZXcgTWFwLHM9e3BsYXRmb3JtOnoyLC4uLnJ9LGE9ey4uLnMucGxhdGZvcm0sX2M6bn07cmV0dXJuIGcyKGUsdCx7Li4ucyxwbGF0Zm9ybTphfSl9O3ZhciBYbD10eXBlb2YgZG9jdW1lbnQ8InUiP3kudXNlTGF5b3V0RWZmZWN0OnkudXNlRWZmZWN0O2Z1bmN0aW9uIEZjKGUsdCl7aWYoZT09PXQpcmV0dXJuITA7aWYodHlwZW9mIGUhPXR5cGVvZiB0KXJldHVybiExO2lmKHR5cGVvZiBlPT0iZnVuY3Rpb24iJiZlLnRvU3RyaW5nKCk9PT10LnRvU3RyaW5nKCkpcmV0dXJuITA7bGV0IHIsbixzO2lmKGUmJnQmJnR5cGVvZiBlPT0ib2JqZWN0Iil7aWYoQXJyYXkuaXNBcnJheShlKSl7aWYocj1lLmxlbmd0aCxyIT09dC5sZW5ndGgpcmV0dXJuITE7Zm9yKG49cjtuLS0hPT0wOylpZighRmMoZVtuXSx0W25dKSlyZXR1cm4hMTtyZXR1cm4hMH1pZihzPU9iamVjdC5rZXlzKGUpLHI9cy5sZW5ndGgsciE9PU9iamVjdC5rZXlzKHQpLmxlbmd0aClyZXR1cm4hMTtmb3Iobj1yO24tLSE9PTA7KWlmKCF7fS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHQsc1tuXSkpcmV0dXJuITE7Zm9yKG49cjtuLS0hPT0wOyl7Y29uc3QgYT1zW25dO2lmKCEoYT09PSJfb3duZXIiJiZlLiQkdHlwZW9mKSYmIUZjKGVbYV0sdFthXSkpcmV0dXJuITF9cmV0dXJuITB9cmV0dXJuIGUhPT1lJiZ0IT09dH1mdW5jdGlvbiBtdyhlKXtyZXR1cm4gdHlwZW9mIHdpbmRvdz4idSI/MTooZS5vd25lckRvY3VtZW50LmRlZmF1bHRWaWV3fHx3aW5kb3cpLmRldmljZVBpeGVsUmF0aW98fDF9ZnVuY3Rpb24gQWcoZSx0KXtjb25zdCByPW13KGUpO3JldHVybiBNYXRoLnJvdW5kKHQqcikvcn1mdW5jdGlvbiBtZChlKXtjb25zdCB0PXkudXNlUmVmKGUpO3JldHVybiBYbCgoKT0+e3QuY3VycmVudD1lfSksdH1mdW5jdGlvbiBLMihlKXtlPT09dm9pZCAwJiYoZT17fSk7Y29uc3R7cGxhY2VtZW50OnQ9ImJvdHRvbSIsc3RyYXRlZ3k6cj0iYWJzb2x1dGUiLG1pZGRsZXdhcmU6bj1bXSxwbGF0Zm9ybTpzLGVsZW1lbnRzOntyZWZlcmVuY2U6YSxmbG9hdGluZzpvfT17fSx0cmFuc2Zvcm06bD0hMCx3aGlsZUVsZW1lbnRzTW91bnRlZDpjLG9wZW46dX09ZSxbZCxmXT15LnVzZVN0YXRlKHt4OjAseTowLHN0cmF0ZWd5OnIscGxhY2VtZW50OnQsbWlkZGxld2FyZURhdGE6e30saXNQb3NpdGlvbmVkOiExfSksW3AseF09eS51c2VTdGF0ZShuKTtGYyhwLG4pfHx4KG4pO2NvbnN0W3YsbV09eS51c2VTdGF0ZShudWxsKSxbdyxoXT15LnVzZVN0YXRlKG51bGwpLGc9eS51c2VDYWxsYmFjayhNPT57TSE9PV8uY3VycmVudCYmKF8uY3VycmVudD1NLG0oTSkpfSxbXSksYj15LnVzZUNhbGxiYWNrKE09PntNIT09ay5jdXJyZW50JiYoay5jdXJyZW50PU0saChNKSl9LFtdKSxOPWF8fHYsUz1vfHx3LF89eS51c2VSZWYobnVsbCksaz15LnVzZVJlZihudWxsKSxUPXkudXNlUmVmKGQpLEw9YyE9bnVsbCxQPW1kKGMpLGo9bWQocyksST1tZCh1KSxWPXkudXNlQ2FsbGJhY2soKCk9PntpZighXy5jdXJyZW50fHwhay5jdXJyZW50KXJldHVybjtjb25zdCBNPXtwbGFjZW1lbnQ6dCxzdHJhdGVneTpyLG1pZGRsZXdhcmU6cH07ai5jdXJyZW50JiYoTS5wbGF0Zm9ybT1qLmN1cnJlbnQpLFoyKF8uY3VycmVudCxrLmN1cnJlbnQsTSkudGhlbigkPT57Y29uc3QgRD17Li4uJCxpc1Bvc2l0aW9uZWQ6SS5jdXJyZW50IT09ITF9O08uY3VycmVudCYmIUZjKFQuY3VycmVudCxEKSYmKFQuY3VycmVudD1ELGdpLmZsdXNoU3luYygoKT0+e2YoRCl9KSl9KX0sW3AsdCxyLGosSV0pO1hsKCgpPT57dT09PSExJiZULmN1cnJlbnQuaXNQb3NpdGlvbmVkJiYoVC5jdXJyZW50LmlzUG9zaXRpb25lZD0hMSxmKE09Pih7Li4uTSxpc1Bvc2l0aW9uZWQ6ITF9KSkpfSxbdV0pO2NvbnN0IE89eS51c2VSZWYoITEpO1hsKCgpPT4oTy5jdXJyZW50PSEwLCgpPT57Ty5jdXJyZW50PSExfSksW10pLFhsKCgpPT57aWYoTiYmKF8uY3VycmVudD1OKSxTJiYoay5jdXJyZW50PVMpLE4mJlMpe2lmKFAuY3VycmVudClyZXR1cm4gUC5jdXJyZW50KE4sUyxWKTtWKCl9fSxbTixTLFYsUCxMXSk7Y29uc3QgWj15LnVzZU1lbW8oKCk9Pih7cmVmZXJlbmNlOl8sZmxvYXRpbmc6ayxzZXRSZWZlcmVuY2U6ZyxzZXRGbG9hdGluZzpifSksW2csYl0pLFE9eS51c2VNZW1vKCgpPT4oe3JlZmVyZW5jZTpOLGZsb2F0aW5nOlN9KSxbTixTXSksQT15LnVzZU1lbW8oKCk9Pntjb25zdCBNPXtwb3NpdGlvbjpyLGxlZnQ6MCx0b3A6MH07aWYoIVEuZmxvYXRpbmcpcmV0dXJuIE07Y29uc3QgJD1BZyhRLmZsb2F0aW5nLGQueCksRD1BZyhRLmZsb2F0aW5nLGQueSk7cmV0dXJuIGw/ey4uLk0sdHJhbnNmb3JtOiJ0cmFuc2xhdGUoIiskKyJweCwgIitEKyJweCkiLC4uLm13KFEuZmxvYXRpbmcpPj0xLjUmJnt3aWxsQ2hhbmdlOiJ0cmFuc2Zvcm0ifX06e3Bvc2l0aW9uOnIsbGVmdDokLHRvcDpEfX0sW3IsbCxRLmZsb2F0aW5nLGQueCxkLnldKTtyZXR1cm4geS51c2VNZW1vKCgpPT4oey4uLmQsdXBkYXRlOlYscmVmczpaLGVsZW1lbnRzOlEsZmxvYXRpbmdTdHlsZXM6QX0pLFtkLFYsWixRLEFdKX1jb25zdCBZMj1lPT57ZnVuY3Rpb24gdChyKXtyZXR1cm57fS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHIsImN1cnJlbnQiKX1yZXR1cm57bmFtZToiYXJyb3ciLG9wdGlvbnM6ZSxmbihyKXtjb25zdHtlbGVtZW50Om4scGFkZGluZzpzfT10eXBlb2YgZT09ImZ1bmN0aW9uIj9lKHIpOmU7cmV0dXJuIG4mJnQobik/bi5jdXJyZW50IT1udWxsP1JnKHtlbGVtZW50Om4uY3VycmVudCxwYWRkaW5nOnN9KS5mbihyKTp7fTpuP1JnKHtlbGVtZW50Om4scGFkZGluZzpzfSkuZm4ocik6e319fX0sWDI9KGUsdCk9Pih7Li4uQjIoZSksb3B0aW9uczpbZSx0XX0pLEoyPShlLHQpPT4oey4uLkgyKGUpLG9wdGlvbnM6W2UsdF19KSxlQz0oZSx0KT0+KHsuLi5RMihlKSxvcHRpb25zOltlLHRdfSksdEM9KGUsdCk9Pih7Li4uVzIoZSksb3B0aW9uczpbZSx0XX0pLHJDPShlLHQpPT4oey4uLnEyKGUpLG9wdGlvbnM6W2UsdF19KSxuQz0oZSx0KT0+KHsuLi5HMihlKSxvcHRpb25zOltlLHRdfSksc0M9KGUsdCk9Pih7Li4uWTIoZSksb3B0aW9uczpbZSx0XX0pO3ZhciBpQz0iQXJyb3ciLGh3PXkuZm9yd2FyZFJlZigoZSx0KT0+e2NvbnN0e2NoaWxkcmVuOnIsd2lkdGg6bj0xMCxoZWlnaHQ6cz01LC4uLmF9PWU7cmV0dXJuIGkuanN4KGtlLnN2Zyx7Li4uYSxyZWY6dCx3aWR0aDpuLGhlaWdodDpzLHZpZXdCb3g6IjAgMCAzMCAxMCIscHJlc2VydmVBc3BlY3RSYXRpbzoibm9uZSIsY2hpbGRyZW46ZS5hc0NoaWxkP3I6aS5qc3goInBvbHlnb24iLHtwb2ludHM6IjAsMCAzMCwwIDE1LDEwIn0pfSl9KTtody5kaXNwbGF5TmFtZT1pQzt2YXIgYUM9aHc7ZnVuY3Rpb24gRWgoZSl7Y29uc3RbdCxyXT15LnVzZVN0YXRlKHZvaWQgMCk7cmV0dXJuIER0KCgpPT57aWYoZSl7cih7d2lkdGg6ZS5vZmZzZXRXaWR0aCxoZWlnaHQ6ZS5vZmZzZXRIZWlnaHR9KTtjb25zdCBuPW5ldyBSZXNpemVPYnNlcnZlcihzPT57aWYoIUFycmF5LmlzQXJyYXkocyl8fCFzLmxlbmd0aClyZXR1cm47Y29uc3QgYT1zWzBdO2xldCBvLGw7aWYoImJvcmRlckJveFNpemUiaW4gYSl7Y29uc3QgYz1hLmJvcmRlckJveFNpemUsdT1BcnJheS5pc0FycmF5KGMpP2NbMF06YztvPXUuaW5saW5lU2l6ZSxsPXUuYmxvY2tTaXplfWVsc2Ugbz1lLm9mZnNldFdpZHRoLGw9ZS5vZmZzZXRIZWlnaHQ7cih7d2lkdGg6byxoZWlnaHQ6bH0pfSk7cmV0dXJuIG4ub2JzZXJ2ZShlLHtib3g6ImJvcmRlci1ib3gifSksKCk9Pm4udW5vYnNlcnZlKGUpfWVsc2Ugcih2b2lkIDApfSxbZV0pLHR9dmFyIENoPSJQb3BwZXIiLFtwdyx3dV09QXMoQ2gpLFtvQyxnd109cHcoQ2gpLHh3PWU9Pntjb25zdHtfX3Njb3BlUG9wcGVyOnQsY2hpbGRyZW46cn09ZSxbbixzXT15LnVzZVN0YXRlKG51bGwpO3JldHVybiBpLmpzeChvQyx7c2NvcGU6dCxhbmNob3I6bixvbkFuY2hvckNoYW5nZTpzLGNoaWxkcmVuOnJ9KX07eHcuZGlzcGxheU5hbWU9Q2g7dmFyIHZ3PSJQb3BwZXJBbmNob3IiLHl3PXkuZm9yd2FyZFJlZigoZSx0KT0+e2NvbnN0e19fc2NvcGVQb3BwZXI6cix2aXJ0dWFsUmVmOm4sLi4uc309ZSxhPWd3KHZ3LHIpLG89eS51c2VSZWYobnVsbCksbD1ldCh0LG8pO3JldHVybiB5LnVzZUVmZmVjdCgoKT0+e2Eub25BbmNob3JDaGFuZ2UoKG49PW51bGw/dm9pZCAwOm4uY3VycmVudCl8fG8uY3VycmVudCl9KSxuP251bGw6aS5qc3goa2UuZGl2LHsuLi5zLHJlZjpsfSl9KTt5dy5kaXNwbGF5TmFtZT12dzt2YXIgX2g9IlBvcHBlckNvbnRlbnQiLFtsQyxjQ109cHcoX2gpLHd3PXkuZm9yd2FyZFJlZigoZSx0KT0+e3ZhciBjZSxJZSxvdCxoZSxLLGFlO2NvbnN0e19fc2NvcGVQb3BwZXI6cixzaWRlOm49ImJvdHRvbSIsc2lkZU9mZnNldDpzPTAsYWxpZ246YT0iY2VudGVyIixhbGlnbk9mZnNldDpvPTAsYXJyb3dQYWRkaW5nOmw9MCxhdm9pZENvbGxpc2lvbnM6Yz0hMCxjb2xsaXNpb25Cb3VuZGFyeTp1PVtdLGNvbGxpc2lvblBhZGRpbmc6ZD0wLHN0aWNreTpmPSJwYXJ0aWFsIixoaWRlV2hlbkRldGFjaGVkOnA9ITEsdXBkYXRlUG9zaXRpb25TdHJhdGVneTp4PSJvcHRpbWl6ZWQiLG9uUGxhY2VkOnYsLi4ubX09ZSx3PWd3KF9oLHIpLFtoLGddPXkudXNlU3RhdGUobnVsbCksYj1ldCh0LG9lPT5nKG9lKSksW04sU109eS51c2VTdGF0ZShudWxsKSxfPUVoKE4pLGs9KF89PW51bGw/dm9pZCAwOl8ud2lkdGgpPz8wLFQ9KF89PW51bGw/dm9pZCAwOl8uaGVpZ2h0KT8/MCxMPW4rKGEhPT0iY2VudGVyIj8iLSIrYToiIiksUD10eXBlb2YgZD09Im51bWJlciI/ZDp7dG9wOjAscmlnaHQ6MCxib3R0b206MCxsZWZ0OjAsLi4uZH0saj1BcnJheS5pc0FycmF5KHUpP3U6W3VdLEk9ai5sZW5ndGg+MCxWPXtwYWRkaW5nOlAsYm91bmRhcnk6ai5maWx0ZXIoZEMpLGFsdEJvdW5kYXJ5Okl9LHtyZWZzOk8sZmxvYXRpbmdTdHlsZXM6WixwbGFjZW1lbnQ6USxpc1Bvc2l0aW9uZWQ6QSxtaWRkbGV3YXJlRGF0YTpNfT1LMih7c3RyYXRlZ3k6ImZpeGVkIixwbGFjZW1lbnQ6TCx3aGlsZUVsZW1lbnRzTW91bnRlZDooLi4ub2UpPT5VMiguLi5vZSx7YW5pbWF0aW9uRnJhbWU6eD09PSJhbHdheXMifSksZWxlbWVudHM6e3JlZmVyZW5jZTp3LmFuY2hvcn0sbWlkZGxld2FyZTpbWDIoe21haW5BeGlzOnMrVCxhbGlnbm1lbnRBeGlzOm99KSxjJiZKMih7bWFpbkF4aXM6ITAsY3Jvc3NBeGlzOiExLGxpbWl0ZXI6Zj09PSJwYXJ0aWFsIj9lQygpOnZvaWQgMCwuLi5WfSksYyYmdEMoey4uLlZ9KSxyQyh7Li4uVixhcHBseTooe2VsZW1lbnRzOm9lLHJlY3RzOkxlLGF2YWlsYWJsZVdpZHRoOlJlLGF2YWlsYWJsZUhlaWdodDpEZX0pPT57Y29uc3R7d2lkdGg6U3QsaGVpZ2h0OkZzfT1MZS5yZWZlcmVuY2Usem49b2UuZmxvYXRpbmcuc3R5bGU7em4uc2V0UHJvcGVydHkoIi0tcmFkaXgtcG9wcGVyLWF2YWlsYWJsZS13aWR0aCIsYCR7UmV9cHhgKSx6bi5zZXRQcm9wZXJ0eSgiLS1yYWRpeC1wb3BwZXItYXZhaWxhYmxlLWhlaWdodCIsYCR7RGV9cHhgKSx6bi5zZXRQcm9wZXJ0eSgiLS1yYWRpeC1wb3BwZXItYW5jaG9yLXdpZHRoIixgJHtTdH1weGApLHpuLnNldFByb3BlcnR5KCItLXJhZGl4LXBvcHBlci1hbmNob3ItaGVpZ2h0IixgJHtGc31weGApfX0pLE4mJnNDKHtlbGVtZW50Ok4scGFkZGluZzpsfSksZkMoe2Fycm93V2lkdGg6ayxhcnJvd0hlaWdodDpUfSkscCYmbkMoe3N0cmF0ZWd5OiJyZWZlcmVuY2VIaWRkZW4iLC4uLlZ9KV19KSxbJCxEXT1OdyhRKSxSPXByKHYpO0R0KCgpPT57QSYmKFI9PW51bGx8fFIoKSl9LFtBLFJdKTtjb25zdCBmZT0oY2U9TS5hcnJvdyk9PW51bGw/dm9pZCAwOmNlLngsZHQ9KEllPU0uYXJyb3cpPT1udWxsP3ZvaWQgMDpJZS55LHR0PSgob3Q9TS5hcnJvdyk9PW51bGw/dm9pZCAwOm90LmNlbnRlck9mZnNldCkhPT0wLFtfdCx4dF09eS51c2VTdGF0ZSgpO3JldHVybiBEdCgoKT0+e2gmJnh0KHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKGgpLnpJbmRleCl9LFtoXSksaS5qc3goImRpdiIse3JlZjpPLnNldEZsb2F0aW5nLCJkYXRhLXJhZGl4LXBvcHBlci1jb250ZW50LXdyYXBwZXIiOiIiLHN0eWxlOnsuLi5aLHRyYW5zZm9ybTpBP1oudHJhbnNmb3JtOiJ0cmFuc2xhdGUoMCwgLTIwMCUpIixtaW5XaWR0aDoibWF4LWNvbnRlbnQiLHpJbmRleDpfdCwiLS1yYWRpeC1wb3BwZXItdHJhbnNmb3JtLW9yaWdpbiI6WyhoZT1NLnRyYW5zZm9ybU9yaWdpbik9PW51bGw/dm9pZCAwOmhlLngsKEs9TS50cmFuc2Zvcm1PcmlnaW4pPT1udWxsP3ZvaWQgMDpLLnldLmpvaW4oIiAiKSwuLi4oKGFlPU0uaGlkZSk9PW51bGw/dm9pZCAwOmFlLnJlZmVyZW5jZUhpZGRlbikmJnt2aXNpYmlsaXR5OiJoaWRkZW4iLHBvaW50ZXJFdmVudHM6Im5vbmUifX0sZGlyOmUuZGlyLGNoaWxkcmVuOmkuanN4KGxDLHtzY29wZTpyLHBsYWNlZFNpZGU6JCxvbkFycm93Q2hhbmdlOlMsYXJyb3dYOmZlLGFycm93WTpkdCxzaG91bGRIaWRlQXJyb3c6dHQsY2hpbGRyZW46aS5qc3goa2UuZGl2LHsiZGF0YS1zaWRlIjokLCJkYXRhLWFsaWduIjpELC4uLm0scmVmOmIsc3R5bGU6ey4uLm0uc3R5bGUsYW5pbWF0aW9uOkE/dm9pZCAwOiJub25lIn19KX0pfSl9KTt3dy5kaXNwbGF5TmFtZT1faDt2YXIgYnc9IlBvcHBlckFycm93Iix1Qz17dG9wOiJib3R0b20iLHJpZ2h0OiJsZWZ0Iixib3R0b206InRvcCIsbGVmdDoicmlnaHQifSxqdz15LmZvcndhcmRSZWYoZnVuY3Rpb24odCxyKXtjb25zdHtfX3Njb3BlUG9wcGVyOm4sLi4uc309dCxhPWNDKGJ3LG4pLG89dUNbYS5wbGFjZWRTaWRlXTtyZXR1cm4gaS5qc3goInNwYW4iLHtyZWY6YS5vbkFycm93Q2hhbmdlLHN0eWxlOntwb3NpdGlvbjoiYWJzb2x1dGUiLGxlZnQ6YS5hcnJvd1gsdG9wOmEuYXJyb3dZLFtvXTowLHRyYW5zZm9ybU9yaWdpbjp7dG9wOiIiLHJpZ2h0OiIwIDAiLGJvdHRvbToiY2VudGVyIDAiLGxlZnQ6IjEwMCUgMCJ9W2EucGxhY2VkU2lkZV0sdHJhbnNmb3JtOnt0b3A6InRyYW5zbGF0ZVkoMTAwJSkiLHJpZ2h0OiJ0cmFuc2xhdGVZKDUwJSkgcm90YXRlKDkwZGVnKSB0cmFuc2xhdGVYKC01MCUpIixib3R0b206InJvdGF0ZSgxODBkZWcpIixsZWZ0OiJ0cmFuc2xhdGVZKDUwJSkgcm90YXRlKC05MGRlZykgdHJhbnNsYXRlWCg1MCUpIn1bYS5wbGFjZWRTaWRlXSx2aXNpYmlsaXR5OmEuc2hvdWxkSGlkZUFycm93PyJoaWRkZW4iOnZvaWQgMH0sY2hpbGRyZW46aS5qc3goYUMsey4uLnMscmVmOnIsc3R5bGU6ey4uLnMuc3R5bGUsZGlzcGxheToiYmxvY2sifX0pfSl9KTtqdy5kaXNwbGF5TmFtZT1idztmdW5jdGlvbiBkQyhlKXtyZXR1cm4gZSE9PW51bGx9dmFyIGZDPWU9Pih7bmFtZToidHJhbnNmb3JtT3JpZ2luIixvcHRpb25zOmUsZm4odCl7dmFyIHcsaCxnO2NvbnN0e3BsYWNlbWVudDpyLHJlY3RzOm4sbWlkZGxld2FyZURhdGE6c309dCxvPSgodz1zLmFycm93KT09bnVsbD92b2lkIDA6dy5jZW50ZXJPZmZzZXQpIT09MCxsPW8/MDplLmFycm93V2lkdGgsYz1vPzA6ZS5hcnJvd0hlaWdodCxbdSxkXT1OdyhyKSxmPXtzdGFydDoiMCUiLGNlbnRlcjoiNTAlIixlbmQ6IjEwMCUifVtkXSxwPSgoKGg9cy5hcnJvdyk9PW51bGw/dm9pZCAwOmgueCk/PzApK2wvMix4PSgoKGc9cy5hcnJvdyk9PW51bGw/dm9pZCAwOmcueSk/PzApK2MvMjtsZXQgdj0iIixtPSIiO3JldHVybiB1PT09ImJvdHRvbSI/KHY9bz9mOmAke3B9cHhgLG09YCR7LWN9cHhgKTp1PT09InRvcCI/KHY9bz9mOmAke3B9cHhgLG09YCR7bi5mbG9hdGluZy5oZWlnaHQrY31weGApOnU9PT0icmlnaHQiPyh2PWAkey1jfXB4YCxtPW8/ZjpgJHt4fXB4YCk6dT09PSJsZWZ0IiYmKHY9YCR7bi5mbG9hdGluZy53aWR0aCtjfXB4YCxtPW8/ZjpgJHt4fXB4YCkse2RhdGE6e3g6dix5Om19fX19KTtmdW5jdGlvbiBOdyhlKXtjb25zdFt0LHI9ImNlbnRlciJdPWUuc3BsaXQoIi0iKTtyZXR1cm5bdCxyXX12YXIgbUM9eHcsU3c9eXcsa3c9d3csRXc9ancsW2J1LElSXT1BcygiVG9vbHRpcCIsW3d1XSksUGg9d3UoKSxDdz0iVG9vbHRpcFByb3ZpZGVyIixoQz03MDAsTWc9InRvb2x0aXAub3BlbiIsW3BDLF93XT1idShDdyksUHc9ZT0+e2NvbnN0e19fc2NvcGVUb29sdGlwOnQsZGVsYXlEdXJhdGlvbjpyPWhDLHNraXBEZWxheUR1cmF0aW9uOm49MzAwLGRpc2FibGVIb3ZlcmFibGVDb250ZW50OnM9ITEsY2hpbGRyZW46YX09ZSxvPXkudXNlUmVmKCEwKSxsPXkudXNlUmVmKCExKSxjPXkudXNlUmVmKDApO3JldHVybiB5LnVzZUVmZmVjdCgoKT0+e2NvbnN0IHU9Yy5jdXJyZW50O3JldHVybigpPT53aW5kb3cuY2xlYXJUaW1lb3V0KHUpfSxbXSksaS5qc3gocEMse3Njb3BlOnQsaXNPcGVuRGVsYXllZFJlZjpvLGRlbGF5RHVyYXRpb246cixvbk9wZW46eS51c2VDYWxsYmFjaygoKT0+e3dpbmRvdy5jbGVhclRpbWVvdXQoYy5jdXJyZW50KSxvLmN1cnJlbnQ9ITF9LFtdKSxvbkNsb3NlOnkudXNlQ2FsbGJhY2soKCk9Pnt3aW5kb3cuY2xlYXJUaW1lb3V0KGMuY3VycmVudCksYy5jdXJyZW50PXdpbmRvdy5zZXRUaW1lb3V0KCgpPT5vLmN1cnJlbnQ9ITAsbil9LFtuXSksaXNQb2ludGVySW5UcmFuc2l0UmVmOmwsb25Qb2ludGVySW5UcmFuc2l0Q2hhbmdlOnkudXNlQ2FsbGJhY2sodT0+e2wuY3VycmVudD11fSxbXSksZGlzYWJsZUhvdmVyYWJsZUNvbnRlbnQ6cyxjaGlsZHJlbjphfSl9O1B3LmRpc3BsYXlOYW1lPUN3O3ZhciBUdz0iVG9vbHRpcCIsW0xSLGp1XT1idShUdyksS2Y9IlRvb2x0aXBUcmlnZ2VyIixnQz15LmZvcndhcmRSZWYoKGUsdCk9Pntjb25zdHtfX3Njb3BlVG9vbHRpcDpyLC4uLm59PWUscz1qdShLZixyKSxhPV93KEtmLHIpLG89UGgociksbD15LnVzZVJlZihudWxsKSxjPWV0KHQsbCxzLm9uVHJpZ2dlckNoYW5nZSksdT15LnVzZVJlZighMSksZD15LnVzZVJlZighMSksZj15LnVzZUNhbGxiYWNrKCgpPT51LmN1cnJlbnQ9ITEsW10pO3JldHVybiB5LnVzZUVmZmVjdCgoKT0+KCk9PmRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoInBvaW50ZXJ1cCIsZiksW2ZdKSxpLmpzeChTdyx7YXNDaGlsZDohMCwuLi5vLGNoaWxkcmVuOmkuanN4KGtlLmJ1dHRvbix7ImFyaWEtZGVzY3JpYmVkYnkiOnMub3Blbj9zLmNvbnRlbnRJZDp2b2lkIDAsImRhdGEtc3RhdGUiOnMuc3RhdGVBdHRyaWJ1dGUsLi4ubixyZWY6YyxvblBvaW50ZXJNb3ZlOndlKGUub25Qb2ludGVyTW92ZSxwPT57cC5wb2ludGVyVHlwZSE9PSJ0b3VjaCImJiFkLmN1cnJlbnQmJiFhLmlzUG9pbnRlckluVHJhbnNpdFJlZi5jdXJyZW50JiYocy5vblRyaWdnZXJFbnRlcigpLGQuY3VycmVudD0hMCl9KSxvblBvaW50ZXJMZWF2ZTp3ZShlLm9uUG9pbnRlckxlYXZlLCgpPT57cy5vblRyaWdnZXJMZWF2ZSgpLGQuY3VycmVudD0hMX0pLG9uUG9pbnRlckRvd246d2UoZS5vblBvaW50ZXJEb3duLCgpPT57cy5vcGVuJiZzLm9uQ2xvc2UoKSx1LmN1cnJlbnQ9ITAsZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigicG9pbnRlcnVwIixmLHtvbmNlOiEwfSl9KSxvbkZvY3VzOndlKGUub25Gb2N1cywoKT0+e3UuY3VycmVudHx8cy5vbk9wZW4oKX0pLG9uQmx1cjp3ZShlLm9uQmx1cixzLm9uQ2xvc2UpLG9uQ2xpY2s6d2UoZS5vbkNsaWNrLHMub25DbG9zZSl9KX0pfSk7Z0MuZGlzcGxheU5hbWU9S2Y7dmFyIHhDPSJUb29sdGlwUG9ydGFsIixbRFIsdkNdPWJ1KHhDLHtmb3JjZU1vdW50OnZvaWQgMH0pLHZhPSJUb29sdGlwQ29udGVudCIsUnc9eS5mb3J3YXJkUmVmKChlLHQpPT57Y29uc3Qgcj12Qyh2YSxlLl9fc2NvcGVUb29sdGlwKSx7Zm9yY2VNb3VudDpuPXIuZm9yY2VNb3VudCxzaWRlOnM9InRvcCIsLi4uYX09ZSxvPWp1KHZhLGUuX19zY29wZVRvb2x0aXApO3JldHVybiBpLmpzeChtdSx7cHJlc2VudDpufHxvLm9wZW4sY2hpbGRyZW46by5kaXNhYmxlSG92ZXJhYmxlQ29udGVudD9pLmpzeChBdyx7c2lkZTpzLC4uLmEscmVmOnR9KTppLmpzeCh5Qyx7c2lkZTpzLC4uLmEscmVmOnR9KX0pfSkseUM9eS5mb3J3YXJkUmVmKChlLHQpPT57Y29uc3Qgcj1qdSh2YSxlLl9fc2NvcGVUb29sdGlwKSxuPV93KHZhLGUuX19zY29wZVRvb2x0aXApLHM9eS51c2VSZWYobnVsbCksYT1ldCh0LHMpLFtvLGxdPXkudXNlU3RhdGUobnVsbCkse3RyaWdnZXI6YyxvbkNsb3NlOnV9PXIsZD1zLmN1cnJlbnQse29uUG9pbnRlckluVHJhbnNpdENoYW5nZTpmfT1uLHA9eS51c2VDYWxsYmFjaygoKT0+e2wobnVsbCksZighMSl9LFtmXSkseD15LnVzZUNhbGxiYWNrKCh2LG0pPT57Y29uc3Qgdz12LmN1cnJlbnRUYXJnZXQsaD17eDp2LmNsaWVudFgseTp2LmNsaWVudFl9LGc9U0MoaCx3LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpKSxiPWtDKGgsZyksTj1FQyhtLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpKSxTPV9DKFsuLi5iLC4uLk5dKTtsKFMpLGYoITApfSxbZl0pO3JldHVybiB5LnVzZUVmZmVjdCgoKT0+KCk9PnAoKSxbcF0pLHkudXNlRWZmZWN0KCgpPT57aWYoYyYmZCl7Y29uc3Qgdj13PT54KHcsZCksbT13PT54KHcsYyk7cmV0dXJuIGMuYWRkRXZlbnRMaXN0ZW5lcigicG9pbnRlcmxlYXZlIix2KSxkLmFkZEV2ZW50TGlzdGVuZXIoInBvaW50ZXJsZWF2ZSIsbSksKCk9PntjLnJlbW92ZUV2ZW50TGlzdGVuZXIoInBvaW50ZXJsZWF2ZSIsdiksZC5yZW1vdmVFdmVudExpc3RlbmVyKCJwb2ludGVybGVhdmUiLG0pfX19LFtjLGQseCxwXSkseS51c2VFZmZlY3QoKCk9PntpZihvKXtjb25zdCB2PW09Pntjb25zdCB3PW0udGFyZ2V0LGg9e3g6bS5jbGllbnRYLHk6bS5jbGllbnRZfSxnPShjPT1udWxsP3ZvaWQgMDpjLmNvbnRhaW5zKHcpKXx8KGQ9PW51bGw/dm9pZCAwOmQuY29udGFpbnModykpLGI9IUNDKGgsbyk7Zz9wKCk6YiYmKHAoKSx1KCkpfTtyZXR1cm4gZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigicG9pbnRlcm1vdmUiLHYpLCgpPT5kb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCJwb2ludGVybW92ZSIsdil9fSxbYyxkLG8sdSxwXSksaS5qc3goQXcsey4uLmUscmVmOmF9KX0pLFt3QyxiQ109YnUoVHcse2lzSW5zaWRlOiExfSksakM9eGsoIlRvb2x0aXBDb250ZW50IiksQXc9eS5mb3J3YXJkUmVmKChlLHQpPT57Y29uc3R7X19zY29wZVRvb2x0aXA6cixjaGlsZHJlbjpuLCJhcmlhLWxhYmVsIjpzLG9uRXNjYXBlS2V5RG93bjphLG9uUG9pbnRlckRvd25PdXRzaWRlOm8sLi4ubH09ZSxjPWp1KHZhLHIpLHU9UGgocikse29uQ2xvc2U6ZH09YztyZXR1cm4geS51c2VFZmZlY3QoKCk9Pihkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKE1nLGQpLCgpPT5kb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKE1nLGQpKSxbZF0pLHkudXNlRWZmZWN0KCgpPT57aWYoYy50cmlnZ2VyKXtjb25zdCBmPXA9Pntjb25zdCB4PXAudGFyZ2V0O3ghPW51bGwmJnguY29udGFpbnMoYy50cmlnZ2VyKSYmZCgpfTtyZXR1cm4gd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoInNjcm9sbCIsZix7Y2FwdHVyZTohMH0pLCgpPT53aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcigic2Nyb2xsIixmLHtjYXB0dXJlOiEwfSl9fSxbYy50cmlnZ2VyLGRdKSxpLmpzeChmdSx7YXNDaGlsZDohMCxkaXNhYmxlT3V0c2lkZVBvaW50ZXJFdmVudHM6ITEsb25Fc2NhcGVLZXlEb3duOmEsb25Qb2ludGVyRG93bk91dHNpZGU6byxvbkZvY3VzT3V0c2lkZTpmPT5mLnByZXZlbnREZWZhdWx0KCksb25EaXNtaXNzOmQsY2hpbGRyZW46aS5qc3hzKGt3LHsiZGF0YS1zdGF0ZSI6Yy5zdGF0ZUF0dHJpYnV0ZSwuLi51LC4uLmwscmVmOnQsc3R5bGU6ey4uLmwuc3R5bGUsIi0tcmFkaXgtdG9vbHRpcC1jb250ZW50LXRyYW5zZm9ybS1vcmlnaW4iOiJ2YXIoLS1yYWRpeC1wb3BwZXItdHJhbnNmb3JtLW9yaWdpbikiLCItLXJhZGl4LXRvb2x0aXAtY29udGVudC1hdmFpbGFibGUtd2lkdGgiOiJ2YXIoLS1yYWRpeC1wb3BwZXItYXZhaWxhYmxlLXdpZHRoKSIsIi0tcmFkaXgtdG9vbHRpcC1jb250ZW50LWF2YWlsYWJsZS1oZWlnaHQiOiJ2YXIoLS1yYWRpeC1wb3BwZXItYXZhaWxhYmxlLWhlaWdodCkiLCItLXJhZGl4LXRvb2x0aXAtdHJpZ2dlci13aWR0aCI6InZhcigtLXJhZGl4LXBvcHBlci1hbmNob3Itd2lkdGgpIiwiLS1yYWRpeC10b29sdGlwLXRyaWdnZXItaGVpZ2h0IjoidmFyKC0tcmFkaXgtcG9wcGVyLWFuY2hvci1oZWlnaHQpIn0sY2hpbGRyZW46W2kuanN4KGpDLHtjaGlsZHJlbjpufSksaS5qc3god0Mse3Njb3BlOnIsaXNJbnNpZGU6ITAsY2hpbGRyZW46aS5qc3goTGsse2lkOmMuY29udGVudElkLHJvbGU6InRvb2x0aXAiLGNoaWxkcmVuOnN8fG59KX0pXX0pfSl9KTtSdy5kaXNwbGF5TmFtZT12YTt2YXIgTXc9IlRvb2x0aXBBcnJvdyIsTkM9eS5mb3J3YXJkUmVmKChlLHQpPT57Y29uc3R7X19zY29wZVRvb2x0aXA6ciwuLi5ufT1lLHM9UGgocik7cmV0dXJuIGJDKE13LHIpLmlzSW5zaWRlP251bGw6aS5qc3goRXcsey4uLnMsLi4ubixyZWY6dH0pfSk7TkMuZGlzcGxheU5hbWU9TXc7ZnVuY3Rpb24gU0MoZSx0KXtjb25zdCByPU1hdGguYWJzKHQudG9wLWUueSksbj1NYXRoLmFicyh0LmJvdHRvbS1lLnkpLHM9TWF0aC5hYnModC5yaWdodC1lLngpLGE9TWF0aC5hYnModC5sZWZ0LWUueCk7c3dpdGNoKE1hdGgubWluKHIsbixzLGEpKXtjYXNlIGE6cmV0dXJuImxlZnQiO2Nhc2UgczpyZXR1cm4icmlnaHQiO2Nhc2UgcjpyZXR1cm4idG9wIjtjYXNlIG46cmV0dXJuImJvdHRvbSI7ZGVmYXVsdDp0aHJvdyBuZXcgRXJyb3IoInVucmVhY2hhYmxlIil9fWZ1bmN0aW9uIGtDKGUsdCxyPTUpe2NvbnN0IG49W107c3dpdGNoKHQpe2Nhc2UidG9wIjpuLnB1c2goe3g6ZS54LXIseTplLnkrcn0se3g6ZS54K3IseTplLnkrcn0pO2JyZWFrO2Nhc2UiYm90dG9tIjpuLnB1c2goe3g6ZS54LXIseTplLnktcn0se3g6ZS54K3IseTplLnktcn0pO2JyZWFrO2Nhc2UibGVmdCI6bi5wdXNoKHt4OmUueCtyLHk6ZS55LXJ9LHt4OmUueCtyLHk6ZS55K3J9KTticmVhaztjYXNlInJpZ2h0IjpuLnB1c2goe3g6ZS54LXIseTplLnktcn0se3g6ZS54LXIseTplLnkrcn0pO2JyZWFrfXJldHVybiBufWZ1bmN0aW9uIEVDKGUpe2NvbnN0e3RvcDp0LHJpZ2h0OnIsYm90dG9tOm4sbGVmdDpzfT1lO3JldHVyblt7eDpzLHk6dH0se3g6cix5OnR9LHt4OnIseTpufSx7eDpzLHk6bn1dfWZ1bmN0aW9uIENDKGUsdCl7Y29uc3R7eDpyLHk6bn09ZTtsZXQgcz0hMTtmb3IobGV0IGE9MCxvPXQubGVuZ3RoLTE7YTx0Lmxlbmd0aDtvPWErKyl7Y29uc3QgbD10W2FdLngsYz10W2FdLnksdT10W29dLngsZD10W29dLnk7Yz5uIT1kPm4mJnI8KHUtbCkqKG4tYykvKGQtYykrbCYmKHM9IXMpfXJldHVybiBzfWZ1bmN0aW9uIF9DKGUpe2NvbnN0IHQ9ZS5zbGljZSgpO3JldHVybiB0LnNvcnQoKHIsbik9PnIueDxuLng/LTE6ci54Pm4ueD8xOnIueTxuLnk/LTE6ci55Pm4ueT8xOjApLFBDKHQpfWZ1bmN0aW9uIFBDKGUpe2lmKGUubGVuZ3RoPD0xKXJldHVybiBlLnNsaWNlKCk7Y29uc3QgdD1bXTtmb3IobGV0IG49MDtuPGUubGVuZ3RoO24rKyl7Y29uc3Qgcz1lW25dO2Zvcig7dC5sZW5ndGg+PTI7KXtjb25zdCBhPXRbdC5sZW5ndGgtMV0sbz10W3QubGVuZ3RoLTJdO2lmKChhLngtby54KSoocy55LW8ueSk+PShhLnktby55KSoocy54LW8ueCkpdC5wb3AoKTtlbHNlIGJyZWFrfXQucHVzaChzKX10LnBvcCgpO2NvbnN0IHI9W107Zm9yKGxldCBuPWUubGVuZ3RoLTE7bj49MDtuLS0pe2NvbnN0IHM9ZVtuXTtmb3IoO3IubGVuZ3RoPj0yOyl7Y29uc3QgYT1yW3IubGVuZ3RoLTFdLG89cltyLmxlbmd0aC0yXTtpZigoYS54LW8ueCkqKHMueS1vLnkpPj0oYS55LW8ueSkqKHMueC1vLngpKXIucG9wKCk7ZWxzZSBicmVha31yLnB1c2gocyl9cmV0dXJuIHIucG9wKCksdC5sZW5ndGg9PT0xJiZyLmxlbmd0aD09PTEmJnRbMF0ueD09PXJbMF0ueCYmdFswXS55PT09clswXS55P3Q6dC5jb25jYXQocil9dmFyIFRDPVB3LE93PVJ3O2NvbnN0IFJDPVRDLEFDPXkuZm9yd2FyZFJlZigoe2NsYXNzTmFtZTplLHNpZGVPZmZzZXQ6dD00LC4uLnJ9LG4pPT5pLmpzeChPdyx7cmVmOm4sc2lkZU9mZnNldDp0LGNsYXNzTmFtZTpOZSgiei01MCBvdmVyZmxvdy1oaWRkZW4gcm91bmRlZC1tZCBib3JkZXIgYmctcG9wb3ZlciBweC0zIHB5LTEuNSB0ZXh0LXNtIHRleHQtcG9wb3Zlci1mb3JlZ3JvdW5kIHNoYWRvdy1tZCBhbmltYXRlLWluIGZhZGUtaW4tMCB6b29tLWluLTk1IGRhdGEtW3N0YXRlPWNsb3NlZF06YW5pbWF0ZS1vdXQgZGF0YS1bc3RhdGU9Y2xvc2VkXTpmYWRlLW91dC0wIGRhdGEtW3N0YXRlPWNsb3NlZF06em9vbS1vdXQtOTUgZGF0YS1bc2lkZT1ib3R0b21dOnNsaWRlLWluLWZyb20tdG9wLTIgZGF0YS1bc2lkZT1sZWZ0XTpzbGlkZS1pbi1mcm9tLXJpZ2h0LTIgZGF0YS1bc2lkZT1yaWdodF06c2xpZGUtaW4tZnJvbS1sZWZ0LTIgZGF0YS1bc2lkZT10b3BdOnNsaWRlLWluLWZyb20tYm90dG9tLTIgb3JpZ2luLVstLXJhZGl4LXRvb2x0aXAtY29udGVudC10cmFuc2Zvcm0tb3JpZ2luXSIsZSksLi4ucn0pKTtBQy5kaXNwbGF5TmFtZT1Pdy5kaXNwbGF5TmFtZTtmdW5jdGlvbiBXcigpe2NvbnN0e2RhdGE6ZSxpc0xvYWRpbmc6dCxlcnJvcjpyfT1idCh7cXVlcnlLZXk6WyIvYXBpL2F1dGgvdXNlciJdLHF1ZXJ5Rm46bDAoe29uNDAxOiJyZXR1cm5OdWxsIn0pLHJldHJ5OiExLHRocm93T25FcnJvcjohMX0pO3JldHVybnt1c2VyOmUsaXNMb2FkaW5nOnQsaXNBdXRoZW50aWNhdGVkOiEhZSxlcnJvcjpyfX1jb25zdCBNQz1ndSgiaW5saW5lLWZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktY2VudGVyIGdhcC0yIHdoaXRlc3BhY2Utbm93cmFwIHJvdW5kZWQtbWQgdGV4dC1zbSBmb250LW1lZGl1bSByaW5nLW9mZnNldC1iYWNrZ3JvdW5kIHRyYW5zaXRpb24tY29sb3JzIGZvY3VzLXZpc2libGU6b3V0bGluZS1ub25lIGZvY3VzLXZpc2libGU6cmluZy0yIGZvY3VzLXZpc2libGU6cmluZy1yaW5nIGZvY3VzLXZpc2libGU6cmluZy1vZmZzZXQtMiBkaXNhYmxlZDpwb2ludGVyLWV2ZW50cy1ub25lIGRpc2FibGVkOm9wYWNpdHktNTAgWyZfc3ZnXTpwb2ludGVyLWV2ZW50cy1ub25lIFsmX3N2Z106c2l6ZS00IFsmX3N2Z106c2hyaW5rLTAiLHt2YXJpYW50czp7dmFyaWFudDp7ZGVmYXVsdDoiYmctcHJpbWFyeSB0ZXh0LXByaW1hcnktZm9yZWdyb3VuZCBob3ZlcjpiZy1wcmltYXJ5LzkwIixkZXN0cnVjdGl2ZToiYmctZGVzdHJ1Y3RpdmUgdGV4dC1kZXN0cnVjdGl2ZS1mb3JlZ3JvdW5kIGhvdmVyOmJnLWRlc3RydWN0aXZlLzkwIixvdXRsaW5lOiJib3JkZXIgYm9yZGVyLWlucHV0IGJnLWJhY2tncm91bmQgaG92ZXI6YmctYWNjZW50IGhvdmVyOnRleHQtYWNjZW50LWZvcmVncm91bmQiLHNlY29uZGFyeToiYmctc2Vjb25kYXJ5IHRleHQtc2Vjb25kYXJ5LWZvcmVncm91bmQgaG92ZXI6Ymctc2Vjb25kYXJ5LzgwIixnaG9zdDoiaG92ZXI6YmctYWNjZW50IGhvdmVyOnRleHQtYWNjZW50LWZvcmVncm91bmQiLGxpbms6InRleHQtcHJpbWFyeSB1bmRlcmxpbmUtb2Zmc2V0LTQgaG92ZXI6dW5kZXJsaW5lIn0sc2l6ZTp7ZGVmYXVsdDoiaC0xMCBweC00IHB5LTIiLHNtOiJoLTkgcm91bmRlZC1tZCBweC0zIixsZzoiaC0xMSByb3VuZGVkLW1kIHB4LTgiLGljb246ImgtMTAgdy0xMCJ9fSxkZWZhdWx0VmFyaWFudHM6e3ZhcmlhbnQ6ImRlZmF1bHQiLHNpemU6ImRlZmF1bHQifX0pLFk9eS5mb3J3YXJkUmVmKCh7Y2xhc3NOYW1lOmUsdmFyaWFudDp0LHNpemU6cixhc0NoaWxkOm49ITEsLi4uc30sYSk9Pntjb25zdCBvPW4/dTA6ImJ1dHRvbiI7cmV0dXJuIGkuanN4KG8se2NsYXNzTmFtZTpOZShNQyh7dmFyaWFudDp0LHNpemU6cixjbGFzc05hbWU6ZX0pKSxyZWY6YSwuLi5zfSl9KTtZLmRpc3BsYXlOYW1lPSJCdXR0b24iO2NvbnN0IGllPXkuZm9yd2FyZFJlZigoe2NsYXNzTmFtZTplLC4uLnR9LHIpPT5pLmpzeCgiZGl2Iix7cmVmOnIsY2xhc3NOYW1lOk5lKCJyb3VuZGVkLWxnIGJvcmRlciBiZy1jYXJkIHRleHQtY2FyZC1mb3JlZ3JvdW5kIHNoYWRvdy1zbSIsZSksLi4udH0pKTtpZS5kaXNwbGF5TmFtZT0iQ2FyZCI7Y29uc3QgRWU9eS5mb3J3YXJkUmVmKCh7Y2xhc3NOYW1lOmUsLi4udH0scik9PmkuanN4KCJkaXYiLHtyZWY6cixjbGFzc05hbWU6TmUoImZsZXggZmxleC1jb2wgc3BhY2UteS0xLjUgcC02IixlKSwuLi50fSkpO0VlLmRpc3BsYXlOYW1lPSJDYXJkSGVhZGVyIjtjb25zdCBDZT15LmZvcndhcmRSZWYoKHtjbGFzc05hbWU6ZSwuLi50fSxyKT0+aS5qc3goImRpdiIse3JlZjpyLGNsYXNzTmFtZTpOZSgidGV4dC0yeGwgZm9udC1zZW1pYm9sZCBsZWFkaW5nLW5vbmUgdHJhY2tpbmctdGlnaHQiLGUpLC4uLnR9KSk7Q2UuZGlzcGxheU5hbWU9IkNhcmRUaXRsZSI7Y29uc3QgWHI9eS5mb3J3YXJkUmVmKCh7Y2xhc3NOYW1lOmUsLi4udH0scik9PmkuanN4KCJkaXYiLHtyZWY6cixjbGFzc05hbWU6TmUoInRleHQtc20gdGV4dC1tdXRlZC1mb3JlZ3JvdW5kIixlKSwuLi50fSkpO1hyLmRpc3BsYXlOYW1lPSJDYXJkRGVzY3JpcHRpb24iO2NvbnN0IGxlPXkuZm9yd2FyZFJlZigoe2NsYXNzTmFtZTplLC4uLnR9LHIpPT5pLmpzeCgiZGl2Iix7cmVmOnIsY2xhc3NOYW1lOk5lKCJwLTYgcHQtMCIsZSksLi4udH0pKTtsZS5kaXNwbGF5TmFtZT0iQ2FyZENvbnRlbnQiO2NvbnN0IE9DPXkuZm9yd2FyZFJlZigoe2NsYXNzTmFtZTplLC4uLnR9LHIpPT5pLmpzeCgiZGl2Iix7cmVmOnIsY2xhc3NOYW1lOk5lKCJmbGV4IGl0ZW1zLWNlbnRlciBwLTYgcHQtMCIsZSksLi4udH0pKTtPQy5kaXNwbGF5TmFtZT0iQ2FyZEZvb3RlciI7Y29uc3QgRkM9Z3UoImlubGluZS1mbGV4IGl0ZW1zLWNlbnRlciByb3VuZGVkLWZ1bGwgYm9yZGVyIHB4LTIuNSBweS0wLjUgdGV4dC14cyBmb250LXNlbWlib2xkIHRyYW5zaXRpb24tY29sb3JzIGZvY3VzOm91dGxpbmUtbm9uZSBmb2N1czpyaW5nLTIgZm9jdXM6cmluZy1yaW5nIGZvY3VzOnJpbmctb2Zmc2V0LTIiLHt2YXJpYW50czp7dmFyaWFudDp7ZGVmYXVsdDoiYm9yZGVyLXRyYW5zcGFyZW50IGJnLXByaW1hcnkgdGV4dC1wcmltYXJ5LWZvcmVncm91bmQgaG92ZXI6YmctcHJpbWFyeS84MCIsc2Vjb25kYXJ5OiJib3JkZXItdHJhbnNwYXJlbnQgYmctc2Vjb25kYXJ5IHRleHQtc2Vjb25kYXJ5LWZvcmVncm91bmQgaG92ZXI6Ymctc2Vjb25kYXJ5LzgwIixkZXN0cnVjdGl2ZToiYm9yZGVyLXRyYW5zcGFyZW50IGJnLWRlc3RydWN0aXZlIHRleHQtZGVzdHJ1Y3RpdmUtZm9yZWdyb3VuZCBob3ZlcjpiZy1kZXN0cnVjdGl2ZS84MCIsb3V0bGluZToidGV4dC1mb3JlZ3JvdW5kIn19LGRlZmF1bHRWYXJpYW50czp7dmFyaWFudDoiZGVmYXVsdCJ9fSk7ZnVuY3Rpb24gYmUoe2NsYXNzTmFtZTplLHZhcmlhbnQ6dCwuLi5yfSl7cmV0dXJuIGkuanN4KCJkaXYiLHtjbGFzc05hbWU6TmUoRkMoe3ZhcmlhbnQ6dH0pLGUpLC4uLnJ9KX1mdW5jdGlvbiBJQygpe3JldHVybiBpLmpzeHMoImRpdiIse2NsYXNzTmFtZToibWluLWgtc2NyZWVuIGJnLWdyYWRpZW50LXRvLWJyIGZyb20tYmFja2dyb3VuZCB2aWEtYmFja2dyb3VuZCB0by1tdXRlZCIsY2hpbGRyZW46W2kuanN4KCJkaXYiLHtjbGFzc05hbWU6ImNvbnRhaW5lciBteC1hdXRvIHB4LTQgcHktMTYiLGNoaWxkcmVuOmkuanN4cygiZGl2Iix7Y2xhc3NOYW1lOiJ0ZXh0LWNlbnRlciBtYXgtdy00eGwgbXgtYXV0byIsY2hpbGRyZW46W2kuanN4KCJkaXYiLHtjbGFzc05hbWU6ImZsZXgganVzdGlmeS1jZW50ZXIgbWItNiIsY2hpbGRyZW46aS5qc3goImRpdiIse2NsYXNzTmFtZToidy0yMCBoLTIwIGJnLXByaW1hcnkgcm91bmRlZC14bCBmbGV4IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWNlbnRlciBzaGFkb3ctbGciLGNoaWxkcmVuOmkuanN4KFBvLHtjbGFzc05hbWU6InctMTAgaC0xMCB0ZXh0LXByaW1hcnktZm9yZWdyb3VuZCJ9KX0pfSksaS5qc3goImgxIix7Y2xhc3NOYW1lOiJ0ZXh0LTV4bCBmb250LWJvbGQgbWItNiBiZy1ncmFkaWVudC10by1yIGZyb20tcHJpbWFyeSB0by1hY2NlbnQgYmctY2xpcC10ZXh0IHRleHQtdHJhbnNwYXJlbnQiLGNoaWxkcmVuOiJXU00gT0UgTWFuYWdlciJ9KSxpLmpzeCgicCIse2NsYXNzTmFtZToidGV4dC14bCB0ZXh0LW11dGVkLWZvcmVncm91bmQgbWItOCBsZWFkaW5nLXJlbGF4ZWQiLGNoaWxkcmVuOiJDb21wcmVoZW5zaXZlIE9wZXJhdGlvbmFsIEV4Y2VsbGVuY2UgUHJvY2VzcyBNYW5hZ2VtZW50IFN5c3RlbSJ9KSxpLmpzeCgicCIse2NsYXNzTmFtZToidGV4dC1sZyB0ZXh0LW11dGVkLWZvcmVncm91bmQgbWItMTAgbWF4LXctM3hsIG14LWF1dG8iLGNoaWxkcmVuOiJTdHJlYW1saW5lIHlvdXIgT0UgcHJvY2Vzc2VzIHdpdGggb3VyIGVudGVycHJpc2UtZ3JhZGUgcGxhdGZvcm0gZGVzaWduZWQgZm9yIGNyZWF0aW5nLCBtYW5hZ2luZywgYW5kIG9wdGltaXppbmcgb3BlcmF0aW9uYWwgZXhjZWxsZW5jZSB3b3JrZmxvd3Mgd2l0aCBmdWxsIGRvY3VtZW50IGNvbnRyb2wgYW5kIHZlcnNpb24gbWFuYWdlbWVudC4ifSksaS5qc3hzKCJkaXYiLHtjbGFzc05hbWU6ImZsZXggZmxleC1jb2wgc206ZmxleC1yb3cgZ2FwLTQganVzdGlmeS1jZW50ZXIiLGNoaWxkcmVuOltpLmpzeChZLHtzaXplOiJsZyIsY2xhc3NOYW1lOiJweC04IHB5LTQgdGV4dC1sZyIsb25DbGljazooKT0+d2luZG93LmxvY2F0aW9uLmhyZWY9Ii9hcGkvbG9naW4iLCJkYXRhLXRlc3RpZCI6ImJ1dHRvbi1sb2dpbiIsY2hpbGRyZW46IkFjY2VzcyBPRSBNYW5hZ2VyIn0pLGkuanN4KFkse3ZhcmlhbnQ6Im91dGxpbmUiLHNpemU6ImxnIixjbGFzc05hbWU6InB4LTggcHktNCB0ZXh0LWxnIiwiZGF0YS10ZXN0aWQiOiJidXR0b24tbGVhcm4tbW9yZSIsY2hpbGRyZW46IkxlYXJuIE1vcmUifSldfSksaS5qc3goImRpdiIse2NsYXNzTmFtZToibXQtOCBmbGV4IGp1c3RpZnktY2VudGVyIixjaGlsZHJlbjppLmpzeChiZSx7dmFyaWFudDoic2Vjb25kYXJ5IixjbGFzc05hbWU6InB4LTQgcHktMiIsY2hpbGRyZW46IkVudGVycHJpc2UgUmVhZHkg4oCiIERvY3VtZW50IENvbnRyb2wg4oCiIFZlcnNpb24gTWFuYWdlbWVudCJ9KX0pXX0pfSksaS5qc3hzKCJkaXYiLHtjbGFzc05hbWU6ImNvbnRhaW5lciBteC1hdXRvIHB4LTQgcHktMTYiLGNoaWxkcmVuOltpLmpzeHMoImRpdiIse2NsYXNzTmFtZToidGV4dC1jZW50ZXIgbWItMTIiLGNoaWxkcmVuOltpLmpzeCgiaDIiLHtjbGFzc05hbWU6InRleHQtM3hsIGZvbnQtYm9sZCBtYi00IixjaGlsZHJlbjoiUG93ZXJmdWwgT0UgTWFuYWdlbWVudCBGZWF0dXJlcyJ9KSxpLmpzeCgicCIse2NsYXNzTmFtZToidGV4dC1sZyB0ZXh0LW11dGVkLWZvcmVncm91bmQgbWF4LXctMnhsIG14LWF1dG8iLGNoaWxkcmVuOiJFdmVyeXRoaW5nIHlvdSBuZWVkIHRvIGltcGxlbWVudCBhbmQgbWFpbnRhaW4gb3BlcmF0aW9uYWwgZXhjZWxsZW5jZSBwcm9jZXNzZXMifSldfSksaS5qc3hzKCJkaXYiLHtjbGFzc05hbWU6ImdyaWQgZ3JpZC1jb2xzLTEgbWQ6Z3JpZC1jb2xzLTIgbGc6Z3JpZC1jb2xzLTMgZ2FwLTggbWF4LXctNnhsIG14LWF1dG8iLGNoaWxkcmVuOltpLmpzeChpZSx7Y2xhc3NOYW1lOiJ0ZXh0LWNlbnRlciBob3ZlcjpzaGFkb3ctbGcgdHJhbnNpdGlvbi1zaGFkb3ciLGNoaWxkcmVuOmkuanN4cyhFZSx7Y2hpbGRyZW46W2kuanN4KCJkaXYiLHtjbGFzc05hbWU6InctMTIgaC0xMiBiZy1ibHVlLTEwMCByb3VuZGVkLWxnIGZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktY2VudGVyIG14LWF1dG8gbWItNCIsY2hpbGRyZW46aS5qc3goYUUse2NsYXNzTmFtZToidy02IGgtNiB0ZXh0LWJsdWUtNjAwIn0pfSksaS5qc3goQ2Use2NoaWxkcmVuOiJQcm9jZXNzIFRlbXBsYXRlcyJ9KSxpLmpzeChYcix7Y2hpbGRyZW46IlByZS1idWlsdCB0ZW1wbGF0ZXMgZm9yIGFsbCBPRSBlbGVtZW50cyBpbmNsdWRpbmcgTGVhZGVyc2hpcCAmIEFjY291bnRhYmlsaXR5LCBBc3NldCBNYW5hZ2VtZW50LCBhbmQgUmlzayBNYW5hZ2VtZW50In0pXX0pfSksaS5qc3goaWUse2NsYXNzTmFtZToidGV4dC1jZW50ZXIgaG92ZXI6c2hhZG93LWxnIHRyYW5zaXRpb24tc2hhZG93IixjaGlsZHJlbjppLmpzeHMoRWUse2NoaWxkcmVuOltpLmpzeCgiZGl2Iix7Y2xhc3NOYW1lOiJ3LTEyIGgtMTIgYmctZ3JlZW4tMTAwIHJvdW5kZWQtbGcgZmxleCBpdGVtcy1jZW50ZXIganVzdGlmeS1jZW50ZXIgbXgtYXV0byBtYi00IixjaGlsZHJlbjppLmpzeChHMCx7Y2xhc3NOYW1lOiJ3LTYgaC02IHRleHQtZ3JlZW4tNjAwIn0pfSksaS5qc3goQ2Use2NoaWxkcmVuOiJDb2xsYWJvcmF0aW9uIn0pLGkuanN4KFhyLHtjaGlsZHJlbjoiTXVsdGktdXNlciBlZGl0aW5nIHdpdGggcm9sZS1iYXNlZCBhY2Nlc3MgY29udHJvbCBhbmQgcmVhbC10aW1lIGNvbGxhYm9yYXRpb24gZmVhdHVyZXMifSldfSl9KSxpLmpzeChpZSx7Y2xhc3NOYW1lOiJ0ZXh0LWNlbnRlciBob3ZlcjpzaGFkb3ctbGcgdHJhbnNpdGlvbi1zaGFkb3ciLGNoaWxkcmVuOmkuanN4cyhFZSx7Y2hpbGRyZW46W2kuanN4KCJkaXYiLHtjbGFzc05hbWU6InctMTIgaC0xMiBiZy1wdXJwbGUtMTAwIHJvdW5kZWQtbGcgZmxleCBpdGVtcy1jZW50ZXIganVzdGlmeS1jZW50ZXIgbXgtYXV0byBtYi00IixjaGlsZHJlbjppLmpzeCh2cyx7Y2xhc3NOYW1lOiJ3LTYgaC02IHRleHQtcHVycGxlLTYwMCJ9KX0pLGkuanN4KENlLHtjaGlsZHJlbjoiRG9jdW1lbnQgQ29udHJvbCJ9KSxpLmpzeChYcix7Y2hpbGRyZW46IkNvbXBsZXRlIHZlcnNpb24gY29udHJvbCwgYXBwcm92YWwgd29ya2Zsb3dzLCBhbmQgYXVkaXQgdHJhaWxzIGZvciBjb21wbGlhbmNlIHJlcXVpcmVtZW50cyJ9KV19KX0pLGkuanN4KGllLHtjbGFzc05hbWU6InRleHQtY2VudGVyIGhvdmVyOnNoYWRvdy1sZyB0cmFuc2l0aW9uLXNoYWRvdyIsY2hpbGRyZW46aS5qc3hzKEVlLHtjaGlsZHJlbjpbaS5qc3goImRpdiIse2NsYXNzTmFtZToidy0xMiBoLTEyIGJnLW9yYW5nZS0xMDAgcm91bmRlZC1sZyBmbGV4IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWNlbnRlciBteC1hdXRvIG1iLTQiLGNoaWxkcmVuOmkuanN4KFRvLHtjbGFzc05hbWU6InctNiBoLTYgdGV4dC1vcmFuZ2UtNjAwIn0pfSksaS5qc3goQ2Use2NoaWxkcmVuOiJBbmFseXRpY3MgJiBLUElzIn0pLGkuanN4KFhyLHtjaGlsZHJlbjoiQnVpbHQtaW4gcGVyZm9ybWFuY2UgbWVhc3VyZW1lbnQgYW5kIGFuYWx5dGljcyB3aXRoIGN1c3RvbWl6YWJsZSBLUEkgdHJhY2tpbmcifSldfSl9KSxpLmpzeChpZSx7Y2xhc3NOYW1lOiJ0ZXh0LWNlbnRlciBob3ZlcjpzaGFkb3ctbGcgdHJhbnNpdGlvbi1zaGFkb3ciLGNoaWxkcmVuOmkuanN4cyhFZSx7Y2hpbGRyZW46W2kuanN4KCJkaXYiLHtjbGFzc05hbWU6InctMTIgaC0xMiBiZy1pbmRpZ28tMTAwIHJvdW5kZWQtbGcgZmxleCBpdGVtcy1jZW50ZXIganVzdGlmeS1jZW50ZXIgbXgtYXV0byBtYi00IixjaGlsZHJlbjppLmpzeChfcix7Y2xhc3NOYW1lOiJ3LTYgaC02IHRleHQtaW5kaWdvLTYwMCJ9KX0pLGkuanN4KENlLHtjaGlsZHJlbjoiUHJvY2VzcyBNYW5hZ2VtZW50In0pLGkuanN4KFhyLHtjaGlsZHJlbjoiQ29tcHJlaGVuc2l2ZSBwcm9jZXNzIGxpZmVjeWNsZSBtYW5hZ2VtZW50IGZyb20gY3JlYXRpb24gdG8gaW1wbGVtZW50YXRpb24gYW5kIG9wdGltaXphdGlvbiJ9KV19KX0pLGkuanN4KGllLHtjbGFzc05hbWU6InRleHQtY2VudGVyIGhvdmVyOnNoYWRvdy1sZyB0cmFuc2l0aW9uLXNoYWRvdyIsY2hpbGRyZW46aS5qc3hzKEVlLHtjaGlsZHJlbjpbaS5qc3goImRpdiIse2NsYXNzTmFtZToidy0xMiBoLTEyIGJnLXJlZC0xMDAgcm91bmRlZC1sZyBmbGV4IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWNlbnRlciBteC1hdXRvIG1iLTQiLGNoaWxkcmVuOmkuanN4KFBvLHtjbGFzc05hbWU6InctNiBoLTYgdGV4dC1yZWQtNjAwIn0pfSksaS5qc3goQ2Use2NoaWxkcmVuOiJXU00gQ29tcGxpYW5jZSJ9KSxpLmpzeChYcix7Y2hpbGRyZW46IkRlc2lnbmVkIHNwZWNpZmljYWxseSBmb3IgV1NNIE9FIHJlcXVpcmVtZW50cyB3aXRoIGZ1bGwgY29tcGxpYW5jZSB0byBjb21wYW55IHN0YW5kYXJkcyJ9KV19KX0pXX0pXX0pLGkuanN4KCJkaXYiLHtjbGFzc05hbWU6ImJnLXByaW1hcnkgdGV4dC1wcmltYXJ5LWZvcmVncm91bmQgcHktMTYiLGNoaWxkcmVuOmkuanN4cygiZGl2Iix7Y2xhc3NOYW1lOiJjb250YWluZXIgbXgtYXV0byBweC00IHRleHQtY2VudGVyIixjaGlsZHJlbjpbaS5qc3goImgyIix7Y2xhc3NOYW1lOiJ0ZXh0LTN4bCBmb250LWJvbGQgbWItNCIsY2hpbGRyZW46IlJlYWR5IHRvIFRyYW5zZm9ybSBZb3VyIE9FIFByb2Nlc3Nlcz8ifSksaS5qc3goInAiLHtjbGFzc05hbWU6InRleHQteGwgbWItOCBvcGFjaXR5LTkwIG1heC13LTJ4bCBteC1hdXRvIixjaGlsZHJlbjoiSm9pbiB0aGUgZGlnaXRhbCB0cmFuc2Zvcm1hdGlvbiBvZiBvcGVyYXRpb25hbCBleGNlbGxlbmNlIG1hbmFnZW1lbnQifSksaS5qc3goWSx7c2l6ZToibGciLHZhcmlhbnQ6InNlY29uZGFyeSIsY2xhc3NOYW1lOiJweC04IHB5LTQgdGV4dC1sZyIsb25DbGljazooKT0+d2luZG93LmxvY2F0aW9uLmhyZWY9Ii9hcGkvbG9naW4iLCJkYXRhLXRlc3RpZCI6ImJ1dHRvbi1nZXQtc3RhcnRlZCIsY2hpbGRyZW46IkdldCBTdGFydGVkIE5vdyJ9KV19KX0pLGkuanN4KCJmb290ZXIiLHtjbGFzc05hbWU6ImJnLWNhcmQgYm9yZGVyLXQgcHktOCIsY2hpbGRyZW46aS5qc3goImRpdiIse2NsYXNzTmFtZToiY29udGFpbmVyIG14LWF1dG8gcHgtNCB0ZXh0LWNlbnRlciIsY2hpbGRyZW46aS5qc3goInAiLHtjbGFzc05hbWU6InRleHQtbXV0ZWQtZm9yZWdyb3VuZCIsY2hpbGRyZW46IsKpIDIwMjQgV1NNIE9FIE1hbmFnZXIuIEVudGVycHJpc2UgT3BlcmF0aW9uYWwgRXhjZWxsZW5jZSBNYW5hZ2VtZW50IFBsYXRmb3JtLiJ9KX0pfSldfSl9dmFyIExDPSJTZXBhcmF0b3IiLE9nPSJob3Jpem9udGFsIixEQz1bImhvcml6b250YWwiLCJ2ZXJ0aWNhbCJdLEZ3PXkuZm9yd2FyZFJlZigoZSx0KT0+e2NvbnN0e2RlY29yYXRpdmU6cixvcmllbnRhdGlvbjpuPU9nLC4uLnN9PWUsYT0kQyhuKT9uOk9nLGw9cj97cm9sZToibm9uZSJ9OnsiYXJpYS1vcmllbnRhdGlvbiI6YT09PSJ2ZXJ0aWNhbCI/YTp2b2lkIDAscm9sZToic2VwYXJhdG9yIn07cmV0dXJuIGkuanN4KGtlLmRpdix7ImRhdGEtb3JpZW50YXRpb24iOmEsLi4ubCwuLi5zLHJlZjp0fSl9KTtGdy5kaXNwbGF5TmFtZT1MQztmdW5jdGlvbiAkQyhlKXtyZXR1cm4gREMuaW5jbHVkZXMoZSl9dmFyIEl3PUZ3O2NvbnN0IHlhPXkuZm9yd2FyZFJlZigoe2NsYXNzTmFtZTplLG9yaWVudGF0aW9uOnQ9Imhvcml6b250YWwiLGRlY29yYXRpdmU6cj0hMCwuLi5ufSxzKT0+aS5qc3goSXcse3JlZjpzLGRlY29yYXRpdmU6cixvcmllbnRhdGlvbjp0LGNsYXNzTmFtZTpOZSgic2hyaW5rLTAgYmctYm9yZGVyIix0PT09Imhvcml6b250YWwiPyJoLVsxcHhdIHctZnVsbCI6ImgtZnVsbCB3LVsxcHhdIixlKSwuLi5ufSkpO3lhLmRpc3BsYXlOYW1lPUl3LmRpc3BsYXlOYW1lO2Z1bmN0aW9uIEZ0KCl7dmFyIHMsYTtjb25zdFtlXT1haCgpLHt1c2VyOnR9PVdyKCkscj1be25hbWU6IkhvbWUiLGhyZWY6Ii8iLGljb246ZEV9LHtuYW1lOiJBbGwgUHJvY2Vzc2VzIixocmVmOiIvcHJvY2Vzc2VzIixpY29uOllzfSx7bmFtZToiTWluZCBNYXAiLGhyZWY6Ii9taW5kbWFwIixpY29uOldmfSx7bmFtZToiQmFsYW5jZWQgU2NvcmVjYXJkIixocmVmOiIvc2NvcmVjYXJkIixpY29uOnNyfSx7bmFtZToiUmlzayBNYW5hZ2VtZW50IixocmVmOiIvcmlzay1tYW5hZ2VtZW50IixpY29uOnZzfV0sbj1vPT5vPT09Ii8iP2U9PT1vOmUuc3RhcnRzV2l0aChvKTtyZXR1cm4gaS5qc3hzKCJhc2lkZSIse2NsYXNzTmFtZToidy02NCBiZy1zaWRlYmFyIGJvcmRlci1yIGJvcmRlci1zaWRlYmFyLWJvcmRlciBzaWRlYmFyLXNoYWRvdyBoaWRkZW4gbGc6YmxvY2siLGNoaWxkcmVuOltpLmpzeHMoImRpdiIse2NsYXNzTmFtZToicC02IixjaGlsZHJlbjpbaS5qc3hzKCJkaXYiLHtjbGFzc05hbWU6ImZsZXggaXRlbXMtY2VudGVyIHNwYWNlLXgtMyBtYi04IixjaGlsZHJlbjpbaS5qc3goImRpdiIse2NsYXNzTmFtZToidy0xMCBoLTEwIGJnLXNpZGViYXItcHJpbWFyeSByb3VuZGVkLWxnIGZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktY2VudGVyIixjaGlsZHJlbjppLmpzeChQbyx7Y2xhc3NOYW1lOiJ0ZXh0LXNpZGViYXItcHJpbWFyeS1mb3JlZ3JvdW5kIHRleHQtbGcifSl9KSxpLmpzeHMoImRpdiIse2NoaWxkcmVuOltpLmpzeCgiaDEiLHtjbGFzc05hbWU6InRleHQtbGcgZm9udC1zZW1pYm9sZCB0ZXh0LXNpZGViYXItZm9yZWdyb3VuZCIsY2hpbGRyZW46Ik9FIE1hbmFnZXIifSksaS5qc3goInAiLHtjbGFzc05hbWU6InRleHQtc20gdGV4dC1tdXRlZC1mb3JlZ3JvdW5kIixjaGlsZHJlbjoiUHJvY2VzcyBDb250cm9sIn0pXX0pXX0pLGkuanN4KCJuYXYiLHtjbGFzc05hbWU6InNwYWNlLXktMiIsY2hpbGRyZW46ci5tYXAobz0+e2NvbnN0IGw9by5pY29uO3JldHVybiBpLmpzeCh1dCx7aHJlZjpvLmhyZWYsY2hpbGRyZW46aS5qc3hzKFkse3ZhcmlhbnQ6bihvLmhyZWYpPyJkZWZhdWx0IjoiZ2hvc3QiLGNsYXNzTmFtZTpgdy1mdWxsIGp1c3RpZnktc3RhcnQgJHtuKG8uaHJlZik/ImJnLXNpZGViYXItcHJpbWFyeSB0ZXh0LXNpZGViYXItcHJpbWFyeS1mb3JlZ3JvdW5kIjoidGV4dC1zaWRlYmFyLWZvcmVncm91bmQgaG92ZXI6Ymctc2lkZWJhci1hY2NlbnQgaG92ZXI6dGV4dC1zaWRlYmFyLWFjY2VudC1mb3JlZ3JvdW5kIn1gLCJkYXRhLXRlc3RpZCI6YG5hdi0ke28ubmFtZS50b0xvd2VyQ2FzZSgpLnJlcGxhY2UoL1xzKy9nLCItIil9YCxjaGlsZHJlbjpbaS5qc3gobCx7Y2xhc3NOYW1lOiJ3LTUgaC01IG1yLTMifSksby5uYW1lXX0pfSxvLm5hbWUpfSl9KV19KSxpLmpzeHMoImRpdiIse2NsYXNzTmFtZToibXQtYXV0byBwLTYgYm9yZGVyLXQgYm9yZGVyLXNpZGViYXItYm9yZGVyIixjaGlsZHJlbjpbaS5qc3hzKCJkaXYiLHtjbGFzc05hbWU6ImZsZXggaXRlbXMtY2VudGVyIHNwYWNlLXgtMyBtYi00IixjaGlsZHJlbjpbdCE9bnVsbCYmdC5wcm9maWxlSW1hZ2VVcmw/aS5qc3goImltZyIse3NyYzp0LnByb2ZpbGVJbWFnZVVybCxhbHQ6IlVzZXIgQXZhdGFyIixjbGFzc05hbWU6InctMTAgaC0xMCByb3VuZGVkLWZ1bGwgb2JqZWN0LWNvdmVyIiwiZGF0YS10ZXN0aWQiOiJ1c2VyLWF2YXRhciJ9KTppLmpzeCgiZGl2Iix7Y2xhc3NOYW1lOiJ3LTEwIGgtMTAgYmctc2lkZWJhci1hY2NlbnQgcm91bmRlZC1mdWxsIGZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktY2VudGVyIixjaGlsZHJlbjppLmpzeCgic3BhbiIse2NsYXNzTmFtZToidGV4dC1zaWRlYmFyLWFjY2VudC1mb3JlZ3JvdW5kIGZvbnQtbWVkaXVtIixjaGlsZHJlbjooKHM9dD09bnVsbD92b2lkIDA6dC5maXJzdE5hbWUpPT1udWxsP3ZvaWQgMDpzWzBdKXx8KChhPXQ9PW51bGw/dm9pZCAwOnQuZW1haWwpPT1udWxsP3ZvaWQgMDphWzBdKXx8Ij8ifSl9KSxpLmpzeHMoImRpdiIse2NsYXNzTmFtZToiZmxleC0xIG1pbi13LTAiLGNoaWxkcmVuOltpLmpzeCgicCIse2NsYXNzTmFtZToidGV4dC1zbSBmb250LW1lZGl1bSB0ZXh0LXNpZGViYXItZm9yZWdyb3VuZCB0cnVuY2F0ZSIsImRhdGEtdGVzdGlkIjoidXNlci1uYW1lIixjaGlsZHJlbjp0IT1udWxsJiZ0LmZpcnN0TmFtZSYmKHQhPW51bGwmJnQubGFzdE5hbWUpP2Ake3QuZmlyc3ROYW1lfSAke3QubGFzdE5hbWV9YDoodD09bnVsbD92b2lkIDA6dC5lbWFpbCl8fCJVc2VyIn0pLGkuanN4KCJwIix7Y2xhc3NOYW1lOiJ0ZXh0LXhzIHRleHQtbXV0ZWQtZm9yZWdyb3VuZCB0cnVuY2F0ZSIsY2hpbGRyZW46IlByb2Nlc3MgTWFuYWdlciJ9KV19KV19KSxpLmpzeCh5YSx7Y2xhc3NOYW1lOiJtYi00In0pLGkuanN4cyhZLHt2YXJpYW50OiJnaG9zdCIsc2l6ZToic20iLGNsYXNzTmFtZToidy1mdWxsIGp1c3RpZnktc3RhcnQgdGV4dC1zaWRlYmFyLWZvcmVncm91bmQgaG92ZXI6Ymctc2lkZWJhci1hY2NlbnQgaG92ZXI6dGV4dC1zaWRlYmFyLWFjY2VudC1mb3JlZ3JvdW5kIixvbkNsaWNrOigpPT53aW5kb3cubG9jYXRpb24uaHJlZj0iL2FwaS9sb2dvdXQiLCJkYXRhLXRlc3RpZCI6ImJ1dHRvbi1sb2dvdXQiLGNoaWxkcmVuOltpLmpzeChtRSx7Y2xhc3NOYW1lOiJ3LTQgaC00IG1yLTIifSksIkxvZ291dCJdfSldfSldfSl9Y29uc3QgemU9eS5mb3J3YXJkUmVmKCh7Y2xhc3NOYW1lOmUsdHlwZTp0LC4uLnJ9LG4pPT5pLmpzeCgiaW5wdXQiLHt0eXBlOnQsY2xhc3NOYW1lOk5lKCJmbGV4IGgtMTAgdy1mdWxsIHJvdW5kZWQtbWQgYm9yZGVyIGJvcmRlci1pbnB1dCBiZy1iYWNrZ3JvdW5kIHB4LTMgcHktMiB0ZXh0LWJhc2UgcmluZy1vZmZzZXQtYmFja2dyb3VuZCBmaWxlOmJvcmRlci0wIGZpbGU6YmctdHJhbnNwYXJlbnQgZmlsZTp0ZXh0LXNtIGZpbGU6Zm9udC1tZWRpdW0gZmlsZTp0ZXh0LWZvcmVncm91bmQgcGxhY2Vob2xkZXI6dGV4dC1tdXRlZC1mb3JlZ3JvdW5kIGZvY3VzLXZpc2libGU6b3V0bGluZS1ub25lIGZvY3VzLXZpc2libGU6cmluZy0yIGZvY3VzLXZpc2libGU6cmluZy1yaW5nIGZvY3VzLXZpc2libGU6cmluZy1vZmZzZXQtMiBkaXNhYmxlZDpjdXJzb3Itbm90LWFsbG93ZWQgZGlzYWJsZWQ6b3BhY2l0eS01MCBtZDp0ZXh0LXNtIixlKSxyZWY6biwuLi5yfSkpO3plLmRpc3BsYXlOYW1lPSJJbnB1dCI7ZnVuY3Rpb24gSXQoe3RpdGxlOmUsYnJlYWRjcnVtYnM6dH0pe2NvbnN0W3Isbl09eS51c2VTdGF0ZSgiIik7cmV0dXJuIGkuanN4KCJoZWFkZXIiLHtjbGFzc05hbWU6ImJnLWNhcmQgYm9yZGVyLWIgYm9yZGVyLWJvcmRlciBweC02IHB5LTQiLGNoaWxkcmVuOmkuanN4cygiZGl2Iix7Y2xhc3NOYW1lOiJmbGV4IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWJldHdlZW4iLGNoaWxkcmVuOltpLmpzeHMoImRpdiIse2NsYXNzTmFtZToiZmxleCBpdGVtcy1jZW50ZXIgc3BhY2UteC00IixjaGlsZHJlbjpbaS5qc3goWSx7dmFyaWFudDoiZ2hvc3QiLHNpemU6InNtIixjbGFzc05hbWU6ImxnOmhpZGRlbiIsImRhdGEtdGVzdGlkIjoiYnV0dG9uLXRvZ2dsZS1zaWRlYmFyIixjaGlsZHJlbjppLmpzeChoRSx7Y2xhc3NOYW1lOiJoLTUgdy01In0pfSksKGV8fHQpJiZpLmpzeHMoImRpdiIse2NoaWxkcmVuOltlJiZpLmpzeCgiaDEiLHtjbGFzc05hbWU6InRleHQtMnhsIGZvbnQtYm9sZCIsImRhdGEtdGVzdGlkIjoiaGVhZGVyLXRpdGxlIixjaGlsZHJlbjplfSksdCYmdC5sZW5ndGg+MCYmaS5qc3goIm5hdiIse2NsYXNzTmFtZToiZmxleCBpdGVtcy1jZW50ZXIgc3BhY2UteC0yIHRleHQtc20gdGV4dC1tdXRlZC1mb3JlZ3JvdW5kIG10LTEiLGNoaWxkcmVuOnQubWFwKChzLGEpPT5pLmpzeHMoImRpdiIse2NsYXNzTmFtZToiZmxleCBpdGVtcy1jZW50ZXIgc3BhY2UteC0yIixjaGlsZHJlbjpbaS5qc3goInNwYW4iLHtjbGFzc05hbWU6YT09PXQubGVuZ3RoLTE/InRleHQtZm9yZWdyb3VuZCI6IiIsY2hpbGRyZW46cy5sYWJlbH0pLGE8dC5sZW5ndGgtMSYmaS5qc3goanIse2NsYXNzTmFtZToiaC0zIHctMyJ9KV19LGEpKX0pXX0pXX0pLGkuanN4cygiZGl2Iix7Y2xhc3NOYW1lOiJmbGV4IGl0ZW1zLWNlbnRlciBzcGFjZS14LTQiLGNoaWxkcmVuOltpLmpzeHMoImRpdiIse2NsYXNzTmFtZToicmVsYXRpdmUiLGNoaWxkcmVuOltpLmpzeChXMCx7Y2xhc3NOYW1lOiJhYnNvbHV0ZSBsZWZ0LTMgdG9wLTEvMiB0cmFuc2Zvcm0gLXRyYW5zbGF0ZS15LTEvMiB0ZXh0LW11dGVkLWZvcmVncm91bmQgaC00IHctNCJ9KSxpLmpzeCh6ZSx7dHlwZToidGV4dCIscGxhY2Vob2xkZXI6IlNlYXJjaCBwcm9jZXNzZXMuLi4iLHZhbHVlOnIsb25DaGFuZ2U6cz0+bihzLnRhcmdldC52YWx1ZSksY2xhc3NOYW1lOiJ3LTY0IHBsLTEwIiwiZGF0YS10ZXN0aWQiOiJpbnB1dC1zZWFyY2gifSldfSksaS5qc3hzKFkse3ZhcmlhbnQ6Imdob3N0IixzaXplOiJzbSIsY2xhc3NOYW1lOiJyZWxhdGl2ZSIsImRhdGEtdGVzdGlkIjoiYnV0dG9uLW5vdGlmaWNhdGlvbnMiLGNoaWxkcmVuOltpLmpzeChpRSx7Y2xhc3NOYW1lOiJoLTUgdy01In0pLGkuanN4KGJlLHt2YXJpYW50OiJkZXN0cnVjdGl2ZSIsY2xhc3NOYW1lOiJhYnNvbHV0ZSAtdG9wLTEgLXJpZ2h0LTEgaC01IHctNSBmbGV4IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWNlbnRlciBwLTAgdGV4dC14cyIsY2hpbGRyZW46IjMifSldfSldfSldfSl9KX12YXIgVGg9IlByb2dyZXNzIixSaD0xMDAsW3pDLCRSXT1BcyhUaCksW1ZDLFVDXT16QyhUaCksTHc9eS5mb3J3YXJkUmVmKChlLHQpPT57Y29uc3R7X19zY29wZVByb2dyZXNzOnIsdmFsdWU6bj1udWxsLG1heDpzLGdldFZhbHVlTGFiZWw6YT1CQywuLi5vfT1lOyhzfHxzPT09MCkmJiFGZyhzKSYmY29uc29sZS5lcnJvcihIQyhgJHtzfWAsIlByb2dyZXNzIikpO2NvbnN0IGw9Rmcocyk/czpSaDtuIT09bnVsbCYmIUlnKG4sbCkmJmNvbnNvbGUuZXJyb3IoV0MoYCR7bn1gLCJQcm9ncmVzcyIpKTtjb25zdCBjPUlnKG4sbCk/bjpudWxsLHU9SWMoYyk/YShjLGwpOnZvaWQgMDtyZXR1cm4gaS5qc3goVkMse3Njb3BlOnIsdmFsdWU6YyxtYXg6bCxjaGlsZHJlbjppLmpzeChrZS5kaXYseyJhcmlhLXZhbHVlbWF4IjpsLCJhcmlhLXZhbHVlbWluIjowLCJhcmlhLXZhbHVlbm93IjpJYyhjKT9jOnZvaWQgMCwiYXJpYS12YWx1ZXRleHQiOnUscm9sZToicHJvZ3Jlc3NiYXIiLCJkYXRhLXN0YXRlIjp6dyhjLGwpLCJkYXRhLXZhbHVlIjpjPz92b2lkIDAsImRhdGEtbWF4IjpsLC4uLm8scmVmOnR9KX0pfSk7THcuZGlzcGxheU5hbWU9VGg7dmFyIER3PSJQcm9ncmVzc0luZGljYXRvciIsJHc9eS5mb3J3YXJkUmVmKChlLHQpPT57Y29uc3R7X19zY29wZVByb2dyZXNzOnIsLi4ubn09ZSxzPVVDKER3LHIpO3JldHVybiBpLmpzeChrZS5kaXYseyJkYXRhLXN0YXRlIjp6dyhzLnZhbHVlLHMubWF4KSwiZGF0YS12YWx1ZSI6cy52YWx1ZT8/dm9pZCAwLCJkYXRhLW1heCI6cy5tYXgsLi4ubixyZWY6dH0pfSk7JHcuZGlzcGxheU5hbWU9RHc7ZnVuY3Rpb24gQkMoZSx0KXtyZXR1cm5gJHtNYXRoLnJvdW5kKGUvdCoxMDApfSVgfWZ1bmN0aW9uIHp3KGUsdCl7cmV0dXJuIGU9PW51bGw/ImluZGV0ZXJtaW5hdGUiOmU9PT10PyJjb21wbGV0ZSI6ImxvYWRpbmcifWZ1bmN0aW9uIEljKGUpe3JldHVybiB0eXBlb2YgZT09Im51bWJlciJ9ZnVuY3Rpb24gRmcoZSl7cmV0dXJuIEljKGUpJiYhaXNOYU4oZSkmJmU+MH1mdW5jdGlvbiBJZyhlLHQpe3JldHVybiBJYyhlKSYmIWlzTmFOKGUpJiZlPD10JiZlPj0wfWZ1bmN0aW9uIEhDKGUsdCl7cmV0dXJuYEludmFsaWQgcHJvcCBcYG1heFxgIG9mIHZhbHVlIFxgJHtlfVxgIHN1cHBsaWVkIHRvIFxgJHt0fVxgLiBPbmx5IG51bWJlcnMgZ3JlYXRlciB0aGFuIDAgYXJlIHZhbGlkIG1heCB2YWx1ZXMuIERlZmF1bHRpbmcgdG8gXGAke1JofVxgLmB9ZnVuY3Rpb24gV0MoZSx0KXtyZXR1cm5gSW52YWxpZCBwcm9wIFxgdmFsdWVcYCBvZiB2YWx1ZSBcYCR7ZX1cYCBzdXBwbGllZCB0byBcYCR7dH1cYC4gVGhlIFxgdmFsdWVcYCBwcm9wIG11c3QgYmU6CiAgLSBhIHBvc2l0aXZlIG51bWJlcgogIC0gbGVzcyB0aGFuIHRoZSB2YWx1ZSBwYXNzZWQgdG8gXGBtYXhcYCAob3IgJHtSaH0gaWYgbm8gXGBtYXhcYCBwcm9wIGlzIHNldCkKICAtIFxgbnVsbFxgIG9yIFxgdW5kZWZpbmVkXGAgaWYgdGhlIHByb2dyZXNzIGlzIGluZGV0ZXJtaW5hdGUuCgpEZWZhdWx0aW5nIHRvIFxgbnVsbFxgLmB9dmFyIFZ3PUx3LHFDPSR3O2NvbnN0IFV3PXkuZm9yd2FyZFJlZigoe2NsYXNzTmFtZTplLHZhbHVlOnQsLi4ucn0sbik9PmkuanN4KFZ3LHtyZWY6bixjbGFzc05hbWU6TmUoInJlbGF0aXZlIGgtNCB3LWZ1bGwgb3ZlcmZsb3ctaGlkZGVuIHJvdW5kZWQtZnVsbCBiZy1zZWNvbmRhcnkiLGUpLC4uLnIsY2hpbGRyZW46aS5qc3gocUMse2NsYXNzTmFtZToiaC1mdWxsIHctZnVsbCBmbGV4LTEgYmctcHJpbWFyeSB0cmFuc2l0aW9uLWFsbCIsc3R5bGU6e3RyYW5zZm9ybTpgdHJhbnNsYXRlWCgtJHsxMDAtKHR8fDApfSUpYH19KX0pKTtVdy5kaXNwbGF5TmFtZT1Wdy5kaXNwbGF5TmFtZTtmdW5jdGlvbiBBaCh7cHJvY2Vzc051bWJlcjplLHN0ZXBzOnQsY29tcGFjdDpyPSExfSl7aWYoIXR8fHQubGVuZ3RoPT09MClyZXR1cm4gaS5qc3goImRpdiIse2NsYXNzTmFtZToiZmxleCBpdGVtcy1jZW50ZXIganVzdGlmeS1jZW50ZXIgcHktMiB0ZXh0LXhzIHRleHQtbXV0ZWQtZm9yZWdyb3VuZCIsY2hpbGRyZW46Ik5vIHN0ZXBzIGRlZmluZWQifSk7Y29uc3Qgcz0obD0+e3N3aXRjaChsKXtjYXNlIk9FLTQuMSI6cmV0dXJue3ByaW1hcnk6ImJnLWJsdWUtNTAwIixzZWNvbmRhcnk6ImJnLWJsdWUtNTAiLGFjY2VudDoidGV4dC1ibHVlLTYwMCIsYm9yZGVyOiJib3JkZXItYmx1ZS0yMDAifTtjYXNlIk9FLTQuMiI6cmV0dXJue3ByaW1hcnk6ImJnLWdyZWVuLTUwMCIsc2Vjb25kYXJ5OiJiZy1ncmVlbi01MCIsYWNjZW50OiJ0ZXh0LWdyZWVuLTYwMCIsYm9yZGVyOiJib3JkZXItZ3JlZW4tMjAwIn07ZGVmYXVsdDpyZXR1cm57cHJpbWFyeToiYmctcHVycGxlLTUwMCIsc2Vjb25kYXJ5OiJiZy1wdXJwbGUtNTAiLGFjY2VudDoidGV4dC1wdXJwbGUtNjAwIixib3JkZXI6ImJvcmRlci1wdXJwbGUtMjAwIn19fSkoZSksYT1yP3Quc2xpY2UoMCw0KTp0LG89ciYmdC5sZW5ndGg+NDtyZXR1cm4gaS5qc3hzKCJkaXYiLHtjbGFzc05hbWU6InctZnVsbCIsY2hpbGRyZW46W2kuanN4cygiZGl2Iix7Y2xhc3NOYW1lOiJmbGV4IGl0ZW1zLWNlbnRlciBzcGFjZS14LTEgb3ZlcmZsb3cteC1hdXRvIHBiLTIiLGNoaWxkcmVuOlthLm1hcCgobCxjKT0+aS5qc3hzKCJkaXYiLHtjbGFzc05hbWU6ImZsZXggaXRlbXMtY2VudGVyIGZsZXgtc2hyaW5rLTAiLGNoaWxkcmVuOltpLmpzeCgiZGl2Iix7Y2xhc3NOYW1lOmAke3Muc2Vjb25kYXJ5fSAke3MuYm9yZGVyfSByb3VuZGVkIHB4LTIgcHktMSBib3JkZXIgdHJhbnNpdGlvbi1hbGwgZHVyYXRpb24tMjAwIGhvdmVyOnNoYWRvdy1zbWAsdGl0bGU6YCR7bC5zdGVwTmFtZX0ke2wuc3RlcERldGFpbHM/IjogIitsLnN0ZXBEZXRhaWxzOiIifWAsY2hpbGRyZW46aS5qc3hzKCJkaXYiLHtjbGFzc05hbWU6ImZsZXggaXRlbXMtY2VudGVyIHNwYWNlLXgtMSIsY2hpbGRyZW46W2kuanN4KCJkaXYiLHtjbGFzc05hbWU6YHctNCBoLTQgJHtzLnByaW1hcnl9IHJvdW5kZWQtZnVsbCBmbGV4IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWNlbnRlciB0ZXh0LXdoaXRlIHRleHQteHMgZm9udC1ib2xkYCxjaGlsZHJlbjpsLnN0ZXBOdW1iZXJ9KSxpLmpzeCgic3BhbiIse2NsYXNzTmFtZTpgdGV4dC14cyBmb250LW1lZGl1bSAke3MuYWNjZW50fSB0cnVuY2F0ZSBtYXgtdy0xNmAsY2hpbGRyZW46bC5zdGVwTmFtZS5zcGxpdCgiICIpWzBdfSldfSl9KSxjPGEubGVuZ3RoLTEmJmkuanN4KGpyLHtjbGFzc05hbWU6YHctMyBoLTMgJHtzLmFjY2VudH0gbXgtMWB9KV19LGwuaWQpKSxvJiZpLmpzeHMoImRpdiIse2NsYXNzTmFtZToiZmxleCBpdGVtcy1jZW50ZXIgc3BhY2UteC0xIixjaGlsZHJlbjpbaS5qc3goanIse2NsYXNzTmFtZTpgdy0zIGgtMyAke3MuYWNjZW50fWB9KSxpLmpzeCgiZGl2Iix7Y2xhc3NOYW1lOmAke3Muc2Vjb25kYXJ5fSAke3MuYm9yZGVyfSByb3VuZGVkIHB4LTIgcHktMSBib3JkZXJgLGNoaWxkcmVuOmkuanN4cygic3BhbiIse2NsYXNzTmFtZTpgdGV4dC14cyAke3MuYWNjZW50fSBmb250LW1lZGl1bWAsY2hpbGRyZW46WyIrIix0Lmxlbmd0aC00LCIgbW9yZSJdfSl9KV19KV19KSwhciYmaS5qc3hzKCJkaXYiLHtjbGFzc05hbWU6Im10LTIgdGV4dC14cyB0ZXh0LW11dGVkLWZvcmVncm91bmQiLGNoaWxkcmVuOltpLmpzeHMoInNwYW4iLHtjbGFzc05hbWU6ImZvbnQtbWVkaXVtIixjaGlsZHJlbjpbdC5sZW5ndGgsIiBzdGVwczoiXX0pLGkuanN4cygic3BhbiIse2NsYXNzTmFtZToibWwtMSIsY2hpbGRyZW46W2U9PT0iT0UtNC4xIiYmIkRlc2lnbiDihpIgUHJvY3VyZSDihpIgQ29uc3RydWN0IOKGkiBDb21taXNzaW9uIixlPT09Ik9FLTQuMiImJiJTdHJhdGVneSDihpIgT3BlcmF0ZSDihpIgTW9uaXRvciDihpIgSW1wcm92ZSIsIVsiT0UtNC4xIiwiT0UtNC4yIl0uaW5jbHVkZXMoZSkmJiJTZXF1ZW50aWFsIFByb2Nlc3MgRmxvdyJdfSldfSldfSl9ZnVuY3Rpb24gR0Moe2VsZW1lbnQ6ZSx2aWV3TW9kZTp0PSJncmlkIn0pe3ZhciB4LHY7Y29uc3Qgcj1tPT57aWYoZS5pY29uKXJldHVybiBudWxsO3N3aXRjaChtKXtjYXNlIDE6cmV0dXJuIFYwO2Nhc2UgMjpyZXR1cm4gSmU7Y2FzZSAzOnJldHVybiBUYztjYXNlIDQ6cmV0dXJuIFBvO2Nhc2UgNTpyZXR1cm4gSmU7Y2FzZSA2OnJldHVybiBVMDtjYXNlIDc6cmV0dXJuIHZzO2Nhc2UgODpyZXR1cm4gVGM7ZGVmYXVsdDpyZXR1cm4gSmV9fSxuPW09Pntzd2l0Y2gobSl7Y2FzZSAxOnJldHVybiJ0ZXh0LWJsdWUtNjAwIGJnLWJsdWUtMTAwIjtjYXNlIDI6cmV0dXJuInRleHQtaW5kaWdvLTYwMCBiZy1pbmRpZ28tMTAwIjtjYXNlIDM6cmV0dXJuInRleHQtb3JhbmdlLTYwMCBiZy1vcmFuZ2UtMTAwIjtjYXNlIDQ6cmV0dXJuInRleHQtcHVycGxlLTYwMCBiZy1wdXJwbGUtMTAwIjtjYXNlIDU6cmV0dXJuInRleHQtaW5kaWdvLTYwMCBiZy1pbmRpZ28tMTAwIjtjYXNlIDY6cmV0dXJuInRleHQtZ3JlZW4tNjAwIGJnLWdyZWVuLTEwMCI7Y2FzZSA3OnJldHVybiJ0ZXh0LXJlZC02MDAgYmctcmVkLTEwMCI7Y2FzZSA4OnJldHVybiJ0ZXh0LW9yYW5nZS02MDAgYmctb3JhbmdlLTEwMCI7ZGVmYXVsdDpyZXR1cm4idGV4dC1ibHVlLTYwMCBiZy1ibHVlLTEwMCJ9fSxzPW09Pm09PT0wPyJiZy1ncmF5LTEwMCB0ZXh0LWdyYXktODAwIjptPD0yPyJiZy15ZWxsb3ctMTAwIHRleHQteWVsbG93LTgwMCI6bTw9ND8iYmctYmx1ZS0xMDAgdGV4dC1ibHVlLTgwMCI6ImJnLWdyZWVuLTEwMCB0ZXh0LWdyZWVuLTgwMCIsYT1tPT5tPT09MD8iTm8gUHJvY2Vzc2VzIjptPD0yPyJHZXR0aW5nIFN0YXJ0ZWQiOm08PTQ/IkluIFByb2dyZXNzIjoiQWN0aXZlIixvPSgoeD1lLnByb2Nlc3Nlcyk9PW51bGw/dm9pZCAwOngubGVuZ3RoKXx8MCxsPSgodj1lLnByb2Nlc3Nlcyk9PW51bGw/dm9pZCAwOnYuZmlsdGVyKG09Pm0uc3RhdHVzPT09ImFjdGl2ZSIpLmxlbmd0aCl8fDAsYz1vPjA/TWF0aC5yb3VuZChsL28qMTAwKTowLHU9cihlLmVsZW1lbnROdW1iZXIpLGQ9bihlLmVsZW1lbnROdW1iZXIpLGY9cyhvKSxwPWEobyk7cmV0dXJuIHQ9PT0ibGlzdCI/aS5qc3godXQse2hyZWY6YC9lbGVtZW50LyR7ZS5pZH1gLGNoaWxkcmVuOmkuanN4KGllLHtjbGFzc05hbWU6InByb2Nlc3MtY2FyZCBjdXJzb3ItcG9pbnRlciB0cmFuc2l0aW9uLWFsbCBkdXJhdGlvbi0yMDAgaG92ZXI6c2hhZG93LW1kIiwiZGF0YS10ZXN0aWQiOmBwcm9jZXNzLWNhcmQtJHtlLmVsZW1lbnROdW1iZXJ9YCxjaGlsZHJlbjppLmpzeChsZSx7Y2xhc3NOYW1lOiJwLTQiLGNoaWxkcmVuOmkuanN4cygiZGl2Iix7Y2xhc3NOYW1lOiJmbGV4IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWJldHdlZW4iLGNoaWxkcmVuOltpLmpzeHMoImRpdiIse2NsYXNzTmFtZToiZmxleCBpdGVtcy1jZW50ZXIgc3BhY2UteC00IixjaGlsZHJlbjpbaS5qc3goImRpdiIse2NsYXNzTmFtZTpgdy0xMiBoLTEyIHJvdW5kZWQtbGcgZmxleCBpdGVtcy1jZW50ZXIganVzdGlmeS1jZW50ZXIgJHtkfWAsY2hpbGRyZW46ZS5pY29uP2kuanN4KCJzcGFuIix7Y2xhc3NOYW1lOiJ0ZXh0LTJ4bCIsY2hpbGRyZW46ZS5pY29ufSk6dT9pLmpzeCh1LHtjbGFzc05hbWU6InRleHQteGwifSk6aS5qc3goSmUse2NsYXNzTmFtZToidGV4dC14bCJ9KX0pLGkuanN4cygiZGl2Iix7Y2xhc3NOYW1lOiJmbGV4LTEiLGNoaWxkcmVuOltpLmpzeCgiZGl2Iix7Y2xhc3NOYW1lOiJmbGV4IGl0ZW1zLWNlbnRlciBzcGFjZS14LTIgbWItMSIsY2hpbGRyZW46aS5qc3hzKCJoMyIse2NsYXNzTmFtZToidGV4dC1sZyBmb250LXNlbWlib2xkIiwiZGF0YS10ZXN0aWQiOiJlbGVtZW50LXRpdGxlIixjaGlsZHJlbjpbIk9FIEVsZW1lbnQgTm8uICIsZS5lbGVtZW50TnVtYmVyXX0pfSksaS5qc3goImg0Iix7Y2xhc3NOYW1lOiJ0ZXh0LXByaW1hcnkgZm9udC1tZWRpdW0gbWItMSIsImRhdGEtdGVzdGlkIjoiZWxlbWVudC1uYW1lIixjaGlsZHJlbjplLnRpdGxlfSksaS5qc3goInAiLHtjbGFzc05hbWU6InRleHQtc20gdGV4dC1tdXRlZC1mb3JlZ3JvdW5kIiwiZGF0YS10ZXN0aWQiOiJlbGVtZW50LWRlc2NyaXB0aW9uIixjaGlsZHJlbjplLmRlc2NyaXB0aW9ufHwiTm8gZGVzY3JpcHRpb24gYXZhaWxhYmxlIn0pXX0pXX0pLGkuanN4cygiZGl2Iix7Y2xhc3NOYW1lOiJmbGV4IGl0ZW1zLWNlbnRlciBzcGFjZS14LTQgdGV4dC1zbSB0ZXh0LW11dGVkLWZvcmVncm91bmQiLGNoaWxkcmVuOltpLmpzeHMoImRpdiIse2NsYXNzTmFtZToidGV4dC1jZW50ZXIiLGNoaWxkcmVuOltpLmpzeCgiZGl2Iix7Y2xhc3NOYW1lOiJmb250LW1lZGl1bSIsImRhdGEtdGVzdGlkIjoicHJvY2Vzcy1jb3VudCIsY2hpbGRyZW46b30pLGkuanN4cygiZGl2Iix7Y2hpbGRyZW46WyJQcm9jZXNzIixvIT09MT8iZXMiOiIiXX0pXX0pLGkuanN4cygiZGl2Iix7Y2xhc3NOYW1lOiJ0ZXh0LWNlbnRlciIsY2hpbGRyZW46W2kuanN4cygiZGl2Iix7Y2xhc3NOYW1lOiJmb250LW1lZGl1bSIsImRhdGEtdGVzdGlkIjoicHJvZ3Jlc3MtcGVyY2VudGFnZSIsY2hpbGRyZW46W2MsIiUiXX0pLGkuanN4KCJkaXYiLHtjaGlsZHJlbjoiQ29tcGxldGUifSldfSksaS5qc3goYmUse2NsYXNzTmFtZTpmLGNoaWxkcmVuOnB9KSxpLmpzeChZLHt2YXJpYW50OiJnaG9zdCIsc2l6ZToic20iLGNsYXNzTmFtZToiaC04IHctOCBwLTAiLCJkYXRhLXRlc3RpZCI6ImJ1dHRvbi1lbGVtZW50LW1lbnUiLGNoaWxkcmVuOmkuanN4KGJnLHtjbGFzc05hbWU6ImgtNCB3LTQgdGV4dC1tdXRlZC1mb3JlZ3JvdW5kIn0pfSldfSldfSl9KX0pfSk6aS5qc3godXQse2hyZWY6YC9lbGVtZW50LyR7ZS5pZH1gLGNoaWxkcmVuOmkuanN4KGllLHtjbGFzc05hbWU6InByb2Nlc3MtY2FyZCBjdXJzb3ItcG9pbnRlciB0cmFuc2l0aW9uLWFsbCBkdXJhdGlvbi0yMDAgaG92ZXI6c2hhZG93LWxnIGhvdmVyOi10cmFuc2xhdGUteS0xIiwiZGF0YS10ZXN0aWQiOmBwcm9jZXNzLWNhcmQtJHtlLmVsZW1lbnROdW1iZXJ9YCxjaGlsZHJlbjppLmpzeHMobGUse2NsYXNzTmFtZToicC02IixjaGlsZHJlbjpbaS5qc3hzKCJkaXYiLHtjbGFzc05hbWU6ImZsZXggaXRlbXMtc3RhcnQganVzdGlmeS1iZXR3ZWVuIG1iLTQiLGNoaWxkcmVuOltpLmpzeCgiZGl2Iix7Y2xhc3NOYW1lOmB3LTEyIGgtMTIgcm91bmRlZC1sZyBmbGV4IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWNlbnRlciAke2R9YCxjaGlsZHJlbjplLmljb24/aS5qc3goInNwYW4iLHtjbGFzc05hbWU6InRleHQtMnhsIixjaGlsZHJlbjplLmljb259KTp1P2kuanN4KHUse2NsYXNzTmFtZToidGV4dC14bCJ9KTppLmpzeChKZSx7Y2xhc3NOYW1lOiJ0ZXh0LXhsIn0pfSksaS5qc3hzKCJkaXYiLHtjbGFzc05hbWU6ImZsZXggaXRlbXMtY2VudGVyIHNwYWNlLXgtMiIsY2hpbGRyZW46W2kuanN4KGJlLHtjbGFzc05hbWU6ZixjaGlsZHJlbjpwfSksaS5qc3goWSx7dmFyaWFudDoiZ2hvc3QiLHNpemU6InNtIixjbGFzc05hbWU6ImgtOCB3LTggcC0wIiwiZGF0YS10ZXN0aWQiOiJidXR0b24tZWxlbWVudC1tZW51IixjaGlsZHJlbjppLmpzeChiZyx7Y2xhc3NOYW1lOiJoLTQgdy00IHRleHQtbXV0ZWQtZm9yZWdyb3VuZCJ9KX0pXX0pXX0pLGkuanN4cygiaDMiLHtjbGFzc05hbWU6InRleHQtbGcgZm9udC1zZW1pYm9sZCBtYi0yIiwiZGF0YS10ZXN0aWQiOiJlbGVtZW50LXRpdGxlIixjaGlsZHJlbjpbIk9FIEVsZW1lbnQgTm8uICIsZS5lbGVtZW50TnVtYmVyXX0pLGkuanN4KCJoNCIse2NsYXNzTmFtZToidGV4dC1wcmltYXJ5IGZvbnQtbWVkaXVtIG1iLTMiLCJkYXRhLXRlc3RpZCI6ImVsZW1lbnQtbmFtZSIsY2hpbGRyZW46ZS50aXRsZX0pLGkuanN4KCJwIix7Y2xhc3NOYW1lOiJ0ZXh0LXNtIHRleHQtbXV0ZWQtZm9yZWdyb3VuZCBtYi00IGxpbmUtY2xhbXAtMiIsImRhdGEtdGVzdGlkIjoiZWxlbWVudC1kZXNjcmlwdGlvbiIsY2hpbGRyZW46ZS5kZXNjcmlwdGlvbnx8Ik5vIGRlc2NyaXB0aW9uIGF2YWlsYWJsZSJ9KSxpLmpzeHMoImRpdiIse2NsYXNzTmFtZToiZmxleCBpdGVtcy1jZW50ZXIganVzdGlmeS1iZXR3ZWVuIHRleHQtc20gbWItNCIsY2hpbGRyZW46W2kuanN4cygic3BhbiIse2NsYXNzTmFtZToidGV4dC1tdXRlZC1mb3JlZ3JvdW5kIiwiZGF0YS10ZXN0aWQiOiJwcm9jZXNzLWNvdW50IixjaGlsZHJlbjpbbywiIFByb2Nlc3MiLG8hPT0xPyJlcyI6IiJdfSksaS5qc3hzKCJzcGFuIix7Y2xhc3NOYW1lOiJ0ZXh0LW11dGVkLWZvcmVncm91bmQiLCJkYXRhLXRlc3RpZCI6Imxhc3QtdXBkYXRlZCIsY2hpbGRyZW46WyJMYXN0IHVwZGF0ZWQ6ICIsZS51cGRhdGVkQXQ/bmV3IERhdGUoZS51cGRhdGVkQXQpLnRvTG9jYWxlRGF0ZVN0cmluZygpOiJOZXZlciJdfSldfSksZS5wcm9jZXNzZXMmJmUucHJvY2Vzc2VzLmxlbmd0aD4wJiZpLmpzeHMoImRpdiIse2NsYXNzTmFtZToibWItNCBwLTMgYmctbXV0ZWQvMzAgcm91bmRlZC1sZyIsY2hpbGRyZW46W2kuanN4KCJkaXYiLHtjbGFzc05hbWU6InRleHQteHMgZm9udC1tZWRpdW0gdGV4dC1tdXRlZC1mb3JlZ3JvdW5kIG1iLTIiLGNoaWxkcmVuOiJQcm9jZXNzIE92ZXJ2aWV3In0pLGkuanN4cygiZGl2Iix7Y2xhc3NOYW1lOiJzcGFjZS15LTIiLGNoaWxkcmVuOltlLnByb2Nlc3Nlcy5zbGljZSgwLDIpLm1hcChtPT5pLmpzeCgiZGl2Iix7Y2xhc3NOYW1lOiJ0ZXh0LXhzIixjaGlsZHJlbjppLmpzeChBaCx7cHJvY2Vzc051bWJlcjptLnByb2Nlc3NOdW1iZXIsc3RlcHM6W10sY29tcGFjdDohMH0pfSxtLmlkKSksZS5wcm9jZXNzZXMubGVuZ3RoPjImJmkuanN4cygiZGl2Iix7Y2xhc3NOYW1lOiJ0ZXh0LXhzIHRleHQtbXV0ZWQtZm9yZWdyb3VuZCB0ZXh0LWNlbnRlciBwdC0xIixjaGlsZHJlbjpbIisiLGUucHJvY2Vzc2VzLmxlbmd0aC0yLCIgbW9yZSBwcm9jZXNzZXMiXX0pXX0pXX0pLGkuanN4cygiZGl2Iix7Y2hpbGRyZW46W2kuanN4cygiZGl2Iix7Y2xhc3NOYW1lOiJmbGV4IGp1c3RpZnktYmV0d2VlbiBpdGVtcy1jZW50ZXIgbWItMiIsY2hpbGRyZW46W2kuanN4KCJzcGFuIix7Y2xhc3NOYW1lOiJ0ZXh0LXNtIHRleHQtbXV0ZWQtZm9yZWdyb3VuZCIsY2hpbGRyZW46IlByb2dyZXNzIn0pLGkuanN4cygic3BhbiIse2NsYXNzTmFtZToidGV4dC1zbSBmb250LW1lZGl1bSIsImRhdGEtdGVzdGlkIjoicHJvZ3Jlc3MtcGVyY2VudGFnZSIsY2hpbGRyZW46W2MsIiUiXX0pXX0pLGkuanN4KFV3LHt2YWx1ZTpjLGNsYXNzTmFtZToiaC0yIiwiZGF0YS10ZXN0aWQiOiJwcm9ncmVzcy1iYXIifSldfSldfSl9KX0pfWZ1bmN0aW9uIEp0KGUpe3JldHVybi9eNDAxOiAuKlVuYXV0aG9yaXplZC8udGVzdChlLm1lc3NhZ2UpfWZ1bmN0aW9uIFFDKCl7Y29uc3R7dG9hc3Q6ZX09aG4oKSx7aXNBdXRoZW50aWNhdGVkOnQsaXNMb2FkaW5nOnJ9PVdyKCksW24sc109eS51c2VTdGF0ZSgiIiksW2Esb109eS51c2VTdGF0ZSgiZ3JpZCIpO3kudXNlRWZmZWN0KCgpPT57aWYoIXImJiF0KXtlKHt0aXRsZToiVW5hdXRob3JpemVkIixkZXNjcmlwdGlvbjoiWW91IGFyZSBsb2dnZWQgb3V0LiBMb2dnaW5nIGluIGFnYWluLi4uIix2YXJpYW50OiJkZXN0cnVjdGl2ZSJ9KSxzZXRUaW1lb3V0KCgpPT57d2luZG93LmxvY2F0aW9uLmhyZWY9Ii9hcGkvbG9naW4ifSw1MDApO3JldHVybn19LFt0LHIsZV0pO2NvbnN0e2RhdGE6bCxpc0xvYWRpbmc6YyxlcnJvcjp1fT1idCh7cXVlcnlLZXk6WyIvYXBpL2Rhc2hib2FyZC9zdGF0cyJdLGVuYWJsZWQ6dH0pO3kudXNlRWZmZWN0KCgpPT57aWYodSl7aWYoSnQodSkpe2Uoe3RpdGxlOiJVbmF1dGhvcml6ZWQiLGRlc2NyaXB0aW9uOiJZb3UgYXJlIGxvZ2dlZCBvdXQuIExvZ2dpbmcgaW4gYWdhaW4uLi4iLHZhcmlhbnQ6ImRlc3RydWN0aXZlIn0pLHNldFRpbWVvdXQoKCk9Pnt3aW5kb3cubG9jYXRpb24uaHJlZj0iL2FwaS9sb2dpbiJ9LDUwMCk7cmV0dXJufWUoe3RpdGxlOiJFcnJvciIsZGVzY3JpcHRpb246IkZhaWxlZCB0byBsb2FkIGRhc2hib2FyZCBzdGF0aXN0aWNzIix2YXJpYW50OiJkZXN0cnVjdGl2ZSJ9KX19LFt1LGVdKTtjb25zdHtkYXRhOmQsaXNMb2FkaW5nOmYsZXJyb3I6cH09YnQoe3F1ZXJ5S2V5OlsiL2FwaS9vZS1lbGVtZW50cyJdLGVuYWJsZWQ6dH0pLHtkYXRhOngsaXNMb2FkaW5nOnYsZXJyb3I6bX09YnQoe3F1ZXJ5S2V5OlsiL2FwaS9hY3Rpdml0eS1sb2ciXSxlbmFibGVkOnR9KTtpZih5LnVzZUVmZmVjdCgoKT0+e2lmKHApe2lmKEp0KHApKXtlKHt0aXRsZToiVW5hdXRob3JpemVkIixkZXNjcmlwdGlvbjoiWW91IGFyZSBsb2dnZWQgb3V0LiBMb2dnaW5nIGluIGFnYWluLi4uIix2YXJpYW50OiJkZXN0cnVjdGl2ZSJ9KSxzZXRUaW1lb3V0KCgpPT57d2luZG93LmxvY2F0aW9uLmhyZWY9Ii9hcGkvbG9naW4ifSw1MDApO3JldHVybn1lKHt0aXRsZToiRXJyb3IiLGRlc2NyaXB0aW9uOiJGYWlsZWQgdG8gbG9hZCBPRSBlbGVtZW50cyIsdmFyaWFudDoiZGVzdHJ1Y3RpdmUifSl9fSxbcCxlXSkseS51c2VFZmZlY3QoKCk9PntpZihtKXtpZihKdChtKSl7ZSh7dGl0bGU6IlVuYXV0aG9yaXplZCIsZGVzY3JpcHRpb246IllvdSBhcmUgbG9nZ2VkIG91dC4gTG9nZ2luZyBpbiBhZ2Fpbi4uLiIsdmFyaWFudDoiZGVzdHJ1Y3RpdmUifSksc2V0VGltZW91dCgoKT0+e3dpbmRvdy5sb2NhdGlvbi5ocmVmPSIvYXBpL2xvZ2luIn0sNTAwKTtyZXR1cm59ZSh7dGl0bGU6IkVycm9yIixkZXNjcmlwdGlvbjoiRmFpbGVkIHRvIGxvYWQgYWN0aXZpdHkgbG9nIix2YXJpYW50OiJkZXN0cnVjdGl2ZSJ9KX19LFttLGVdKSxyfHwhdCYmIXIpcmV0dXJuIGkuanN4KCJkaXYiLHtjbGFzc05hbWU6Im1pbi1oLXNjcmVlbiBmbGV4IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWNlbnRlciIsY2hpbGRyZW46aS5qc3hzKCJkaXYiLHtjbGFzc05hbWU6InRleHQtY2VudGVyIixjaGlsZHJlbjpbaS5qc3goImRpdiIse2NsYXNzTmFtZToiYW5pbWF0ZS1zcGluIHJvdW5kZWQtZnVsbCBoLTggdy04IGJvcmRlci1iLTIgYm9yZGVyLXByaW1hcnkgbXgtYXV0byBtYi00In0pLGkuanN4KCJwIix7Y2xhc3NOYW1lOiJ0ZXh0LW11dGVkLWZvcmVncm91bmQiLGNoaWxkcmVuOiJMb2FkaW5nLi4uIn0pXX0pfSk7Y29uc3Qgdz0oZD09bnVsbD92b2lkIDA6ZC5maWx0ZXIoaD0+e2lmKCFuKXJldHVybiEwO3N3aXRjaChuKXtjYXNlImFjdGl2ZSI6cmV0dXJuIGguaXNBY3RpdmU7Y2FzZSJpbmFjdGl2ZSI6cmV0dXJuIWguaXNBY3RpdmU7Y2FzZSJkcmFmdCI6cmV0dXJuIWgucHJvY2Vzc2VzfHxoLnByb2Nlc3Nlcy5sZW5ndGg9PT0wO2RlZmF1bHQ6cmV0dXJuITB9fSkpfHxbXTtyZXR1cm4gaS5qc3hzKCJkaXYiLHtjbGFzc05hbWU6Im1pbi1oLXNjcmVlbiBmbGV4IGJnLWJhY2tncm91bmQiLGNoaWxkcmVuOltpLmpzeChGdCx7fSksaS5qc3hzKCJtYWluIix7Y2xhc3NOYW1lOiJmbGV4LTEgb3ZlcmZsb3ctYXV0byIsY2hpbGRyZW46W2kuanN4KEl0LHt9KSxpLmpzeHMoImRpdiIse2NsYXNzTmFtZToicC02IixjaGlsZHJlbjpbaS5qc3goImRpdiIse2NsYXNzTmFtZToiZ3JpZCBncmlkLWNvbHMtMSBnYXAtNiBtYi04IixjaGlsZHJlbjppLmpzeChpZSx7Y2hpbGRyZW46aS5qc3gobGUse2NsYXNzTmFtZToicC02IixjaGlsZHJlbjppLmpzeHMoImRpdiIse2NsYXNzTmFtZToiZmxleCBpdGVtcy1jZW50ZXIganVzdGlmeS1iZXR3ZWVuIixjaGlsZHJlbjpbaS5qc3hzKCJkaXYiLHtjaGlsZHJlbjpbaS5qc3goInAiLHtjbGFzc05hbWU6InRleHQtc20gdGV4dC1tdXRlZC1mb3JlZ3JvdW5kIixjaGlsZHJlbjoiVG90YWwgUHJvY2Vzc2VzIn0pLGkuanN4KCJwIix7Y2xhc3NOYW1lOiJ0ZXh0LTN4bCBmb250LWJvbGQgdGV4dC1wcmltYXJ5IiwiZGF0YS10ZXN0aWQiOiJzdGF0LXRvdGFsLXByb2Nlc3NlcyIsY2hpbGRyZW46Yz8iLi4uIjoobD09bnVsbD92b2lkIDA6bC50b3RhbFByb2Nlc3Nlcyl8fDB9KV19KSxpLmpzeCgiZGl2Iix7Y2xhc3NOYW1lOiJ3LTEyIGgtMTIgYmctcHJpbWFyeS8xMCByb3VuZGVkLWxnIGZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktY2VudGVyIixjaGlsZHJlbjppLmpzeChZcyx7Y2xhc3NOYW1lOiJ0ZXh0LXByaW1hcnkgdGV4dC14bCJ9KX0pXX0pfSl9KX0pLGkuanN4cygiZGl2Iix7Y2xhc3NOYW1lOiJtYi04IixjaGlsZHJlbjpbaS5qc3goImRpdiIse2NsYXNzTmFtZToiZmxleCBpdGVtcy1jZW50ZXIganVzdGlmeS1iZXR3ZWVuIG1iLTQiLGNoaWxkcmVuOmkuanN4KCJoMiIse2NsYXNzTmFtZToidGV4dC14bCBmb250LXNlbWlib2xkIixjaGlsZHJlbjoiUXVpY2sgQWN0aW9ucyJ9KX0pLGkuanN4KCJkaXYiLHtjbGFzc05hbWU6ImdyaWQgZ3JpZC1jb2xzLTEgZ2FwLTQiLGNoaWxkcmVuOmkuanN4KFkse3ZhcmlhbnQ6Im91dGxpbmUiLGNsYXNzTmFtZToiaC1hdXRvIHAtNiBqdXN0aWZ5LXN0YXJ0Iixhc0NoaWxkOiEwLCJkYXRhLXRlc3RpZCI6ImJ1dHRvbi1jcmVhdGUtZWxlbWVudCIsY2hpbGRyZW46aS5qc3godXQse2hyZWY6Ii9jcmVhdGUtZWxlbWVudCIsY2hpbGRyZW46aS5qc3hzKCJkaXYiLHtjbGFzc05hbWU6ImZsZXggaXRlbXMtY2VudGVyIHNwYWNlLXgtNCIsY2hpbGRyZW46W2kuanN4KCJkaXYiLHtjbGFzc05hbWU6InctMTIgaC0xMiBiZy1wcmltYXJ5LzEwIHJvdW5kZWQtbGcgZmxleCBpdGVtcy1jZW50ZXIganVzdGlmeS1jZW50ZXIiLGNoaWxkcmVuOmkuanN4KEh0LHtjbGFzc05hbWU6InRleHQtcHJpbWFyeSB0ZXh0LXhsIn0pfSksaS5qc3hzKCJkaXYiLHtjbGFzc05hbWU6InRleHQtbGVmdCIsY2hpbGRyZW46W2kuanN4KCJoMyIse2NsYXNzTmFtZToiZm9udC1zZW1pYm9sZCIsY2hpbGRyZW46IkNyZWF0ZSBOZXcgRWxlbWVudCJ9KSxpLmpzeCgicCIse2NsYXNzTmFtZToidGV4dC1zbSB0ZXh0LW11dGVkLWZvcmVncm91bmQiLGNoaWxkcmVuOiJBZGQgYSBuZXcgT0UgZWxlbWVudCB0byB0aGUgZnJhbWV3b3JrIn0pXX0pXX0pfSl9KX0pXX0pLGkuanN4cygiZGl2Iix7Y2xhc3NOYW1lOiJtYi04IixjaGlsZHJlbjpbaS5qc3hzKCJkaXYiLHtjbGFzc05hbWU6ImZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktYmV0d2VlbiBtYi02IixjaGlsZHJlbjpbaS5qc3goImgyIix7Y2xhc3NOYW1lOiJ0ZXh0LXhsIGZvbnQtc2VtaWJvbGQiLGNoaWxkcmVuOiJPRSBFbGVtZW50cyJ9KSxpLmpzeHMoImRpdiIse2NsYXNzTmFtZToiZmxleCBpdGVtcy1jZW50ZXIgc3BhY2UteC00IixjaGlsZHJlbjpbaS5qc3hzKCJzZWxlY3QiLHtjbGFzc05hbWU6InB4LTMgcHktMiBib3JkZXIgYm9yZGVyLWJvcmRlciByb3VuZGVkLW1kIGJnLWJhY2tncm91bmQgdGV4dC1zbSIsImRhdGEtdGVzdGlkIjoic2VsZWN0LWZpbHRlci1lbGVtZW50cyIsdmFsdWU6bixvbkNoYW5nZTpoPT5zKGgudGFyZ2V0LnZhbHVlKSxjaGlsZHJlbjpbaS5qc3goIm9wdGlvbiIse3ZhbHVlOiIiLGNoaWxkcmVuOiJBbGwgRWxlbWVudHMifSksaS5qc3goIm9wdGlvbiIse3ZhbHVlOiJhY3RpdmUiLGNoaWxkcmVuOiJBY3RpdmUgT25seSJ9KSxpLmpzeCgib3B0aW9uIix7dmFsdWU6ImluYWN0aXZlIixjaGlsZHJlbjoiSW5hY3RpdmUgT25seSJ9KSxpLmpzeCgib3B0aW9uIix7dmFsdWU6ImRyYWZ0IixjaGlsZHJlbjoiRHJhZnRzIn0pXX0pLGkuanN4KFkse3ZhcmlhbnQ6InNlY29uZGFyeSIsc2l6ZToic20iLCJkYXRhLXRlc3RpZCI6ImJ1dHRvbi10b2dnbGUtdmlldyIsb25DbGljazooKT0+byhhPT09ImdyaWQiPyJsaXN0IjoiZ3JpZCIpLGNoaWxkcmVuOmE9PT0iZ3JpZCI/aS5qc3hzKGkuRnJhZ21lbnQse2NoaWxkcmVuOltpLmpzeChmRSx7Y2xhc3NOYW1lOiJ3LTQgaC00IG1yLTIifSksIkxpc3QgVmlldyJdfSk6aS5qc3hzKGkuRnJhZ21lbnQse2NoaWxkcmVuOltpLmpzeChIMCx7Y2xhc3NOYW1lOiJ3LTQgaC00IG1yLTIifSksIkdyaWQgVmlldyJdfSl9KV19KV19KSxmP2kuanN4KCJkaXYiLHtjbGFzc05hbWU6ImdyaWQgZ3JpZC1jb2xzLTEgbWQ6Z3JpZC1jb2xzLTIgbGc6Z3JpZC1jb2xzLTMgZ2FwLTYiLGNoaWxkcmVuOlsuLi5BcnJheSg2KV0ubWFwKChoLGcpPT5pLmpzeHMoImRpdiIse2NsYXNzTmFtZToiYmctY2FyZCByb3VuZGVkLWxnIGJvcmRlciBib3JkZXItYm9yZGVyIHAtNiBhbmltYXRlLXB1bHNlIixjaGlsZHJlbjpbaS5qc3goImRpdiIse2NsYXNzTmFtZToidy0xMiBoLTEyIGJnLW11dGVkIHJvdW5kZWQtbGcgbWItNCJ9KSxpLmpzeCgiZGl2Iix7Y2xhc3NOYW1lOiJoLTQgYmctbXV0ZWQgcm91bmRlZCBtYi0yIn0pLGkuanN4KCJkaXYiLHtjbGFzc05hbWU6ImgtMyBiZy1tdXRlZCByb3VuZGVkIG1iLTQgdy0zLzQifSksaS5qc3goImRpdiIse2NsYXNzTmFtZToiaC0yIGJnLW11dGVkIHJvdW5kZWQifSldfSxnKSl9KTp3Lmxlbmd0aD4wP2kuanN4KCJkaXYiLHtjbGFzc05hbWU6YT09PSJncmlkIj8iZ3JpZCBncmlkLWNvbHMtMSBtZDpncmlkLWNvbHMtMiBsZzpncmlkLWNvbHMtMyBnYXAtNiI6InNwYWNlLXktNCIsY2hpbGRyZW46dy5tYXAoaD0+aS5qc3goR0Mse2VsZW1lbnQ6aCx2aWV3TW9kZTphfSxoLmlkKSl9KTpkJiZkLmxlbmd0aD4wP2kuanN4KGllLHtjaGlsZHJlbjppLmpzeHMobGUse2NsYXNzTmFtZToicC04IHRleHQtY2VudGVyIixjaGlsZHJlbjpbaS5qc3goWXMse2NsYXNzTmFtZToidy0xMiBoLTEyIHRleHQtbXV0ZWQtZm9yZWdyb3VuZCBteC1hdXRvIG1iLTQifSksaS5qc3goImgzIix7Y2xhc3NOYW1lOiJ0ZXh0LWxnIGZvbnQtc2VtaWJvbGQgbWItMiIsY2hpbGRyZW46Ik5vIEVsZW1lbnRzIE1hdGNoIEZpbHRlciJ9KSxpLmpzeCgicCIse2NsYXNzTmFtZToidGV4dC1tdXRlZC1mb3JlZ3JvdW5kIG1iLTQiLGNoaWxkcmVuOiJUcnkgYWRqdXN0aW5nIHlvdXIgZmlsdGVyIG9yIGNyZWF0ZSBhIG5ldyBlbGVtZW50LiJ9KSxpLmpzeChZLHt2YXJpYW50OiJvdXRsaW5lIixvbkNsaWNrOigpPT5zKCIiKSwiZGF0YS10ZXN0aWQiOiJidXR0b24tY2xlYXItZmlsdGVyIixjaGlsZHJlbjoiQ2xlYXIgRmlsdGVyIn0pXX0pfSk6aS5qc3goaWUse2NoaWxkcmVuOmkuanN4cyhsZSx7Y2xhc3NOYW1lOiJwLTggdGV4dC1jZW50ZXIiLGNoaWxkcmVuOltpLmpzeChZcyx7Y2xhc3NOYW1lOiJ3LTEyIGgtMTIgdGV4dC1tdXRlZC1mb3JlZ3JvdW5kIG14LWF1dG8gbWItNCJ9KSxpLmpzeCgiaDMiLHtjbGFzc05hbWU6InRleHQtbGcgZm9udC1zZW1pYm9sZCBtYi0yIixjaGlsZHJlbjoiTm8gT0UgRWxlbWVudHMgRm91bmQifSksaS5qc3goInAiLHtjbGFzc05hbWU6InRleHQtbXV0ZWQtZm9yZWdyb3VuZCBtYi00IixjaGlsZHJlbjoiU3RhcnQgYnkgY3JlYXRpbmcgeW91ciBmaXJzdCBPRSBlbGVtZW50IHRvIGJlZ2luIG1hbmFnaW5nIHByb2Nlc3Nlcy4ifSksaS5qc3goWSx7YXNDaGlsZDohMCwiZGF0YS10ZXN0aWQiOiJidXR0b24tY3JlYXRlLWZpcnN0LWVsZW1lbnQiLGNoaWxkcmVuOmkuanN4cyh1dCx7aHJlZjoiL2NyZWF0ZS1lbGVtZW50IixjaGlsZHJlbjpbaS5qc3goSHQse2NsYXNzTmFtZToidy00IGgtNCBtci0yIn0pLCJDcmVhdGUgRmlyc3QgRWxlbWVudCJdfSl9KV19KX0pXX0pLGkuanN4cyhpZSx7Y2hpbGRyZW46W2kuanN4KEVlLHtjaGlsZHJlbjppLmpzeChDZSx7Y2hpbGRyZW46IlJlY2VudCBBY3Rpdml0eSJ9KX0pLGkuanN4KGxlLHtjaGlsZHJlbjp2P2kuanN4cygiZGl2Iix7Y2xhc3NOYW1lOiJ0ZXh0LWNlbnRlciBweS04IixjaGlsZHJlbjpbaS5qc3goImRpdiIse2NsYXNzTmFtZToiYW5pbWF0ZS1zcGluIHJvdW5kZWQtZnVsbCBoLTggdy04IGJvcmRlci1iLTIgYm9yZGVyLXByaW1hcnkgbXgtYXV0byBtYi00In0pLGkuanN4KCJwIix7Y2xhc3NOYW1lOiJ0ZXh0LW11dGVkLWZvcmVncm91bmQiLGNoaWxkcmVuOiJMb2FkaW5nIGFjdGl2aXR5Li4uIn0pXX0pOngmJngubGVuZ3RoPjA/aS5qc3goImRpdiIse2NsYXNzTmFtZToic3BhY2UteS00IixjaGlsZHJlbjp4Lm1hcChoPT5pLmpzeHMoImRpdiIse2NsYXNzTmFtZToiZmxleCBpdGVtcy1zdGFydCBzcGFjZS14LTMgcC0zIGJnLW11dGVkLzMwIHJvdW5kZWQtbGciLGNoaWxkcmVuOltpLmpzeHMoImRpdiIse2NsYXNzTmFtZToidy04IGgtOCBiZy1wcmltYXJ5LzEwIHJvdW5kZWQtZnVsbCBmbGV4IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWNlbnRlciBmbGV4LXNocmluay0wIixjaGlsZHJlbjpbaC5hY3Rpb249PT0iY3JlYXRlZCImJmkuanN4KEh0LHtjbGFzc05hbWU6InctNCBoLTQgdGV4dC1ncmVlbi02MDAifSksaC5hY3Rpb249PT0idXBkYXRlZCImJmkuanN4KGdhLHtjbGFzc05hbWU6InctNCBoLTQgdGV4dC1ibHVlLTYwMCJ9KSxoLmFjdGlvbj09PSJkZWxldGVkIiYmaS5qc3goSmUse2NsYXNzTmFtZToidy00IGgtNCB0ZXh0LXJlZC02MDAifSksaC5hY3Rpb249PT0idmlld2VkIiYmaS5qc3goRm4se2NsYXNzTmFtZToidy00IGgtNCB0ZXh0LWdyYXktNjAwIn0pXX0pLGkuanN4cygiZGl2Iix7Y2xhc3NOYW1lOiJmbGV4LTEgbWluLXctMCIsY2hpbGRyZW46W2kuanN4cygiZGl2Iix7Y2xhc3NOYW1lOiJmbGV4IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWJldHdlZW4iLGNoaWxkcmVuOltpLmpzeCgicCIse2NsYXNzTmFtZToidGV4dC1zbSBmb250LW1lZGl1bSB0cnVuY2F0ZSIsY2hpbGRyZW46aC5kZXNjcmlwdGlvbnx8YCR7aC5hY3Rpb259ICR7aC5lbnRpdHlUeXBlfWB9KSxpLmpzeCgic3BhbiIse2NsYXNzTmFtZToidGV4dC14cyB0ZXh0LW11dGVkLWZvcmVncm91bmQiLGNoaWxkcmVuOmguY3JlYXRlZEF0P25ldyBEYXRlKGguY3JlYXRlZEF0KS50b0xvY2FsZURhdGVTdHJpbmcoKToiUmVjZW50In0pXX0pLGkuanN4cygicCIse2NsYXNzTmFtZToidGV4dC14cyB0ZXh0LW11dGVkLWZvcmVncm91bmQiLGNoaWxkcmVuOltoLnVzZXI/YCR7aC51c2VyLmZpcnN0TmFtZXx8aC51c2VyLmVtYWlsfWA6IlN5c3RlbSIsIiDigKIgIixoLmVudGl0eU5hbWV8fGguZW50aXR5VHlwZV19KV19KV19LGguaWQpKX0pOmkuanN4cygiZGl2Iix7Y2xhc3NOYW1lOiJ0ZXh0LWNlbnRlciBweS04IixjaGlsZHJlbjpbaS5qc3goSmUse2NsYXNzTmFtZToidy0xMiBoLTEyIHRleHQtbXV0ZWQtZm9yZWdyb3VuZCBteC1hdXRvIG1iLTQifSksaS5qc3goImg0Iix7Y2xhc3NOYW1lOiJ0ZXh0LWxnIGZvbnQtbWVkaXVtIG1iLTIiLGNoaWxkcmVuOiJObyBSZWNlbnQgQWN0aXZpdHkifSksaS5qc3goInAiLHtjbGFzc05hbWU6InRleHQtbXV0ZWQtZm9yZWdyb3VuZCIsY2hpbGRyZW46IlN0YXJ0IGNyZWF0aW5nIGFuZCBtYW5hZ2luZyBwcm9jZXNzZXMgdG8gc2VlIGFjdGl2aXR5IGhlcmUuIn0pXX0pfSldfSldfSldfSksaS5qc3goWSx7Y2xhc3NOYW1lOiJmYWIgdy0xNCBoLTE0IHJvdW5kZWQtZnVsbCBzaGFkb3ctbGcgaG92ZXI6c2NhbGUtMTA1IHRyYW5zaXRpb24tdHJhbnNmb3JtIixhc0NoaWxkOiEwLCJkYXRhLXRlc3RpZCI6ImZhYi1jcmVhdGUtZWxlbWVudCIsY2hpbGRyZW46aS5qc3godXQse2hyZWY6Ii9jcmVhdGUtZWxlbWVudCIsY2hpbGRyZW46aS5qc3goSHQse2NsYXNzTmFtZToidy02IGgtNiJ9KX0pfSldfSl9ZnVuY3Rpb24gTGcoZSxbdCxyXSl7cmV0dXJuIE1hdGgubWluKHIsTWF0aC5tYXgodCxlKSl9dmFyIFpDPXkuY3JlYXRlQ29udGV4dCh2b2lkIDApO2Z1bmN0aW9uIEtDKGUpe2NvbnN0IHQ9eS51c2VDb250ZXh0KFpDKTtyZXR1cm4gZXx8dHx8Imx0ciJ9dmFyIGhkPTA7ZnVuY3Rpb24gWUMoKXt5LnVzZUVmZmVjdCgoKT0+e2NvbnN0IGU9ZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgiW2RhdGEtcmFkaXgtZm9jdXMtZ3VhcmRdIik7cmV0dXJuIGRvY3VtZW50LmJvZHkuaW5zZXJ0QWRqYWNlbnRFbGVtZW50KCJhZnRlcmJlZ2luIixlWzBdPz9EZygpKSxkb2N1bWVudC5ib2R5Lmluc2VydEFkamFjZW50RWxlbWVudCgiYmVmb3JlZW5kIixlWzFdPz9EZygpKSxoZCsrLCgpPT57aGQ9PT0xJiZkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCJbZGF0YS1yYWRpeC1mb2N1cy1ndWFyZF0iKS5mb3JFYWNoKHQ9PnQucmVtb3ZlKCkpLGhkLS19fSxbXSl9ZnVuY3Rpb24gRGcoKXtjb25zdCBlPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoInNwYW4iKTtyZXR1cm4gZS5zZXRBdHRyaWJ1dGUoImRhdGEtcmFkaXgtZm9jdXMtZ3VhcmQiLCIiKSxlLnRhYkluZGV4PTAsZS5zdHlsZS5vdXRsaW5lPSJub25lIixlLnN0eWxlLm9wYWNpdHk9IjAiLGUuc3R5bGUucG9zaXRpb249ImZpeGVkIixlLnN0eWxlLnBvaW50ZXJFdmVudHM9Im5vbmUiLGV9dmFyIHBkPSJmb2N1c1Njb3BlLmF1dG9Gb2N1c09uTW91bnQiLGdkPSJmb2N1c1Njb3BlLmF1dG9Gb2N1c09uVW5tb3VudCIsJGc9e2J1YmJsZXM6ITEsY2FuY2VsYWJsZTohMH0sWEM9IkZvY3VzU2NvcGUiLEJ3PXkuZm9yd2FyZFJlZigoZSx0KT0+e2NvbnN0e2xvb3A6cj0hMSx0cmFwcGVkOm49ITEsb25Nb3VudEF1dG9Gb2N1czpzLG9uVW5tb3VudEF1dG9Gb2N1czphLC4uLm99PWUsW2wsY109eS51c2VTdGF0ZShudWxsKSx1PXByKHMpLGQ9cHIoYSksZj15LnVzZVJlZihudWxsKSxwPWV0KHQsbT0+YyhtKSkseD15LnVzZVJlZih7cGF1c2VkOiExLHBhdXNlKCl7dGhpcy5wYXVzZWQ9ITB9LHJlc3VtZSgpe3RoaXMucGF1c2VkPSExfX0pLmN1cnJlbnQ7eS51c2VFZmZlY3QoKCk9PntpZihuKXtsZXQgbT1mdW5jdGlvbihiKXtpZih4LnBhdXNlZHx8IWwpcmV0dXJuO2NvbnN0IE49Yi50YXJnZXQ7bC5jb250YWlucyhOKT9mLmN1cnJlbnQ9TjpHbihmLmN1cnJlbnQse3NlbGVjdDohMH0pfSx3PWZ1bmN0aW9uKGIpe2lmKHgucGF1c2VkfHwhbClyZXR1cm47Y29uc3QgTj1iLnJlbGF0ZWRUYXJnZXQ7TiE9PW51bGwmJihsLmNvbnRhaW5zKE4pfHxHbihmLmN1cnJlbnQse3NlbGVjdDohMH0pKX0saD1mdW5jdGlvbihiKXtpZihkb2N1bWVudC5hY3RpdmVFbGVtZW50PT09ZG9jdW1lbnQuYm9keSlmb3IoY29uc3QgUyBvZiBiKVMucmVtb3ZlZE5vZGVzLmxlbmd0aD4wJiZHbihsKX07ZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigiZm9jdXNpbiIsbSksZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigiZm9jdXNvdXQiLHcpO2NvbnN0IGc9bmV3IE11dGF0aW9uT2JzZXJ2ZXIoaCk7cmV0dXJuIGwmJmcub2JzZXJ2ZShsLHtjaGlsZExpc3Q6ITAsc3VidHJlZTohMH0pLCgpPT57ZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcigiZm9jdXNpbiIsbSksZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcigiZm9jdXNvdXQiLHcpLGcuZGlzY29ubmVjdCgpfX19LFtuLGwseC5wYXVzZWRdKSx5LnVzZUVmZmVjdCgoKT0+e2lmKGwpe1ZnLmFkZCh4KTtjb25zdCBtPWRvY3VtZW50LmFjdGl2ZUVsZW1lbnQ7aWYoIWwuY29udGFpbnMobSkpe2NvbnN0IGg9bmV3IEN1c3RvbUV2ZW50KHBkLCRnKTtsLmFkZEV2ZW50TGlzdGVuZXIocGQsdSksbC5kaXNwYXRjaEV2ZW50KGgpLGguZGVmYXVsdFByZXZlbnRlZHx8KEpDKHNfKEh3KGwpKSx7c2VsZWN0OiEwfSksZG9jdW1lbnQuYWN0aXZlRWxlbWVudD09PW0mJkduKGwpKX1yZXR1cm4oKT0+e2wucmVtb3ZlRXZlbnRMaXN0ZW5lcihwZCx1KSxzZXRUaW1lb3V0KCgpPT57Y29uc3QgaD1uZXcgQ3VzdG9tRXZlbnQoZ2QsJGcpO2wuYWRkRXZlbnRMaXN0ZW5lcihnZCxkKSxsLmRpc3BhdGNoRXZlbnQoaCksaC5kZWZhdWx0UHJldmVudGVkfHxHbihtPz9kb2N1bWVudC5ib2R5LHtzZWxlY3Q6ITB9KSxsLnJlbW92ZUV2ZW50TGlzdGVuZXIoZ2QsZCksVmcucmVtb3ZlKHgpfSwwKX19fSxbbCx1LGQseF0pO2NvbnN0IHY9eS51c2VDYWxsYmFjayhtPT57aWYoIXImJiFufHx4LnBhdXNlZClyZXR1cm47Y29uc3Qgdz1tLmtleT09PSJUYWIiJiYhbS5hbHRLZXkmJiFtLmN0cmxLZXkmJiFtLm1ldGFLZXksaD1kb2N1bWVudC5hY3RpdmVFbGVtZW50O2lmKHcmJmgpe2NvbnN0IGc9bS5jdXJyZW50VGFyZ2V0LFtiLE5dPWVfKGcpO2ImJk4/IW0uc2hpZnRLZXkmJmg9PT1OPyhtLnByZXZlbnREZWZhdWx0KCksciYmR24oYix7c2VsZWN0OiEwfSkpOm0uc2hpZnRLZXkmJmg9PT1iJiYobS5wcmV2ZW50RGVmYXVsdCgpLHImJkduKE4se3NlbGVjdDohMH0pKTpoPT09ZyYmbS5wcmV2ZW50RGVmYXVsdCgpfX0sW3Isbix4LnBhdXNlZF0pO3JldHVybiBpLmpzeChrZS5kaXYse3RhYkluZGV4Oi0xLC4uLm8scmVmOnAsb25LZXlEb3duOnZ9KX0pO0J3LmRpc3BsYXlOYW1lPVhDO2Z1bmN0aW9uIEpDKGUse3NlbGVjdDp0PSExfT17fSl7Y29uc3Qgcj1kb2N1bWVudC5hY3RpdmVFbGVtZW50O2Zvcihjb25zdCBuIG9mIGUpaWYoR24obix7c2VsZWN0OnR9KSxkb2N1bWVudC5hY3RpdmVFbGVtZW50IT09cilyZXR1cm59ZnVuY3Rpb24gZV8oZSl7Y29uc3QgdD1IdyhlKSxyPXpnKHQsZSksbj16Zyh0LnJldmVyc2UoKSxlKTtyZXR1cm5bcixuXX1mdW5jdGlvbiBIdyhlKXtjb25zdCB0PVtdLHI9ZG9jdW1lbnQuY3JlYXRlVHJlZVdhbGtlcihlLE5vZGVGaWx0ZXIuU0hPV19FTEVNRU5ULHthY2NlcHROb2RlOm49Pntjb25zdCBzPW4udGFnTmFtZT09PSJJTlBVVCImJm4udHlwZT09PSJoaWRkZW4iO3JldHVybiBuLmRpc2FibGVkfHxuLmhpZGRlbnx8cz9Ob2RlRmlsdGVyLkZJTFRFUl9TS0lQOm4udGFiSW5kZXg+PTA/Tm9kZUZpbHRlci5GSUxURVJfQUNDRVBUOk5vZGVGaWx0ZXIuRklMVEVSX1NLSVB9fSk7Zm9yKDtyLm5leHROb2RlKCk7KXQucHVzaChyLmN1cnJlbnROb2RlKTtyZXR1cm4gdH1mdW5jdGlvbiB6ZyhlLHQpe2Zvcihjb25zdCByIG9mIGUpaWYoIXRfKHIse3VwVG86dH0pKXJldHVybiByfWZ1bmN0aW9uIHRfKGUse3VwVG86dH0pe2lmKGdldENvbXB1dGVkU3R5bGUoZSkudmlzaWJpbGl0eT09PSJoaWRkZW4iKXJldHVybiEwO2Zvcig7ZTspe2lmKHQhPT12b2lkIDAmJmU9PT10KXJldHVybiExO2lmKGdldENvbXB1dGVkU3R5bGUoZSkuZGlzcGxheT09PSJub25lIilyZXR1cm4hMDtlPWUucGFyZW50RWxlbWVudH1yZXR1cm4hMX1mdW5jdGlvbiByXyhlKXtyZXR1cm4gZSBpbnN0YW5jZW9mIEhUTUxJbnB1dEVsZW1lbnQmJiJzZWxlY3QiaW4gZX1mdW5jdGlvbiBHbihlLHtzZWxlY3Q6dD0hMX09e30pe2lmKGUmJmUuZm9jdXMpe2NvbnN0IHI9ZG9jdW1lbnQuYWN0aXZlRWxlbWVudDtlLmZvY3VzKHtwcmV2ZW50U2Nyb2xsOiEwfSksZSE9PXImJnJfKGUpJiZ0JiZlLnNlbGVjdCgpfX12YXIgVmc9bl8oKTtmdW5jdGlvbiBuXygpe2xldCBlPVtdO3JldHVybnthZGQodCl7Y29uc3Qgcj1lWzBdO3QhPT1yJiYocj09bnVsbHx8ci5wYXVzZSgpKSxlPVVnKGUsdCksZS51bnNoaWZ0KHQpfSxyZW1vdmUodCl7dmFyIHI7ZT1VZyhlLHQpLChyPWVbMF0pPT1udWxsfHxyLnJlc3VtZSgpfX19ZnVuY3Rpb24gVWcoZSx0KXtjb25zdCByPVsuLi5lXSxuPXIuaW5kZXhPZih0KTtyZXR1cm4gbiE9PS0xJiZyLnNwbGljZShuLDEpLHJ9ZnVuY3Rpb24gc18oZSl7cmV0dXJuIGUuZmlsdGVyKHQ9PnQudGFnTmFtZSE9PSJBIil9ZnVuY3Rpb24gTWgoZSl7Y29uc3QgdD15LnVzZVJlZih7dmFsdWU6ZSxwcmV2aW91czplfSk7cmV0dXJuIHkudXNlTWVtbygoKT0+KHQuY3VycmVudC52YWx1ZSE9PWUmJih0LmN1cnJlbnQucHJldmlvdXM9dC5jdXJyZW50LnZhbHVlLHQuY3VycmVudC52YWx1ZT1lKSx0LmN1cnJlbnQucHJldmlvdXMpLFtlXSl9dmFyIGlfPWZ1bmN0aW9uKGUpe2lmKHR5cGVvZiBkb2N1bWVudD4idSIpcmV0dXJuIG51bGw7dmFyIHQ9QXJyYXkuaXNBcnJheShlKT9lWzBdOmU7cmV0dXJuIHQub3duZXJEb2N1bWVudC5ib2R5fSx2aT1uZXcgV2Vha01hcCxBbD1uZXcgV2Vha01hcCxNbD17fSx4ZD0wLFd3PWZ1bmN0aW9uKGUpe3JldHVybiBlJiYoZS5ob3N0fHxXdyhlLnBhcmVudE5vZGUpKX0sYV89ZnVuY3Rpb24oZSx0KXtyZXR1cm4gdC5tYXAoZnVuY3Rpb24ocil7aWYoZS5jb250YWlucyhyKSlyZXR1cm4gcjt2YXIgbj1XdyhyKTtyZXR1cm4gbiYmZS5jb250YWlucyhuKT9uOihjb25zb2xlLmVycm9yKCJhcmlhLWhpZGRlbiIsciwiaW4gbm90IGNvbnRhaW5lZCBpbnNpZGUiLGUsIi4gRG9pbmcgbm90aGluZyIpLG51bGwpfSkuZmlsdGVyKGZ1bmN0aW9uKHIpe3JldHVybiEhcn0pfSxvXz1mdW5jdGlvbihlLHQscixuKXt2YXIgcz1hXyh0LEFycmF5LmlzQXJyYXkoZSk/ZTpbZV0pO01sW3JdfHwoTWxbcl09bmV3IFdlYWtNYXApO3ZhciBhPU1sW3JdLG89W10sbD1uZXcgU2V0LGM9bmV3IFNldChzKSx1PWZ1bmN0aW9uKGYpeyFmfHxsLmhhcyhmKXx8KGwuYWRkKGYpLHUoZi5wYXJlbnROb2RlKSl9O3MuZm9yRWFjaCh1KTt2YXIgZD1mdW5jdGlvbihmKXshZnx8Yy5oYXMoZil8fEFycmF5LnByb3RvdHlwZS5mb3JFYWNoLmNhbGwoZi5jaGlsZHJlbixmdW5jdGlvbihwKXtpZihsLmhhcyhwKSlkKHApO2Vsc2UgdHJ5e3ZhciB4PXAuZ2V0QXR0cmlidXRlKG4pLHY9eCE9PW51bGwmJnghPT0iZmFsc2UiLG09KHZpLmdldChwKXx8MCkrMSx3PShhLmdldChwKXx8MCkrMTt2aS5zZXQocCxtKSxhLnNldChwLHcpLG8ucHVzaChwKSxtPT09MSYmdiYmQWwuc2V0KHAsITApLHc9PT0xJiZwLnNldEF0dHJpYnV0ZShyLCJ0cnVlIiksdnx8cC5zZXRBdHRyaWJ1dGUobiwidHJ1ZSIpfWNhdGNoKGgpe2NvbnNvbGUuZXJyb3IoImFyaWEtaGlkZGVuOiBjYW5ub3Qgb3BlcmF0ZSBvbiAiLHAsaCl9fSl9O3JldHVybiBkKHQpLGwuY2xlYXIoKSx4ZCsrLGZ1bmN0aW9uKCl7by5mb3JFYWNoKGZ1bmN0aW9uKGYpe3ZhciBwPXZpLmdldChmKS0xLHg9YS5nZXQoZiktMTt2aS5zZXQoZixwKSxhLnNldChmLHgpLHB8fChBbC5oYXMoZil8fGYucmVtb3ZlQXR0cmlidXRlKG4pLEFsLmRlbGV0ZShmKSkseHx8Zi5yZW1vdmVBdHRyaWJ1dGUocil9KSx4ZC0tLHhkfHwodmk9bmV3IFdlYWtNYXAsdmk9bmV3IFdlYWtNYXAsQWw9bmV3IFdlYWtNYXAsTWw9e30pfX0sbF89ZnVuY3Rpb24oZSx0LHIpe3I9PT12b2lkIDAmJihyPSJkYXRhLWFyaWEtaGlkZGVuIik7dmFyIG49QXJyYXkuZnJvbShBcnJheS5pc0FycmF5KGUpP2U6W2VdKSxzPWlfKGUpO3JldHVybiBzPyhuLnB1c2guYXBwbHkobixBcnJheS5mcm9tKHMucXVlcnlTZWxlY3RvckFsbCgiW2FyaWEtbGl2ZV0iKSkpLG9fKG4scyxyLCJhcmlhLWhpZGRlbiIpKTpmdW5jdGlvbigpe3JldHVybiBudWxsfX0scm49ZnVuY3Rpb24oKXtyZXR1cm4gcm49T2JqZWN0LmFzc2lnbnx8ZnVuY3Rpb24odCl7Zm9yKHZhciByLG49MSxzPWFyZ3VtZW50cy5sZW5ndGg7bjxzO24rKyl7cj1hcmd1bWVudHNbbl07Zm9yKHZhciBhIGluIHIpT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHIsYSkmJih0W2FdPXJbYV0pfXJldHVybiB0fSxybi5hcHBseSh0aGlzLGFyZ3VtZW50cyl9O2Z1bmN0aW9uIHF3KGUsdCl7dmFyIHI9e307Zm9yKHZhciBuIGluIGUpT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGUsbikmJnQuaW5kZXhPZihuKTwwJiYocltuXT1lW25dKTtpZihlIT1udWxsJiZ0eXBlb2YgT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scz09ImZ1bmN0aW9uIilmb3IodmFyIHM9MCxuPU9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMoZSk7czxuLmxlbmd0aDtzKyspdC5pbmRleE9mKG5bc10pPDAmJk9iamVjdC5wcm90b3R5cGUucHJvcGVydHlJc0VudW1lcmFibGUuY2FsbChlLG5bc10pJiYocltuW3NdXT1lW25bc11dKTtyZXR1cm4gcn1mdW5jdGlvbiBjXyhlLHQscil7aWYocnx8YXJndW1lbnRzLmxlbmd0aD09PTIpZm9yKHZhciBuPTAscz10Lmxlbmd0aCxhO248cztuKyspKGF8fCEobiBpbiB0KSkmJihhfHwoYT1BcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbCh0LDAsbikpLGFbbl09dFtuXSk7cmV0dXJuIGUuY29uY2F0KGF8fEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKHQpKX12YXIgSmw9InJpZ2h0LXNjcm9sbC1iYXItcG9zaXRpb24iLGVjPSJ3aWR0aC1iZWZvcmUtc2Nyb2xsLWJhciIsdV89IndpdGgtc2Nyb2xsLWJhcnMtaGlkZGVuIixkXz0iLS1yZW1vdmVkLWJvZHktc2Nyb2xsLWJhci1zaXplIjtmdW5jdGlvbiB2ZChlLHQpe3JldHVybiB0eXBlb2YgZT09ImZ1bmN0aW9uIj9lKHQpOmUmJihlLmN1cnJlbnQ9dCksZX1mdW5jdGlvbiBmXyhlLHQpe3ZhciByPXkudXNlU3RhdGUoZnVuY3Rpb24oKXtyZXR1cm57dmFsdWU6ZSxjYWxsYmFjazp0LGZhY2FkZTp7Z2V0IGN1cnJlbnQoKXtyZXR1cm4gci52YWx1ZX0sc2V0IGN1cnJlbnQobil7dmFyIHM9ci52YWx1ZTtzIT09biYmKHIudmFsdWU9bixyLmNhbGxiYWNrKG4scykpfX19fSlbMF07cmV0dXJuIHIuY2FsbGJhY2s9dCxyLmZhY2FkZX12YXIgbV89dHlwZW9mIHdpbmRvdzwidSI/eS51c2VMYXlvdXRFZmZlY3Q6eS51c2VFZmZlY3QsQmc9bmV3IFdlYWtNYXA7ZnVuY3Rpb24gaF8oZSx0KXt2YXIgcj1mXyhudWxsLGZ1bmN0aW9uKG4pe3JldHVybiBlLmZvckVhY2goZnVuY3Rpb24ocyl7cmV0dXJuIHZkKHMsbil9KX0pO3JldHVybiBtXyhmdW5jdGlvbigpe3ZhciBuPUJnLmdldChyKTtpZihuKXt2YXIgcz1uZXcgU2V0KG4pLGE9bmV3IFNldChlKSxvPXIuY3VycmVudDtzLmZvckVhY2goZnVuY3Rpb24obCl7YS5oYXMobCl8fHZkKGwsbnVsbCl9KSxhLmZvckVhY2goZnVuY3Rpb24obCl7cy5oYXMobCl8fHZkKGwsbyl9KX1CZy5zZXQocixlKX0sW2VdKSxyfWZ1bmN0aW9uIHBfKGUpe3JldHVybiBlfWZ1bmN0aW9uIGdfKGUsdCl7dD09PXZvaWQgMCYmKHQ9cF8pO3ZhciByPVtdLG49ITEscz17cmVhZDpmdW5jdGlvbigpe2lmKG4pdGhyb3cgbmV3IEVycm9yKCJTaWRlY2FyOiBjb3VsZCBub3QgYHJlYWRgIGZyb20gYW4gYGFzc2lnbmVkYCBtZWRpdW0uIGByZWFkYCBjb3VsZCBiZSB1c2VkIG9ubHkgd2l0aCBgdXNlTWVkaXVtYC4iKTtyZXR1cm4gci5sZW5ndGg/cltyLmxlbmd0aC0xXTplfSx1c2VNZWRpdW06ZnVuY3Rpb24oYSl7dmFyIG89dChhLG4pO3JldHVybiByLnB1c2gobyksZnVuY3Rpb24oKXtyPXIuZmlsdGVyKGZ1bmN0aW9uKGwpe3JldHVybiBsIT09b30pfX0sYXNzaWduU3luY01lZGl1bTpmdW5jdGlvbihhKXtmb3Iobj0hMDtyLmxlbmd0aDspe3ZhciBvPXI7cj1bXSxvLmZvckVhY2goYSl9cj17cHVzaDpmdW5jdGlvbihsKXtyZXR1cm4gYShsKX0sZmlsdGVyOmZ1bmN0aW9uKCl7cmV0dXJuIHJ9fX0sYXNzaWduTWVkaXVtOmZ1bmN0aW9uKGEpe249ITA7dmFyIG89W107aWYoci5sZW5ndGgpe3ZhciBsPXI7cj1bXSxsLmZvckVhY2goYSksbz1yfXZhciBjPWZ1bmN0aW9uKCl7dmFyIGQ9bztvPVtdLGQuZm9yRWFjaChhKX0sdT1mdW5jdGlvbigpe3JldHVybiBQcm9taXNlLnJlc29sdmUoKS50aGVuKGMpfTt1KCkscj17cHVzaDpmdW5jdGlvbihkKXtvLnB1c2goZCksdSgpfSxmaWx0ZXI6ZnVuY3Rpb24oZCl7cmV0dXJuIG89by5maWx0ZXIoZCkscn19fX07cmV0dXJuIHN9ZnVuY3Rpb24geF8oZSl7ZT09PXZvaWQgMCYmKGU9e30pO3ZhciB0PWdfKG51bGwpO3JldHVybiB0Lm9wdGlvbnM9cm4oe2FzeW5jOiEwLHNzcjohMX0sZSksdH12YXIgR3c9ZnVuY3Rpb24oZSl7dmFyIHQ9ZS5zaWRlQ2FyLHI9cXcoZSxbInNpZGVDYXIiXSk7aWYoIXQpdGhyb3cgbmV3IEVycm9yKCJTaWRlY2FyOiBwbGVhc2UgcHJvdmlkZSBgc2lkZUNhcmAgcHJvcGVydHkgdG8gaW1wb3J0IHRoZSByaWdodCBjYXIiKTt2YXIgbj10LnJlYWQoKTtpZighbil0aHJvdyBuZXcgRXJyb3IoIlNpZGVjYXIgbWVkaXVtIG5vdCBmb3VuZCIpO3JldHVybiB5LmNyZWF0ZUVsZW1lbnQobixybih7fSxyKSl9O0d3LmlzU2lkZUNhckV4cG9ydD0hMDtmdW5jdGlvbiB2XyhlLHQpe3JldHVybiBlLnVzZU1lZGl1bSh0KSxHd312YXIgUXc9eF8oKSx5ZD1mdW5jdGlvbigpe30sTnU9eS5mb3J3YXJkUmVmKGZ1bmN0aW9uKGUsdCl7dmFyIHI9eS51c2VSZWYobnVsbCksbj15LnVzZVN0YXRlKHtvblNjcm9sbENhcHR1cmU6eWQsb25XaGVlbENhcHR1cmU6eWQsb25Ub3VjaE1vdmVDYXB0dXJlOnlkfSkscz1uWzBdLGE9blsxXSxvPWUuZm9yd2FyZFByb3BzLGw9ZS5jaGlsZHJlbixjPWUuY2xhc3NOYW1lLHU9ZS5yZW1vdmVTY3JvbGxCYXIsZD1lLmVuYWJsZWQsZj1lLnNoYXJkcyxwPWUuc2lkZUNhcix4PWUubm9Jc29sYXRpb24sdj1lLmluZXJ0LG09ZS5hbGxvd1BpbmNoWm9vbSx3PWUuYXMsaD13PT09dm9pZCAwPyJkaXYiOncsZz1lLmdhcE1vZGUsYj1xdyhlLFsiZm9yd2FyZFByb3BzIiwiY2hpbGRyZW4iLCJjbGFzc05hbWUiLCJyZW1vdmVTY3JvbGxCYXIiLCJlbmFibGVkIiwic2hhcmRzIiwic2lkZUNhciIsIm5vSXNvbGF0aW9uIiwiaW5lcnQiLCJhbGxvd1BpbmNoWm9vbSIsImFzIiwiZ2FwTW9kZSJdKSxOPXAsUz1oXyhbcix0XSksXz1ybihybih7fSxiKSxzKTtyZXR1cm4geS5jcmVhdGVFbGVtZW50KHkuRnJhZ21lbnQsbnVsbCxkJiZ5LmNyZWF0ZUVsZW1lbnQoTix7c2lkZUNhcjpRdyxyZW1vdmVTY3JvbGxCYXI6dSxzaGFyZHM6Zixub0lzb2xhdGlvbjp4LGluZXJ0OnYsc2V0Q2FsbGJhY2tzOmEsYWxsb3dQaW5jaFpvb206ISFtLGxvY2tSZWY6cixnYXBNb2RlOmd9KSxvP3kuY2xvbmVFbGVtZW50KHkuQ2hpbGRyZW4ub25seShsKSxybihybih7fSxfKSx7cmVmOlN9KSk6eS5jcmVhdGVFbGVtZW50KGgscm4oe30sXyx7Y2xhc3NOYW1lOmMscmVmOlN9KSxsKSl9KTtOdS5kZWZhdWx0UHJvcHM9e2VuYWJsZWQ6ITAscmVtb3ZlU2Nyb2xsQmFyOiEwLGluZXJ0OiExfTtOdS5jbGFzc05hbWVzPXtmdWxsV2lkdGg6ZWMsemVyb1JpZ2h0OkpsfTt2YXIgeV89ZnVuY3Rpb24oKXtpZih0eXBlb2YgX193ZWJwYWNrX25vbmNlX188InUiKXJldHVybiBfX3dlYnBhY2tfbm9uY2VfX307ZnVuY3Rpb24gd18oKXtpZighZG9jdW1lbnQpcmV0dXJuIG51bGw7dmFyIGU9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgic3R5bGUiKTtlLnR5cGU9InRleHQvY3NzIjt2YXIgdD15XygpO3JldHVybiB0JiZlLnNldEF0dHJpYnV0ZSgibm9uY2UiLHQpLGV9ZnVuY3Rpb24gYl8oZSx0KXtlLnN0eWxlU2hlZXQ/ZS5zdHlsZVNoZWV0LmNzc1RleHQ9dDplLmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKHQpKX1mdW5jdGlvbiBqXyhlKXt2YXIgdD1kb2N1bWVudC5oZWFkfHxkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgiaGVhZCIpWzBdO3QuYXBwZW5kQ2hpbGQoZSl9dmFyIE5fPWZ1bmN0aW9uKCl7dmFyIGU9MCx0PW51bGw7cmV0dXJue2FkZDpmdW5jdGlvbihyKXtlPT0wJiYodD13XygpKSYmKGJfKHQsciksal8odCkpLGUrK30scmVtb3ZlOmZ1bmN0aW9uKCl7ZS0tLCFlJiZ0JiYodC5wYXJlbnROb2RlJiZ0LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQodCksdD1udWxsKX19fSxTXz1mdW5jdGlvbigpe3ZhciBlPU5fKCk7cmV0dXJuIGZ1bmN0aW9uKHQscil7eS51c2VFZmZlY3QoZnVuY3Rpb24oKXtyZXR1cm4gZS5hZGQodCksZnVuY3Rpb24oKXtlLnJlbW92ZSgpfX0sW3QmJnJdKX19LFp3PWZ1bmN0aW9uKCl7dmFyIGU9U18oKSx0PWZ1bmN0aW9uKHIpe3ZhciBuPXIuc3R5bGVzLHM9ci5keW5hbWljO3JldHVybiBlKG4scyksbnVsbH07cmV0dXJuIHR9LGtfPXtsZWZ0OjAsdG9wOjAscmlnaHQ6MCxnYXA6MH0sd2Q9ZnVuY3Rpb24oZSl7cmV0dXJuIHBhcnNlSW50KGV8fCIiLDEwKXx8MH0sRV89ZnVuY3Rpb24oZSl7dmFyIHQ9d2luZG93LmdldENvbXB1dGVkU3R5bGUoZG9jdW1lbnQuYm9keSkscj10W2U9PT0icGFkZGluZyI/InBhZGRpbmdMZWZ0IjoibWFyZ2luTGVmdCJdLG49dFtlPT09InBhZGRpbmciPyJwYWRkaW5nVG9wIjoibWFyZ2luVG9wIl0scz10W2U9PT0icGFkZGluZyI/InBhZGRpbmdSaWdodCI6Im1hcmdpblJpZ2h0Il07cmV0dXJuW3dkKHIpLHdkKG4pLHdkKHMpXX0sQ189ZnVuY3Rpb24oZSl7aWYoZT09PXZvaWQgMCYmKGU9Im1hcmdpbiIpLHR5cGVvZiB3aW5kb3c+InUiKXJldHVybiBrXzt2YXIgdD1FXyhlKSxyPWRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jbGllbnRXaWR0aCxuPXdpbmRvdy5pbm5lcldpZHRoO3JldHVybntsZWZ0OnRbMF0sdG9wOnRbMV0scmlnaHQ6dFsyXSxnYXA6TWF0aC5tYXgoMCxuLXIrdFsyXS10WzBdKX19LF9fPVp3KCkscWk9ImRhdGEtc2Nyb2xsLWxvY2tlZCIsUF89ZnVuY3Rpb24oZSx0LHIsbil7dmFyIHM9ZS5sZWZ0LGE9ZS50b3Asbz1lLnJpZ2h0LGw9ZS5nYXA7cmV0dXJuIHI9PT12b2lkIDAmJihyPSJtYXJnaW4iKSxgCiAgLmAuY29uY2F0KHVfLGAgewogICBvdmVyZmxvdzogaGlkZGVuIGApLmNvbmNhdChuLGA7CiAgIHBhZGRpbmctcmlnaHQ6IGApLmNvbmNhdChsLCJweCAiKS5jb25jYXQobixgOwogIH0KICBib2R5W2ApLmNvbmNhdChxaSxgXSB7CiAgICBvdmVyZmxvdzogaGlkZGVuIGApLmNvbmNhdChuLGA7CiAgICBvdmVyc2Nyb2xsLWJlaGF2aW9yOiBjb250YWluOwogICAgYCkuY29uY2F0KFt0JiYicG9zaXRpb246IHJlbGF0aXZlICIuY29uY2F0KG4sIjsiKSxyPT09Im1hcmdpbiImJmAKICAgIHBhZGRpbmctbGVmdDogYC5jb25jYXQocyxgcHg7CiAgICBwYWRkaW5nLXRvcDogYCkuY29uY2F0KGEsYHB4OwogICAgcGFkZGluZy1yaWdodDogYCkuY29uY2F0KG8sYHB4OwogICAgbWFyZ2luLWxlZnQ6MDsKICAgIG1hcmdpbi10b3A6MDsKICAgIG1hcmdpbi1yaWdodDogYCkuY29uY2F0KGwsInB4ICIpLmNvbmNhdChuLGA7CiAgICBgKSxyPT09InBhZGRpbmciJiYicGFkZGluZy1yaWdodDogIi5jb25jYXQobCwicHggIikuY29uY2F0KG4sIjsiKV0uZmlsdGVyKEJvb2xlYW4pLmpvaW4oIiIpLGAKICB9CiAgCiAgLmApLmNvbmNhdChKbCxgIHsKICAgIHJpZ2h0OiBgKS5jb25jYXQobCwicHggIikuY29uY2F0KG4sYDsKICB9CiAgCiAgLmApLmNvbmNhdChlYyxgIHsKICAgIG1hcmdpbi1yaWdodDogYCkuY29uY2F0KGwsInB4ICIpLmNvbmNhdChuLGA7CiAgfQogIAogIC5gKS5jb25jYXQoSmwsIiAuIikuY29uY2F0KEpsLGAgewogICAgcmlnaHQ6IDAgYCkuY29uY2F0KG4sYDsKICB9CiAgCiAgLmApLmNvbmNhdChlYywiIC4iKS5jb25jYXQoZWMsYCB7CiAgICBtYXJnaW4tcmlnaHQ6IDAgYCkuY29uY2F0KG4sYDsKICB9CiAgCiAgYm9keVtgKS5jb25jYXQocWksYF0gewogICAgYCkuY29uY2F0KGRfLCI6ICIpLmNvbmNhdChsLGBweDsKICB9CmApfSxIZz1mdW5jdGlvbigpe3ZhciBlPXBhcnNlSW50KGRvY3VtZW50LmJvZHkuZ2V0QXR0cmlidXRlKHFpKXx8IjAiLDEwKTtyZXR1cm4gaXNGaW5pdGUoZSk/ZTowfSxUXz1mdW5jdGlvbigpe3kudXNlRWZmZWN0KGZ1bmN0aW9uKCl7cmV0dXJuIGRvY3VtZW50LmJvZHkuc2V0QXR0cmlidXRlKHFpLChIZygpKzEpLnRvU3RyaW5nKCkpLGZ1bmN0aW9uKCl7dmFyIGU9SGcoKS0xO2U8PTA/ZG9jdW1lbnQuYm9keS5yZW1vdmVBdHRyaWJ1dGUocWkpOmRvY3VtZW50LmJvZHkuc2V0QXR0cmlidXRlKHFpLGUudG9TdHJpbmcoKSl9fSxbXSl9LFJfPWZ1bmN0aW9uKGUpe3ZhciB0PWUubm9SZWxhdGl2ZSxyPWUubm9JbXBvcnRhbnQsbj1lLmdhcE1vZGUscz1uPT09dm9pZCAwPyJtYXJnaW4iOm47VF8oKTt2YXIgYT15LnVzZU1lbW8oZnVuY3Rpb24oKXtyZXR1cm4gQ18ocyl9LFtzXSk7cmV0dXJuIHkuY3JlYXRlRWxlbWVudChfXyx7c3R5bGVzOlBfKGEsIXQscyxyPyIiOiIhaW1wb3J0YW50Iil9KX0sWWY9ITE7aWYodHlwZW9mIHdpbmRvdzwidSIpdHJ5e3ZhciBPbD1PYmplY3QuZGVmaW5lUHJvcGVydHkoe30sInBhc3NpdmUiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gWWY9ITAsITB9fSk7d2luZG93LmFkZEV2ZW50TGlzdGVuZXIoInRlc3QiLE9sLE9sKSx3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcigidGVzdCIsT2wsT2wpfWNhdGNoe1lmPSExfXZhciB5aT1ZZj97cGFzc2l2ZTohMX06ITEsQV89ZnVuY3Rpb24oZSl7cmV0dXJuIGUudGFnTmFtZT09PSJURVhUQVJFQSJ9LEt3PWZ1bmN0aW9uKGUsdCl7aWYoIShlIGluc3RhbmNlb2YgRWxlbWVudCkpcmV0dXJuITE7dmFyIHI9d2luZG93LmdldENvbXB1dGVkU3R5bGUoZSk7cmV0dXJuIHJbdF0hPT0iaGlkZGVuIiYmIShyLm92ZXJmbG93WT09PXIub3ZlcmZsb3dYJiYhQV8oZSkmJnJbdF09PT0idmlzaWJsZSIpfSxNXz1mdW5jdGlvbihlKXtyZXR1cm4gS3coZSwib3ZlcmZsb3dZIil9LE9fPWZ1bmN0aW9uKGUpe3JldHVybiBLdyhlLCJvdmVyZmxvd1giKX0sV2c9ZnVuY3Rpb24oZSx0KXt2YXIgcj10Lm93bmVyRG9jdW1lbnQsbj10O2Rve3R5cGVvZiBTaGFkb3dSb290PCJ1IiYmbiBpbnN0YW5jZW9mIFNoYWRvd1Jvb3QmJihuPW4uaG9zdCk7dmFyIHM9WXcoZSxuKTtpZihzKXt2YXIgYT1YdyhlLG4pLG89YVsxXSxsPWFbMl07aWYobz5sKXJldHVybiEwfW49bi5wYXJlbnROb2RlfXdoaWxlKG4mJm4hPT1yLmJvZHkpO3JldHVybiExfSxGXz1mdW5jdGlvbihlKXt2YXIgdD1lLnNjcm9sbFRvcCxyPWUuc2Nyb2xsSGVpZ2h0LG49ZS5jbGllbnRIZWlnaHQ7cmV0dXJuW3QscixuXX0sSV89ZnVuY3Rpb24oZSl7dmFyIHQ9ZS5zY3JvbGxMZWZ0LHI9ZS5zY3JvbGxXaWR0aCxuPWUuY2xpZW50V2lkdGg7cmV0dXJuW3QscixuXX0sWXc9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gZT09PSJ2Ij9NXyh0KTpPXyh0KX0sWHc9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gZT09PSJ2Ij9GXyh0KTpJXyh0KX0sTF89ZnVuY3Rpb24oZSx0KXtyZXR1cm4gZT09PSJoIiYmdD09PSJydGwiPy0xOjF9LERfPWZ1bmN0aW9uKGUsdCxyLG4scyl7dmFyIGE9TF8oZSx3aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZSh0KS5kaXJlY3Rpb24pLG89YSpuLGw9ci50YXJnZXQsYz10LmNvbnRhaW5zKGwpLHU9ITEsZD1vPjAsZj0wLHA9MDtkb3t2YXIgeD1YdyhlLGwpLHY9eFswXSxtPXhbMV0sdz14WzJdLGg9bS13LWEqdjsodnx8aCkmJll3KGUsbCkmJihmKz1oLHArPXYpLGwgaW5zdGFuY2VvZiBTaGFkb3dSb290P2w9bC5ob3N0Omw9bC5wYXJlbnROb2RlfXdoaWxlKCFjJiZsIT09ZG9jdW1lbnQuYm9keXx8YyYmKHQuY29udGFpbnMobCl8fHQ9PT1sKSk7cmV0dXJuKGQmJihNYXRoLmFicyhmKTwxfHwhcyl8fCFkJiYoTWF0aC5hYnMocCk8MXx8IXMpKSYmKHU9ITApLHV9LEZsPWZ1bmN0aW9uKGUpe3JldHVybiJjaGFuZ2VkVG91Y2hlcyJpbiBlP1tlLmNoYW5nZWRUb3VjaGVzWzBdLmNsaWVudFgsZS5jaGFuZ2VkVG91Y2hlc1swXS5jbGllbnRZXTpbMCwwXX0scWc9ZnVuY3Rpb24oZSl7cmV0dXJuW2UuZGVsdGFYLGUuZGVsdGFZXX0sR2c9ZnVuY3Rpb24oZSl7cmV0dXJuIGUmJiJjdXJyZW50ImluIGU/ZS5jdXJyZW50OmV9LCRfPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIGVbMF09PT10WzBdJiZlWzFdPT09dFsxXX0sel89ZnVuY3Rpb24oZSl7cmV0dXJuYAogIC5ibG9jay1pbnRlcmFjdGl2aXR5LWAuY29uY2F0KGUsYCB7cG9pbnRlci1ldmVudHM6IG5vbmU7fQogIC5hbGxvdy1pbnRlcmFjdGl2aXR5LWApLmNvbmNhdChlLGAge3BvaW50ZXItZXZlbnRzOiBhbGw7fQpgKX0sVl89MCx3aT1bXTtmdW5jdGlvbiBVXyhlKXt2YXIgdD15LnVzZVJlZihbXSkscj15LnVzZVJlZihbMCwwXSksbj15LnVzZVJlZigpLHM9eS51c2VTdGF0ZShWXysrKVswXSxhPXkudXNlU3RhdGUoWncpWzBdLG89eS51c2VSZWYoZSk7eS51c2VFZmZlY3QoZnVuY3Rpb24oKXtvLmN1cnJlbnQ9ZX0sW2VdKSx5LnVzZUVmZmVjdChmdW5jdGlvbigpe2lmKGUuaW5lcnQpe2RvY3VtZW50LmJvZHkuY2xhc3NMaXN0LmFkZCgiYmxvY2staW50ZXJhY3Rpdml0eS0iLmNvbmNhdChzKSk7dmFyIG09Y18oW2UubG9ja1JlZi5jdXJyZW50XSwoZS5zaGFyZHN8fFtdKS5tYXAoR2cpLCEwKS5maWx0ZXIoQm9vbGVhbik7cmV0dXJuIG0uZm9yRWFjaChmdW5jdGlvbih3KXtyZXR1cm4gdy5jbGFzc0xpc3QuYWRkKCJhbGxvdy1pbnRlcmFjdGl2aXR5LSIuY29uY2F0KHMpKX0pLGZ1bmN0aW9uKCl7ZG9jdW1lbnQuYm9keS5jbGFzc0xpc3QucmVtb3ZlKCJibG9jay1pbnRlcmFjdGl2aXR5LSIuY29uY2F0KHMpKSxtLmZvckVhY2goZnVuY3Rpb24odyl7cmV0dXJuIHcuY2xhc3NMaXN0LnJlbW92ZSgiYWxsb3ctaW50ZXJhY3Rpdml0eS0iLmNvbmNhdChzKSl9KX19fSxbZS5pbmVydCxlLmxvY2tSZWYuY3VycmVudCxlLnNoYXJkc10pO3ZhciBsPXkudXNlQ2FsbGJhY2soZnVuY3Rpb24obSx3KXtpZigidG91Y2hlcyJpbiBtJiZtLnRvdWNoZXMubGVuZ3RoPT09Mnx8bS50eXBlPT09IndoZWVsIiYmbS5jdHJsS2V5KXJldHVybiFvLmN1cnJlbnQuYWxsb3dQaW5jaFpvb207dmFyIGg9RmwobSksZz1yLmN1cnJlbnQsYj0iZGVsdGFYImluIG0/bS5kZWx0YVg6Z1swXS1oWzBdLE49ImRlbHRhWSJpbiBtP20uZGVsdGFZOmdbMV0taFsxXSxTLF89bS50YXJnZXQsaz1NYXRoLmFicyhiKT5NYXRoLmFicyhOKT8iaCI6InYiO2lmKCJ0b3VjaGVzImluIG0mJms9PT0iaCImJl8udHlwZT09PSJyYW5nZSIpcmV0dXJuITE7dmFyIFQ9V2coayxfKTtpZighVClyZXR1cm4hMDtpZihUP1M9azooUz1rPT09InYiPyJoIjoidiIsVD1XZyhrLF8pKSwhVClyZXR1cm4hMTtpZighbi5jdXJyZW50JiYiY2hhbmdlZFRvdWNoZXMiaW4gbSYmKGJ8fE4pJiYobi5jdXJyZW50PVMpLCFTKXJldHVybiEwO3ZhciBMPW4uY3VycmVudHx8UztyZXR1cm4gRF8oTCx3LG0sTD09PSJoIj9iOk4sITApfSxbXSksYz15LnVzZUNhbGxiYWNrKGZ1bmN0aW9uKG0pe3ZhciB3PW07aWYoISghd2kubGVuZ3RofHx3aVt3aS5sZW5ndGgtMV0hPT1hKSl7dmFyIGg9ImRlbHRhWSJpbiB3P3FnKHcpOkZsKHcpLGc9dC5jdXJyZW50LmZpbHRlcihmdW5jdGlvbihTKXtyZXR1cm4gUy5uYW1lPT09dy50eXBlJiYoUy50YXJnZXQ9PT13LnRhcmdldHx8dy50YXJnZXQ9PT1TLnNoYWRvd1BhcmVudCkmJiRfKFMuZGVsdGEsaCl9KVswXTtpZihnJiZnLnNob3VsZCl7dy5jYW5jZWxhYmxlJiZ3LnByZXZlbnREZWZhdWx0KCk7cmV0dXJufWlmKCFnKXt2YXIgYj0oby5jdXJyZW50LnNoYXJkc3x8W10pLm1hcChHZykuZmlsdGVyKEJvb2xlYW4pLmZpbHRlcihmdW5jdGlvbihTKXtyZXR1cm4gUy5jb250YWlucyh3LnRhcmdldCl9KSxOPWIubGVuZ3RoPjA/bCh3LGJbMF0pOiFvLmN1cnJlbnQubm9Jc29sYXRpb247TiYmdy5jYW5jZWxhYmxlJiZ3LnByZXZlbnREZWZhdWx0KCl9fX0sW10pLHU9eS51c2VDYWxsYmFjayhmdW5jdGlvbihtLHcsaCxnKXt2YXIgYj17bmFtZTptLGRlbHRhOncsdGFyZ2V0Omgsc2hvdWxkOmcsc2hhZG93UGFyZW50OkJfKGgpfTt0LmN1cnJlbnQucHVzaChiKSxzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7dC5jdXJyZW50PXQuY3VycmVudC5maWx0ZXIoZnVuY3Rpb24oTil7cmV0dXJuIE4hPT1ifSl9LDEpfSxbXSksZD15LnVzZUNhbGxiYWNrKGZ1bmN0aW9uKG0pe3IuY3VycmVudD1GbChtKSxuLmN1cnJlbnQ9dm9pZCAwfSxbXSksZj15LnVzZUNhbGxiYWNrKGZ1bmN0aW9uKG0pe3UobS50eXBlLHFnKG0pLG0udGFyZ2V0LGwobSxlLmxvY2tSZWYuY3VycmVudCkpfSxbXSkscD15LnVzZUNhbGxiYWNrKGZ1bmN0aW9uKG0pe3UobS50eXBlLEZsKG0pLG0udGFyZ2V0LGwobSxlLmxvY2tSZWYuY3VycmVudCkpfSxbXSk7eS51c2VFZmZlY3QoZnVuY3Rpb24oKXtyZXR1cm4gd2kucHVzaChhKSxlLnNldENhbGxiYWNrcyh7b25TY3JvbGxDYXB0dXJlOmYsb25XaGVlbENhcHR1cmU6ZixvblRvdWNoTW92ZUNhcHR1cmU6cH0pLGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoIndoZWVsIixjLHlpKSxkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCJ0b3VjaG1vdmUiLGMseWkpLGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoInRvdWNoc3RhcnQiLGQseWkpLGZ1bmN0aW9uKCl7d2k9d2kuZmlsdGVyKGZ1bmN0aW9uKG0pe3JldHVybiBtIT09YX0pLGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoIndoZWVsIixjLHlpKSxkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCJ0b3VjaG1vdmUiLGMseWkpLGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoInRvdWNoc3RhcnQiLGQseWkpfX0sW10pO3ZhciB4PWUucmVtb3ZlU2Nyb2xsQmFyLHY9ZS5pbmVydDtyZXR1cm4geS5jcmVhdGVFbGVtZW50KHkuRnJhZ21lbnQsbnVsbCx2P3kuY3JlYXRlRWxlbWVudChhLHtzdHlsZXM6el8ocyl9KTpudWxsLHg/eS5jcmVhdGVFbGVtZW50KFJfLHtnYXBNb2RlOmUuZ2FwTW9kZX0pOm51bGwpfWZ1bmN0aW9uIEJfKGUpe2Zvcih2YXIgdD1udWxsO2UhPT1udWxsOyllIGluc3RhbmNlb2YgU2hhZG93Um9vdCYmKHQ9ZS5ob3N0LGU9ZS5ob3N0KSxlPWUucGFyZW50Tm9kZTtyZXR1cm4gdH1jb25zdCBIXz12XyhRdyxVXyk7dmFyIEp3PXkuZm9yd2FyZFJlZihmdW5jdGlvbihlLHQpe3JldHVybiB5LmNyZWF0ZUVsZW1lbnQoTnUscm4oe30sZSx7cmVmOnQsc2lkZUNhcjpIX30pKX0pO0p3LmNsYXNzTmFtZXM9TnUuY2xhc3NOYW1lczt2YXIgV189WyIgIiwiRW50ZXIiLCJBcnJvd1VwIiwiQXJyb3dEb3duIl0scV89WyIgIiwiRW50ZXIiXSxpbD0iU2VsZWN0IixbU3Usa3UsR19dPWYwKGlsKSxbUmEselJdPUFzKGlsLFtHXyx3dV0pLEV1PXd1KCksW1FfLE1zXT1SYShpbCksW1pfLEtfXT1SYShpbCksZTE9ZT0+e2NvbnN0e19fc2NvcGVTZWxlY3Q6dCxjaGlsZHJlbjpyLG9wZW46bixkZWZhdWx0T3BlbjpzLG9uT3BlbkNoYW5nZTphLHZhbHVlOm8sZGVmYXVsdFZhbHVlOmwsb25WYWx1ZUNoYW5nZTpjLGRpcjp1LG5hbWU6ZCxhdXRvQ29tcGxldGU6ZixkaXNhYmxlZDpwLHJlcXVpcmVkOngsZm9ybTp2fT1lLG09RXUodCksW3csaF09eS51c2VTdGF0ZShudWxsKSxbZyxiXT15LnVzZVN0YXRlKG51bGwpLFtOLFNdPXkudXNlU3RhdGUoITEpLF89S0ModSksW2s9ITEsVF09X28oe3Byb3A6bixkZWZhdWx0UHJvcDpzLG9uQ2hhbmdlOmF9KSxbTCxQXT1fbyh7cHJvcDpvLGRlZmF1bHRQcm9wOmwsb25DaGFuZ2U6Y30pLGo9eS51c2VSZWYobnVsbCksST13P3Z8fCEhdy5jbG9zZXN0KCJmb3JtIik6ITAsW1YsT109eS51c2VTdGF0ZShuZXcgU2V0KSxaPUFycmF5LmZyb20oVikubWFwKFE9PlEucHJvcHMudmFsdWUpLmpvaW4oIjsiKTtyZXR1cm4gaS5qc3gobUMsey4uLm0sY2hpbGRyZW46aS5qc3hzKFFfLHtyZXF1aXJlZDp4LHNjb3BlOnQsdHJpZ2dlcjp3LG9uVHJpZ2dlckNoYW5nZTpoLHZhbHVlTm9kZTpnLG9uVmFsdWVOb2RlQ2hhbmdlOmIsdmFsdWVOb2RlSGFzQ2hpbGRyZW46TixvblZhbHVlTm9kZUhhc0NoaWxkcmVuQ2hhbmdlOlMsY29udGVudElkOnZoKCksdmFsdWU6TCxvblZhbHVlQ2hhbmdlOlAsb3BlbjprLG9uT3BlbkNoYW5nZTpULGRpcjpfLHRyaWdnZXJQb2ludGVyRG93blBvc1JlZjpqLGRpc2FibGVkOnAsY2hpbGRyZW46W2kuanN4KFN1LlByb3ZpZGVyLHtzY29wZTp0LGNoaWxkcmVuOmkuanN4KFpfLHtzY29wZTplLl9fc2NvcGVTZWxlY3Qsb25OYXRpdmVPcHRpb25BZGQ6eS51c2VDYWxsYmFjayhRPT57TyhBPT5uZXcgU2V0KEEpLmFkZChRKSl9LFtdKSxvbk5hdGl2ZU9wdGlvblJlbW92ZTp5LnVzZUNhbGxiYWNrKFE9PntPKEE9Pntjb25zdCBNPW5ldyBTZXQoQSk7cmV0dXJuIE0uZGVsZXRlKFEpLE19KX0sW10pLGNoaWxkcmVuOnJ9KX0pLEk/aS5qc3hzKGsxLHsiYXJpYS1oaWRkZW4iOiEwLHJlcXVpcmVkOngsdGFiSW5kZXg6LTEsbmFtZTpkLGF1dG9Db21wbGV0ZTpmLHZhbHVlOkwsb25DaGFuZ2U6UT0+UChRLnRhcmdldC52YWx1ZSksZGlzYWJsZWQ6cCxmb3JtOnYsY2hpbGRyZW46W0w9PT12b2lkIDA/aS5qc3goIm9wdGlvbiIse3ZhbHVlOiIifSk6bnVsbCxBcnJheS5mcm9tKFYpXX0sWik6bnVsbF19KX0pfTtlMS5kaXNwbGF5TmFtZT1pbDt2YXIgdDE9IlNlbGVjdFRyaWdnZXIiLHIxPXkuZm9yd2FyZFJlZigoZSx0KT0+e2NvbnN0e19fc2NvcGVTZWxlY3Q6cixkaXNhYmxlZDpuPSExLC4uLnN9PWUsYT1FdShyKSxvPU1zKHQxLHIpLGw9by5kaXNhYmxlZHx8bixjPWV0KHQsby5vblRyaWdnZXJDaGFuZ2UpLHU9a3UociksZD15LnVzZVJlZigidG91Y2giKSxbZixwLHhdPUUxKG09Pntjb25zdCB3PXUoKS5maWx0ZXIoYj0+IWIuZGlzYWJsZWQpLGg9dy5maW5kKGI9PmIudmFsdWU9PT1vLnZhbHVlKSxnPUMxKHcsbSxoKTtnIT09dm9pZCAwJiZvLm9uVmFsdWVDaGFuZ2UoZy52YWx1ZSl9KSx2PW09PntsfHwoby5vbk9wZW5DaGFuZ2UoITApLHgoKSksbSYmKG8udHJpZ2dlclBvaW50ZXJEb3duUG9zUmVmLmN1cnJlbnQ9e3g6TWF0aC5yb3VuZChtLnBhZ2VYKSx5Ok1hdGgucm91bmQobS5wYWdlWSl9KX07cmV0dXJuIGkuanN4KFN3LHthc0NoaWxkOiEwLC4uLmEsY2hpbGRyZW46aS5qc3goa2UuYnV0dG9uLHt0eXBlOiJidXR0b24iLHJvbGU6ImNvbWJvYm94IiwiYXJpYS1jb250cm9scyI6by5jb250ZW50SWQsImFyaWEtZXhwYW5kZWQiOm8ub3BlbiwiYXJpYS1yZXF1aXJlZCI6by5yZXF1aXJlZCwiYXJpYS1hdXRvY29tcGxldGUiOiJub25lIixkaXI6by5kaXIsImRhdGEtc3RhdGUiOm8ub3Blbj8ib3BlbiI6ImNsb3NlZCIsZGlzYWJsZWQ6bCwiZGF0YS1kaXNhYmxlZCI6bD8iIjp2b2lkIDAsImRhdGEtcGxhY2Vob2xkZXIiOlMxKG8udmFsdWUpPyIiOnZvaWQgMCwuLi5zLHJlZjpjLG9uQ2xpY2s6d2Uocy5vbkNsaWNrLG09PnttLmN1cnJlbnRUYXJnZXQuZm9jdXMoKSxkLmN1cnJlbnQhPT0ibW91c2UiJiZ2KG0pfSksb25Qb2ludGVyRG93bjp3ZShzLm9uUG9pbnRlckRvd24sbT0+e2QuY3VycmVudD1tLnBvaW50ZXJUeXBlO2NvbnN0IHc9bS50YXJnZXQ7dy5oYXNQb2ludGVyQ2FwdHVyZShtLnBvaW50ZXJJZCkmJncucmVsZWFzZVBvaW50ZXJDYXB0dXJlKG0ucG9pbnRlcklkKSxtLmJ1dHRvbj09PTAmJm0uY3RybEtleT09PSExJiZtLnBvaW50ZXJUeXBlPT09Im1vdXNlIiYmKHYobSksbS5wcmV2ZW50RGVmYXVsdCgpKX0pLG9uS2V5RG93bjp3ZShzLm9uS2V5RG93bixtPT57Y29uc3Qgdz1mLmN1cnJlbnQhPT0iIjshKG0uY3RybEtleXx8bS5hbHRLZXl8fG0ubWV0YUtleSkmJm0ua2V5Lmxlbmd0aD09PTEmJnAobS5rZXkpLCEodyYmbS5rZXk9PT0iICIpJiZXXy5pbmNsdWRlcyhtLmtleSkmJih2KCksbS5wcmV2ZW50RGVmYXVsdCgpKX0pfSl9KX0pO3IxLmRpc3BsYXlOYW1lPXQxO3ZhciBuMT0iU2VsZWN0VmFsdWUiLHMxPXkuZm9yd2FyZFJlZigoZSx0KT0+e2NvbnN0e19fc2NvcGVTZWxlY3Q6cixjbGFzc05hbWU6bixzdHlsZTpzLGNoaWxkcmVuOmEscGxhY2Vob2xkZXI6bz0iIiwuLi5sfT1lLGM9TXMobjEscikse29uVmFsdWVOb2RlSGFzQ2hpbGRyZW5DaGFuZ2U6dX09YyxkPWEhPT12b2lkIDAsZj1ldCh0LGMub25WYWx1ZU5vZGVDaGFuZ2UpO3JldHVybiBEdCgoKT0+e3UoZCl9LFt1LGRdKSxpLmpzeChrZS5zcGFuLHsuLi5sLHJlZjpmLHN0eWxlOntwb2ludGVyRXZlbnRzOiJub25lIn0sY2hpbGRyZW46UzEoYy52YWx1ZSk/aS5qc3goaS5GcmFnbWVudCx7Y2hpbGRyZW46b30pOmF9KX0pO3MxLmRpc3BsYXlOYW1lPW4xO3ZhciBZXz0iU2VsZWN0SWNvbiIsaTE9eS5mb3J3YXJkUmVmKChlLHQpPT57Y29uc3R7X19zY29wZVNlbGVjdDpyLGNoaWxkcmVuOm4sLi4uc309ZTtyZXR1cm4gaS5qc3goa2Uuc3Bhbix7ImFyaWEtaGlkZGVuIjohMCwuLi5zLHJlZjp0LGNoaWxkcmVuOm58fCLilrwifSl9KTtpMS5kaXNwbGF5TmFtZT1ZXzt2YXIgWF89IlNlbGVjdFBvcnRhbCIsYTE9ZT0+aS5qc3goZGgse2FzQ2hpbGQ6ITAsLi4uZX0pO2ExLmRpc3BsYXlOYW1lPVhfO3ZhciB1aT0iU2VsZWN0Q29udGVudCIsbzE9eS5mb3J3YXJkUmVmKChlLHQpPT57Y29uc3Qgcj1Ncyh1aSxlLl9fc2NvcGVTZWxlY3QpLFtuLHNdPXkudXNlU3RhdGUoKTtpZihEdCgoKT0+e3MobmV3IERvY3VtZW50RnJhZ21lbnQpfSxbXSksIXIub3Blbil7Y29uc3QgYT1uO3JldHVybiBhP2dpLmNyZWF0ZVBvcnRhbChpLmpzeChsMSx7c2NvcGU6ZS5fX3Njb3BlU2VsZWN0LGNoaWxkcmVuOmkuanN4KFN1LlNsb3Qse3Njb3BlOmUuX19zY29wZVNlbGVjdCxjaGlsZHJlbjppLmpzeCgiZGl2Iix7Y2hpbGRyZW46ZS5jaGlsZHJlbn0pfSl9KSxhKTpudWxsfXJldHVybiBpLmpzeChjMSx7Li4uZSxyZWY6dH0pfSk7bzEuZGlzcGxheU5hbWU9dWk7dmFyIFRyPTEwLFtsMSxPc109UmEodWkpLEpfPSJTZWxlY3RDb250ZW50SW1wbCIsZVA9Q28oIlNlbGVjdENvbnRlbnQuUmVtb3ZlU2Nyb2xsIiksYzE9eS5mb3J3YXJkUmVmKChlLHQpPT57Y29uc3R7X19zY29wZVNlbGVjdDpyLHBvc2l0aW9uOm49Iml0ZW0tYWxpZ25lZCIsb25DbG9zZUF1dG9Gb2N1czpzLG9uRXNjYXBlS2V5RG93bjphLG9uUG9pbnRlckRvd25PdXRzaWRlOm8sc2lkZTpsLHNpZGVPZmZzZXQ6YyxhbGlnbjp1LGFsaWduT2Zmc2V0OmQsYXJyb3dQYWRkaW5nOmYsY29sbGlzaW9uQm91bmRhcnk6cCxjb2xsaXNpb25QYWRkaW5nOngsc3RpY2t5OnYsaGlkZVdoZW5EZXRhY2hlZDptLGF2b2lkQ29sbGlzaW9uczp3LC4uLmh9PWUsZz1Ncyh1aSxyKSxbYixOXT15LnVzZVN0YXRlKG51bGwpLFtTLF9dPXkudXNlU3RhdGUobnVsbCksaz1ldCh0LGNlPT5OKGNlKSksW1QsTF09eS51c2VTdGF0ZShudWxsKSxbUCxqXT15LnVzZVN0YXRlKG51bGwpLEk9a3UociksW1YsT109eS51c2VTdGF0ZSghMSksWj15LnVzZVJlZighMSk7eS51c2VFZmZlY3QoKCk9PntpZihiKXJldHVybiBsXyhiKX0sW2JdKSxZQygpO2NvbnN0IFE9eS51c2VDYWxsYmFjayhjZT0+e2NvbnN0W0llLC4uLm90XT1JKCkubWFwKGFlPT5hZS5yZWYuY3VycmVudCksW2hlXT1vdC5zbGljZSgtMSksSz1kb2N1bWVudC5hY3RpdmVFbGVtZW50O2Zvcihjb25zdCBhZSBvZiBjZSlpZihhZT09PUt8fChhZT09bnVsbHx8YWUuc2Nyb2xsSW50b1ZpZXcoe2Jsb2NrOiJuZWFyZXN0In0pLGFlPT09SWUmJlMmJihTLnNjcm9sbFRvcD0wKSxhZT09PWhlJiZTJiYoUy5zY3JvbGxUb3A9Uy5zY3JvbGxIZWlnaHQpLGFlPT1udWxsfHxhZS5mb2N1cygpLGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQhPT1LKSlyZXR1cm59LFtJLFNdKSxBPXkudXNlQ2FsbGJhY2soKCk9PlEoW1QsYl0pLFtRLFQsYl0pO3kudXNlRWZmZWN0KCgpPT57ViYmQSgpfSxbVixBXSk7Y29uc3R7b25PcGVuQ2hhbmdlOk0sdHJpZ2dlclBvaW50ZXJEb3duUG9zUmVmOiR9PWc7eS51c2VFZmZlY3QoKCk9PntpZihiKXtsZXQgY2U9e3g6MCx5OjB9O2NvbnN0IEllPWhlPT57dmFyIEssYWU7Y2U9e3g6TWF0aC5hYnMoTWF0aC5yb3VuZChoZS5wYWdlWCktKCgoSz0kLmN1cnJlbnQpPT1udWxsP3ZvaWQgMDpLLngpPz8wKSkseTpNYXRoLmFicyhNYXRoLnJvdW5kKGhlLnBhZ2VZKS0oKChhZT0kLmN1cnJlbnQpPT1udWxsP3ZvaWQgMDphZS55KT8/MCkpfX0sb3Q9aGU9PntjZS54PD0xMCYmY2UueTw9MTA/aGUucHJldmVudERlZmF1bHQoKTpiLmNvbnRhaW5zKGhlLnRhcmdldCl8fE0oITEpLGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoInBvaW50ZXJtb3ZlIixJZSksJC5jdXJyZW50PW51bGx9O3JldHVybiAkLmN1cnJlbnQhPT1udWxsJiYoZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigicG9pbnRlcm1vdmUiLEllKSxkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCJwb2ludGVydXAiLG90LHtjYXB0dXJlOiEwLG9uY2U6ITB9KSksKCk9Pntkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCJwb2ludGVybW92ZSIsSWUpLGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoInBvaW50ZXJ1cCIsb3Qse2NhcHR1cmU6ITB9KX19fSxbYixNLCRdKSx5LnVzZUVmZmVjdCgoKT0+e2NvbnN0IGNlPSgpPT5NKCExKTtyZXR1cm4gd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoImJsdXIiLGNlKSx3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigicmVzaXplIixjZSksKCk9Pnt3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcigiYmx1ciIsY2UpLHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCJyZXNpemUiLGNlKX19LFtNXSk7Y29uc3RbRCxSXT1FMShjZT0+e2NvbnN0IEllPUkoKS5maWx0ZXIoSz0+IUsuZGlzYWJsZWQpLG90PUllLmZpbmQoSz0+Sy5yZWYuY3VycmVudD09PWRvY3VtZW50LmFjdGl2ZUVsZW1lbnQpLGhlPUMxKEllLGNlLG90KTtoZSYmc2V0VGltZW91dCgoKT0+aGUucmVmLmN1cnJlbnQuZm9jdXMoKSl9KSxmZT15LnVzZUNhbGxiYWNrKChjZSxJZSxvdCk9Pntjb25zdCBoZT0hWi5jdXJyZW50JiYhb3Q7KGcudmFsdWUhPT12b2lkIDAmJmcudmFsdWU9PT1JZXx8aGUpJiYoTChjZSksaGUmJihaLmN1cnJlbnQ9ITApKX0sW2cudmFsdWVdKSxkdD15LnVzZUNhbGxiYWNrKCgpPT5iPT1udWxsP3ZvaWQgMDpiLmZvY3VzKCksW2JdKSx0dD15LnVzZUNhbGxiYWNrKChjZSxJZSxvdCk9Pntjb25zdCBoZT0hWi5jdXJyZW50JiYhb3Q7KGcudmFsdWUhPT12b2lkIDAmJmcudmFsdWU9PT1JZXx8aGUpJiZqKGNlKX0sW2cudmFsdWVdKSxfdD1uPT09InBvcHBlciI/WGY6dTEseHQ9X3Q9PT1YZj97c2lkZTpsLHNpZGVPZmZzZXQ6YyxhbGlnbjp1LGFsaWduT2Zmc2V0OmQsYXJyb3dQYWRkaW5nOmYsY29sbGlzaW9uQm91bmRhcnk6cCxjb2xsaXNpb25QYWRkaW5nOngsc3RpY2t5OnYsaGlkZVdoZW5EZXRhY2hlZDptLGF2b2lkQ29sbGlzaW9uczp3fTp7fTtyZXR1cm4gaS5qc3gobDEse3Njb3BlOnIsY29udGVudDpiLHZpZXdwb3J0OlMsb25WaWV3cG9ydENoYW5nZTpfLGl0ZW1SZWZDYWxsYmFjazpmZSxzZWxlY3RlZEl0ZW06VCxvbkl0ZW1MZWF2ZTpkdCxpdGVtVGV4dFJlZkNhbGxiYWNrOnR0LGZvY3VzU2VsZWN0ZWRJdGVtOkEsc2VsZWN0ZWRJdGVtVGV4dDpQLHBvc2l0aW9uOm4saXNQb3NpdGlvbmVkOlYsc2VhcmNoUmVmOkQsY2hpbGRyZW46aS5qc3goSncse2FzOmVQLGFsbG93UGluY2hab29tOiEwLGNoaWxkcmVuOmkuanN4KEJ3LHthc0NoaWxkOiEwLHRyYXBwZWQ6Zy5vcGVuLG9uTW91bnRBdXRvRm9jdXM6Y2U9PntjZS5wcmV2ZW50RGVmYXVsdCgpfSxvblVubW91bnRBdXRvRm9jdXM6d2UocyxjZT0+e3ZhciBJZTsoSWU9Zy50cmlnZ2VyKT09bnVsbHx8SWUuZm9jdXMoe3ByZXZlbnRTY3JvbGw6ITB9KSxjZS5wcmV2ZW50RGVmYXVsdCgpfSksY2hpbGRyZW46aS5qc3goZnUse2FzQ2hpbGQ6ITAsZGlzYWJsZU91dHNpZGVQb2ludGVyRXZlbnRzOiEwLG9uRXNjYXBlS2V5RG93bjphLG9uUG9pbnRlckRvd25PdXRzaWRlOm8sb25Gb2N1c091dHNpZGU6Y2U9PmNlLnByZXZlbnREZWZhdWx0KCksb25EaXNtaXNzOigpPT5nLm9uT3BlbkNoYW5nZSghMSksY2hpbGRyZW46aS5qc3goX3Qse3JvbGU6Imxpc3Rib3giLGlkOmcuY29udGVudElkLCJkYXRhLXN0YXRlIjpnLm9wZW4/Im9wZW4iOiJjbG9zZWQiLGRpcjpnLmRpcixvbkNvbnRleHRNZW51OmNlPT5jZS5wcmV2ZW50RGVmYXVsdCgpLC4uLmgsLi4ueHQsb25QbGFjZWQ6KCk9Pk8oITApLHJlZjprLHN0eWxlOntkaXNwbGF5OiJmbGV4IixmbGV4RGlyZWN0aW9uOiJjb2x1bW4iLG91dGxpbmU6Im5vbmUiLC4uLmguc3R5bGV9LG9uS2V5RG93bjp3ZShoLm9uS2V5RG93bixjZT0+e2NvbnN0IEllPWNlLmN0cmxLZXl8fGNlLmFsdEtleXx8Y2UubWV0YUtleTtpZihjZS5rZXk9PT0iVGFiIiYmY2UucHJldmVudERlZmF1bHQoKSwhSWUmJmNlLmtleS5sZW5ndGg9PT0xJiZSKGNlLmtleSksWyJBcnJvd1VwIiwiQXJyb3dEb3duIiwiSG9tZSIsIkVuZCJdLmluY2x1ZGVzKGNlLmtleSkpe2xldCBoZT1JKCkuZmlsdGVyKEs9PiFLLmRpc2FibGVkKS5tYXAoSz0+Sy5yZWYuY3VycmVudCk7aWYoWyJBcnJvd1VwIiwiRW5kIl0uaW5jbHVkZXMoY2Uua2V5KSYmKGhlPWhlLnNsaWNlKCkucmV2ZXJzZSgpKSxbIkFycm93VXAiLCJBcnJvd0Rvd24iXS5pbmNsdWRlcyhjZS5rZXkpKXtjb25zdCBLPWNlLnRhcmdldCxhZT1oZS5pbmRleE9mKEspO2hlPWhlLnNsaWNlKGFlKzEpfXNldFRpbWVvdXQoKCk9PlEoaGUpKSxjZS5wcmV2ZW50RGVmYXVsdCgpfX0pfSl9KX0pfSl9KX0pO2MxLmRpc3BsYXlOYW1lPUpfO3ZhciB0UD0iU2VsZWN0SXRlbUFsaWduZWRQb3NpdGlvbiIsdTE9eS5mb3J3YXJkUmVmKChlLHQpPT57Y29uc3R7X19zY29wZVNlbGVjdDpyLG9uUGxhY2VkOm4sLi4uc309ZSxhPU1zKHVpLHIpLG89T3ModWksciksW2wsY109eS51c2VTdGF0ZShudWxsKSxbdSxkXT15LnVzZVN0YXRlKG51bGwpLGY9ZXQodCxrPT5kKGspKSxwPWt1KHIpLHg9eS51c2VSZWYoITEpLHY9eS51c2VSZWYoITApLHt2aWV3cG9ydDptLHNlbGVjdGVkSXRlbTp3LHNlbGVjdGVkSXRlbVRleHQ6aCxmb2N1c1NlbGVjdGVkSXRlbTpnfT1vLGI9eS51c2VDYWxsYmFjaygoKT0+e2lmKGEudHJpZ2dlciYmYS52YWx1ZU5vZGUmJmwmJnUmJm0mJncmJmgpe2NvbnN0IGs9YS50cmlnZ2VyLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLFQ9dS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKSxMPWEudmFsdWVOb2RlLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLFA9aC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtpZihhLmRpciE9PSJydGwiKXtjb25zdCBLPVAubGVmdC1ULmxlZnQsYWU9TC5sZWZ0LUssb2U9ay5sZWZ0LWFlLExlPWsud2lkdGgrb2UsUmU9TWF0aC5tYXgoTGUsVC53aWR0aCksRGU9d2luZG93LmlubmVyV2lkdGgtVHIsU3Q9TGcoYWUsW1RyLE1hdGgubWF4KFRyLERlLVJlKV0pO2wuc3R5bGUubWluV2lkdGg9TGUrInB4IixsLnN0eWxlLmxlZnQ9U3QrInB4In1lbHNle2NvbnN0IEs9VC5yaWdodC1QLnJpZ2h0LGFlPXdpbmRvdy5pbm5lcldpZHRoLUwucmlnaHQtSyxvZT13aW5kb3cuaW5uZXJXaWR0aC1rLnJpZ2h0LWFlLExlPWsud2lkdGgrb2UsUmU9TWF0aC5tYXgoTGUsVC53aWR0aCksRGU9d2luZG93LmlubmVyV2lkdGgtVHIsU3Q9TGcoYWUsW1RyLE1hdGgubWF4KFRyLERlLVJlKV0pO2wuc3R5bGUubWluV2lkdGg9TGUrInB4IixsLnN0eWxlLnJpZ2h0PVN0KyJweCJ9Y29uc3Qgaj1wKCksST13aW5kb3cuaW5uZXJIZWlnaHQtVHIqMixWPW0uc2Nyb2xsSGVpZ2h0LE89d2luZG93LmdldENvbXB1dGVkU3R5bGUodSksWj1wYXJzZUludChPLmJvcmRlclRvcFdpZHRoLDEwKSxRPXBhcnNlSW50KE8ucGFkZGluZ1RvcCwxMCksQT1wYXJzZUludChPLmJvcmRlckJvdHRvbVdpZHRoLDEwKSxNPXBhcnNlSW50KE8ucGFkZGluZ0JvdHRvbSwxMCksJD1aK1ErVitNK0EsRD1NYXRoLm1pbih3Lm9mZnNldEhlaWdodCo1LCQpLFI9d2luZG93LmdldENvbXB1dGVkU3R5bGUobSksZmU9cGFyc2VJbnQoUi5wYWRkaW5nVG9wLDEwKSxkdD1wYXJzZUludChSLnBhZGRpbmdCb3R0b20sMTApLHR0PWsudG9wK2suaGVpZ2h0LzItVHIsX3Q9SS10dCx4dD13Lm9mZnNldEhlaWdodC8yLGNlPXcub2Zmc2V0VG9wK3h0LEllPVorUStjZSxvdD0kLUllO2lmKEllPD10dCl7Y29uc3QgSz1qLmxlbmd0aD4wJiZ3PT09altqLmxlbmd0aC0xXS5yZWYuY3VycmVudDtsLnN0eWxlLmJvdHRvbT0iMHB4Ijtjb25zdCBhZT11LmNsaWVudEhlaWdodC1tLm9mZnNldFRvcC1tLm9mZnNldEhlaWdodCxvZT1NYXRoLm1heChfdCx4dCsoSz9kdDowKSthZStBKSxMZT1JZStvZTtsLnN0eWxlLmhlaWdodD1MZSsicHgifWVsc2V7Y29uc3QgSz1qLmxlbmd0aD4wJiZ3PT09alswXS5yZWYuY3VycmVudDtsLnN0eWxlLnRvcD0iMHB4Ijtjb25zdCBvZT1NYXRoLm1heCh0dCxaK20ub2Zmc2V0VG9wKyhLP2ZlOjApK3h0KStvdDtsLnN0eWxlLmhlaWdodD1vZSsicHgiLG0uc2Nyb2xsVG9wPUllLXR0K20ub2Zmc2V0VG9wfWwuc3R5bGUubWFyZ2luPWAke1RyfXB4IDBgLGwuc3R5bGUubWluSGVpZ2h0PUQrInB4IixsLnN0eWxlLm1heEhlaWdodD1JKyJweCIsbj09bnVsbHx8bigpLHJlcXVlc3RBbmltYXRpb25GcmFtZSgoKT0+eC5jdXJyZW50PSEwKX19LFtwLGEudHJpZ2dlcixhLnZhbHVlTm9kZSxsLHUsbSx3LGgsYS5kaXIsbl0pO0R0KCgpPT5iKCksW2JdKTtjb25zdFtOLFNdPXkudXNlU3RhdGUoKTtEdCgoKT0+e3UmJlMod2luZG93LmdldENvbXB1dGVkU3R5bGUodSkuekluZGV4KX0sW3VdKTtjb25zdCBfPXkudXNlQ2FsbGJhY2soaz0+e2smJnYuY3VycmVudD09PSEwJiYoYigpLGc9PW51bGx8fGcoKSx2LmN1cnJlbnQ9ITEpfSxbYixnXSk7cmV0dXJuIGkuanN4KG5QLHtzY29wZTpyLGNvbnRlbnRXcmFwcGVyOmwsc2hvdWxkRXhwYW5kT25TY3JvbGxSZWY6eCxvblNjcm9sbEJ1dHRvbkNoYW5nZTpfLGNoaWxkcmVuOmkuanN4KCJkaXYiLHtyZWY6YyxzdHlsZTp7ZGlzcGxheToiZmxleCIsZmxleERpcmVjdGlvbjoiY29sdW1uIixwb3NpdGlvbjoiZml4ZWQiLHpJbmRleDpOfSxjaGlsZHJlbjppLmpzeChrZS5kaXYsey4uLnMscmVmOmYsc3R5bGU6e2JveFNpemluZzoiYm9yZGVyLWJveCIsbWF4SGVpZ2h0OiIxMDAlIiwuLi5zLnN0eWxlfX0pfSl9KX0pO3UxLmRpc3BsYXlOYW1lPXRQO3ZhciByUD0iU2VsZWN0UG9wcGVyUG9zaXRpb24iLFhmPXkuZm9yd2FyZFJlZigoZSx0KT0+e2NvbnN0e19fc2NvcGVTZWxlY3Q6cixhbGlnbjpuPSJzdGFydCIsY29sbGlzaW9uUGFkZGluZzpzPVRyLC4uLmF9PWUsbz1FdShyKTtyZXR1cm4gaS5qc3goa3csey4uLm8sLi4uYSxyZWY6dCxhbGlnbjpuLGNvbGxpc2lvblBhZGRpbmc6cyxzdHlsZTp7Ym94U2l6aW5nOiJib3JkZXItYm94IiwuLi5hLnN0eWxlLCItLXJhZGl4LXNlbGVjdC1jb250ZW50LXRyYW5zZm9ybS1vcmlnaW4iOiJ2YXIoLS1yYWRpeC1wb3BwZXItdHJhbnNmb3JtLW9yaWdpbikiLCItLXJhZGl4LXNlbGVjdC1jb250ZW50LWF2YWlsYWJsZS13aWR0aCI6InZhcigtLXJhZGl4LXBvcHBlci1hdmFpbGFibGUtd2lkdGgpIiwiLS1yYWRpeC1zZWxlY3QtY29udGVudC1hdmFpbGFibGUtaGVpZ2h0IjoidmFyKC0tcmFkaXgtcG9wcGVyLWF2YWlsYWJsZS1oZWlnaHQpIiwiLS1yYWRpeC1zZWxlY3QtdHJpZ2dlci13aWR0aCI6InZhcigtLXJhZGl4LXBvcHBlci1hbmNob3Itd2lkdGgpIiwiLS1yYWRpeC1zZWxlY3QtdHJpZ2dlci1oZWlnaHQiOiJ2YXIoLS1yYWRpeC1wb3BwZXItYW5jaG9yLWhlaWdodCkifX0pfSk7WGYuZGlzcGxheU5hbWU9clA7dmFyW25QLE9oXT1SYSh1aSx7fSksSmY9IlNlbGVjdFZpZXdwb3J0IixkMT15LmZvcndhcmRSZWYoKGUsdCk9Pntjb25zdHtfX3Njb3BlU2VsZWN0OnIsbm9uY2U6biwuLi5zfT1lLGE9T3MoSmYsciksbz1PaChKZixyKSxsPWV0KHQsYS5vblZpZXdwb3J0Q2hhbmdlKSxjPXkudXNlUmVmKDApO3JldHVybiBpLmpzeHMoaS5GcmFnbWVudCx7Y2hpbGRyZW46W2kuanN4KCJzdHlsZSIse2Rhbmdlcm91c2x5U2V0SW5uZXJIVE1MOntfX2h0bWw6IltkYXRhLXJhZGl4LXNlbGVjdC12aWV3cG9ydF17c2Nyb2xsYmFyLXdpZHRoOm5vbmU7LW1zLW92ZXJmbG93LXN0eWxlOm5vbmU7LXdlYmtpdC1vdmVyZmxvdy1zY3JvbGxpbmc6dG91Y2g7fVtkYXRhLXJhZGl4LXNlbGVjdC12aWV3cG9ydF06Oi13ZWJraXQtc2Nyb2xsYmFye2Rpc3BsYXk6bm9uZX0ifSxub25jZTpufSksaS5qc3goU3UuU2xvdCx7c2NvcGU6cixjaGlsZHJlbjppLmpzeChrZS5kaXYseyJkYXRhLXJhZGl4LXNlbGVjdC12aWV3cG9ydCI6IiIscm9sZToicHJlc2VudGF0aW9uIiwuLi5zLHJlZjpsLHN0eWxlOntwb3NpdGlvbjoicmVsYXRpdmUiLGZsZXg6MSxvdmVyZmxvdzoiaGlkZGVuIGF1dG8iLC4uLnMuc3R5bGV9LG9uU2Nyb2xsOndlKHMub25TY3JvbGwsdT0+e2NvbnN0IGQ9dS5jdXJyZW50VGFyZ2V0LHtjb250ZW50V3JhcHBlcjpmLHNob3VsZEV4cGFuZE9uU2Nyb2xsUmVmOnB9PW87aWYocCE9bnVsbCYmcC5jdXJyZW50JiZmKXtjb25zdCB4PU1hdGguYWJzKGMuY3VycmVudC1kLnNjcm9sbFRvcCk7aWYoeD4wKXtjb25zdCB2PXdpbmRvdy5pbm5lckhlaWdodC1UcioyLG09cGFyc2VGbG9hdChmLnN0eWxlLm1pbkhlaWdodCksdz1wYXJzZUZsb2F0KGYuc3R5bGUuaGVpZ2h0KSxoPU1hdGgubWF4KG0sdyk7aWYoaDx2KXtjb25zdCBnPWgreCxiPU1hdGgubWluKHYsZyksTj1nLWI7Zi5zdHlsZS5oZWlnaHQ9YisicHgiLGYuc3R5bGUuYm90dG9tPT09IjBweCImJihkLnNjcm9sbFRvcD1OPjA/TjowLGYuc3R5bGUuanVzdGlmeUNvbnRlbnQ9ImZsZXgtZW5kIil9fX1jLmN1cnJlbnQ9ZC5zY3JvbGxUb3B9KX0pfSldfSl9KTtkMS5kaXNwbGF5TmFtZT1KZjt2YXIgZjE9IlNlbGVjdEdyb3VwIixbc1AsaVBdPVJhKGYxKSxhUD15LmZvcndhcmRSZWYoKGUsdCk9Pntjb25zdHtfX3Njb3BlU2VsZWN0OnIsLi4ubn09ZSxzPXZoKCk7cmV0dXJuIGkuanN4KHNQLHtzY29wZTpyLGlkOnMsY2hpbGRyZW46aS5qc3goa2UuZGl2LHtyb2xlOiJncm91cCIsImFyaWEtbGFiZWxsZWRieSI6cywuLi5uLHJlZjp0fSl9KX0pO2FQLmRpc3BsYXlOYW1lPWYxO3ZhciBtMT0iU2VsZWN0TGFiZWwiLGgxPXkuZm9yd2FyZFJlZigoZSx0KT0+e2NvbnN0e19fc2NvcGVTZWxlY3Q6ciwuLi5ufT1lLHM9aVAobTEscik7cmV0dXJuIGkuanN4KGtlLmRpdix7aWQ6cy5pZCwuLi5uLHJlZjp0fSl9KTtoMS5kaXNwbGF5TmFtZT1tMTt2YXIgTGM9IlNlbGVjdEl0ZW0iLFtvUCxwMV09UmEoTGMpLGcxPXkuZm9yd2FyZFJlZigoZSx0KT0+e2NvbnN0e19fc2NvcGVTZWxlY3Q6cix2YWx1ZTpuLGRpc2FibGVkOnM9ITEsdGV4dFZhbHVlOmEsLi4ub309ZSxsPU1zKExjLHIpLGM9T3MoTGMsciksdT1sLnZhbHVlPT09bixbZCxmXT15LnVzZVN0YXRlKGE/PyIiKSxbcCx4XT15LnVzZVN0YXRlKCExKSx2PWV0KHQsZz0+e3ZhciBiO3JldHVybihiPWMuaXRlbVJlZkNhbGxiYWNrKT09bnVsbD92b2lkIDA6Yi5jYWxsKGMsZyxuLHMpfSksbT12aCgpLHc9eS51c2VSZWYoInRvdWNoIiksaD0oKT0+e3N8fChsLm9uVmFsdWVDaGFuZ2UobiksbC5vbk9wZW5DaGFuZ2UoITEpKX07aWYobj09PSIiKXRocm93IG5ldyBFcnJvcigiQSA8U2VsZWN0Lkl0ZW0gLz4gbXVzdCBoYXZlIGEgdmFsdWUgcHJvcCB0aGF0IGlzIG5vdCBhbiBlbXB0eSBzdHJpbmcuIFRoaXMgaXMgYmVjYXVzZSB0aGUgU2VsZWN0IHZhbHVlIGNhbiBiZSBzZXQgdG8gYW4gZW1wdHkgc3RyaW5nIHRvIGNsZWFyIHRoZSBzZWxlY3Rpb24gYW5kIHNob3cgdGhlIHBsYWNlaG9sZGVyLiIpO3JldHVybiBpLmpzeChvUCx7c2NvcGU6cix2YWx1ZTpuLGRpc2FibGVkOnMsdGV4dElkOm0saXNTZWxlY3RlZDp1LG9uSXRlbVRleHRDaGFuZ2U6eS51c2VDYWxsYmFjayhnPT57ZihiPT5ifHwoKGc9PW51bGw/dm9pZCAwOmcudGV4dENvbnRlbnQpPz8iIikudHJpbSgpKX0sW10pLGNoaWxkcmVuOmkuanN4KFN1Lkl0ZW1TbG90LHtzY29wZTpyLHZhbHVlOm4sZGlzYWJsZWQ6cyx0ZXh0VmFsdWU6ZCxjaGlsZHJlbjppLmpzeChrZS5kaXYse3JvbGU6Im9wdGlvbiIsImFyaWEtbGFiZWxsZWRieSI6bSwiZGF0YS1oaWdobGlnaHRlZCI6cD8iIjp2b2lkIDAsImFyaWEtc2VsZWN0ZWQiOnUmJnAsImRhdGEtc3RhdGUiOnU/ImNoZWNrZWQiOiJ1bmNoZWNrZWQiLCJhcmlhLWRpc2FibGVkIjpzfHx2b2lkIDAsImRhdGEtZGlzYWJsZWQiOnM/IiI6dm9pZCAwLHRhYkluZGV4OnM/dm9pZCAwOi0xLC4uLm8scmVmOnYsb25Gb2N1czp3ZShvLm9uRm9jdXMsKCk9PngoITApKSxvbkJsdXI6d2Uoby5vbkJsdXIsKCk9PngoITEpKSxvbkNsaWNrOndlKG8ub25DbGljaywoKT0+e3cuY3VycmVudCE9PSJtb3VzZSImJmgoKX0pLG9uUG9pbnRlclVwOndlKG8ub25Qb2ludGVyVXAsKCk9Pnt3LmN1cnJlbnQ9PT0ibW91c2UiJiZoKCl9KSxvblBvaW50ZXJEb3duOndlKG8ub25Qb2ludGVyRG93bixnPT57dy5jdXJyZW50PWcucG9pbnRlclR5cGV9KSxvblBvaW50ZXJNb3ZlOndlKG8ub25Qb2ludGVyTW92ZSxnPT57dmFyIGI7dy5jdXJyZW50PWcucG9pbnRlclR5cGUscz8oYj1jLm9uSXRlbUxlYXZlKT09bnVsbHx8Yi5jYWxsKGMpOncuY3VycmVudD09PSJtb3VzZSImJmcuY3VycmVudFRhcmdldC5mb2N1cyh7cHJldmVudFNjcm9sbDohMH0pfSksb25Qb2ludGVyTGVhdmU6d2Uoby5vblBvaW50ZXJMZWF2ZSxnPT57dmFyIGI7Zy5jdXJyZW50VGFyZ2V0PT09ZG9jdW1lbnQuYWN0aXZlRWxlbWVudCYmKChiPWMub25JdGVtTGVhdmUpPT1udWxsfHxiLmNhbGwoYykpfSksb25LZXlEb3duOndlKG8ub25LZXlEb3duLGc9Pnt2YXIgTjsoKE49Yy5zZWFyY2hSZWYpPT1udWxsP3ZvaWQgMDpOLmN1cnJlbnQpIT09IiImJmcua2V5PT09IiAifHwocV8uaW5jbHVkZXMoZy5rZXkpJiZoKCksZy5rZXk9PT0iICImJmcucHJldmVudERlZmF1bHQoKSl9KX0pfSl9KX0pO2cxLmRpc3BsYXlOYW1lPUxjO3ZhciBaYT0iU2VsZWN0SXRlbVRleHQiLHgxPXkuZm9yd2FyZFJlZigoZSx0KT0+e2NvbnN0e19fc2NvcGVTZWxlY3Q6cixjbGFzc05hbWU6bixzdHlsZTpzLC4uLmF9PWUsbz1NcyhaYSxyKSxsPU9zKFphLHIpLGM9cDEoWmEsciksdT1LXyhaYSxyKSxbZCxmXT15LnVzZVN0YXRlKG51bGwpLHA9ZXQodCxoPT5mKGgpLGMub25JdGVtVGV4dENoYW5nZSxoPT57dmFyIGc7cmV0dXJuKGc9bC5pdGVtVGV4dFJlZkNhbGxiYWNrKT09bnVsbD92b2lkIDA6Zy5jYWxsKGwsaCxjLnZhbHVlLGMuZGlzYWJsZWQpfSkseD1kPT1udWxsP3ZvaWQgMDpkLnRleHRDb250ZW50LHY9eS51c2VNZW1vKCgpPT5pLmpzeCgib3B0aW9uIix7dmFsdWU6Yy52YWx1ZSxkaXNhYmxlZDpjLmRpc2FibGVkLGNoaWxkcmVuOnh9LGMudmFsdWUpLFtjLmRpc2FibGVkLGMudmFsdWUseF0pLHtvbk5hdGl2ZU9wdGlvbkFkZDptLG9uTmF0aXZlT3B0aW9uUmVtb3ZlOnd9PXU7cmV0dXJuIER0KCgpPT4obSh2KSwoKT0+dyh2KSksW20sdyx2XSksaS5qc3hzKGkuRnJhZ21lbnQse2NoaWxkcmVuOltpLmpzeChrZS5zcGFuLHtpZDpjLnRleHRJZCwuLi5hLHJlZjpwfSksYy5pc1NlbGVjdGVkJiZvLnZhbHVlTm9kZSYmIW8udmFsdWVOb2RlSGFzQ2hpbGRyZW4/Z2kuY3JlYXRlUG9ydGFsKGEuY2hpbGRyZW4sby52YWx1ZU5vZGUpOm51bGxdfSl9KTt4MS5kaXNwbGF5TmFtZT1aYTt2YXIgdjE9IlNlbGVjdEl0ZW1JbmRpY2F0b3IiLHkxPXkuZm9yd2FyZFJlZigoZSx0KT0+e2NvbnN0e19fc2NvcGVTZWxlY3Q6ciwuLi5ufT1lO3JldHVybiBwMSh2MSxyKS5pc1NlbGVjdGVkP2kuanN4KGtlLnNwYW4seyJhcmlhLWhpZGRlbiI6ITAsLi4ubixyZWY6dH0pOm51bGx9KTt5MS5kaXNwbGF5TmFtZT12MTt2YXIgZW09IlNlbGVjdFNjcm9sbFVwQnV0dG9uIix3MT15LmZvcndhcmRSZWYoKGUsdCk9Pntjb25zdCByPU9zKGVtLGUuX19zY29wZVNlbGVjdCksbj1PaChlbSxlLl9fc2NvcGVTZWxlY3QpLFtzLGFdPXkudXNlU3RhdGUoITEpLG89ZXQodCxuLm9uU2Nyb2xsQnV0dG9uQ2hhbmdlKTtyZXR1cm4gRHQoKCk9PntpZihyLnZpZXdwb3J0JiZyLmlzUG9zaXRpb25lZCl7bGV0IGw9ZnVuY3Rpb24oKXtjb25zdCB1PWMuc2Nyb2xsVG9wPjA7YSh1KX07Y29uc3QgYz1yLnZpZXdwb3J0O3JldHVybiBsKCksYy5hZGRFdmVudExpc3RlbmVyKCJzY3JvbGwiLGwpLCgpPT5jLnJlbW92ZUV2ZW50TGlzdGVuZXIoInNjcm9sbCIsbCl9fSxbci52aWV3cG9ydCxyLmlzUG9zaXRpb25lZF0pLHM/aS5qc3goajEsey4uLmUscmVmOm8sb25BdXRvU2Nyb2xsOigpPT57Y29uc3R7dmlld3BvcnQ6bCxzZWxlY3RlZEl0ZW06Y309cjtsJiZjJiYobC5zY3JvbGxUb3A9bC5zY3JvbGxUb3AtYy5vZmZzZXRIZWlnaHQpfX0pOm51bGx9KTt3MS5kaXNwbGF5TmFtZT1lbTt2YXIgdG09IlNlbGVjdFNjcm9sbERvd25CdXR0b24iLGIxPXkuZm9yd2FyZFJlZigoZSx0KT0+e2NvbnN0IHI9T3ModG0sZS5fX3Njb3BlU2VsZWN0KSxuPU9oKHRtLGUuX19zY29wZVNlbGVjdCksW3MsYV09eS51c2VTdGF0ZSghMSksbz1ldCh0LG4ub25TY3JvbGxCdXR0b25DaGFuZ2UpO3JldHVybiBEdCgoKT0+e2lmKHIudmlld3BvcnQmJnIuaXNQb3NpdGlvbmVkKXtsZXQgbD1mdW5jdGlvbigpe2NvbnN0IHU9Yy5zY3JvbGxIZWlnaHQtYy5jbGllbnRIZWlnaHQsZD1NYXRoLmNlaWwoYy5zY3JvbGxUb3ApPHU7YShkKX07Y29uc3QgYz1yLnZpZXdwb3J0O3JldHVybiBsKCksYy5hZGRFdmVudExpc3RlbmVyKCJzY3JvbGwiLGwpLCgpPT5jLnJlbW92ZUV2ZW50TGlzdGVuZXIoInNjcm9sbCIsbCl9fSxbci52aWV3cG9ydCxyLmlzUG9zaXRpb25lZF0pLHM/aS5qc3goajEsey4uLmUscmVmOm8sb25BdXRvU2Nyb2xsOigpPT57Y29uc3R7dmlld3BvcnQ6bCxzZWxlY3RlZEl0ZW06Y309cjtsJiZjJiYobC5zY3JvbGxUb3A9bC5zY3JvbGxUb3ArYy5vZmZzZXRIZWlnaHQpfX0pOm51bGx9KTtiMS5kaXNwbGF5TmFtZT10bTt2YXIgajE9eS5mb3J3YXJkUmVmKChlLHQpPT57Y29uc3R7X19zY29wZVNlbGVjdDpyLG9uQXV0b1Njcm9sbDpuLC4uLnN9PWUsYT1PcygiU2VsZWN0U2Nyb2xsQnV0dG9uIixyKSxvPXkudXNlUmVmKG51bGwpLGw9a3UociksYz15LnVzZUNhbGxiYWNrKCgpPT57by5jdXJyZW50IT09bnVsbCYmKHdpbmRvdy5jbGVhckludGVydmFsKG8uY3VycmVudCksby5jdXJyZW50PW51bGwpfSxbXSk7cmV0dXJuIHkudXNlRWZmZWN0KCgpPT4oKT0+YygpLFtjXSksRHQoKCk9Pnt2YXIgZDtjb25zdCB1PWwoKS5maW5kKGY9PmYucmVmLmN1cnJlbnQ9PT1kb2N1bWVudC5hY3RpdmVFbGVtZW50KTsoZD11PT1udWxsP3ZvaWQgMDp1LnJlZi5jdXJyZW50KT09bnVsbHx8ZC5zY3JvbGxJbnRvVmlldyh7YmxvY2s6Im5lYXJlc3QifSl9LFtsXSksaS5qc3goa2UuZGl2LHsiYXJpYS1oaWRkZW4iOiEwLC4uLnMscmVmOnQsc3R5bGU6e2ZsZXhTaHJpbms6MCwuLi5zLnN0eWxlfSxvblBvaW50ZXJEb3duOndlKHMub25Qb2ludGVyRG93biwoKT0+e28uY3VycmVudD09PW51bGwmJihvLmN1cnJlbnQ9d2luZG93LnNldEludGVydmFsKG4sNTApKX0pLG9uUG9pbnRlck1vdmU6d2Uocy5vblBvaW50ZXJNb3ZlLCgpPT57dmFyIHU7KHU9YS5vbkl0ZW1MZWF2ZSk9PW51bGx8fHUuY2FsbChhKSxvLmN1cnJlbnQ9PT1udWxsJiYoby5jdXJyZW50PXdpbmRvdy5zZXRJbnRlcnZhbChuLDUwKSl9KSxvblBvaW50ZXJMZWF2ZTp3ZShzLm9uUG9pbnRlckxlYXZlLCgpPT57YygpfSl9KX0pLGxQPSJTZWxlY3RTZXBhcmF0b3IiLE4xPXkuZm9yd2FyZFJlZigoZSx0KT0+e2NvbnN0e19fc2NvcGVTZWxlY3Q6ciwuLi5ufT1lO3JldHVybiBpLmpzeChrZS5kaXYseyJhcmlhLWhpZGRlbiI6ITAsLi4ubixyZWY6dH0pfSk7TjEuZGlzcGxheU5hbWU9bFA7dmFyIHJtPSJTZWxlY3RBcnJvdyIsY1A9eS5mb3J3YXJkUmVmKChlLHQpPT57Y29uc3R7X19zY29wZVNlbGVjdDpyLC4uLm59PWUscz1FdShyKSxhPU1zKHJtLHIpLG89T3Mocm0scik7cmV0dXJuIGEub3BlbiYmby5wb3NpdGlvbj09PSJwb3BwZXIiP2kuanN4KEV3LHsuLi5zLC4uLm4scmVmOnR9KTpudWxsfSk7Y1AuZGlzcGxheU5hbWU9cm07ZnVuY3Rpb24gUzEoZSl7cmV0dXJuIGU9PT0iInx8ZT09PXZvaWQgMH12YXIgazE9eS5mb3J3YXJkUmVmKChlLHQpPT57Y29uc3R7dmFsdWU6ciwuLi5ufT1lLHM9eS51c2VSZWYobnVsbCksYT1ldCh0LHMpLG89TWgocik7cmV0dXJuIHkudXNlRWZmZWN0KCgpPT57Y29uc3QgbD1zLmN1cnJlbnQsYz13aW5kb3cuSFRNTFNlbGVjdEVsZW1lbnQucHJvdG90eXBlLGQ9T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihjLCJ2YWx1ZSIpLnNldDtpZihvIT09ciYmZCl7Y29uc3QgZj1uZXcgRXZlbnQoImNoYW5nZSIse2J1YmJsZXM6ITB9KTtkLmNhbGwobCxyKSxsLmRpc3BhdGNoRXZlbnQoZil9fSxbbyxyXSksaS5qc3gobmwse2FzQ2hpbGQ6ITAsY2hpbGRyZW46aS5qc3goInNlbGVjdCIsey4uLm4scmVmOmEsZGVmYXVsdFZhbHVlOnJ9KX0pfSk7azEuZGlzcGxheU5hbWU9IkJ1YmJsZVNlbGVjdCI7ZnVuY3Rpb24gRTEoZSl7Y29uc3QgdD1wcihlKSxyPXkudXNlUmVmKCIiKSxuPXkudXNlUmVmKDApLHM9eS51c2VDYWxsYmFjayhvPT57Y29uc3QgbD1yLmN1cnJlbnQrbzt0KGwpLGZ1bmN0aW9uIGModSl7ci5jdXJyZW50PXUsd2luZG93LmNsZWFyVGltZW91dChuLmN1cnJlbnQpLHUhPT0iIiYmKG4uY3VycmVudD13aW5kb3cuc2V0VGltZW91dCgoKT0+YygiIiksMWUzKSl9KGwpfSxbdF0pLGE9eS51c2VDYWxsYmFjaygoKT0+e3IuY3VycmVudD0iIix3aW5kb3cuY2xlYXJUaW1lb3V0KG4uY3VycmVudCl9LFtdKTtyZXR1cm4geS51c2VFZmZlY3QoKCk9PigpPT53aW5kb3cuY2xlYXJUaW1lb3V0KG4uY3VycmVudCksW10pLFtyLHMsYV19ZnVuY3Rpb24gQzEoZSx0LHIpe2NvbnN0IHM9dC5sZW5ndGg+MSYmQXJyYXkuZnJvbSh0KS5ldmVyeSh1PT51PT09dFswXSk/dFswXTp0LGE9cj9lLmluZGV4T2Yocik6LTE7bGV0IG89dVAoZSxNYXRoLm1heChhLDApKTtzLmxlbmd0aD09PTEmJihvPW8uZmlsdGVyKHU9PnUhPT1yKSk7Y29uc3QgYz1vLmZpbmQodT0+dS50ZXh0VmFsdWUudG9Mb3dlckNhc2UoKS5zdGFydHNXaXRoKHMudG9Mb3dlckNhc2UoKSkpO3JldHVybiBjIT09cj9jOnZvaWQgMH1mdW5jdGlvbiB1UChlLHQpe3JldHVybiBlLm1hcCgocixuKT0+ZVsodCtuKSVlLmxlbmd0aF0pfXZhciBkUD1lMSxfMT1yMSxmUD1zMSxtUD1pMSxoUD1hMSxQMT1vMSxwUD1kMSxUMT1oMSxSMT1nMSxnUD14MSx4UD15MSxBMT13MSxNMT1iMSxPMT1OMTtjb25zdCBqbj1kUCxObj1mUCxKcj15LmZvcndhcmRSZWYoKHtjbGFzc05hbWU6ZSxjaGlsZHJlbjp0LC4uLnJ9LG4pPT5pLmpzeHMoXzEse3JlZjpuLGNsYXNzTmFtZTpOZSgiZmxleCBoLTEwIHctZnVsbCBpdGVtcy1jZW50ZXIganVzdGlmeS1iZXR3ZWVuIHJvdW5kZWQtbWQgYm9yZGVyIGJvcmRlci1pbnB1dCBiZy1iYWNrZ3JvdW5kIHB4LTMgcHktMiB0ZXh0LXNtIHJpbmctb2Zmc2V0LWJhY2tncm91bmQgZGF0YS1bcGxhY2Vob2xkZXJdOnRleHQtbXV0ZWQtZm9yZWdyb3VuZCBmb2N1czpvdXRsaW5lLW5vbmUgZm9jdXM6cmluZy0yIGZvY3VzOnJpbmctcmluZyBmb2N1czpyaW5nLW9mZnNldC0yIGRpc2FibGVkOmN1cnNvci1ub3QtYWxsb3dlZCBkaXNhYmxlZDpvcGFjaXR5LTUwIFsmPnNwYW5dOmxpbmUtY2xhbXAtMSIsZSksLi4ucixjaGlsZHJlbjpbdCxpLmpzeChtUCx7YXNDaGlsZDohMCxjaGlsZHJlbjppLmpzeChsaSx7Y2xhc3NOYW1lOiJoLTQgdy00IG9wYWNpdHktNTAifSl9KV19KSk7SnIuZGlzcGxheU5hbWU9XzEuZGlzcGxheU5hbWU7Y29uc3QgRjE9eS5mb3J3YXJkUmVmKCh7Y2xhc3NOYW1lOmUsLi4udH0scik9PmkuanN4KEExLHtyZWY6cixjbGFzc05hbWU6TmUoImZsZXggY3Vyc29yLWRlZmF1bHQgaXRlbXMtY2VudGVyIGp1c3RpZnktY2VudGVyIHB5LTEiLGUpLC4uLnQsY2hpbGRyZW46aS5qc3gob0Use2NsYXNzTmFtZToiaC00IHctNCJ9KX0pKTtGMS5kaXNwbGF5TmFtZT1BMS5kaXNwbGF5TmFtZTtjb25zdCBJMT15LmZvcndhcmRSZWYoKHtjbGFzc05hbWU6ZSwuLi50fSxyKT0+aS5qc3goTTEse3JlZjpyLGNsYXNzTmFtZTpOZSgiZmxleCBjdXJzb3ItZGVmYXVsdCBpdGVtcy1jZW50ZXIganVzdGlmeS1jZW50ZXIgcHktMSIsZSksLi4udCxjaGlsZHJlbjppLmpzeChsaSx7Y2xhc3NOYW1lOiJoLTQgdy00In0pfSkpO0kxLmRpc3BsYXlOYW1lPU0xLmRpc3BsYXlOYW1lO2NvbnN0IGVuPXkuZm9yd2FyZFJlZigoe2NsYXNzTmFtZTplLGNoaWxkcmVuOnQscG9zaXRpb246cj0icG9wcGVyIiwuLi5ufSxzKT0+aS5qc3goaFAse2NoaWxkcmVuOmkuanN4cyhQMSx7cmVmOnMsY2xhc3NOYW1lOk5lKCJyZWxhdGl2ZSB6LTUwIG1heC1oLVstLXJhZGl4LXNlbGVjdC1jb250ZW50LWF2YWlsYWJsZS1oZWlnaHRdIG1pbi13LVs4cmVtXSBvdmVyZmxvdy15LWF1dG8gb3ZlcmZsb3cteC1oaWRkZW4gcm91bmRlZC1tZCBib3JkZXIgYmctcG9wb3ZlciB0ZXh0LXBvcG92ZXItZm9yZWdyb3VuZCBzaGFkb3ctbWQgZGF0YS1bc3RhdGU9b3Blbl06YW5pbWF0ZS1pbiBkYXRhLVtzdGF0ZT1jbG9zZWRdOmFuaW1hdGUtb3V0IGRhdGEtW3N0YXRlPWNsb3NlZF06ZmFkZS1vdXQtMCBkYXRhLVtzdGF0ZT1vcGVuXTpmYWRlLWluLTAgZGF0YS1bc3RhdGU9Y2xvc2VkXTp6b29tLW91dC05NSBkYXRhLVtzdGF0ZT1vcGVuXTp6b29tLWluLTk1IGRhdGEtW3NpZGU9Ym90dG9tXTpzbGlkZS1pbi1mcm9tLXRvcC0yIGRhdGEtW3NpZGU9bGVmdF06c2xpZGUtaW4tZnJvbS1yaWdodC0yIGRhdGEtW3NpZGU9cmlnaHRdOnNsaWRlLWluLWZyb20tbGVmdC0yIGRhdGEtW3NpZGU9dG9wXTpzbGlkZS1pbi1mcm9tLWJvdHRvbS0yIG9yaWdpbi1bLS1yYWRpeC1zZWxlY3QtY29udGVudC10cmFuc2Zvcm0tb3JpZ2luXSIscj09PSJwb3BwZXIiJiYiZGF0YS1bc2lkZT1ib3R0b21dOnRyYW5zbGF0ZS15LTEgZGF0YS1bc2lkZT1sZWZ0XTotdHJhbnNsYXRlLXgtMSBkYXRhLVtzaWRlPXJpZ2h0XTp0cmFuc2xhdGUteC0xIGRhdGEtW3NpZGU9dG9wXTotdHJhbnNsYXRlLXktMSIsZSkscG9zaXRpb246ciwuLi5uLGNoaWxkcmVuOltpLmpzeChGMSx7fSksaS5qc3gocFAse2NsYXNzTmFtZTpOZSgicC0xIixyPT09InBvcHBlciImJiJoLVt2YXIoLS1yYWRpeC1zZWxlY3QtdHJpZ2dlci1oZWlnaHQpXSB3LWZ1bGwgbWluLXctW3ZhcigtLXJhZGl4LXNlbGVjdC10cmlnZ2VyLXdpZHRoKV0iKSxjaGlsZHJlbjp0fSksaS5qc3goSTEse30pXX0pfSkpO2VuLmRpc3BsYXlOYW1lPVAxLmRpc3BsYXlOYW1lO2NvbnN0IHZQPXkuZm9yd2FyZFJlZigoe2NsYXNzTmFtZTplLC4uLnR9LHIpPT5pLmpzeChUMSx7cmVmOnIsY2xhc3NOYW1lOk5lKCJweS0xLjUgcGwtOCBwci0yIHRleHQtc20gZm9udC1zZW1pYm9sZCIsZSksLi4udH0pKTt2UC5kaXNwbGF5TmFtZT1UMS5kaXNwbGF5TmFtZTtjb25zdCBQZT15LmZvcndhcmRSZWYoKHtjbGFzc05hbWU6ZSxjaGlsZHJlbjp0LC4uLnJ9LG4pPT5pLmpzeHMoUjEse3JlZjpuLGNsYXNzTmFtZTpOZSgicmVsYXRpdmUgZmxleCB3LWZ1bGwgY3Vyc29yLWRlZmF1bHQgc2VsZWN0LW5vbmUgaXRlbXMtY2VudGVyIHJvdW5kZWQtc20gcHktMS41IHBsLTggcHItMiB0ZXh0LXNtIG91dGxpbmUtbm9uZSBmb2N1czpiZy1hY2NlbnQgZm9jdXM6dGV4dC1hY2NlbnQtZm9yZWdyb3VuZCBkYXRhLVtkaXNhYmxlZF06cG9pbnRlci1ldmVudHMtbm9uZSBkYXRhLVtkaXNhYmxlZF06b3BhY2l0eS01MCIsZSksLi4ucixjaGlsZHJlbjpbaS5qc3goInNwYW4iLHtjbGFzc05hbWU6ImFic29sdXRlIGxlZnQtMiBmbGV4IGgtMy41IHctMy41IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWNlbnRlciIsY2hpbGRyZW46aS5qc3goeFAse2NoaWxkcmVuOmkuanN4KHowLHtjbGFzc05hbWU6ImgtNCB3LTQifSl9KX0pLGkuanN4KGdQLHtjaGlsZHJlbjp0fSldfSkpO1BlLmRpc3BsYXlOYW1lPVIxLmRpc3BsYXlOYW1lO2NvbnN0IHlQPXkuZm9yd2FyZFJlZigoe2NsYXNzTmFtZTplLC4uLnR9LHIpPT5pLmpzeChPMSx7cmVmOnIsY2xhc3NOYW1lOk5lKCItbXgtMSBteS0xIGgtcHggYmctbXV0ZWQiLGUpLC4uLnR9KSk7eVAuZGlzcGxheU5hbWU9TzEuZGlzcGxheU5hbWU7ZnVuY3Rpb24gd1AoKXtjb25zdHt0b2FzdDplfT1obigpLHtpc0F1dGhlbnRpY2F0ZWQ6dCxpc0xvYWRpbmc6cn09V3IoKTt5LnVzZUVmZmVjdCgoKT0+e2lmKCFyJiYhdCl7ZSh7dGl0bGU6IlVuYXV0aG9yaXplZCIsZGVzY3JpcHRpb246IllvdSBhcmUgbG9nZ2VkIG91dC4gTG9nZ2luZyBpbiBhZ2Fpbi4uLiIsdmFyaWFudDoiZGVzdHJ1Y3RpdmUifSksc2V0VGltZW91dCgoKT0+e3dpbmRvdy5sb2NhdGlvbi5ocmVmPSIvYXBpL2xvZ2luIn0sNTAwKTtyZXR1cm59fSxbdCxyLGVdKTtjb25zdHtkYXRhOm4saXNMb2FkaW5nOnMsZXJyb3I6YX09YnQoe3F1ZXJ5S2V5OlsiL2FwaS9vZS1wcm9jZXNzZXMiXSxlbmFibGVkOnR9KTtpZih5LnVzZUVmZmVjdCgoKT0+e2lmKGEpe2lmKEp0KGEpKXtlKHt0aXRsZToiVW5hdXRob3JpemVkIixkZXNjcmlwdGlvbjoiWW91IGFyZSBsb2dnZWQgb3V0LiBMb2dnaW5nIGluIGFnYWluLi4uIix2YXJpYW50OiJkZXN0cnVjdGl2ZSJ9KSxzZXRUaW1lb3V0KCgpPT57d2luZG93LmxvY2F0aW9uLmhyZWY9Ii9hcGkvbG9naW4ifSw1MDApO3JldHVybn1lKHt0aXRsZToiRXJyb3IiLGRlc2NyaXB0aW9uOiJGYWlsZWQgdG8gbG9hZCBwcm9jZXNzZXMiLHZhcmlhbnQ6ImRlc3RydWN0aXZlIn0pfX0sW2EsZV0pLHJ8fCF0JiYhcilyZXR1cm4gaS5qc3goImRpdiIse2NsYXNzTmFtZToibWluLWgtc2NyZWVuIGZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktY2VudGVyIixjaGlsZHJlbjppLmpzeHMoImRpdiIse2NsYXNzTmFtZToidGV4dC1jZW50ZXIiLGNoaWxkcmVuOltpLmpzeCgiZGl2Iix7Y2xhc3NOYW1lOiJhbmltYXRlLXNwaW4gcm91bmRlZC1mdWxsIGgtOCB3LTggYm9yZGVyLWItMiBib3JkZXItcHJpbWFyeSBteC1hdXRvIG1iLTQifSksaS5qc3goInAiLHtjbGFzc05hbWU6InRleHQtbXV0ZWQtZm9yZWdyb3VuZCIsY2hpbGRyZW46IkxvYWRpbmcuLi4ifSldfSl9KTtjb25zdCBvPWw9Pntzd2l0Y2gobCl7Y2FzZSJhY3RpdmUiOnJldHVybiJiZy1ncmVlbi0xMDAgdGV4dC1ncmVlbi04MDAiO2Nhc2UicmV2aWV3IjpyZXR1cm4iYmcteWVsbG93LTEwMCB0ZXh0LXllbGxvdy04MDAiO2Nhc2UiZHJhZnQiOnJldHVybiJiZy1ncmF5LTEwMCB0ZXh0LWdyYXktODAwIjtjYXNlImFyY2hpdmVkIjpyZXR1cm4iYmctcmVkLTEwMCB0ZXh0LXJlZC04MDAiO2RlZmF1bHQ6cmV0dXJuImJnLWJsdWUtMTAwIHRleHQtYmx1ZS04MDAifX07cmV0dXJuIGkuanN4cygiZGl2Iix7Y2xhc3NOYW1lOiJtaW4taC1zY3JlZW4gZmxleCBiZy1iYWNrZ3JvdW5kIixjaGlsZHJlbjpbaS5qc3goRnQse30pLGkuanN4cygibWFpbiIse2NsYXNzTmFtZToiZmxleC0xIG92ZXJmbG93LWF1dG8iLGNoaWxkcmVuOltpLmpzeChJdCx7fSksaS5qc3hzKCJkaXYiLHtjbGFzc05hbWU6InAtNiIsY2hpbGRyZW46W2kuanN4cygiZGl2Iix7Y2xhc3NOYW1lOiJmbGV4IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWJldHdlZW4gbWItNiIsY2hpbGRyZW46W2kuanN4cygiZGl2Iix7Y2hpbGRyZW46W2kuanN4KCJoMSIse2NsYXNzTmFtZToidGV4dC0yeGwgZm9udC1ib2xkIiwiZGF0YS10ZXN0aWQiOiJwcm9jZXNzZXMtdGl0bGUiLGNoaWxkcmVuOiJBbGwgUHJvY2Vzc2VzIn0pLGkuanN4KCJwIix7Y2xhc3NOYW1lOiJ0ZXh0LW11dGVkLWZvcmVncm91bmQiLGNoaWxkcmVuOiJNYW5hZ2UgYW5kIG1vbml0b3IgYWxsIE9FIHByb2Nlc3NlcyBhY3Jvc3MgeW91ciBvcmdhbml6YXRpb24ifSldfSksaS5qc3hzKCJkaXYiLHtjbGFzc05hbWU6ImZsZXggaXRlbXMtY2VudGVyIHNwYWNlLXgtMyIsY2hpbGRyZW46W2kuanN4cyhZLHt2YXJpYW50OiJvdXRsaW5lIixzaXplOiJzbSIsImRhdGEtdGVzdGlkIjoiYnV0dG9uLWV4cG9ydCIsY2hpbGRyZW46W2kuanN4KEZuLHtjbGFzc05hbWU6InctNCBoLTQgbXItMiJ9KSwiRXhwb3J0IExpc3QiXX0pLGkuanN4KFkse3NpemU6InNtIixhc0NoaWxkOiEwLCJkYXRhLXRlc3RpZCI6ImJ1dHRvbi1jcmVhdGUtcHJvY2VzcyIsY2hpbGRyZW46aS5qc3hzKHV0LHtocmVmOiIvY3JlYXRlLXByb2Nlc3MiLGNoaWxkcmVuOltpLmpzeChIdCx7Y2xhc3NOYW1lOiJ3LTQgaC00IG1yLTIifSksIkNyZWF0ZSBQcm9jZXNzIl19KX0pXX0pXX0pLGkuanN4cygiZGl2Iix7Y2xhc3NOYW1lOiJmbGV4IGl0ZW1zLWNlbnRlciBzcGFjZS14LTQgbWItNiIsY2hpbGRyZW46W2kuanN4cygiZGl2Iix7Y2xhc3NOYW1lOiJyZWxhdGl2ZSBmbGV4LTEgbWF4LXctc20iLGNoaWxkcmVuOltpLmpzeChXMCx7Y2xhc3NOYW1lOiJhYnNvbHV0ZSBsZWZ0LTMgdG9wLTEvMiB0cmFuc2Zvcm0gLXRyYW5zbGF0ZS15LTEvMiB0ZXh0LW11dGVkLWZvcmVncm91bmQgdy00IGgtNCJ9KSxpLmpzeCh6ZSx7cGxhY2Vob2xkZXI6IlNlYXJjaCBwcm9jZXNzZXMuLi4iLGNsYXNzTmFtZToicGwtMTAiLCJkYXRhLXRlc3RpZCI6ImlucHV0LXNlYXJjaC1wcm9jZXNzZXMifSldfSksaS5qc3hzKGpuLHtjaGlsZHJlbjpbaS5qc3goSnIse2NsYXNzTmFtZToidy00OCIsImRhdGEtdGVzdGlkIjoic2VsZWN0LWZpbHRlci1zdGF0dXMiLGNoaWxkcmVuOmkuanN4KE5uLHtwbGFjZWhvbGRlcjoiRmlsdGVyIGJ5IHN0YXR1cyJ9KX0pLGkuanN4cyhlbix7Y2hpbGRyZW46W2kuanN4KFBlLHt2YWx1ZToiYWxsIixjaGlsZHJlbjoiQWxsIFN0YXR1cyJ9KSxpLmpzeChQZSx7dmFsdWU6ImFjdGl2ZSIsY2hpbGRyZW46IkFjdGl2ZSJ9KSxpLmpzeChQZSx7dmFsdWU6InJldmlldyIsY2hpbGRyZW46IlVuZGVyIFJldmlldyJ9KSxpLmpzeChQZSx7dmFsdWU6ImRyYWZ0IixjaGlsZHJlbjoiRHJhZnQifSksaS5qc3goUGUse3ZhbHVlOiJhcmNoaXZlZCIsY2hpbGRyZW46IkFyY2hpdmVkIn0pXX0pXX0pLGkuanN4cyhqbix7Y2hpbGRyZW46W2kuanN4KEpyLHtjbGFzc05hbWU6InctNDgiLCJkYXRhLXRlc3RpZCI6InNlbGVjdC1maWx0ZXItZWxlbWVudCIsY2hpbGRyZW46aS5qc3goTm4se3BsYWNlaG9sZGVyOiJGaWx0ZXIgYnkgZWxlbWVudCJ9KX0pLGkuanN4cyhlbix7Y2hpbGRyZW46W2kuanN4KFBlLHt2YWx1ZToiYWxsIixjaGlsZHJlbjoiQWxsIEVsZW1lbnRzIn0pLGkuanN4KFBlLHt2YWx1ZToiMSIsY2hpbGRyZW46Ik9FIEVsZW1lbnQgMSJ9KSxpLmpzeChQZSx7dmFsdWU6IjIiLGNoaWxkcmVuOiJPRSBFbGVtZW50IDIifSksaS5qc3goUGUse3ZhbHVlOiIzIixjaGlsZHJlbjoiT0UgRWxlbWVudCAzIn0pLGkuanN4KFBlLHt2YWx1ZToiNCIsY2hpbGRyZW46IkFzc2V0IE1hbmFnZW1lbnQifSldfSldfSldfSksaS5qc3goImRpdiIse2NsYXNzTmFtZToic3BhY2UteS00IixjaGlsZHJlbjpzP2kuanN4KCJkaXYiLHtjbGFzc05hbWU6InNwYWNlLXktNCIsY2hpbGRyZW46Wy4uLkFycmF5KDUpXS5tYXAoKGwsYyk9PmkuanN4KGllLHtjbGFzc05hbWU6ImFuaW1hdGUtcHVsc2UiLGNoaWxkcmVuOmkuanN4KGxlLHtjbGFzc05hbWU6InAtNiIsY2hpbGRyZW46aS5qc3hzKCJkaXYiLHtjbGFzc05hbWU6ImZsZXggaXRlbXMtY2VudGVyIHNwYWNlLXgtNCIsY2hpbGRyZW46W2kuanN4KCJkaXYiLHtjbGFzc05hbWU6InctMTIgaC0xMiBiZy1tdXRlZCByb3VuZGVkLWxnIn0pLGkuanN4cygiZGl2Iix7Y2xhc3NOYW1lOiJmbGV4LTEgc3BhY2UteS0yIixjaGlsZHJlbjpbaS5qc3goImRpdiIse2NsYXNzTmFtZToiaC00IGJnLW11dGVkIHJvdW5kZWQgdy0xLzQifSksaS5qc3goImRpdiIse2NsYXNzTmFtZToiaC0zIGJnLW11dGVkIHJvdW5kZWQgdy0xLzIifSldfSksaS5qc3goImRpdiIse2NsYXNzTmFtZToidy0yMCBoLTYgYmctbXV0ZWQgcm91bmRlZCJ9KV19KX0pfSxjKSl9KTpuJiZuLmxlbmd0aD4wP2kuanN4KCJkaXYiLHtjbGFzc05hbWU6InNwYWNlLXktNCIsY2hpbGRyZW46bi5tYXAobD0+e3ZhciBjLHU7cmV0dXJuIGkuanN4KGllLHtjbGFzc05hbWU6ImN1cnNvci1wb2ludGVyIHRyYW5zaXRpb24tYWxsIGR1cmF0aW9uLTIwMCBob3ZlcjpzaGFkb3ctbWQiLCJkYXRhLXRlc3RpZCI6YHByb2Nlc3MtY2FyZC0ke2wuaWR9YCxjaGlsZHJlbjppLmpzeCh1dCx7aHJlZjpgL3Byb2Nlc3MvJHtsLmlkfWAsY2hpbGRyZW46aS5qc3gobGUse2NsYXNzTmFtZToicC02IixjaGlsZHJlbjppLmpzeCgiZGl2Iix7Y2xhc3NOYW1lOiJmbGV4IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWJldHdlZW4iLGNoaWxkcmVuOmkuanN4cygiZGl2Iix7Y2xhc3NOYW1lOiJmbGV4IGl0ZW1zLWNlbnRlciBzcGFjZS14LTQiLGNoaWxkcmVuOltpLmpzeCgiZGl2Iix7Y2xhc3NOYW1lOiJ3LTEyIGgtMTIgYmctcHJpbWFyeS8xMCByb3VuZGVkLWxnIGZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktY2VudGVyIixjaGlsZHJlbjppLmpzeChKZSx7Y2xhc3NOYW1lOiJ3LTYgaC02IHRleHQtcHJpbWFyeSJ9KX0pLGkuanN4cygiZGl2Iix7Y2xhc3NOYW1lOiJmbGV4LTEiLGNoaWxkcmVuOltpLmpzeHMoImRpdiIse2NsYXNzTmFtZToiZmxleCBpdGVtcy1jZW50ZXIgc3BhY2UteC0zIG1iLTIiLGNoaWxkcmVuOltpLmpzeCgiaDMiLHtjbGFzc05hbWU6ImZvbnQtc2VtaWJvbGQgdGV4dC1sZyIsY2hpbGRyZW46bC5uYW1lfSksaS5qc3goYmUse2NsYXNzTmFtZTpvKGwuc3RhdHVzfHwiZHJhZnQiKSxjaGlsZHJlbjpsLnN0YXR1c3x8ImRyYWZ0In0pXX0pLGkuanN4cygiZGl2Iix7Y2xhc3NOYW1lOiJmbGV4IGl0ZW1zLWNlbnRlciBzcGFjZS14LTQgdGV4dC1zbSB0ZXh0LW11dGVkLWZvcmVncm91bmQgbWItMiIsY2hpbGRyZW46W2kuanN4KCJzcGFuIix7ImRhdGEtdGVzdGlkIjoicHJvY2Vzcy1udW1iZXIiLGNoaWxkcmVuOmwucHJvY2Vzc051bWJlcn0pLGkuanN4KCJzcGFuIix7Y2hpbGRyZW46IuKAoiJ9KSxpLmpzeCgic3BhbiIse2NoaWxkcmVuOihjPWwuZWxlbWVudCk9PW51bGw/dm9pZCAwOmMudGl0bGV9KSxsLmlzTWFuZGF0b3J5JiZpLmpzeHMoaS5GcmFnbWVudCx7Y2hpbGRyZW46W2kuanN4KCJzcGFuIix7Y2hpbGRyZW46IuKAoiJ9KSxpLmpzeChiZSx7dmFyaWFudDoib3V0bGluZSIsY2xhc3NOYW1lOiJ0ZXh0LXhzIixjaGlsZHJlbjoiTWFuZGF0b3J5In0pXX0pXX0pLGwuZGVzY3JpcHRpb24mJmkuanN4KCJwIix7Y2xhc3NOYW1lOiJ0ZXh0LW11dGVkLWZvcmVncm91bmQgdGV4dC1zbSBsaW5lLWNsYW1wLTIgbWItMyIsY2hpbGRyZW46bC5kZXNjcmlwdGlvbn0pLGkuanN4cygiZGl2Iix7Y2xhc3NOYW1lOiJmbGV4IGl0ZW1zLWNlbnRlciBzcGFjZS14LTYgdGV4dC14cyB0ZXh0LW11dGVkLWZvcmVncm91bmQgbWItMyIsY2hpbGRyZW46W2wucHJvY2Vzc093bmVyJiZpLmpzeHMoImRpdiIse2NsYXNzTmFtZToiZmxleCBpdGVtcy1jZW50ZXIgc3BhY2UteC0xIixjaGlsZHJlbjpbaS5qc3gocTAse2NsYXNzTmFtZToidy0zIGgtMyJ9KSxpLmpzeCgic3BhbiIse2NoaWxkcmVuOmwucHJvY2Vzc093bmVyfSldfSksbC51cGRhdGVkQXQmJmkuanN4cygiZGl2Iix7Y2xhc3NOYW1lOiJmbGV4IGl0ZW1zLWNlbnRlciBzcGFjZS14LTEiLGNoaWxkcmVuOltpLmpzeCgkMCx7Y2xhc3NOYW1lOiJ3LTMgaC0zIn0pLGkuanN4cygic3BhbiIse2NoaWxkcmVuOlsiVXBkYXRlZCAiLG5ldyBEYXRlKGwudXBkYXRlZEF0KS50b0xvY2FsZURhdGVTdHJpbmcoKV19KV19KSxpLmpzeHMoImRpdiIse2NsYXNzTmFtZToiZmxleCBpdGVtcy1jZW50ZXIgc3BhY2UteC0xIixjaGlsZHJlbjpbaS5qc3goSmUse2NsYXNzTmFtZToidy0zIGgtMyJ9KSxpLmpzeHMoInNwYW4iLHtjaGlsZHJlbjpbKCh1PWwuc3RlcHMpPT1udWxsP3ZvaWQgMDp1Lmxlbmd0aCl8fDAsIiBzdGVwcyJdfSldfSldfSksaS5qc3goImRpdiIse2NsYXNzTmFtZToibXQtMyBwdC0zIGJvcmRlci10IGJvcmRlci1ib3JkZXIvNTAiLGNoaWxkcmVuOmkuanN4KEFoLHtwcm9jZXNzTnVtYmVyOmwucHJvY2Vzc051bWJlcixzdGVwczpsLnN0ZXBzfHxbXSxjb21wYWN0OiEwfSl9KV19KV19KX0pfSl9KX0sbC5pZCl9KX0pOmkuanN4KGllLHtjaGlsZHJlbjppLmpzeHMobGUse2NsYXNzTmFtZToidGV4dC1jZW50ZXIgcHktMTIiLGNoaWxkcmVuOltpLmpzeChKZSx7Y2xhc3NOYW1lOiJ3LTEyIGgtMTIgdGV4dC1tdXRlZC1mb3JlZ3JvdW5kIG14LWF1dG8gbWItNCJ9KSxpLmpzeCgiaDMiLHtjbGFzc05hbWU6InRleHQtbGcgZm9udC1zZW1pYm9sZCBtYi0yIixjaGlsZHJlbjoiTm8gUHJvY2Vzc2VzIEZvdW5kIn0pLGkuanN4KCJwIix7Y2xhc3NOYW1lOiJ0ZXh0LW11dGVkLWZvcmVncm91bmQgbWItNiIsY2hpbGRyZW46IkdldCBzdGFydGVkIGJ5IGNyZWF0aW5nIHlvdXIgZmlyc3QgT0UgcHJvY2VzcyBvciBicm93c2UgYXZhaWxhYmxlIHRlbXBsYXRlcy4ifSksaS5qc3goWSx7YXNDaGlsZDohMCwiZGF0YS10ZXN0aWQiOiJidXR0b24tY3JlYXRlLWZpcnN0LXByb2Nlc3MiLGNoaWxkcmVuOmkuanN4cyh1dCx7aHJlZjoiL2NyZWF0ZS1wcm9jZXNzIixjaGlsZHJlbjpbaS5qc3goSHQse2NsYXNzTmFtZToidy00IGgtNCBtci0yIn0pLCJDcmVhdGUgRmlyc3QgUHJvY2VzcyJdfSl9KV19KX0pfSldfSldfSldfSl9Y29uc3QgYlA9Im1vZHVsZXByZWxvYWQiLGpQPWZ1bmN0aW9uKGUpe3JldHVybiIvIitlfSxRZz17fSxMMT1mdW5jdGlvbih0LHIsbil7bGV0IHM9UHJvbWlzZS5yZXNvbHZlKCk7aWYociYmci5sZW5ndGg+MCl7ZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoImxpbmsiKTtjb25zdCBvPWRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoIm1ldGFbcHJvcGVydHk9Y3NwLW5vbmNlXSIpLGw9KG89PW51bGw/dm9pZCAwOm8ubm9uY2UpfHwobz09bnVsbD92b2lkIDA6by5nZXRBdHRyaWJ1dGUoIm5vbmNlIikpO3M9UHJvbWlzZS5hbGxTZXR0bGVkKHIubWFwKGM9PntpZihjPWpQKGMpLGMgaW4gUWcpcmV0dXJuO1FnW2NdPSEwO2NvbnN0IHU9Yy5lbmRzV2l0aCgiLmNzcyIpLGQ9dT8nW3JlbD0ic3R5bGVzaGVldCJdJzoiIjtpZihkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGBsaW5rW2hyZWY9IiR7Y30iXSR7ZH1gKSlyZXR1cm47Y29uc3QgZj1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJsaW5rIik7aWYoZi5yZWw9dT8ic3R5bGVzaGVldCI6YlAsdXx8KGYuYXM9InNjcmlwdCIpLGYuY3Jvc3NPcmlnaW49IiIsZi5ocmVmPWMsbCYmZi5zZXRBdHRyaWJ1dGUoIm5vbmNlIixsKSxkb2N1bWVudC5oZWFkLmFwcGVuZENoaWxkKGYpLHUpcmV0dXJuIG5ldyBQcm9taXNlKChwLHgpPT57Zi5hZGRFdmVudExpc3RlbmVyKCJsb2FkIixwKSxmLmFkZEV2ZW50TGlzdGVuZXIoImVycm9yIiwoKT0+eChuZXcgRXJyb3IoYFVuYWJsZSB0byBwcmVsb2FkIENTUyBmb3IgJHtjfWApKSl9KX0pKX1mdW5jdGlvbiBhKG8pe2NvbnN0IGw9bmV3IEV2ZW50KCJ2aXRlOnByZWxvYWRFcnJvciIse2NhbmNlbGFibGU6ITB9KTtpZihsLnBheWxvYWQ9byx3aW5kb3cuZGlzcGF0Y2hFdmVudChsKSwhbC5kZWZhdWx0UHJldmVudGVkKXRocm93IG99cmV0dXJuIHMudGhlbihvPT57Zm9yKGNvbnN0IGwgb2Ygb3x8W10pbC5zdGF0dXM9PT0icmVqZWN0ZWQiJiZhKGwucmVhc29uKTtyZXR1cm4gdCgpLmNhdGNoKGEpfSl9LGJkPWU9Pntzd2l0Y2goZT09bnVsbD92b2lkIDA6ZS50b0xvd2VyQ2FzZSgpKXtjYXNlImZpbmFuY2lhbCI6cmV0dXJue2JnOiJiZy1ncmVlbi01MCBkYXJrOmJnLWdyZWVuLTk1MC8yMCIsYm9yZGVyOiJib3JkZXItZ3JlZW4tMjAwIGRhcms6Ym9yZGVyLWdyZWVuLTgwMCIsdGV4dDoidGV4dC1ncmVlbi05MDAgZGFyazp0ZXh0LWdyZWVuLTEwMCIsYWNjZW50OiJiZy1ncmVlbi01MDAiLGZsYWc6IvCfkrAifTtjYXNlImN1c3RvbWVyIjpyZXR1cm57Ymc6ImJnLWJsdWUtNTAgZGFyazpiZy1ibHVlLTk1MC8yMCIsYm9yZGVyOiJib3JkZXItYmx1ZS0yMDAgZGFyazpib3JkZXItYmx1ZS04MDAiLHRleHQ6InRleHQtYmx1ZS05MDAgZGFyazp0ZXh0LWJsdWUtMTAwIixhY2NlbnQ6ImJnLWJsdWUtNTAwIixmbGFnOiLwn5GlIn07Y2FzZSJpbnRlcm5hbCBwcm9jZXNzIjpyZXR1cm57Ymc6ImJnLXB1cnBsZS01MCBkYXJrOmJnLXB1cnBsZS05NTAvMjAiLGJvcmRlcjoiYm9yZGVyLXB1cnBsZS0yMDAgZGFyazpib3JkZXItcHVycGxlLTgwMCIsdGV4dDoidGV4dC1wdXJwbGUtOTAwIGRhcms6dGV4dC1wdXJwbGUtMTAwIixhY2NlbnQ6ImJnLXB1cnBsZS01MDAiLGZsYWc6IuKame+4jyJ9O2Nhc2UibGVhcm5pbmcgJiBncm93dGgiOnJldHVybntiZzoiYmctb3JhbmdlLTUwIGRhcms6Ymctb3JhbmdlLTk1MC8yMCIsYm9yZGVyOiJib3JkZXItb3JhbmdlLTIwMCBkYXJrOmJvcmRlci1vcmFuZ2UtODAwIix0ZXh0OiJ0ZXh0LW9yYW5nZS05MDAgZGFyazp0ZXh0LW9yYW5nZS0xMDAiLGFjY2VudDoiYmctb3JhbmdlLTUwMCIsZmxhZzoi8J+TmiJ9O2RlZmF1bHQ6cmV0dXJue2JnOiJiZy1ncmF5LTUwIGRhcms6YmctZ3JheS05NTAvMjAiLGJvcmRlcjoiYm9yZGVyLWdyYXktMjAwIGRhcms6Ym9yZGVyLWdyYXktODAwIix0ZXh0OiJ0ZXh0LWdyYXktOTAwIGRhcms6dGV4dC1ncmF5LTEwMCIsYWNjZW50OiJiZy1ncmF5LTUwMCIsZmxhZzoi8J+TiiJ9fX0sTlA9eS5mb3J3YXJkUmVmKCh7Z29hbHM6ZX0sdCk9Pntjb25zdFtyLG5dPXkudXNlU3RhdGUoKCk9Pm5ldyBTZXQoKGU9PW51bGw/dm9pZCAwOmUubWFwKGM9PmMuaWQpKXx8W10pKSxbcyxhXT15LnVzZVN0YXRlKG5ldyBTZXQpLG89Yz0+e24odT0+e2NvbnN0IGQ9bmV3IFNldCh1KTtyZXR1cm4gZC5oYXMoYyk/ZC5kZWxldGUoYyk6ZC5hZGQoYyksZH0pfSxsPWM9PnthKHU9Pntjb25zdCBkPW5ldyBTZXQodSk7cmV0dXJuIGQuaGFzKGMpP2QuZGVsZXRlKGMpOmQuYWRkKGMpLGR9KX07cmV0dXJuIHkudXNlSW1wZXJhdGl2ZUhhbmRsZSh0LCgpPT4oe2V4cGFuZEFsbDooKT0+e2NvbnN0IGM9bmV3IFNldCgoZT09bnVsbD92b2lkIDA6ZS5tYXAoZD0+ZC5pZCkpfHxbXSk7bihjKTtjb25zdCB1PW5ldyBTZXQ7ZT09bnVsbHx8ZS5mb3JFYWNoKGQ9Pnt2YXIgZjsoZj1kLnByb2Nlc3Nlcyk9PW51bGx8fGYuZm9yRWFjaChwPT57dS5hZGQocC5pZCl9KX0pLGEodSl9LGNvbGxhcHNlQWxsOigpPT57bihuZXcgU2V0KSxhKG5ldyBTZXQpfX0pLFtlXSksIWV8fGUubGVuZ3RoPT09MD9pLmpzeHMoImRpdiIse2NsYXNzTmFtZToidGV4dC1jZW50ZXIgcHktOCB0ZXh0LW11dGVkLWZvcmVncm91bmQiLGNoaWxkcmVuOltpLmpzeChfcix7Y2xhc3NOYW1lOiJ3LTEyIGgtMTIgbXgtYXV0byBtYi00IG9wYWNpdHktNTAifSksaS5qc3goInAiLHtjaGlsZHJlbjoiTm8gc3RyYXRlZ2ljIGdvYWxzIHdpdGggbGlua2VkIHByb2Nlc3NlcyB0byBkaXNwbGF5In0pXX0pOmkuanN4KCJkaXYiLHtjbGFzc05hbWU6InctZnVsbCBzcGFjZS15LTYiLCJkYXRhLW1pbmRtYXAtY29udGVudCI6ImdvYWxzLXByb2Nlc3NlcyIsY2hpbGRyZW46ZS5tYXAoYz0+e2NvbnN0IHU9YmQoYy5jYXRlZ29yeSk7cmV0dXJuIGkuanN4cygiZGl2Iix7Y2xhc3NOYW1lOiJyZWxhdGl2ZSIsY2hpbGRyZW46W2kuanN4KGllLHtjbGFzc05hbWU6YCR7dS5iZ30gJHt1LmJvcmRlcn0gc2hhZG93LWxnIGJvcmRlci0yYCxjaGlsZHJlbjppLmpzeChsZSx7Y2xhc3NOYW1lOiJwLTQiLGNoaWxkcmVuOmkuanN4cygiZGl2Iix7Y2xhc3NOYW1lOiJmbGV4IGl0ZW1zLWNlbnRlciBzcGFjZS14LTMiLGNoaWxkcmVuOltjLnByb2Nlc3NlcyYmYy5wcm9jZXNzZXMubGVuZ3RoPjAmJmkuanN4KFkse3ZhcmlhbnQ6Imdob3N0IixzaXplOiJzbSIsY2xhc3NOYW1lOiJ3LTggaC04IHAtMCByb3VuZGVkLWZ1bGwgaG92ZXI6YmctZ3JheS0yMDAgZGFyazpob3ZlcjpiZy1ncmF5LTcwMCIsb25DbGljazpkPT57ZC5wcmV2ZW50RGVmYXVsdCgpLGQuc3RvcFByb3BhZ2F0aW9uKCksbyhjLmlkKX0sImRhdGEtdGVzdGlkIjpgdG9nZ2xlLWdvYWwtJHtjLmlkfWAsY2hpbGRyZW46ci5oYXMoYy5pZCk/aS5qc3gobGkse2NsYXNzTmFtZToidy00IGgtNCJ9KTppLmpzeChqcix7Y2xhc3NOYW1lOiJ3LTQgaC00In0pfSksaS5qc3goImRpdiIse2NsYXNzTmFtZTpgdy0xMiBoLTEyICR7dS5hY2NlbnR9IHJvdW5kZWQtbGcgZmxleCBpdGVtcy1jZW50ZXIganVzdGlmeS1jZW50ZXIgZmxleC1zaHJpbmstMCB0ZXh0LXhsYCxjaGlsZHJlbjp1LmZsYWd9KSxpLmpzeCgiZGl2Iix7Y2xhc3NOYW1lOiJmbGV4LTEgbWluLXctMCIsY2hpbGRyZW46aS5qc3hzKCJkaXYiLHtjbGFzc05hbWU6ImZsZXggaXRlbXMtY2VudGVyIHNwYWNlLXgtMiIsY2hpbGRyZW46W2kuanN4KCJoMiIse2NsYXNzTmFtZTpgdGV4dC1sZyBmb250LWJvbGQgJHt1LnRleHR9YCxjaGlsZHJlbjpjLnRpdGxlfSksaS5qc3goYmUse3ZhcmlhbnQ6Im91dGxpbmUiLGNsYXNzTmFtZToidGV4dC14cyIsY2hpbGRyZW46Yy5jYXRlZ29yeX0pLGkuanN4KGJlLHt2YXJpYW50OiJzZWNvbmRhcnkiLGNsYXNzTmFtZToidGV4dC14cyIsY2hpbGRyZW46Yy5wcmlvcml0eX0pLGMucHJvY2Vzc2VzJiZpLmpzeHMoYmUse3ZhcmlhbnQ6Im91dGxpbmUiLGNsYXNzTmFtZToidGV4dC14cyIsY2hpbGRyZW46W2MucHJvY2Vzc2VzLmxlbmd0aCwiIHByb2Nlc3NlcyJdfSldfSl9KV19KX0pfSksYy5wcm9jZXNzZXMmJmMucHJvY2Vzc2VzLmxlbmd0aD4wJiZyLmhhcyhjLmlkKSYmaS5qc3hzKCJkaXYiLHtjbGFzc05hbWU6Im1sLTggbXQtNCBzcGFjZS15LTQiLGNoaWxkcmVuOltpLmpzeHMoImRpdiIse2NsYXNzTmFtZToiZmxleCBpdGVtcy1jZW50ZXIgc3BhY2UteC0yIHRleHQtbXV0ZWQtZm9yZWdyb3VuZCIsY2hpbGRyZW46W2kuanN4KCJkaXYiLHtjbGFzc05hbWU6InctOCBoLTAuNSBiZy1ib3JkZXIifSksaS5qc3goanIse2NsYXNzTmFtZToidy00IGgtNCJ9KSxpLmpzeHMoInNwYW4iLHtjbGFzc05hbWU6InRleHQtc20gZm9udC1tZWRpdW0iLGNoaWxkcmVuOlsiTGlua2VkIFByb2Nlc3NlcyAoIixjLnByb2Nlc3Nlcy5sZW5ndGgsIikiXX0pXX0pLGkuanN4KCJkaXYiLHtjbGFzc05hbWU6ImdyaWQgZ3JpZC1jb2xzLTEgbGc6Z3JpZC1jb2xzLTIgZ2FwLTQiLGNoaWxkcmVuOmMucHJvY2Vzc2VzLm1hcChkPT57dmFyIHA7Y29uc3QgZj1iZChjLmNhdGVnb3J5KTtyZXR1cm4gaS5qc3goaWUse2NsYXNzTmFtZToiYmctd2hpdGUgZGFyazpiZy1ncmF5LTgwMCBib3JkZXIgYm9yZGVyLWdyYXktMjAwIHNoYWRvdy1zbSIsY2hpbGRyZW46aS5qc3hzKGxlLHtjbGFzc05hbWU6InAtMyIsY2hpbGRyZW46W2kuanN4cygiZGl2Iix7Y2xhc3NOYW1lOiJmbGV4IGl0ZW1zLWNlbnRlciBzcGFjZS14LTIgbWItMiIsY2hpbGRyZW46W2QubWVhc3VyZXMmJmQubWVhc3VyZXMubGVuZ3RoPjAmJmkuanN4KFkse3ZhcmlhbnQ6Imdob3N0IixzaXplOiJzbSIsY2xhc3NOYW1lOiJ3LTYgaC02IHAtMCByb3VuZGVkLWZ1bGwgaG92ZXI6YmctYmx1ZS0xMDAgZGFyazpob3ZlcjpiZy1ibHVlLTkwMCIsb25DbGljazp4PT57eC5wcmV2ZW50RGVmYXVsdCgpLHguc3RvcFByb3BhZ2F0aW9uKCksbChkLmlkKX0sImRhdGEtdGVzdGlkIjpgdG9nZ2xlLXByb2Nlc3MtJHtkLmlkfWAsY2hpbGRyZW46cy5oYXMoZC5pZCk/aS5qc3gobGkse2NsYXNzTmFtZToidy0zIGgtMyJ9KTppLmpzeChqcix7Y2xhc3NOYW1lOiJ3LTMgaC0zIn0pfSksaS5qc3goImRpdiIse2NsYXNzTmFtZTpgdy04IGgtOCAke2YuYWNjZW50fSByb3VuZGVkIGZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktY2VudGVyIGZsZXgtc2hyaW5rLTBgLGNoaWxkcmVuOmkuanN4KEplLHtjbGFzc05hbWU6InctNCBoLTQgdGV4dC13aGl0ZSJ9KX0pLGkuanN4cygiZGl2Iix7Y2xhc3NOYW1lOiJmbGV4LTEgbWluLXctMCIsY2hpbGRyZW46W2kuanN4cygiZGl2Iix7Y2xhc3NOYW1lOiJmbGV4IGl0ZW1zLWNlbnRlciBzcGFjZS14LTIiLGNoaWxkcmVuOltpLmpzeCgic3BhbiIse2NsYXNzTmFtZToiZm9udC1zZW1pYm9sZCB0ZXh0LXNtIixjaGlsZHJlbjpkLnByb2Nlc3NOdW1iZXJ9KSxpLmpzeChiZSx7dmFyaWFudDoib3V0bGluZSIsY2xhc3NOYW1lOiJ0ZXh0LXhzIixjaGlsZHJlbjpmLmZsYWd9KSxpLmpzeHMoYmUse3ZhcmlhbnQ6InNlY29uZGFyeSIsY2xhc3NOYW1lOiJ0ZXh0LXhzIixjaGlsZHJlbjpbKChwPWQubWVhc3VyZXMpPT1udWxsP3ZvaWQgMDpwLmxlbmd0aCl8fDAsIiBLUElzIl19KV19KSxpLmpzeCgiaDQiLHtjbGFzc05hbWU6ImZvbnQtbWVkaXVtIHRleHQteHMgdGV4dC1ncmF5LTkwMCBkYXJrOnRleHQtZ3JheS0xMDAgdHJ1bmNhdGUiLGNoaWxkcmVuOmQubmFtZX0pXX0pXX0pLGQubWVhc3VyZXMmJmQubWVhc3VyZXMubGVuZ3RoPjAmJnMuaGFzKGQuaWQpJiZpLmpzeHMoImRpdiIse2NsYXNzTmFtZToiYmctYmx1ZS01MCBkYXJrOmJnLWJsdWUtOTUwLzIwIHJvdW5kZWQtbGcgcC0yIHNwYWNlLXktMiIsY2hpbGRyZW46W2kuanN4cygiZGl2Iix7Y2xhc3NOYW1lOiJmbGV4IGl0ZW1zLWNlbnRlciBzcGFjZS14LTIiLGNoaWxkcmVuOltpLmpzeChzcix7Y2xhc3NOYW1lOiJ3LTQgaC00IHRleHQtYmx1ZS02MDAifSksaS5qc3hzKCJzcGFuIix7Y2xhc3NOYW1lOiJ0ZXh0LXNtIGZvbnQtc2VtaWJvbGQgdGV4dC1ibHVlLTcwMCBkYXJrOnRleHQtYmx1ZS0zMDAiLGNoaWxkcmVuOltkLm1lYXN1cmVzLmxlbmd0aCwiIFBlcmZvcm1hbmNlIE1lYXN1cmVzIl19KV19KSxpLmpzeCgiZGl2Iix7Y2xhc3NOYW1lOiJncmlkIGdyaWQtY29scy0xIGdhcC0yIixjaGlsZHJlbjpkLm1lYXN1cmVzLm1hcCh4PT5pLmpzeCgiZGl2Iix7Y2xhc3NOYW1lOiJiZy13aGl0ZSBkYXJrOmJnLWdyYXktODAwIHJvdW5kZWQgcC0yIGJvcmRlciBib3JkZXItYmx1ZS0yMDAgZGFyazpib3JkZXItYmx1ZS04MDAiLGNoaWxkcmVuOmkuanN4cygiZGl2Iix7Y2xhc3NOYW1lOiJmbGV4IGl0ZW1zLXN0YXJ0IHNwYWNlLXgtMiIsY2hpbGRyZW46W2kuanN4KFBjLHtjbGFzc05hbWU6InctMiBoLTIgYmctYmx1ZS01MDAgcm91bmRlZC1mdWxsIGZsZXgtc2hyaW5rLTAgbXQtMSJ9KSxpLmpzeHMoImRpdiIse2NsYXNzTmFtZToiZmxleC0xIixjaGlsZHJlbjpbaS5qc3goInNwYW4iLHtjbGFzc05hbWU6InRleHQteHMgZm9udC1tZWRpdW0gdGV4dC1ncmF5LTkwMCBkYXJrOnRleHQtZ3JheS0xMDAgYmxvY2siLGNoaWxkcmVuOngubmFtZX0pLGkuanN4cygiZGl2Iix7Y2xhc3NOYW1lOiJmbGV4IGZsZXgtd3JhcCBnYXAtMSBtdC0xIixjaGlsZHJlbjpbeC5zY29yZWNhcmRDYXRlZ29yeSYmaS5qc3hzKGJlLHt2YXJpYW50OiJvdXRsaW5lIixjbGFzc05hbWU6InRleHQteHMgYmctYmx1ZS01MCB0ZXh0LWJsdWUtNzAwIGJvcmRlci1ibHVlLTIwMCIsY2hpbGRyZW46W2JkKHguc2NvcmVjYXJkQ2F0ZWdvcnkpLmZsYWcsIiAiLHguc2NvcmVjYXJkQ2F0ZWdvcnldfSkseC5mb3JtdWxhJiZpLmpzeHMoYmUse3ZhcmlhbnQ6Im91dGxpbmUiLGNsYXNzTmFtZToidGV4dC14cyBiZy15ZWxsb3ctNTAgdGV4dC15ZWxsb3ctNzAwIGJvcmRlci15ZWxsb3ctMjAwIixjaGlsZHJlbjpbIkZvcm11bGE6ICIseC5mb3JtdWxhXX0pLHgudGFyZ2V0JiZpLmpzeHMoYmUse3ZhcmlhbnQ6Im91dGxpbmUiLGNsYXNzTmFtZToidGV4dC14cyBiZy1ncmVlbi01MCB0ZXh0LWdyZWVuLTcwMCBib3JkZXItZ3JlZW4tMjAwIixjaGlsZHJlbjpbIlRhcmdldDogIix4LnRhcmdldF19KSx4LmZyZXF1ZW5jeSYmaS5qc3goYmUse3ZhcmlhbnQ6Im91dGxpbmUiLGNsYXNzTmFtZToidGV4dC14cyBiZy1wdXJwbGUtNTAgdGV4dC1wdXJwbGUtNzAwIGJvcmRlci1wdXJwbGUtMjAwIixjaGlsZHJlbjp4LmZyZXF1ZW5jeX0pLHguc291cmNlJiZpLmpzeChiZSx7dmFyaWFudDoib3V0bGluZSIsY2xhc3NOYW1lOiJ0ZXh0LXhzIGJnLW9yYW5nZS01MCB0ZXh0LW9yYW5nZS03MDAgYm9yZGVyLW9yYW5nZS0yMDAiLGNoaWxkcmVuOnguc291cmNlfSldfSldfSldfSl9LHguaWQpKX0pXX0pLGQubWVhc3VyZXMmJmQubWVhc3VyZXMubGVuZ3RoPjAmJiFzLmhhcyhkLmlkKSYmaS5qc3goImRpdiIse2NsYXNzTmFtZToiYmctYmx1ZS01MCBkYXJrOmJnLWJsdWUtOTUwLzIwIHJvdW5kZWQgcC0yIGN1cnNvci1wb2ludGVyIGhvdmVyOmJnLWJsdWUtMTAwIGRhcms6aG92ZXI6YmctYmx1ZS05MDAvMzAiLG9uQ2xpY2s6eD0+e3gucHJldmVudERlZmF1bHQoKSx4LnN0b3BQcm9wYWdhdGlvbigpLGwoZC5pZCl9LGNoaWxkcmVuOmkuanN4cygiZGl2Iix7Y2xhc3NOYW1lOiJmbGV4IGl0ZW1zLWNlbnRlciBzcGFjZS14LTIgdGV4dC1ibHVlLTcwMCBkYXJrOnRleHQtYmx1ZS0zMDAiLGNoaWxkcmVuOltpLmpzeChzcix7Y2xhc3NOYW1lOiJ3LTMgaC0zIn0pLGkuanN4cygic3BhbiIse2NsYXNzTmFtZToidGV4dC14cyBmb250LW1lZGl1bSIsY2hpbGRyZW46W2QubWVhc3VyZXMubGVuZ3RoLCIgS1BJcyAtIENsaWNrIHRvIGV4cGFuZCJdfSksaS5qc3goanIse2NsYXNzTmFtZToidy0zIGgtMyBtbC1hdXRvIn0pXX0pfSksKCFkLm1lYXN1cmVzfHxkLm1lYXN1cmVzLmxlbmd0aD09PTApJiZpLmpzeCgiZGl2Iix7Y2xhc3NOYW1lOiJiZy1ncmF5LTUwIGRhcms6YmctZ3JheS04MDAgcm91bmRlZC1sZyBwLTIgdGV4dC1jZW50ZXIiLGNoaWxkcmVuOmkuanN4cygiZGl2Iix7Y2xhc3NOYW1lOiJmbGV4IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWNlbnRlciBzcGFjZS14LTIgdGV4dC1ncmF5LTUwMCIsY2hpbGRyZW46W2kuanN4KFBjLHtjbGFzc05hbWU6InctNCBoLTQgb3BhY2l0eS01MCJ9KSxpLmpzeCgic3BhbiIse2NsYXNzTmFtZToidGV4dC1zbSBmb250LW1lZGl1bSIsY2hpbGRyZW46Ik5vIFBlcmZvcm1hbmNlIE1lYXN1cmVzIn0pXX0pfSldfSl9LGQuaWQpfSl9KV19KSwoIWMucHJvY2Vzc2VzfHxjLnByb2Nlc3Nlcy5sZW5ndGg9PT0wKSYmaS5qc3goImRpdiIse2NsYXNzTmFtZToibWwtOCBtdC00IixjaGlsZHJlbjppLmpzeHMoImRpdiIse2NsYXNzTmFtZToiZmxleCBpdGVtcy1jZW50ZXIgc3BhY2UteC0yIHRleHQtbXV0ZWQtZm9yZWdyb3VuZCIsY2hpbGRyZW46W2kuanN4KCJkaXYiLHtjbGFzc05hbWU6InctOCBoLTAuNSBiZy1ib3JkZXIifSksaS5qc3goanIse2NsYXNzTmFtZToidy00IGgtNCJ9KSxpLmpzeCgic3BhbiIse2NsYXNzTmFtZToidGV4dC1zbSIsY2hpbGRyZW46Ik5vIHByb2Nlc3NlcyBsaW5rZWQgdG8gdGhpcyBnb2FsIn0pXX0pfSldfSxjLmlkKX0pfSl9KTtmdW5jdGlvbiBYcyhlLHQpe2NvbnN0IHI9ZS5zcGxpdCgiLiIpLm1hcChhPT5wYXJzZUludChhKXx8MCksbj10LnNwbGl0KCIuIikubWFwKGE9PnBhcnNlSW50KGEpfHwwKSxzPU1hdGgubWF4KHIubGVuZ3RoLG4ubGVuZ3RoKTtmb3IobGV0IGE9MDthPHM7YSsrKXtjb25zdCBvPXJbYV18fDAsbD1uW2FdfHwwO2lmKG8hPT1sKXJldHVybiBvLWx9cmV0dXJuIDB9ZnVuY3Rpb24gamQoe3RpdGxlOmUsc3VidGl0bGU6dCxjaGlsZHJlbjpyLGlzRXhwYW5kZWQ6bixvblRvZ2dsZTpzLGxldmVsOmEsbm9kZVR5cGU6byxiYWRnZTpsfSl7Y29uc3QgdT0oKCk9Pntzd2l0Y2gobyl7Y2FzZSJlbGVtZW50IjpyZXR1cm57Ym9yZGVyOiJib3JkZXItYmx1ZS0yMDAiLGJnOiJiZy1ibHVlLTUwIix0ZXh0OiJ0ZXh0LWJsdWUtOTAwIixhY2NlbnQ6ImJnLWJsdWUtNTAwIn07Y2FzZSJwcm9jZXNzIjpyZXR1cm57Ym9yZGVyOiJib3JkZXItZ3JlZW4tMjAwIixiZzoiYmctZ3JlZW4tNTAiLHRleHQ6InRleHQtZ3JlZW4tOTAwIixhY2NlbnQ6ImJnLWdyZWVuLTUwMCJ9O2Nhc2Uic3RlcCI6cmV0dXJue2JvcmRlcjoiYm9yZGVyLXB1cnBsZS0yMDAiLGJnOiJiZy1wdXJwbGUtNTAiLHRleHQ6InRleHQtcHVycGxlLTkwMCIsYWNjZW50OiJiZy1wdXJwbGUtNTAwIn19fSkoKSxkPXIhPT12b2lkIDA7cmV0dXJuIGkuanN4cygiZGl2Iix7Y2xhc3NOYW1lOiJyZWxhdGl2ZSIsY2hpbGRyZW46W2E+MCYmaS5qc3hzKGkuRnJhZ21lbnQse2NoaWxkcmVuOltpLmpzeCgiZGl2Iix7Y2xhc3NOYW1lOiJhYnNvbHV0ZSBsZWZ0LTAgdG9wLTYgdy02IGJvcmRlci10LTIgYm9yZGVyLWdyYXktMzAwIixzdHlsZTp7bGVmdDpgJHsoYS0xKSo0MC0yMH1weGB9fSksaS5qc3goImRpdiIse2NsYXNzTmFtZToiYWJzb2x1dGUgdG9wLTAgYm9yZGVyLWwtMiBib3JkZXItZ3JheS0zMDAiLHN0eWxlOntsZWZ0OmAkeyhhLTEpKjQwLTIwfXB4YCxoZWlnaHQ6IjI0cHgifX0pXX0pLGkuanN4KCJkaXYiLHtjbGFzc05hbWU6YHJlbGF0aXZlICR7dS5ib3JkZXJ9ICR7dS5iZ30gYm9yZGVyLTIgcm91bmRlZC1sZyBwLTMgc2hhZG93LW1kIGhvdmVyOnNoYWRvdy1sZyB0cmFuc2l0aW9uLWFsbCBkdXJhdGlvbi0zMDAgY3Vyc29yLXBvaW50ZXIgdHJhbnNmb3JtIGhvdmVyOnNjYWxlLTEwNWAsc3R5bGU6e21hcmdpbkxlZnQ6YCR7YSo0MH1weGB9LG9uQ2xpY2s6ZD9zOnZvaWQgMCxjaGlsZHJlbjppLmpzeHMoImRpdiIse2NsYXNzTmFtZToiZmxleCBpdGVtcy1jZW50ZXIgc3BhY2UteC0zIixjaGlsZHJlbjpbZCYmaS5qc3goWSx7dmFyaWFudDoiZ2hvc3QiLHNpemU6InNtIixjbGFzc05hbWU6InctNiBoLTYgcC0wIHJvdW5kZWQtZnVsbCIsb25DbGljazpmPT57Zi5zdG9wUHJvcGFnYXRpb24oKSxzKCl9LGNoaWxkcmVuOm4/aS5qc3gobGkse2NsYXNzTmFtZToidy00IGgtNCJ9KTppLmpzeChqcix7Y2xhc3NOYW1lOiJ3LTQgaC00In0pfSksaS5qc3hzKCJkaXYiLHtjbGFzc05hbWU6YHctNiBoLTYgJHt1LmFjY2VudH0gcm91bmRlZC1sZyBmbGV4IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWNlbnRlciB0ZXh0LXdoaXRlYCxjaGlsZHJlbjpbbz09PSJlbGVtZW50IiYmaS5qc3goWXMse2NsYXNzTmFtZToidy0zIGgtMyJ9KSxvPT09InByb2Nlc3MiJiZpLmpzeChKZSx7Y2xhc3NOYW1lOiJ3LTMgaC0zIn0pLG89PT0ic3RlcCImJmkuanN4KF9yLHtjbGFzc05hbWU6InctMyBoLTMifSldfSksaS5qc3hzKCJkaXYiLHtjbGFzc05hbWU6ImZsZXgtMSIsY2hpbGRyZW46W2kuanN4cygiZGl2Iix7Y2xhc3NOYW1lOiJmbGV4IGl0ZW1zLWNlbnRlciBzcGFjZS14LTIgbWItMSIsY2hpbGRyZW46W2kuanN4KCJoMyIse2NsYXNzTmFtZTpgZm9udC1zZW1pYm9sZCB0ZXh0LXhzICR7dS50ZXh0fWAsY2hpbGRyZW46ZX0pLGwmJmkuanN4KGJlLHt2YXJpYW50OiJvdXRsaW5lIixjbGFzc05hbWU6InRleHQteHMiLGNoaWxkcmVuOmx9KV19KSx0JiZpLmpzeCgicCIse2NsYXNzTmFtZToidGV4dC14cyB0ZXh0LWdyYXktNjAwIGxlYWRpbmctdGlnaHQiLGNoaWxkcmVuOnR9KV19KV19KX0pLGQmJm4mJmkuanN4KCJkaXYiLHtjbGFzc05hbWU6Im10LTQgc3BhY2UteS0zIixjaGlsZHJlbjpyfSldfSl9ZnVuY3Rpb24gU1Aoe2VsZW1lbnRzOmUsZXhwYW5kZWROb2Rlczp0LHRvZ2dsZU5vZGU6cn0pe3JldHVybiBpLmpzeCgiZGl2Iix7Y2xhc3NOYW1lOiJzcGFjZS15LTQiLGNoaWxkcmVuOmUubWFwKG49Pnt2YXIgcyxhO3JldHVybiBpLmpzeChqZCx7dGl0bGU6YE9FIEVsZW1lbnQgJHtuLmVsZW1lbnROdW1iZXJ9OiAke24udGl0bGV9YCxzdWJ0aXRsZTpuLmRlc2NyaXB0aW9ufHx2b2lkIDAsaXNFeHBhbmRlZDp0LmhhcyhuLmlkKSxvblRvZ2dsZTooKT0+cihuLmlkKSxsZXZlbDowLG5vZGVUeXBlOiJlbGVtZW50IixiYWRnZTpgJHsoKHM9bi5wcm9jZXNzZXMpPT1udWxsP3ZvaWQgMDpzLmxlbmd0aCl8fDB9IFByb2Nlc3Nlc2AsY2hpbGRyZW46KGE9bi5wcm9jZXNzZXMpPT1udWxsP3ZvaWQgMDphLnNvcnQoKG8sbCk9PlhzKG8ucHJvY2Vzc051bWJlcixsLnByb2Nlc3NOdW1iZXIpKS5tYXAobz0+e3ZhciBsLGM7cmV0dXJuIGkuanN4KGpkLHt0aXRsZTpgJHtvLnByb2Nlc3NOdW1iZXJ9OiAke28ubmFtZX1gLHN1YnRpdGxlOm8uZGVzY3JpcHRpb258fHZvaWQgMCxpc0V4cGFuZGVkOnQuaGFzKG8uaWQpLG9uVG9nZ2xlOigpPT5yKG8uaWQpLGxldmVsOjEsbm9kZVR5cGU6InByb2Nlc3MiLGJhZGdlOmAkeygobD1vLnN0ZXBzKT09bnVsbD92b2lkIDA6bC5sZW5ndGgpfHwwfSBTdGVwc2AsY2hpbGRyZW46KGM9by5zdGVwcyk9PW51bGw/dm9pZCAwOmMuc29ydCgodSxkKT0+e2NvbnN0IGY9dHlwZW9mIHUuc3RlcE51bWJlcj09InN0cmluZyI/dS5zdGVwTnVtYmVyOlN0cmluZyh1LnN0ZXBOdW1iZXIpLHA9dHlwZW9mIGQuc3RlcE51bWJlcj09InN0cmluZyI/ZC5zdGVwTnVtYmVyOlN0cmluZyhkLnN0ZXBOdW1iZXIpO3JldHVybiBYcyhmLHApfSkubWFwKCh1LGQpPT5pLmpzeChqZCx7dGl0bGU6YFN0ZXAgJHt1LnN0ZXBOdW1iZXJ9OiAke3Uuc3RlcE5hbWV9YCxzdWJ0aXRsZTp1LnN0ZXBEZXRhaWxzfHx2b2lkIDAsaXNFeHBhbmRlZDohMSxvblRvZ2dsZTooKT0+e30sbGV2ZWw6Mixub2RlVHlwZToic3RlcCJ9LHUuaWQpKX0sby5pZCl9KX0sbi5pZCl9KX0pfWZ1bmN0aW9uIGtQKHtlbGVtZW50czplLGV4cGFuZGVkTm9kZXM6dCx0b2dnbGVOb2RlOnJ9KXtyZXR1cm4gaS5qc3goImRpdiIse2NsYXNzTmFtZToiZ3JpZCBncmlkLWNvbHMtMSBsZzpncmlkLWNvbHMtMiB4bDpncmlkLWNvbHMtMyBnYXAtNCIsY2hpbGRyZW46ZS5tYXAobj0+e3ZhciBzO3JldHVybiBpLmpzeHMoaWUse2NsYXNzTmFtZToiYm9yZGVyLTIgYm9yZGVyLWJsdWUtMjAwIixjaGlsZHJlbjpbaS5qc3hzKEVlLHtjbGFzc05hbWU6InBiLTIiLGNoaWxkcmVuOltpLmpzeHMoQ2Use2NsYXNzTmFtZToidGV4dC1zbSBjdXJzb3ItcG9pbnRlciBmbGV4IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWJldHdlZW4gaG92ZXI6dGV4dC1ibHVlLTYwMCIsb25DbGljazooKT0+cihuLmlkKSxjaGlsZHJlbjpbaS5qc3hzKCJkaXYiLHtjbGFzc05hbWU6ImZsZXggaXRlbXMtY2VudGVyIHNwYWNlLXgtMiIsY2hpbGRyZW46W2kuanN4KCJkaXYiLHtjbGFzc05hbWU6InctNiBoLTYgYmctYmx1ZS01MDAgcm91bmRlZC1sZyBmbGV4IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWNlbnRlciB0ZXh0LXdoaXRlIHRleHQteHMgZm9udC1ib2xkIixjaGlsZHJlbjpuLmVsZW1lbnROdW1iZXJ9KSxpLmpzeCgic3BhbiIse2NsYXNzTmFtZToidGV4dC14cyIsY2hpbGRyZW46bi50aXRsZX0pXX0pLHQuaGFzKG4uaWQpP2kuanN4KGxpLHtjbGFzc05hbWU6InctMyBoLTMifSk6aS5qc3goanIse2NsYXNzTmFtZToidy0zIGgtMyJ9KV19KSxuLmRlc2NyaXB0aW9uJiZpLmpzeCgicCIse2NsYXNzTmFtZToidGV4dC14cyB0ZXh0LW11dGVkLWZvcmVncm91bmQiLGNoaWxkcmVuOm4uZGVzY3JpcHRpb259KV19KSx0LmhhcyhuLmlkKSYmaS5qc3gobGUse2NsYXNzTmFtZToicHQtMCIsY2hpbGRyZW46aS5qc3goImRpdiIse2NsYXNzTmFtZToic3BhY2UteS0zIixjaGlsZHJlbjoocz1uLnByb2Nlc3Nlcyk9PW51bGw/dm9pZCAwOnMuc29ydCgoYSxvKT0+WHMoYS5wcm9jZXNzTnVtYmVyLG8ucHJvY2Vzc051bWJlcikpLm1hcChhPT57dmFyIG87cmV0dXJuIGkuanN4KGllLHtjbGFzc05hbWU6ImJvcmRlciBib3JkZXItZ3JlZW4tMjAwIGJnLWdyZWVuLTUwIixjaGlsZHJlbjppLmpzeHMobGUse2NsYXNzTmFtZToicC0zIixjaGlsZHJlbjpbaS5qc3hzKCJkaXYiLHtjbGFzc05hbWU6ImN1cnNvci1wb2ludGVyIGZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktYmV0d2VlbiBtYi0yIixvbkNsaWNrOigpPT5yKGEuaWQpLGNoaWxkcmVuOltpLmpzeHMoImRpdiIse2NsYXNzTmFtZToiZmxleCBpdGVtcy1jZW50ZXIgc3BhY2UteC0yIixjaGlsZHJlbjpbaS5qc3goImRpdiIse2NsYXNzTmFtZToidy02IGgtNiBiZy1ncmVlbi01MDAgcm91bmRlZCBmbGV4IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWNlbnRlciB0ZXh0LXdoaXRlIHRleHQteHMgZm9udC1ib2xkIixjaGlsZHJlbjppLmpzeChKZSx7Y2xhc3NOYW1lOiJ3LTMgaC0zIn0pfSksaS5qc3goInNwYW4iLHtjbGFzc05hbWU6InRleHQtc20gZm9udC1tZWRpdW0gdGV4dC1ncmVlbi04MDAiLGNoaWxkcmVuOmEucHJvY2Vzc051bWJlcn0pXX0pLHQuaGFzKGEuaWQpP2kuanN4KGxpLHtjbGFzc05hbWU6InctNCBoLTQifSk6aS5qc3goanIse2NsYXNzTmFtZToidy00IGgtNCJ9KV19KSxpLmpzeCgicCIse2NsYXNzTmFtZToidGV4dC14cyB0ZXh0LWdyZWVuLTcwMCBtYi0yIixjaGlsZHJlbjphLm5hbWV9KSx0LmhhcyhhLmlkKSYmaS5qc3goImRpdiIse2NsYXNzTmFtZToiZ3JpZCBncmlkLWNvbHMtMSBnYXAtMiIsY2hpbGRyZW46KG89YS5zdGVwcyk9PW51bGw/dm9pZCAwOm8uc29ydCgobCxjKT0+e2NvbnN0IHU9dHlwZW9mIGwuc3RlcE51bWJlcj09InN0cmluZyI/bC5zdGVwTnVtYmVyOlN0cmluZyhsLnN0ZXBOdW1iZXIpLGQ9dHlwZW9mIGMuc3RlcE51bWJlcj09InN0cmluZyI/Yy5zdGVwTnVtYmVyOlN0cmluZyhjLnN0ZXBOdW1iZXIpO3JldHVybiBYcyh1LGQpfSkubWFwKGw9PmkuanN4cygiZGl2Iix7Y2xhc3NOYW1lOiJiZy13aGl0ZSBib3JkZXIgYm9yZGVyLXB1cnBsZS0yMDAgcm91bmRlZCBwLTIiLGNoaWxkcmVuOltpLmpzeHMoImRpdiIse2NsYXNzTmFtZToiZmxleCBpdGVtcy1jZW50ZXIgc3BhY2UteC0yIG1iLTEiLGNoaWxkcmVuOltpLmpzeCgiZGl2Iix7Y2xhc3NOYW1lOiJ3LTUgaC01IGJnLXB1cnBsZS01MDAgcm91bmRlZCBmbGV4IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWNlbnRlciB0ZXh0LXdoaXRlIHRleHQteHMgZm9udC1ib2xkIixjaGlsZHJlbjpsLnN0ZXBOdW1iZXJ9KSxpLmpzeCgic3BhbiIse2NsYXNzTmFtZToidGV4dC14cyBmb250LW1lZGl1bSB0ZXh0LXB1cnBsZS04MDAiLGNoaWxkcmVuOmwuc3RlcE5hbWV9KV19KSxsLnN0ZXBEZXRhaWxzJiZpLmpzeCgicCIse2NsYXNzTmFtZToidGV4dC14cyB0ZXh0LXB1cnBsZS02MDAgcGwtNyIsY2hpbGRyZW46bC5zdGVwRGV0YWlsc30pXX0sbC5pZCkpfSldfSl9LGEuaWQpfSl9KX0pXX0sbi5pZCl9KX0pfWZ1bmN0aW9uIEVQKCl7Y29uc3R7dG9hc3Q6ZX09aG4oKSx7aXNBdXRoZW50aWNhdGVkOnQsaXNMb2FkaW5nOnJ9PVdyKCksW24sc109eS51c2VTdGF0ZShuZXcgU2V0KSxbYSxvXT15LnVzZVN0YXRlKCJoaWVyYXJjaGljYWwiKSxbbCxjXT15LnVzZVN0YXRlKCJlbGVtZW50cy1wcm9jZXNzZXMiKSxbdSxkXT15LnVzZVN0YXRlKCExKSxbZixwXT15LnVzZVN0YXRlKCExKSx4PXkudXNlUmVmKG51bGwpO3kudXNlRWZmZWN0KCgpPT57aWYoIXImJiF0KXtlKHt0aXRsZToiVW5hdXRob3JpemVkIixkZXNjcmlwdGlvbjoiWW91IGFyZSBsb2dnZWQgb3V0LiBMb2dnaW5nIGluIGFnYWluLi4uIix2YXJpYW50OiJkZXN0cnVjdGl2ZSJ9KSxzZXRUaW1lb3V0KCgpPT57d2luZG93LmxvY2F0aW9uLmhyZWY9Ii9hcGkvbG9naW4ifSw1MDApO3JldHVybn19LFt0LHIsZV0pO2NvbnN0e2RhdGE6dixpc0xvYWRpbmc6bSxlcnJvcjp3fT1idCh7cXVlcnlLZXk6WyIvYXBpL21pbmRtYXAvZWxlbWVudHMiXSxlbmFibGVkOnR9KSx7ZGF0YTpoLGlzTG9hZGluZzpnLGVycm9yOmJ9PWJ0KHtxdWVyeUtleTpbIi9hcGkvbWluZG1hcC9nb2Fscy1wcm9jZXNzZXMiXSxlbmFibGVkOnR9KTt5LnVzZUVmZmVjdCgoKT0+e2NvbnN0IEw9d3x8YjtpZihMKXtpZihKdChMKSl7ZSh7dGl0bGU6IlVuYXV0aG9yaXplZCIsZGVzY3JpcHRpb246IllvdSBhcmUgbG9nZ2VkIG91dC4gTG9nZ2luZyBpbiBhZ2Fpbi4uLiIsdmFyaWFudDoiZGVzdHJ1Y3RpdmUifSksc2V0VGltZW91dCgoKT0+e3dpbmRvdy5sb2NhdGlvbi5ocmVmPSIvYXBpL2xvZ2luIn0sNTAwKTtyZXR1cm59ZSh7dGl0bGU6IkVycm9yIixkZXNjcmlwdGlvbjoiRmFpbGVkIHRvIGxvYWQgbWluZCBtYXAgZGF0YSIsdmFyaWFudDoiZGVzdHJ1Y3RpdmUifSl9fSxbdyxiLGVdKTtjb25zdCBOPUw9PntzKFA9Pntjb25zdCBqPW5ldyBTZXQoUCk7cmV0dXJuIGouaGFzKEwpP2ouZGVsZXRlKEwpOmouYWRkKEwpLGp9KX0sUz0oKT0+e2lmKGw9PT0iZWxlbWVudHMtcHJvY2Vzc2VzIil7aWYoIXYpcmV0dXJuO2NvbnN0IEw9bmV3IFNldDt2LmZvckVhY2goUD0+e3ZhciBqO0wuYWRkKFAuaWQpLChqPVAucHJvY2Vzc2VzKT09bnVsbHx8ai5mb3JFYWNoKEk9PntMLmFkZChJLmlkKX0pfSkscyhMKX1lbHNle2lmKCFoKXJldHVybjt4LmN1cnJlbnQmJnguY3VycmVudC5leHBhbmRBbGwoKX19LF89KCk9PntsPT09ImVsZW1lbnRzLXByb2Nlc3NlcyI/cyhuZXcgU2V0KTp4LmN1cnJlbnQmJnguY3VycmVudC5jb2xsYXBzZUFsbCgpfSxrPWFzeW5jKCk9Pntjb25zdCBMPWw9PT0iZWxlbWVudHMtcHJvY2Vzc2VzIj92Omg7aWYoIUx8fEwubGVuZ3RoPT09MCl7ZSh7dGl0bGU6Ik5vIGRhdGEgdG8gZXhwb3J0IixkZXNjcmlwdGlvbjoiUGxlYXNlIGVuc3VyZSB0aGVyZSBpcyBkYXRhIHRvIGV4cG9ydCIsdmFyaWFudDoiZGVzdHJ1Y3RpdmUifSk7cmV0dXJufWQoITApO3RyeXtjb25zdHtqc1BERjpQfT1hd2FpdCBMMShhc3luYygpPT57Y29uc3R7anNQREY6aGV9PWF3YWl0IGltcG9ydCgiLi9qc3BkZi5lcy5taW4tQzhxTGZ2OVAuanMiKS50aGVuKEs9Pksuaik7cmV0dXJue2pzUERGOmhlfX0sW10pLGo9bmV3IFAsST1qLmludGVybmFsLnBhZ2VTaXplLmhlaWdodCxWPWouaW50ZXJuYWwucGFnZVNpemUud2lkdGgsTz0yNSxaPTI1LFE9MjUsQT0yNSxNPVYtKE8rWiksJD0oaGUsSyxhZSxvZSxMZSk9PntqLnNldEZvbnRTaXplKExlKTtjb25zdCBSZT1qLnNwbGl0VGV4dFRvU2l6ZShoZSxvZSk7Zm9yKGxldCBEZT0wO0RlPFJlLmxlbmd0aDtEZSsrKWlmKERlPT09UmUubGVuZ3RoLTEpai50ZXh0KFJlW0RlXSxLLGFlK0RlKihMZSouMzUpKTtlbHNle2NvbnN0IFN0PVJlW0RlXS5zcGxpdCgiICIpO2lmKFN0Lmxlbmd0aD4xKXtjb25zdCBGcz1qLmdldFRleHRXaWR0aChSZVtEZV0pLHpuPShvZS1GcykvKFN0Lmxlbmd0aC0xKTtsZXQgUHU9Sztmb3IobGV0IFZuPTA7Vm48U3QubGVuZ3RoO1ZuKyspai50ZXh0KFN0W1ZuXSxQdSxhZStEZSooTGUqLjM1KSksVm48U3QubGVuZ3RoLTEmJihQdSs9ai5nZXRUZXh0V2lkdGgoU3RbVm5dKStqLmdldFRleHRXaWR0aCgiICIpK3puKX1lbHNlIGoudGV4dChSZVtEZV0sSyxhZStEZSooTGUqLjM1KSl9cmV0dXJuIFJlLmxlbmd0aCooTGUqLjM1KX0sRD1oZT0+e1IraGU+SS1BJiYoai5hZGRQYWdlKCksUj1RLGouaW50ZXJuYWwuZ2V0TnVtYmVyT2ZQYWdlcygpPjEmJihqLnNldEZvbnRTaXplKDgpLGouc2V0Rm9udCgiaGVsdmV0aWNhIiwibm9ybWFsIiksai50ZXh0KCJXU00gT3BlcmF0aW9uYWwgRXhjZWxsZW5jZSBGcmFtZXdvcmsiLE8sMTUpLGoudGV4dChgUGFnZSAke2ouaW50ZXJuYWwuZ2V0TnVtYmVyT2ZQYWdlcygpfWAsVi1aLTE1LDE1KSxqLmxpbmUoTywxOCxWLVosMTgpLFI9USs1KSl9O2xldCBSPVE7ai5zZXRGb250KCJoZWx2ZXRpY2EiKSxSPTYwLGouc2V0Rm9udFNpemUoMjQpLGouc2V0Rm9udCgiaGVsdmV0aWNhIiwiYm9sZCIpLGoudGV4dCgiV1NNIE9wZXJhdGlvbmFsIEV4Y2VsbGVuY2UiLFYvMixSLHthbGlnbjoiY2VudGVyIn0pLFIrPTIwLGouc2V0Rm9udFNpemUoMjApLGouc2V0Rm9udCgiaGVsdmV0aWNhIiwibm9ybWFsIiksai50ZXh0KCJGcmFtZXdvcmsgRG9jdW1lbnRhdGlvbiIsVi8yLFIse2FsaWduOiJjZW50ZXIifSksUj0xNDAsai5zZXRGb250U2l6ZSgxOCksai5zZXRGb250KCJoZWx2ZXRpY2EiLCJib2xkIik7Y29uc3QgdHQ9bD09PSJlbGVtZW50cy1wcm9jZXNzZXMiPyJNaW5kIE1hcCBSZXBvcnQ6IEVsZW1lbnRzIHRvIFByb2Nlc3NlcyI6Ik1pbmQgTWFwIFJlcG9ydDogR29hbHMgdG8gUHJvY2Vzc2VzIixfdD1qLnNwbGl0VGV4dFRvU2l6ZSh0dCxNLTQwKTtmb3IobGV0IGhlPTA7aGU8X3QubGVuZ3RoO2hlKyspai50ZXh0KF90W2hlXSxWLzIsUitoZSoyNCx7YWxpZ246ImNlbnRlciJ9KTtSPTIwMCxqLnNldEZvbnRTaXplKDEyKSxqLnNldEZvbnQoImhlbHZldGljYSIsIm5vcm1hbCIpO2NvbnN0IHh0PW5ldyBEYXRlKCkudG9Mb2NhbGVEYXRlU3RyaW5nKCJlbi1VUyIse3llYXI6Im51bWVyaWMiLG1vbnRoOiJsb25nIixkYXk6Im51bWVyaWMifSk7aWYoai50ZXh0KGBHZW5lcmF0ZWQgb246ICR7eHR9YCxWLzIsUix7YWxpZ246ImNlbnRlciJ9KSxSKz0xNSxqLnRleHQoYFJlcG9ydCBUeXBlOiAke2w9PT0iZWxlbWVudHMtcHJvY2Vzc2VzIj8iRWxlbWVudHMgU3RydWN0dXJlIjoiU3RyYXRlZ2ljIEdvYWxzIEFsaWdubWVudCJ9YCxWLzIsUix7YWxpZ246ImNlbnRlciJ9KSxSPUktNDAsai5zZXRGb250U2l6ZSgxMCksai5zZXRGb250KCJoZWx2ZXRpY2EiLCJpdGFsaWMiKSxqLnRleHQoIlRoaXMgZG9jdW1lbnQgY29udGFpbnMgY29uZmlkZW50aWFsIGFuZCBwcm9wcmlldGFyeSBpbmZvcm1hdGlvbiIsVi8yLFIse2FsaWduOiJjZW50ZXIifSksai5hZGRQYWdlKCksUj1RLGouc2V0Rm9udFNpemUoMTYpLGouc2V0Rm9udCgiaGVsdmV0aWNhIiwiYm9sZCIpLGoudGV4dCgiVEFCTEUgT0YgQ09OVEVOVFMiLE8sUiksUis9MjAsai5zZXRGb250U2l6ZSgxMCksai5zZXRGb250KCJoZWx2ZXRpY2EiLCJub3JtYWwiKSxsPT09ImVsZW1lbnRzLXByb2Nlc3NlcyIpe2NvbnN0IGhlPVsuLi52fHxbXV0uc29ydCgoSyxhZSk9PksuZWxlbWVudE51bWJlci1hZS5lbGVtZW50TnVtYmVyKTtmb3IoY29uc3QgSyBvZiBoZSl7aWYoRCgxNSksai50ZXh0KGAke0suZWxlbWVudE51bWJlcn0uIE9FIEVsZW1lbnQ6ICR7Sy50aXRsZX1gLE8rMTAsUiksUis9MTIsSy5wcm9jZXNzZXMmJksucHJvY2Vzc2VzLmxlbmd0aD4wKXtjb25zdCBhZT1bLi4uSy5wcm9jZXNzZXNdLnNvcnQoKG9lLExlKT0+WHMob2UucHJvY2Vzc051bWJlcixMZS5wcm9jZXNzTnVtYmVyKSk7Zm9yKGNvbnN0IG9lIG9mIGFlLnNsaWNlKDAsMykpai50ZXh0KGAgICAgJHtvZS5wcm9jZXNzTnVtYmVyfTogJHtvZS5uYW1lfWAsTysyMCxSKSxSKz0xMDthZS5sZW5ndGg+MyYmKGoudGV4dChgICAgIC4uLiBhbmQgJHthZS5sZW5ndGgtM30gbW9yZSBwcm9jZXNzZXNgLE8rMjAsUiksUis9MTApfVIrPTV9fWVsc2V7Y29uc3QgaGU9KGh8fFtdKS5yZWR1Y2UoKEssYWUpPT57Y29uc3Qgb2U9YWUuY2F0ZWdvcnl8fCJPdGhlciI7cmV0dXJuIEtbb2VdfHwoS1tvZV09W10pLEtbb2VdLnB1c2goYWUpLEt9LHt9KTtmb3IoY29uc3RbSyxhZV1vZiBPYmplY3QuZW50cmllcyhoZSkpe0QoMTUpLGoudGV4dChgJHtLfSBTY29yZWNhcmRgLE8rMTAsUiksUis9MTI7Zm9yKGNvbnN0IG9lIG9mIGFlLnNsaWNlKDAsMikpai50ZXh0KGAgICAgJHtvZS50aXRsZX1gLE8rMjAsUiksUis9MTA7YWUubGVuZ3RoPjImJihqLnRleHQoYCAgICAuLi4gYW5kICR7YWUubGVuZ3RoLTJ9IG1vcmUgZ29hbHNgLE8rMjAsUiksUis9MTApLFIrPTV9fWlmKGouYWRkUGFnZSgpLFI9USxsPT09ImVsZW1lbnRzLXByb2Nlc3NlcyIpe2ouc2V0Rm9udFNpemUoMTgpLGouc2V0Rm9udCgiaGVsdmV0aWNhIiwiYm9sZCIpLGoudGV4dCgiT1BFUkFUSU9OQUwgRVhDRUxMRU5DRSBGUkFNRVdPUksiLE8sUiksai50ZXh0KCJFTEVNRU5UUyBUTyBQUk9DRVNTRVMgTUFQUElORyIsTyxSKzI1KSxSKz01MDtjb25zdCBoZT1bLi4udnx8W11dLnNvcnQoKEssYWUpPT5LLmVsZW1lbnROdW1iZXItYWUuZWxlbWVudE51bWJlcik7Zm9yKGNvbnN0IEsgb2YgaGUpe2lmKEQoNjApLGouc2V0RHJhd0NvbG9yKDAsMCwwKSxqLnNldExpbmVXaWR0aCguNSksai5saW5lKE8sUi01LFYtWixSLTUpLFIrPTUsai5zZXRGb250U2l6ZSgxNiksai5zZXRGb250KCJoZWx2ZXRpY2EiLCJib2xkIiksai50ZXh0KGBDSEFQVEVSICR7Sy5lbGVtZW50TnVtYmVyfWAsTyxSKSxSKz0yMCxqLnNldEZvbnRTaXplKDE0KSxqLnRleHQoYE9FIEVMRU1FTlQ6ICR7Sy50aXRsZS50b1VwcGVyQ2FzZSgpfWAsTyxSKSxSKz0yMCxLLmRlc2NyaXB0aW9uKXtqLnNldEZvbnRTaXplKDExKSxqLnNldEZvbnQoImhlbHZldGljYSIsIm5vcm1hbCIpO2NvbnN0IGFlPSQoSy5kZXNjcmlwdGlvbixPLFIsTSwxMSk7Uis9YWUrMTV9aWYoSy5wcm9jZXNzZXMmJksucHJvY2Vzc2VzLmxlbmd0aD4wKXtEKDMwKSxqLnNldEZvbnRTaXplKDEyKSxqLnNldEZvbnQoImhlbHZldGljYSIsImJvbGQiKSxqLnRleHQoIkFTU09DSUFURUQgUFJPQ0VTU0VTIixPLFIpLFIrPTE1O2NvbnN0IGFlPVsuLi5LLnByb2Nlc3Nlc10uc29ydCgob2UsTGUpPT5YcyhvZS5wcm9jZXNzTnVtYmVyLExlLnByb2Nlc3NOdW1iZXIpKTtmb3IoY29uc3Qgb2Ugb2YgYWUpe2lmKEQoNDApLGouc2V0Rm9udFNpemUoMTEpLGouc2V0Rm9udCgiaGVsdmV0aWNhIiwiYm9sZCIpLGoudGV4dChgJHtvZS5wcm9jZXNzTnVtYmVyfTogJHtvZS5uYW1lfWAsTysxNSxSKSxSKz0xMixvZS5kZXNjcmlwdGlvbil7ai5zZXRGb250U2l6ZSgxMCksai5zZXRGb250KCJoZWx2ZXRpY2EiLCJub3JtYWwiKTtjb25zdCBMZT0kKG9lLmRlc2NyaXB0aW9uLE8rMjAsUixNLTI1LDEwKTtSKz1MZSsxMH1pZihvZS5zdGVwcyYmb2Uuc3RlcHMubGVuZ3RoPjApe0QoMzApLGouc2V0Rm9udFNpemUoMTApLGouc2V0Rm9udCgiaGVsdmV0aWNhIiwiYm9sZCIpLGoudGV4dCgiUHJvY2VzcyBTdGVwczoiLE8rMjAsUiksUis9MTI7Y29uc3QgTGU9Wy4uLm9lLnN0ZXBzXS5zb3J0KChSZSxEZSk9Pntjb25zdCBTdD10eXBlb2YgUmUuc3RlcE51bWJlcj09InN0cmluZyI/UmUuc3RlcE51bWJlcjpTdHJpbmcoUmUuc3RlcE51bWJlciksRnM9dHlwZW9mIERlLnN0ZXBOdW1iZXI9PSJzdHJpbmciP0RlLnN0ZXBOdW1iZXI6U3RyaW5nKERlLnN0ZXBOdW1iZXIpO3JldHVybiBYcyhTdCxGcyl9KTtmb3IoY29uc3QgUmUgb2YgTGUpaWYoRCgyNSksai5zZXRGb250U2l6ZSg5KSxqLnNldEZvbnQoImhlbHZldGljYSIsImJvbGQiKSxqLnRleHQoYCR7UmUuc3RlcE51bWJlcn0uICR7UmUuc3RlcE5hbWV9YCxPKzMwLFIpLFIrPTEwLFJlLnN0ZXBEZXRhaWxzKXtqLnNldEZvbnRTaXplKDkpLGouc2V0Rm9udCgiaGVsdmV0aWNhIiwibm9ybWFsIik7Y29uc3QgRGU9JChSZS5zdGVwRGV0YWlscyxPKzM1LFIsTS00MCw5KTtSKz1EZSs4fX1SKz0xMH19Uis9MjB9fWVsc2V7ai5zZXRGb250U2l6ZSgxOCksai5zZXRGb250KCJoZWx2ZXRpY2EiLCJib2xkIiksai50ZXh0KCJTVFJBVEVHSUMgR09BTFMgRlJBTUVXT1JLIixPLFIpLGoudGV4dCgiR09BTFMgVE8gUFJPQ0VTU0VTIEFMSUdOTUVOVCIsTyxSKzI1KSxSKz01MDtjb25zdCBoZT0oaHx8W10pLnJlZHVjZSgoSyxhZSk9Pntjb25zdCBvZT1hZS5jYXRlZ29yeXx8Ik90aGVyIjtyZXR1cm4gS1tvZV18fChLW29lXT1bXSksS1tvZV0ucHVzaChhZSksS30se30pO2Zvcihjb25zdFtLLGFlXW9mIE9iamVjdC5lbnRyaWVzKGhlKSl7RCg2MCksai5zZXREcmF3Q29sb3IoMCwwLDApLGouc2V0TGluZVdpZHRoKC41KSxqLmxpbmUoTyxSLTUsVi1aLFItNSksUis9NSxqLnNldEZvbnRTaXplKDE2KSxqLnNldEZvbnQoImhlbHZldGljYSIsImJvbGQiKSxqLnRleHQoYCR7Sy50b1VwcGVyQ2FzZSgpfSBTQ09SRUNBUkRgLE8sUiksUis9MjU7Zm9yKGNvbnN0IG9lIG9mIGFlKXtpZihEKDUwKSxqLnNldEZvbnRTaXplKDE0KSxqLnNldEZvbnQoImhlbHZldGljYSIsImJvbGQiKSxqLnRleHQoYFNUUkFURUdJQyBHT0FMOiAke29lLnRpdGxlLnRvVXBwZXJDYXNlKCl9YCxPKzEwLFIpLFIrPTE4LG9lLmRlc2NyaXB0aW9uKXtqLnNldEZvbnRTaXplKDExKSxqLnNldEZvbnQoImhlbHZldGljYSIsIm5vcm1hbCIpO2NvbnN0IFJlPSQob2UuZGVzY3JpcHRpb24sTysxNSxSLE0tMjAsMTEpO1IrPVJlKzEyfWouc2V0Rm9udFNpemUoMTApLGouc2V0Rm9udCgiaGVsdmV0aWNhIiwiYm9sZCIpLGoudGV4dCgiUGVyZm9ybWFuY2UgTWV0cmljczoiLE8rMTUsUiksUis9MTAsai5zZXRGb250KCJoZWx2ZXRpY2EiLCJub3JtYWwiKSxqLnRleHQoYEN1cnJlbnQgUHJvZ3Jlc3M6ICR7b2UuY3VycmVudFZhbHVlfS8ke29lLnRhcmdldFZhbHVlfSAke29lLnVuaXR8fCIifWAsTysyMCxSKSxSKz04O2NvbnN0IExlPW9lLnRhcmdldFZhbHVlPjA/TWF0aC5yb3VuZChvZS5jdXJyZW50VmFsdWUvb2UudGFyZ2V0VmFsdWUqMTAwKTowO2lmKGoudGV4dChgQWNoaWV2ZW1lbnQgUmF0ZTogJHtMZX0lYCxPKzIwLFIpLFIrPTE1LG9lLnByb2Nlc3NlcyYmb2UucHJvY2Vzc2VzLmxlbmd0aD4wKXtqLnNldEZvbnRTaXplKDExKSxqLnNldEZvbnQoImhlbHZldGljYSIsImJvbGQiKSxqLnRleHQoIkxJTktFRCBPUEVSQVRJT05BTCBQUk9DRVNTRVMiLE8rMTUsUiksUis9MTU7Zm9yKGNvbnN0IFJlIG9mIG9lLnByb2Nlc3NlcylpZihEKDMwKSxqLnNldEZvbnRTaXplKDEwKSxqLnNldEZvbnQoImhlbHZldGljYSIsImJvbGQiKSxqLnRleHQoYOKGkiBQcm9jZXNzICR7UmUucHJvY2Vzc051bWJlcn06ICR7UmUubmFtZX1gLE8rMjUsUiksUis9MTIsUmUubWVhc3VyZXMmJlJlLm1lYXN1cmVzLmxlbmd0aD4wKXtqLnNldEZvbnRTaXplKDkpLGouc2V0Rm9udCgiaGVsdmV0aWNhIiwiYm9sZCIpLGoudGV4dCgiUGVyZm9ybWFuY2UgTWVhc3VyZXM6IixPKzMwLFIpLFIrPTEwO2Zvcihjb25zdCBEZSBvZiBSZS5tZWFzdXJlcylqLnNldEZvbnQoImhlbHZldGljYSIsIm5vcm1hbCIpLGoudGV4dChg4oCiICR7RGUubmFtZX1gLE8rMzUsUiksUis9OCxEZS5mb3JtdWxhJiYoai5zZXRGb250U2l6ZSg4KSxqLnNldEZvbnQoImhlbHZldGljYSIsIml0YWxpYyIpLGoudGV4dChgRm9ybXVsYTogJHtEZS5mb3JtdWxhfWAsTys0MCxSKSxSKz04KTtSKz01fX1SKz0xNX1SKz0yMH19ai5hZGRQYWdlKCksUj1RLGouc2V0Rm9udFNpemUoMTYpLGouc2V0Rm9udCgiaGVsdmV0aWNhIiwiYm9sZCIpLGoudGV4dCgiRE9DVU1FTlQgU1VNTUFSWSIsTyxSKSxSKz0yNSxqLnNldEZvbnRTaXplKDExKSxqLnNldEZvbnQoImhlbHZldGljYSIsIm5vcm1hbCIpO2NvbnN0IEllPSQobD09PSJlbGVtZW50cy1wcm9jZXNzZXMiP2BUaGlzIGRvY3VtZW50IHByb3ZpZGVzIGEgY29tcHJlaGVuc2l2ZSBvdmVydmlldyBvZiB0aGUgV1NNIE9wZXJhdGlvbmFsIEV4Y2VsbGVuY2UgRnJhbWV3b3JrLCBkZXRhaWxpbmcgdGhlIHJlbGF0aW9uc2hpcHMgYmV0d2VlbiB0aGUgOCBjb3JlIE9FIGVsZW1lbnRzIGFuZCB0aGVpciBhc3NvY2lhdGVkIG9wZXJhdGlvbmFsIHByb2Nlc3Nlcy4gRWFjaCBlbGVtZW50IGlzIHByZXNlbnRlZCB3aXRoIGl0cyBjb25zdGl0dWVudCBwcm9jZXNzZXMsIHN0ZXBzLCBhbmQgaW1wbGVtZW50YXRpb24gZ3VpZGVsaW5lcyB0byBlbnN1cmUgc3lzdGVtYXRpYyBvcGVyYXRpb25hbCBleGNlbGxlbmNlIGFjcm9zcyB0aGUgb3JnYW5pemF0aW9uLgoKVGhlIGZyYW1ld29yayBlbnN1cmVzIGFsaWdubWVudCBiZXR3ZWVuIHN0cmF0ZWdpYyBvYmplY3RpdmVzIGFuZCBvcGVyYXRpb25hbCBleGVjdXRpb24sIHByb3ZpZGluZyBjbGVhciBwYXRod2F5cyBmb3IgY29udGludW91cyBpbXByb3ZlbWVudCBhbmQgcGVyZm9ybWFuY2Ugb3B0aW1pemF0aW9uLiBUaGlzIHN0cnVjdHVyZWQgYXBwcm9hY2ggZW5hYmxlcyBvcmdhbml6YXRpb25zIHRvIG1haW50YWluIGhpZ2ggc3RhbmRhcmRzIG9mIG9wZXJhdGlvbmFsIGV4Y2VsbGVuY2Ugd2hpbGUgYWRhcHRpbmcgdG8gY2hhbmdpbmcgYnVzaW5lc3MgcmVxdWlyZW1lbnRzLgoKRm9yIHF1ZXN0aW9ucyBvciBjbGFyaWZpY2F0aW9ucyByZWdhcmRpbmcgdGhpcyBmcmFtZXdvcmssIHBsZWFzZSBjb250YWN0IHRoZSBPcGVyYXRpb25hbCBFeGNlbGxlbmNlIHRlYW0uYDpgVGhpcyBkb2N1bWVudCBwcmVzZW50cyB0aGUgc3RyYXRlZ2ljIGFsaWdubWVudCBiZXR3ZWVuIG9yZ2FuaXphdGlvbmFsIGdvYWxzIGFuZCBvcGVyYXRpb25hbCBwcm9jZXNzZXMgd2l0aGluIHRoZSBXU00gT3BlcmF0aW9uYWwgRXhjZWxsZW5jZSBGcmFtZXdvcmsuIFRoZSByZXBvcnQgZGVtb25zdHJhdGVzIGhvdyBzdHJhdGVnaWMgb2JqZWN0aXZlcyBhcmUgc3lzdGVtYXRpY2FsbHkgY29ubmVjdGVkIHRvIG9wZXJhdGlvbmFsIHByb2Nlc3NlcywgZW5zdXJpbmcgdGhhdCBldmVyeSBwcm9jZXNzIGNvbnRyaWJ1dGVzIG1lYW5pbmdmdWxseSB0byBhY2hpZXZpbmcgb3JnYW5pemF0aW9uYWwgZ29hbHMuCgpUaGUgc2NvcmVjYXJkIGFwcHJvYWNoIHByb3ZpZGVzIHZpc2liaWxpdHkgaW50byBwZXJmb3JtYW5jZSBtZXRyaWNzIGFuZCBhY2hpZXZlbWVudCByYXRlcywgZW5hYmxpbmcgZGF0YS1kcml2ZW4gZGVjaXNpb24gbWFraW5nIGFuZCBjb250aW51b3VzIGltcHJvdmVtZW50LiBFYWNoIGdvYWwgaXMgbGlua2VkIHRvIHNwZWNpZmljIHByb2Nlc3NlcyB3aXRoIG1lYXN1cmFibGUgb3V0Y29tZXMsIGNyZWF0aW5nIGFjY291bnRhYmlsaXR5IGFuZCB0cmFuc3BhcmVuY3kgaW4gb3JnYW5pemF0aW9uYWwgcGVyZm9ybWFuY2UuCgpUaGlzIGFsaWdubWVudCBlbnN1cmVzIHRoYXQgb3BlcmF0aW9uYWwgYWN0aXZpdGllcyBkaXJlY3RseSBzdXBwb3J0IHN0cmF0ZWdpYyBvYmplY3RpdmVzLCBtYXhpbWl6aW5nIG9yZ2FuaXphdGlvbmFsIGVmZmVjdGl2ZW5lc3MgYW5kIGNvbXBldGl0aXZlIGFkdmFudGFnZS5gLE8sUixNLDExKTtSKz1JZSsyMCxqLnNldEZvbnRTaXplKDkpLGouc2V0Rm9udCgiaGVsdmV0aWNhIiwiaXRhbGljIiksai50ZXh0KGBEb2N1bWVudCBnZW5lcmF0ZWQ6ICR7bmV3IERhdGUoKS50b0xvY2FsZVN0cmluZygpfWAsTyxSKSxSKz0xMCxqLnRleHQoYFRvdGFsIHBhZ2VzOiAke2ouaW50ZXJuYWwuZ2V0TnVtYmVyT2ZQYWdlcygpfWAsTyxSKSxqLnRleHQoYERvY3VtZW50IHR5cGU6ICR7bD09PSJlbGVtZW50cy1wcm9jZXNzZXMiPyJFbGVtZW50cy1Qcm9jZXNzZXMgTWFwcGluZyI6IkdvYWxzLVByb2Nlc3NlcyBBbGlnbm1lbnQifWAsTyxSKzEwKTtjb25zdCBvdD1sPT09ImVsZW1lbnRzLXByb2Nlc3NlcyI/IldTTS1PRS1GcmFtZXdvcmstRWxlbWVudHMtUHJvY2Vzc2VzLnBkZiI6IldTTS1PRS1GcmFtZXdvcmstR29hbHMtUHJvY2Vzc2VzLnBkZiI7ai5zYXZlKG90KSxlKHt0aXRsZToiRXhwb3J0IFN1Y2Nlc3NmdWwiLGRlc2NyaXB0aW9uOiJQcm9mZXNzaW9uYWwgUERGIHJlcG9ydCBnZW5lcmF0ZWQgc3VjY2Vzc2Z1bGx5In0pfWNhdGNoKFApe2NvbnNvbGUuZXJyb3IoIkVycm9yIGV4cG9ydGluZyBQREY6IixQKSxlKHt0aXRsZToiRXhwb3J0IEZhaWxlZCIsZGVzY3JpcHRpb246IkZhaWxlZCB0byBleHBvcnQgbWluZCBtYXAgdG8gUERGIix2YXJpYW50OiJkZXN0cnVjdGl2ZSJ9KX1maW5hbGx5e2QoITEpfX07cmV0dXJuIHJ8fG18fGc/aS5qc3hzKCJkaXYiLHtjbGFzc05hbWU6ImZsZXggbWluLWgtc2NyZWVuIGJnLWJhY2tncm91bmQiLGNoaWxkcmVuOltpLmpzeChGdCx7fSksaS5qc3hzKCJkaXYiLHtjbGFzc05hbWU6ImZsZXgtMSIsY2hpbGRyZW46W2kuanN4KEl0LHt9KSxpLmpzeCgiZGl2Iix7Y2xhc3NOYW1lOiJwLTYiLGNoaWxkcmVuOmkuanN4KCJkaXYiLHtjbGFzc05hbWU6ImZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktY2VudGVyIG1pbi1oLTk2IixjaGlsZHJlbjppLmpzeHMoImRpdiIse2NsYXNzTmFtZToidGV4dC1jZW50ZXIiLGNoaWxkcmVuOltpLmpzeChXZix7Y2xhc3NOYW1lOiJ3LTEyIGgtMTIgbXgtYXV0byBtYi00IGFuaW1hdGUtcHVsc2UgdGV4dC1tdXRlZC1mb3JlZ3JvdW5kIn0pLGkuanN4KCJwIix7Y2xhc3NOYW1lOiJ0ZXh0LW11dGVkLWZvcmVncm91bmQiLGNoaWxkcmVuOiJMb2FkaW5nIG1pbmQgbWFwLi4uIn0pXX0pfSl9KV19KV19KTppLmpzeHMoImRpdiIse2NsYXNzTmFtZToiZmxleCBtaW4taC1zY3JlZW4gYmctYmFja2dyb3VuZCIsY2hpbGRyZW46W2kuanN4KEZ0LHt9KSxpLmpzeHMoImRpdiIse2NsYXNzTmFtZToiZmxleC0xIixjaGlsZHJlbjpbaS5qc3goSXQse30pLGkuanN4cygiZGl2Iix7Y2xhc3NOYW1lOiJwLTYiLGNoaWxkcmVuOltpLmpzeCgiZGl2Iix7Y2xhc3NOYW1lOiJtYi02IixjaGlsZHJlbjppLmpzeCgiZGl2Iix7Y2xhc3NOYW1lOiJmbGV4IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWVuZCBtYi00IixjaGlsZHJlbjppLmpzeHMoImRpdiIse2NsYXNzTmFtZToiZmxleCBzcGFjZS14LTIiLGNoaWxkcmVuOltpLmpzeHMoImRpdiIse2NsYXNzTmFtZToiZmxleCBzcGFjZS14LTEgYm9yZGVyIHJvdW5kZWQtbGcgcC0xIixjaGlsZHJlbjpbaS5qc3hzKFkse29uQ2xpY2s6KCk9PmMoImVsZW1lbnRzLXByb2Nlc3NlcyIpLHZhcmlhbnQ6bD09PSJlbGVtZW50cy1wcm9jZXNzZXMiPyJkZWZhdWx0IjoiZ2hvc3QiLHNpemU6InNtIixjbGFzc05hbWU6ImgtOCIsImRhdGEtdGVzdGlkIjoidGFiLWVsZW1lbnRzLXByb2Nlc3NlcyIsY2hpbGRyZW46W2kuanN4KE5FLHtjbGFzc05hbWU6InctNCBoLTQgbXItMSJ9KSwiRWxlbWVudHMg4oaSIFByb2Nlc3NlcyJdfSksaS5qc3hzKFkse29uQ2xpY2s6KCk9PmMoImdvYWxzLXByb2Nlc3NlcyIpLHZhcmlhbnQ6bD09PSJnb2Fscy1wcm9jZXNzZXMiPyJkZWZhdWx0IjoiZ2hvc3QiLHNpemU6InNtIixjbGFzc05hbWU6ImgtOCIsImRhdGEtdGVzdGlkIjoidGFiLWdvYWxzLXByb2Nlc3NlcyIsY2hpbGRyZW46W2kuanN4KHVFLHtjbGFzc05hbWU6InctNCBoLTQgbXItMSJ9KSwiR29hbHMg4oaSIFByb2Nlc3NlcyJdfSldfSksbD09PSJlbGVtZW50cy1wcm9jZXNzZXMiJiZpLmpzeHMoImRpdiIse2NsYXNzTmFtZToiZmxleCBzcGFjZS14LTEgYm9yZGVyIHJvdW5kZWQtbGcgcC0xIixjaGlsZHJlbjpbaS5qc3hzKFkse29uQ2xpY2s6KCk9Pm8oImhpZXJhcmNoaWNhbCIpLHZhcmlhbnQ6YT09PSJoaWVyYXJjaGljYWwiPyJkZWZhdWx0IjoiZ2hvc3QiLHNpemU6InNtIixjbGFzc05hbWU6ImgtOCIsY2hpbGRyZW46W2kuanN4KGJFLHtjbGFzc05hbWU6InctNCBoLTQgbXItMSJ9KSwiVHJlZSJdfSksaS5qc3hzKFkse29uQ2xpY2s6KCk9Pm8oImdyaWQiKSx2YXJpYW50OmE9PT0iZ3JpZCI/ImRlZmF1bHQiOiJnaG9zdCIsc2l6ZToic20iLGNsYXNzTmFtZToiaC04IixjaGlsZHJlbjpbaS5qc3goSDAse2NsYXNzTmFtZToidy00IGgtNCBtci0xIn0pLCJHcmlkIl19KV19KSxpLmpzeChZLHtvbkNsaWNrOlMsdmFyaWFudDoib3V0bGluZSIsc2l6ZToic20iLGNoaWxkcmVuOiJFeHBhbmQgQWxsIn0pLGkuanN4KFkse29uQ2xpY2s6Xyx2YXJpYW50OiJvdXRsaW5lIixzaXplOiJzbSIsY2hpbGRyZW46IkNvbGxhcHNlIEFsbCJ9KSxpLmpzeHMoWSx7b25DbGljazprLHZhcmlhbnQ6Im91dGxpbmUiLHNpemU6InNtIixkaXNhYmxlZDp1fHxmLGNoaWxkcmVuOltpLmpzeChCMCx7Y2xhc3NOYW1lOiJ3LTQgaC00IG1yLTEifSksdT8iRXhwb3J0aW5nLi4uIjoiRXhwb3J0IFBERiJdfSldfSl9KX0pLGkuanN4cyhpZSx7ImRhdGEtdGVzdGlkIjoibWluZC1tYXAtY2FyZCIsY2hpbGRyZW46W2kuanN4KEVlLHtjaGlsZHJlbjppLmpzeChDZSx7Y2xhc3NOYW1lOiJmbGV4IGl0ZW1zLWNlbnRlciBzcGFjZS14LTIiLGNoaWxkcmVuOmw9PT0iZWxlbWVudHMtcHJvY2Vzc2VzIj9pLmpzeHMoaS5GcmFnbWVudCx7Y2hpbGRyZW46W2kuanN4KHZFLHtjbGFzc05hbWU6InctNSBoLTUifSksaS5qc3goInNwYW4iLHtjaGlsZHJlbjoiRWxlbWVudHMgdG8gUHJvY2Vzc2VzIE1pbmQgTWFwIn0pLGkuanN4cyhiZSx7dmFyaWFudDoic2Vjb25kYXJ5IixjaGlsZHJlbjpbKHY9PW51bGw/dm9pZCAwOnYubGVuZ3RoKXx8MCwiIEVsZW1lbnRzIl19KV19KTppLmpzeHMoaS5GcmFnbWVudCx7Y2hpbGRyZW46W2kuanN4KF9yLHtjbGFzc05hbWU6InctNSBoLTUifSksaS5qc3goInNwYW4iLHtjaGlsZHJlbjoiR29hbHMgdG8gUHJvY2Vzc2VzIE1pbmQgTWFwIn0pLGkuanN4cyhiZSx7dmFyaWFudDoic2Vjb25kYXJ5IixjaGlsZHJlbjpbKGg9PW51bGw/dm9pZCAwOmgubGVuZ3RoKXx8MCwiIFN0cmF0ZWdpYyBHb2FscyJdfSldfSl9KX0pLGkuanN4KGxlLHtjaGlsZHJlbjpsPT09ImVsZW1lbnRzLXByb2Nlc3NlcyI/diYmdi5sZW5ndGg+MD9pLmpzeHMoImRpdiIse2NsYXNzTmFtZToib3ZlcmZsb3cteC1hdXRvIHBiLTQiLCJkYXRhLW1pbmRtYXAtY29udGVudCI6ITAsY2hpbGRyZW46W2E9PT0iaGllcmFyY2hpY2FsIiYmaS5qc3goU1Ase2VsZW1lbnRzOnYsZXhwYW5kZWROb2RlczpuLHRvZ2dsZU5vZGU6Tn0pLGE9PT0iZ3JpZCImJmkuanN4KGtQLHtlbGVtZW50czp2LGV4cGFuZGVkTm9kZXM6bix0b2dnbGVOb2RlOk59KV19KTppLmpzeHMoImRpdiIse2NsYXNzTmFtZToidGV4dC1jZW50ZXIgcHktMTIiLGNoaWxkcmVuOltpLmpzeChXZix7Y2xhc3NOYW1lOiJ3LTE2IGgtMTYgbXgtYXV0byBtYi00IHRleHQtbXV0ZWQtZm9yZWdyb3VuZCBvcGFjaXR5LTUwIn0pLGkuanN4KCJoMyIse2NsYXNzTmFtZToidGV4dC1sZyBmb250LW1lZGl1bSB0ZXh0LWZvcmVncm91bmQgbWItMiIsY2hpbGRyZW46Ik5vIEVsZW1lbnRzIEF2YWlsYWJsZSJ9KSxpLmpzeCgicCIse2NsYXNzTmFtZToidGV4dC1tdXRlZC1mb3JlZ3JvdW5kIixjaGlsZHJlbjoiTm8gT0UgZWxlbWVudHMgZm91bmQuIENyZWF0ZSBlbGVtZW50cyBhbmQgcHJvY2Vzc2VzIHRvIHNlZSB0aGUgbWluZCBtYXAuIn0pXX0pOmgmJmgubGVuZ3RoPjA/aS5qc3goTlAse3JlZjp4LGdvYWxzOmh9KTppLmpzeHMoImRpdiIse2NsYXNzTmFtZToidGV4dC1jZW50ZXIgcHktMTIiLGNoaWxkcmVuOltpLmpzeChfcix7Y2xhc3NOYW1lOiJ3LTE2IGgtMTYgbXgtYXV0byBtYi00IHRleHQtbXV0ZWQtZm9yZWdyb3VuZCBvcGFjaXR5LTUwIn0pLGkuanN4KCJoMyIse2NsYXNzTmFtZToidGV4dC1sZyBmb250LW1lZGl1bSB0ZXh0LWZvcmVncm91bmQgbWItMiIsY2hpbGRyZW46Ik5vIFN0cmF0ZWdpYyBHb2FscyBBdmFpbGFibGUifSksaS5qc3goInAiLHtjbGFzc05hbWU6InRleHQtbXV0ZWQtZm9yZWdyb3VuZCIsY2hpbGRyZW46Ik5vIHN0cmF0ZWdpYyBnb2FscyB3aXRoIGxpbmtlZCBwcm9jZXNzZXMgZm91bmQuIENyZWF0ZSBnb2FscyBhbmQgbGluayB0aGVtIHRvIHByb2Nlc3NlcyB2aWEgcGVyZm9ybWFuY2UgbWVhc3VyZXMuIn0pXX0pfSldfSldfSldfSldfSl9dmFyIENQPSJMYWJlbCIsRDE9eS5mb3J3YXJkUmVmKChlLHQpPT5pLmpzeChrZS5sYWJlbCx7Li4uZSxyZWY6dCxvbk1vdXNlRG93bjpyPT57dmFyIHM7ci50YXJnZXQuY2xvc2VzdCgiYnV0dG9uLCBpbnB1dCwgc2VsZWN0LCB0ZXh0YXJlYSIpfHwoKHM9ZS5vbk1vdXNlRG93bik9PW51bGx8fHMuY2FsbChlLHIpLCFyLmRlZmF1bHRQcmV2ZW50ZWQmJnIuZGV0YWlsPjEmJnIucHJldmVudERlZmF1bHQoKSl9fSkpO0QxLmRpc3BsYXlOYW1lPUNQO3ZhciAkMT1EMTtjb25zdCBfUD1ndSgidGV4dC1zbSBmb250LW1lZGl1bSBsZWFkaW5nLW5vbmUgcGVlci1kaXNhYmxlZDpjdXJzb3Itbm90LWFsbG93ZWQgcGVlci1kaXNhYmxlZDpvcGFjaXR5LTcwIiksVmU9eS5mb3J3YXJkUmVmKCh7Y2xhc3NOYW1lOmUsLi4udH0scik9PmkuanN4KCQxLHtyZWY6cixjbGFzc05hbWU6TmUoX1AoKSxlKSwuLi50fSkpO1ZlLmRpc3BsYXlOYW1lPSQxLmRpc3BsYXlOYW1lO2NvbnN0IG5uPXkuZm9yd2FyZFJlZigoe2NsYXNzTmFtZTplLC4uLnR9LHIpPT5pLmpzeCgidGV4dGFyZWEiLHtjbGFzc05hbWU6TmUoImZsZXggbWluLWgtWzgwcHhdIHctZnVsbCByb3VuZGVkLW1kIGJvcmRlciBib3JkZXItaW5wdXQgYmctYmFja2dyb3VuZCBweC0zIHB5LTIgdGV4dC1iYXNlIHJpbmctb2Zmc2V0LWJhY2tncm91bmQgcGxhY2Vob2xkZXI6dGV4dC1tdXRlZC1mb3JlZ3JvdW5kIGZvY3VzLXZpc2libGU6b3V0bGluZS1ub25lIGZvY3VzLXZpc2libGU6cmluZy0yIGZvY3VzLXZpc2libGU6cmluZy1yaW5nIGZvY3VzLXZpc2libGU6cmluZy1vZmZzZXQtMiBkaXNhYmxlZDpjdXJzb3Itbm90LWFsbG93ZWQgZGlzYWJsZWQ6b3BhY2l0eS01MCBtZDp0ZXh0LXNtIixlKSxyZWY6ciwuLi50fSkpO25uLmRpc3BsYXlOYW1lPSJUZXh0YXJlYSI7ZnVuY3Rpb24gUFAoKXtjb25zdHt0b2FzdDplfT1obigpLHtpc0F1dGhlbnRpY2F0ZWQ6dCxpc0xvYWRpbmc6cn09V3IoKSxuPUNhKCksW3MsYV09eS51c2VTdGF0ZShudWxsKSxbbyxsXT15LnVzZVN0YXRlKHt9KSxbYyx1XT15LnVzZVN0YXRlKG51bGwpLFtkLGZdPXkudXNlU3RhdGUoe30pLFtwLHhdPXkudXNlU3RhdGUoe3RpdGxlOiIiLGRlc2NyaXB0aW9uOiIiLHRhcmdldFZhbHVlOjAsdW5pdDoiIixjYXRlZ29yeToiRmluYW5jaWFsIixwcmlvcml0eToiTWVkaXVtIn0pO3kudXNlRWZmZWN0KCgpPT57aWYoIXImJiF0KXtlKHt0aXRsZToiVW5hdXRob3JpemVkIixkZXNjcmlwdGlvbjoiWW91IGFyZSBsb2dnZWQgb3V0LiBMb2dnaW5nIGluIGFnYWluLi4uIix2YXJpYW50OiJkZXN0cnVjdGl2ZSJ9KSxzZXRUaW1lb3V0KCgpPT57d2luZG93LmxvY2F0aW9uLmhyZWY9Ii9hcGkvbG9naW4ifSw1MDApO3JldHVybn19LFt0LHIsZV0pO2NvbnN0e2RhdGE6dixpc0xvYWRpbmc6bSxlcnJvcjp3fT1idCh7cXVlcnlLZXk6WyIvYXBpL29lLWVsZW1lbnRzIl0sZW5hYmxlZDp0fSkse2RhdGE6aD1bXSxpc0xvYWRpbmc6Z309YnQoe3F1ZXJ5S2V5OlsiL2FwaS9zdHJhdGVnaWMtZ29hbHMiXSxlbmFibGVkOnR9KSx7ZGF0YTpiPVtdLGlzTG9hZGluZzpOfT1idCh7cXVlcnlLZXk6WyIvYXBpL3BlcmZvcm1hbmNlLW1ldHJpY3MiXSxlbmFibGVkOnR9KSx7ZGF0YTpTPVtdLGlzTG9hZGluZzpffT1idCh7cXVlcnlLZXk6WyIvYXBpL3Njb3JlY2FyZC9wZXJmb3JtYW5jZS1tZWFzdXJlcyJdLGVuYWJsZWQ6dH0pO3kudXNlRWZmZWN0KCgpPT57aWYodyl7aWYoSnQodykpe2Uoe3RpdGxlOiJVbmF1dGhvcml6ZWQiLGRlc2NyaXB0aW9uOiJZb3UgYXJlIGxvZ2dlZCBvdXQuIExvZ2dpbmcgaW4gYWdhaW4uLi4iLHZhcmlhbnQ6ImRlc3RydWN0aXZlIn0pLHNldFRpbWVvdXQoKCk9Pnt3aW5kb3cubG9jYXRpb24uaHJlZj0iL2FwaS9sb2dpbiJ9LDUwMCk7cmV0dXJufWUoe3RpdGxlOiJFcnJvciIsZGVzY3JpcHRpb246IkZhaWxlZCB0byBsb2FkIGJhbGFuY2VkIHNjb3JlY2FyZCBkYXRhIix2YXJpYW50OiJkZXN0cnVjdGl2ZSJ9KX19LFt3LGVdKTtjb25zdCBrPV9uKHttdXRhdGlvbkZuOmFzeW5jIEE9Pnthd2FpdCBzbigiL2FwaS9zdHJhdGVnaWMtZ29hbHMiLCJQT1NUIixBKX0sb25TdWNjZXNzOigpPT57bi5pbnZhbGlkYXRlUXVlcmllcyh7cXVlcnlLZXk6WyIvYXBpL3N0cmF0ZWdpYy1nb2FscyJdfSkseCh7dGl0bGU6IiIsZGVzY3JpcHRpb246IiIsdGFyZ2V0VmFsdWU6MCx1bml0OiIiLGNhdGVnb3J5OiJGaW5hbmNpYWwiLHByaW9yaXR5OiJNZWRpdW0ifSksZSh7dGl0bGU6IlN1Y2Nlc3MiLGRlc2NyaXB0aW9uOiJTdHJhdGVnaWMgZ29hbCBjcmVhdGVkIHN1Y2Nlc3NmdWxseSJ9KX0sb25FcnJvcjpBPT57ZSh7dGl0bGU6IkVycm9yIixkZXNjcmlwdGlvbjoiRmFpbGVkIHRvIGNyZWF0ZSBzdHJhdGVnaWMgZ29hbCIsdmFyaWFudDoiZGVzdHJ1Y3RpdmUifSl9fSksVD1fbih7bXV0YXRpb25Gbjphc3luYyh7aWQ6QSxkYXRhOk19KT0+e2F3YWl0IHNuKGAvYXBpL3N0cmF0ZWdpYy1nb2Fscy8ke0F9YCwiUFVUIixNKX0sb25TdWNjZXNzOigpPT57bi5pbnZhbGlkYXRlUXVlcmllcyh7cXVlcnlLZXk6WyIvYXBpL3N0cmF0ZWdpYy1nb2FscyJdfSksYShudWxsKSxsKHt9KSxlKHt0aXRsZToiU3VjY2VzcyIsZGVzY3JpcHRpb246IlN0cmF0ZWdpYyBnb2FsIHVwZGF0ZWQgc3VjY2Vzc2Z1bGx5In0pfSxvbkVycm9yOkE9PntlKHt0aXRsZToiRXJyb3IiLGRlc2NyaXB0aW9uOiJGYWlsZWQgdG8gdXBkYXRlIHN0cmF0ZWdpYyBnb2FsIix2YXJpYW50OiJkZXN0cnVjdGl2ZSJ9KX19KSxMPV9uKHttdXRhdGlvbkZuOmFzeW5jKHtpZDpBLGRhdGE6TX0pPT57YXdhaXQgc24oYC9hcGkvcGVyZm9ybWFuY2UtbWV0cmljcy8ke0F9YCwiUFVUIixNKX0sb25TdWNjZXNzOigpPT57bi5pbnZhbGlkYXRlUXVlcmllcyh7cXVlcnlLZXk6WyIvYXBpL3BlcmZvcm1hbmNlLW1ldHJpY3MiXX0pLHUobnVsbCksZih7fSksZSh7dGl0bGU6IlN1Y2Nlc3MiLGRlc2NyaXB0aW9uOiJQZXJmb3JtYW5jZSBtZXRyaWMgdXBkYXRlZCBzdWNjZXNzZnVsbHkifSl9LG9uRXJyb3I6QT0+e2Uoe3RpdGxlOiJFcnJvciIsZGVzY3JpcHRpb246IkZhaWxlZCB0byB1cGRhdGUgcGVyZm9ybWFuY2UgbWV0cmljIix2YXJpYW50OiJkZXN0cnVjdGl2ZSJ9KX19KSxQPV9uKHttdXRhdGlvbkZuOmFzeW5jIEE9Pnthd2FpdCBzbigiREVMRVRFIixgL2FwaS9zdHJhdGVnaWMtZ29hbHMvJHtBfWApfSxvblN1Y2Nlc3M6KCk9PntuLmludmFsaWRhdGVRdWVyaWVzKHtxdWVyeUtleTpbIi9hcGkvc3RyYXRlZ2ljLWdvYWxzIl19KSxlKHt0aXRsZToiU3VjY2VzcyIsZGVzY3JpcHRpb246IlN0cmF0ZWdpYyBnb2FsIGRlbGV0ZWQgc3VjY2Vzc2Z1bGx5In0pfSxvbkVycm9yOkE9PntlKHt0aXRsZToiRXJyb3IiLGRlc2NyaXB0aW9uOiJGYWlsZWQgdG8gZGVsZXRlIHN0cmF0ZWdpYyBnb2FsIix2YXJpYW50OiJkZXN0cnVjdGl2ZSJ9KX19KSxqPUE9Pntzd2l0Y2goQSl7Y2FzZSJ1cCI6cmV0dXJuIGkuanN4KFRvLHtjbGFzc05hbWU6InctNCBoLTQgdGV4dC1ncmVlbi02MDAifSk7Y2FzZSJkb3duIjpyZXR1cm4gaS5qc3goakUse2NsYXNzTmFtZToidy00IGgtNCB0ZXh0LXJlZC02MDAifSk7ZGVmYXVsdDpyZXR1cm4gaS5qc3gocEUse2NsYXNzTmFtZToidy00IGgtNCB0ZXh0LXllbGxvdy02MDAifSl9fSxJPUE9Pntzd2l0Y2goQSl7Y2FzZSJGaW5hbmNpYWwiOnJldHVybiJiZy1ncmVlbi0xMDAgdGV4dC1ncmVlbi04MDAgYm9yZGVyLWdyZWVuLTIwMCI7Y2FzZSJDdXN0b21lciI6cmV0dXJuImJnLWJsdWUtMTAwIHRleHQtYmx1ZS04MDAgYm9yZGVyLWJsdWUtMjAwIjtjYXNlIkludGVybmFsIFByb2Nlc3MiOnJldHVybiJiZy1vcmFuZ2UtMTAwIHRleHQtb3JhbmdlLTgwMCBib3JkZXItb3JhbmdlLTIwMCI7Y2FzZSJMZWFybmluZyAmIEdyb3d0aCI6cmV0dXJuImJnLXB1cnBsZS0xMDAgdGV4dC1wdXJwbGUtODAwIGJvcmRlci1wdXJwbGUtMjAwIjtkZWZhdWx0OnJldHVybiJiZy1ncmF5LTEwMCB0ZXh0LWdyYXktODAwIGJvcmRlci1ncmF5LTIwMCJ9fSxWPUE9PmguZmlsdGVyKE09Pk0uZWxlbWVudElkPT09QSksTz1BPT5iLmZpbHRlcihNPT5NLmVsZW1lbnRJZD09PUEpLFo9KEEsTSk9PlMuZmlsdGVyKCQ9PiQuZWxlbWVudElkPT09QSYmJC5zY29yZWNhcmRDYXRlZ29yeT09PU0pLFE9QT0+Uy5maWx0ZXIoTT0+TS5lbGVtZW50SWQ9PT1BKTtyZXR1cm4gcnx8bXx8Z3x8Tnx8Xz9pLmpzeCgiZGl2Iix7Y2xhc3NOYW1lOiJmbGV4IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWNlbnRlciBoLXNjcmVlbiIsY2hpbGRyZW46aS5qc3hzKCJkaXYiLHtjbGFzc05hbWU6InRleHQtY2VudGVyIixjaGlsZHJlbjpbaS5qc3goc3Ise2NsYXNzTmFtZToidy0xNiBoLTE2IG14LWF1dG8gbWItNCB0ZXh0LW11dGVkLWZvcmVncm91bmQgYW5pbWF0ZS1wdWxzZSJ9KSxpLmpzeCgicCIse2NsYXNzTmFtZToidGV4dC1sZyIsY2hpbGRyZW46IkxvYWRpbmcgYmFsYW5jZWQgc2NvcmVjYXJkLi4uIn0pXX0pfSk6aS5qc3hzKCJkaXYiLHtjbGFzc05hbWU6Im1pbi1oLXNjcmVlbiBmbGV4IGJnLWJhY2tncm91bmQiLGNoaWxkcmVuOltpLmpzeChGdCx7fSksaS5qc3hzKCJtYWluIix7Y2xhc3NOYW1lOiJmbGV4LTEgb3ZlcmZsb3ctYXV0byIsY2hpbGRyZW46W2kuanN4KEl0LHt9KSxpLmpzeHMoImRpdiIse2NsYXNzTmFtZToicC04IixjaGlsZHJlbjpbaS5qc3goImRpdiIse2NsYXNzTmFtZToibWItOCIsY2hpbGRyZW46aS5qc3hzKCJkaXYiLHtjbGFzc05hbWU6ImZsZXggaXRlbXMtY2VudGVyIHNwYWNlLXgtNCBtYi00IixjaGlsZHJlbjpbaS5qc3goImRpdiIse2NsYXNzTmFtZToidy0xMiBoLTEyIGJnLXByaW1hcnkgcm91bmRlZC1sZyBmbGV4IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWNlbnRlciIsY2hpbGRyZW46aS5qc3goc3Ise2NsYXNzTmFtZToidy02IGgtNiB0ZXh0LXByaW1hcnktZm9yZWdyb3VuZCJ9KX0pLGkuanN4cygiZGl2Iix7Y2hpbGRyZW46W2kuanN4KCJoMSIse2NsYXNzTmFtZToidGV4dC0zeGwgZm9udC1ib2xkIHRleHQtZm9yZWdyb3VuZCIsY2hpbGRyZW46IkJhbGFuY2VkIFNjb3JlY2FyZCJ9KSxpLmpzeCgicCIse2NsYXNzTmFtZToidGV4dC1tdXRlZC1mb3JlZ3JvdW5kIixjaGlsZHJlbjoiU3RyYXRlZ2ljIGdvYWxzIGFuZCBwZXJmb3JtYW5jZSBtZXRyaWNzIGZvciBvcGVyYXRpb25hbCBleGNlbGxlbmNlIn0pXX0pXX0pfSksaS5qc3goImRpdiIse2NsYXNzTmFtZToiZ3JpZCBncmlkLWNvbHMtMSBtZDpncmlkLWNvbHMtMiBsZzpncmlkLWNvbHMtNCBnYXAtNiBtYi04IixjaGlsZHJlbjpbIkZpbmFuY2lhbCIsIkN1c3RvbWVyIiwiSW50ZXJuYWwgUHJvY2VzcyIsIkxlYXJuaW5nICYgR3Jvd3RoIl0ubWFwKEE9Pntjb25zdCAkPVMuZmlsdGVyKEQ9PkQuc2NvcmVjYXJkQ2F0ZWdvcnk9PT1BKS5yZWR1Y2UoKEQsUik9Pntjb25zdCBmZT1gJHtSLmVsZW1lbnRJZH0tJHtSLnByb2Nlc3NJZH1gO3JldHVybiBELmluY2x1ZGVzKGZlKXx8RC5wdXNoKGZlKSxEfSxbXSkubGVuZ3RoO3JldHVybiBpLmpzeHMoaWUse2NsYXNzTmFtZToiYm9yZGVyLTIiLGNoaWxkcmVuOltpLmpzeHMoRWUse2NsYXNzTmFtZToicGItMyIsY2hpbGRyZW46W2kuanN4KENlLHtjbGFzc05hbWU6InRleHQtbGciLGNoaWxkcmVuOkF9KSxpLmpzeChYcix7Y2hpbGRyZW46IlBlcmZvcm1hbmNlIE92ZXJ2aWV3In0pXX0pLGkuanN4KGxlLHtjaGlsZHJlbjppLmpzeHMoImRpdiIse2NsYXNzTmFtZToidGV4dC1jZW50ZXIiLGNoaWxkcmVuOltpLmpzeCgic3BhbiIse2NsYXNzTmFtZToidGV4dC0yeGwgZm9udC1ib2xkIHRleHQtZm9yZWdyb3VuZCIsY2hpbGRyZW46JH0pLGkuanN4KCJkaXYiLHtjbGFzc05hbWU6InRleHQtc20gdGV4dC1tdXRlZC1mb3JlZ3JvdW5kIixjaGlsZHJlbjokPT09MT8iUHJvY2VzcyI6IlByb2Nlc3NlcyJ9KV19KX0pXX0sQSl9KX0pLGkuanN4cygiZGl2Iix7Y2xhc3NOYW1lOiJtYi04IixjaGlsZHJlbjpbaS5qc3hzKCJkaXYiLHtjbGFzc05hbWU6ImZsZXggaXRlbXMtY2VudGVyIHNwYWNlLXgtNCBtYi02IixjaGlsZHJlbjpbaS5qc3goImRpdiIse2NsYXNzTmFtZToidy04IGgtOCBiZy1ibHVlLTEwMCByb3VuZGVkLWxnIGZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktY2VudGVyIixjaGlsZHJlbjppLmpzeChfcix7Y2xhc3NOYW1lOiJ3LTQgaC00IHRleHQtYmx1ZS02MDAifSl9KSxpLmpzeHMoImRpdiIse2NoaWxkcmVuOltpLmpzeCgiaDIiLHtjbGFzc05hbWU6InRleHQtMnhsIGZvbnQtYm9sZCB0ZXh0LWZvcmVncm91bmQiLGNoaWxkcmVuOiJTdHJhdGVnaWMgR29hbHMifSksaS5qc3goInAiLHtjbGFzc05hbWU6InRleHQtbXV0ZWQtZm9yZWdyb3VuZCIsY2hpbGRyZW46IkdvYWxzIGFjcm9zcyBhbGwgT0UgZWxlbWVudHMgd2l0aCBlbGVtZW50IGFuZCBzY29yZWNhcmQgcmVsYXRpb25zaGlwcyJ9KV19KV19KSxoLmxlbmd0aD4wP2kuanN4KCJkaXYiLHtjbGFzc05hbWU6ImdyaWQgZ3JpZC1jb2xzLTEgbWQ6Z3JpZC1jb2xzLTIgbGc6Z3JpZC1jb2xzLTMgZ2FwLTYiLGNoaWxkcmVuOmgubWFwKEE9Pntjb25zdCBNPXY9PW51bGw/dm9pZCAwOnYuZmluZCgkPT4kLmlkPT09QS5lbGVtZW50SWQpO3JldHVybiBpLmpzeChpZSx7Y2xhc3NOYW1lOiJib3JkZXItMiIsY2hpbGRyZW46aS5qc3gobGUse2NsYXNzTmFtZToicC02IixjaGlsZHJlbjpzPT09QS5pZD9pLmpzeHMoImRpdiIse2NsYXNzTmFtZToic3BhY2UteS00IixjaGlsZHJlbjpbaS5qc3hzKCJkaXYiLHtjaGlsZHJlbjpbaS5qc3goVmUse2h0bWxGb3I6YGdvYWwtdGl0bGUtJHtBLmlkfWAsY2hpbGRyZW46IlRpdGxlIn0pLGkuanN4KHplLHtpZDpgZ29hbC10aXRsZS0ke0EuaWR9YCx2YWx1ZTpvLnRpdGxlfHxBLnRpdGxlLG9uQ2hhbmdlOiQ9Pmwoey4uLm8sdGl0bGU6JC50YXJnZXQudmFsdWV9KSwiZGF0YS10ZXN0aWQiOmBpbnB1dC1nb2FsLXRpdGxlLSR7QS5pZH1gfSldfSksaS5qc3hzKCJkaXYiLHtjaGlsZHJlbjpbaS5qc3goVmUse2h0bWxGb3I6YGdvYWwtZWxlbWVudC0ke0EuaWR9YCxjaGlsZHJlbjoiT0UgRWxlbWVudCJ9KSxpLmpzeCgic2VsZWN0Iix7aWQ6YGdvYWwtZWxlbWVudC0ke0EuaWR9YCx2YWx1ZTpvLmVsZW1lbnRJZHx8QS5lbGVtZW50SWQsb25DaGFuZ2U6JD0+bCh7Li4ubyxlbGVtZW50SWQ6JC50YXJnZXQudmFsdWV9KSxjbGFzc05hbWU6InctZnVsbCBwLTIgYm9yZGVyIHJvdW5kZWQtbWQiLCJkYXRhLXRlc3RpZCI6YHNlbGVjdC1nb2FsLWVsZW1lbnQtJHtBLmlkfWAsY2hpbGRyZW46dj09bnVsbD92b2lkIDA6di5tYXAoJD0+aS5qc3hzKCJvcHRpb24iLHt2YWx1ZTokLmlkLGNoaWxkcmVuOlsiT0UgIiwkLmVsZW1lbnROdW1iZXIsIjogIiwkLnRpdGxlXX0sJC5pZCkpfSldfSksaS5qc3hzKCJkaXYiLHtjaGlsZHJlbjpbaS5qc3goVmUse2h0bWxGb3I6YGdvYWwtY2F0ZWdvcnktJHtBLmlkfWAsY2hpbGRyZW46IlNjb3JlY2FyZCBDYXRlZ29yeSJ9KSxpLmpzeHMoInNlbGVjdCIse2lkOmBnb2FsLWNhdGVnb3J5LSR7QS5pZH1gLHZhbHVlOm8uY2F0ZWdvcnl8fEEuY2F0ZWdvcnksb25DaGFuZ2U6JD0+bCh7Li4ubyxjYXRlZ29yeTokLnRhcmdldC52YWx1ZX0pLGNsYXNzTmFtZToidy1mdWxsIHAtMiBib3JkZXIgcm91bmRlZC1tZCIsImRhdGEtdGVzdGlkIjpgc2VsZWN0LWdvYWwtY2F0ZWdvcnktJHtBLmlkfWAsY2hpbGRyZW46W2kuanN4KCJvcHRpb24iLHt2YWx1ZToiRmluYW5jaWFsIixjaGlsZHJlbjoiRmluYW5jaWFsIn0pLGkuanN4KCJvcHRpb24iLHt2YWx1ZToiQ3VzdG9tZXIiLGNoaWxkcmVuOiJDdXN0b21lciJ9KSxpLmpzeCgib3B0aW9uIix7dmFsdWU6IkludGVybmFsIFByb2Nlc3MiLGNoaWxkcmVuOiJJbnRlcm5hbCBQcm9jZXNzIn0pLGkuanN4KCJvcHRpb24iLHt2YWx1ZToiTGVhcm5pbmcgJiBHcm93dGgiLGNoaWxkcmVuOiJMZWFybmluZyAmIEdyb3d0aCJ9KV19KV19KSxpLmpzeHMoImRpdiIse2NoaWxkcmVuOltpLmpzeChWZSx7aHRtbEZvcjpgZ29hbC1kZXNjcmlwdGlvbi0ke0EuaWR9YCxjaGlsZHJlbjoiRGVzY3JpcHRpb24ifSksaS5qc3gobm4se2lkOmBnb2FsLWRlc2NyaXB0aW9uLSR7QS5pZH1gLHZhbHVlOm8uZGVzY3JpcHRpb258fEEuZGVzY3JpcHRpb24sb25DaGFuZ2U6JD0+bCh7Li4ubyxkZXNjcmlwdGlvbjokLnRhcmdldC52YWx1ZX0pLGNsYXNzTmFtZToibWluLWgtWzYwcHhdIiwiZGF0YS10ZXN0aWQiOmB0ZXh0YXJlYS1nb2FsLWRlc2NyaXB0aW9uLSR7QS5pZH1gfSldfSksaS5qc3hzKCJkaXYiLHtjbGFzc05hbWU6ImdyaWQgZ3JpZC1jb2xzLTIgZ2FwLTQiLGNoaWxkcmVuOltpLmpzeHMoImRpdiIse2NoaWxkcmVuOltpLmpzeChWZSx7aHRtbEZvcjpgZ29hbC1jdXJyZW50LSR7QS5pZH1gLGNoaWxkcmVuOiJDdXJyZW50IFZhbHVlIn0pLGkuanN4KHplLHtpZDpgZ29hbC1jdXJyZW50LSR7QS5pZH1gLHR5cGU6Im51bWJlciIsdmFsdWU6by5jdXJyZW50VmFsdWU/P0EuY3VycmVudFZhbHVlLG9uQ2hhbmdlOiQ9Pmwoey4uLm8sY3VycmVudFZhbHVlOnBhcnNlRmxvYXQoJC50YXJnZXQudmFsdWUpfHwwfSksImRhdGEtdGVzdGlkIjpgaW5wdXQtZ29hbC1jdXJyZW50LSR7QS5pZH1gfSldfSksaS5qc3hzKCJkaXYiLHtjaGlsZHJlbjpbaS5qc3goVmUse2h0bWxGb3I6YGdvYWwtdGFyZ2V0LSR7QS5pZH1gLGNoaWxkcmVuOiJUYXJnZXQgVmFsdWUifSksaS5qc3goemUse2lkOmBnb2FsLXRhcmdldC0ke0EuaWR9YCx0eXBlOiJudW1iZXIiLHZhbHVlOm8udGFyZ2V0VmFsdWU/P0EudGFyZ2V0VmFsdWUsb25DaGFuZ2U6JD0+bCh7Li4ubyx0YXJnZXRWYWx1ZTpwYXJzZUZsb2F0KCQudGFyZ2V0LnZhbHVlKXx8MH0pLCJkYXRhLXRlc3RpZCI6YGlucHV0LWdvYWwtdGFyZ2V0LSR7QS5pZH1gfSldfSldfSksaS5qc3hzKCJkaXYiLHtjbGFzc05hbWU6ImdyaWQgZ3JpZC1jb2xzLTIgZ2FwLTQiLGNoaWxkcmVuOltpLmpzeHMoImRpdiIse2NoaWxkcmVuOltpLmpzeChWZSx7aHRtbEZvcjpgZ29hbC11bml0LSR7QS5pZH1gLGNoaWxkcmVuOiJVbml0In0pLGkuanN4KHplLHtpZDpgZ29hbC11bml0LSR7QS5pZH1gLHZhbHVlOm8udW5pdHx8QS51bml0LG9uQ2hhbmdlOiQ9Pmwoey4uLm8sdW5pdDokLnRhcmdldC52YWx1ZX0pLCJkYXRhLXRlc3RpZCI6YGlucHV0LWdvYWwtdW5pdC0ke0EuaWR9YH0pXX0pLGkuanN4cygiZGl2Iix7Y2hpbGRyZW46W2kuanN4KFZlLHtodG1sRm9yOmBnb2FsLXByaW9yaXR5LSR7QS5pZH1gLGNoaWxkcmVuOiJQcmlvcml0eSJ9KSxpLmpzeHMoInNlbGVjdCIse2lkOmBnb2FsLXByaW9yaXR5LSR7QS5pZH1gLHZhbHVlOm8ucHJpb3JpdHl8fEEucHJpb3JpdHksb25DaGFuZ2U6JD0+bCh7Li4ubyxwcmlvcml0eTokLnRhcmdldC52YWx1ZX0pLGNsYXNzTmFtZToidy1mdWxsIHAtMiBib3JkZXIgcm91bmRlZC1tZCIsImRhdGEtdGVzdGlkIjpgc2VsZWN0LWdvYWwtcHJpb3JpdHktJHtBLmlkfWAsY2hpbGRyZW46W2kuanN4KCJvcHRpb24iLHt2YWx1ZToiSGlnaCIsY2hpbGRyZW46IkhpZ2gifSksaS5qc3goIm9wdGlvbiIse3ZhbHVlOiJNZWRpdW0iLGNoaWxkcmVuOiJNZWRpdW0ifSksaS5qc3goIm9wdGlvbiIse3ZhbHVlOiJMb3ciLGNoaWxkcmVuOiJMb3cifSldfSldfSldfSksaS5qc3hzKCJkaXYiLHtjbGFzc05hbWU6ImZsZXgganVzdGlmeS1lbmQgc3BhY2UteC0yIixjaGlsZHJlbjpbaS5qc3goWSx7dmFyaWFudDoib3V0bGluZSIsc2l6ZToic20iLG9uQ2xpY2s6KCk9PnthKG51bGwpLGwoe30pfSwiZGF0YS10ZXN0aWQiOmBidXR0b24tY2FuY2VsLWdvYWwtJHtBLmlkfWAsY2hpbGRyZW46IkNhbmNlbCJ9KSxpLmpzeChZLHtzaXplOiJzbSIsb25DbGljazooKT0+e1QubXV0YXRlKHtpZDpBLmlkLGRhdGE6b30pfSxkaXNhYmxlZDpULmlzUGVuZGluZywiZGF0YS10ZXN0aWQiOmBidXR0b24tc2F2ZS1nb2FsLSR7QS5pZH1gLGNoaWxkcmVuOlQuaXNQZW5kaW5nPyJTYXZpbmcuLi4iOiJTYXZlIn0pXX0pXX0pOmkuanN4cygiZGl2Iix7Y2hpbGRyZW46W2kuanN4cygiZGl2Iix7Y2xhc3NOYW1lOiJmbGV4IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWJldHdlZW4gbWItMyIsY2hpbGRyZW46W2kuanN4KCJoNCIse2NsYXNzTmFtZToiZm9udC1zZW1pYm9sZCB0ZXh0LWxnIixjaGlsZHJlbjpBLnRpdGxlfSksaS5qc3hzKCJkaXYiLHtjbGFzc05hbWU6ImZsZXggc3BhY2UteC0xIixjaGlsZHJlbjpbaS5qc3goWSx7dmFyaWFudDoiZ2hvc3QiLHNpemU6InNtIixvbkNsaWNrOigpPT57YShBLmlkKSxsKHt9KX0sImRhdGEtdGVzdGlkIjpgYnV0dG9uLWVkaXQtZ29hbC0ke0EuaWR9YCxjaGlsZHJlbjppLmpzeChnYSx7Y2xhc3NOYW1lOiJ3LTQgaC00In0pfSksaS5qc3goWSx7dmFyaWFudDoiZ2hvc3QiLHNpemU6InNtIixvbkNsaWNrOigpPT57Y29uZmlybSgiQXJlIHlvdSBzdXJlIHlvdSB3YW50IHRvIGRlbGV0ZSB0aGlzIHN0cmF0ZWdpYyBnb2FsPyIpJiZQLm11dGF0ZShBLmlkKX0sZGlzYWJsZWQ6UC5pc1BlbmRpbmcsImRhdGEtdGVzdGlkIjpgYnV0dG9uLWRlbGV0ZS1nb2FsLSR7QS5pZH1gLGNoaWxkcmVuOmkuanN4KFJjLHtjbGFzc05hbWU6InctNCBoLTQgdGV4dC1yZWQtNTAwIn0pfSldfSldfSksaS5qc3hzKCJkaXYiLHtjbGFzc05hbWU6ImZsZXggZmxleC13cmFwIGdhcC0yIG1iLTMiLGNoaWxkcmVuOltpLmpzeHMoYmUse3ZhcmlhbnQ6Im91dGxpbmUiLGNsYXNzTmFtZToidGV4dC14cyIsY2hpbGRyZW46WyJPRSAiLE09PW51bGw/dm9pZCAwOk0uZWxlbWVudE51bWJlciwiOiAiLE09PW51bGw/dm9pZCAwOk0udGl0bGVdfSksaS5qc3goYmUse2NsYXNzTmFtZTpJKEEuY2F0ZWdvcnkpLGNoaWxkcmVuOkEuY2F0ZWdvcnl9KSxpLmpzeChiZSx7dmFyaWFudDpBLnByaW9yaXR5PT09IkhpZ2giPyJkZXN0cnVjdGl2ZSI6QS5wcmlvcml0eT09PSJNZWRpdW0iPyJkZWZhdWx0Ijoic2Vjb25kYXJ5IixjaGlsZHJlbjpBLnByaW9yaXR5fSldfSksaS5qc3goInAiLHtjbGFzc05hbWU6InRleHQtc20gdGV4dC1tdXRlZC1mb3JlZ3JvdW5kIG1iLTQiLGNoaWxkcmVuOkEuZGVzY3JpcHRpb259KSxpLmpzeHMoImRpdiIse2NsYXNzTmFtZToiZ3JpZCBncmlkLWNvbHMtMiBnYXAtNCB0ZXh0LXNtIG1iLTQiLGNoaWxkcmVuOltpLmpzeHMoImRpdiIse2NoaWxkcmVuOltpLmpzeCgic3BhbiIse2NsYXNzTmFtZToidGV4dC1tdXRlZC1mb3JlZ3JvdW5kIixjaGlsZHJlbjoiQ3VycmVudDogIn0pLGkuanN4cygic3BhbiIse2NsYXNzTmFtZToiZm9udC1tZWRpdW0iLGNoaWxkcmVuOltBLmN1cnJlbnRWYWx1ZSxBLnVuaXRdfSldfSksaS5qc3hzKCJkaXYiLHtjaGlsZHJlbjpbaS5qc3goInNwYW4iLHtjbGFzc05hbWU6InRleHQtbXV0ZWQtZm9yZWdyb3VuZCIsY2hpbGRyZW46IlRhcmdldDogIn0pLGkuanN4cygic3BhbiIse2NsYXNzTmFtZToiZm9udC1tZWRpdW0iLGNoaWxkcmVuOltBLnRhcmdldFZhbHVlLEEudW5pdF19KV19KV19KSwoKCk9Pntjb25zdCAkPVMuZmlsdGVyKEQ9PkQuc2NvcmVjYXJkQ2F0ZWdvcnk9PT1BLmNhdGVnb3J5JiZELmVsZW1lbnRJZD09PUEuZWxlbWVudElkKTtyZXR1cm4gJC5sZW5ndGg+MD9pLmpzeHMoImRpdiIse2NsYXNzTmFtZToibXQtNCBwdC00IGJvcmRlci10IixjaGlsZHJlbjpbaS5qc3goImg1Iix7Y2xhc3NOYW1lOiJ0ZXh0LXNtIGZvbnQtbWVkaXVtIHRleHQtbXV0ZWQtZm9yZWdyb3VuZCBtYi0yIixjaGlsZHJlbjoiUmVsYXRlZCBQZXJmb3JtYW5jZSBNZWFzdXJlcyJ9KSxpLmpzeCgiZGl2Iix7Y2xhc3NOYW1lOiJzcGFjZS15LTIiLGNoaWxkcmVuOiQubWFwKEQ9PmkuanN4cygiZGl2Iix7Y2xhc3NOYW1lOiJ0ZXh0LXhzIGJnLW11dGVkLzMwIHJvdW5kZWQgcC0yIixjaGlsZHJlbjpbaS5qc3hzKCJkaXYiLHtjbGFzc05hbWU6ImZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktYmV0d2VlbiBtYi0xIixjaGlsZHJlbjpbaS5qc3goInNwYW4iLHtjbGFzc05hbWU6ImZvbnQtbWVkaXVtIixjaGlsZHJlbjpELm1lYXN1cmVOYW1lfSksaS5qc3hzKGJlLHt2YXJpYW50OiJvdXRsaW5lIixjbGFzc05hbWU6InRleHQteHMiLGNoaWxkcmVuOlsiUHJvY2VzcyAiLEQucHJvY2Vzc051bWJlcl19KV19KSxpLmpzeHMoImRpdiIse2NsYXNzTmFtZToidGV4dC1tdXRlZC1mb3JlZ3JvdW5kIixjaGlsZHJlbjpbaS5qc3goInNwYW4iLHtjaGlsZHJlbjpELnByb2Nlc3NOYW1lfSksRC50YXJnZXQmJmkuanN4cygic3BhbiIse2NsYXNzTmFtZToibWwtMiIsY2hpbGRyZW46WyLigKIgVGFyZ2V0OiAiLEQudGFyZ2V0XX0pXX0pLGkuanN4cygiZGl2Iix7Y2xhc3NOYW1lOiJ0ZXh0LW11dGVkLWZvcmVncm91bmQiLGNoaWxkcmVuOlsiU2NvcmVjYXJkOiAiLEQuc2NvcmVjYXJkQ2F0ZWdvcnldfSldfSxELmlkKSl9KV19KTpudWxsfSkoKV19KX0pfSxBLmlkKX0pfSk6aS5qc3goaWUse2NsYXNzTmFtZToiYm9yZGVyLWRhc2hlZCBib3JkZXItMiIsY2hpbGRyZW46aS5qc3hzKGxlLHtjbGFzc05hbWU6InAtOCB0ZXh0LWNlbnRlciIsY2hpbGRyZW46W2kuanN4KF9yLHtjbGFzc05hbWU6InctMTIgaC0xMiBteC1hdXRvIG1iLTQgdGV4dC1tdXRlZC1mb3JlZ3JvdW5kIn0pLGkuanN4KCJoNCIse2NsYXNzTmFtZToidGV4dC1sZyBmb250LW1lZGl1bSBtYi0yIixjaGlsZHJlbjoiTm8gU3RyYXRlZ2ljIEdvYWxzIn0pLGkuanN4KCJwIix7Y2xhc3NOYW1lOiJ0ZXh0LW11dGVkLWZvcmVncm91bmQgbWItNCIsY2hpbGRyZW46IkFkZCBzdHJhdGVnaWMgZ29hbHMgdG8gdHJhY2sgcGVyZm9ybWFuY2UgYWNyb3NzIHlvdXIgT0UgZWxlbWVudHMuIn0pXX0pfSldfSksaS5qc3goImRpdiIse2NsYXNzTmFtZToic3BhY2UteS04IixjaGlsZHJlbjp2PT1udWxsP3ZvaWQgMDp2Lm1hcChBPT57VihBLmlkKTtjb25zdCBNPU8oQS5pZCksJD1RKEEuaWQpO3JldHVybiBpLmpzeHMoaWUse2NsYXNzTmFtZToiYm9yZGVyLTIiLGNoaWxkcmVuOltpLmpzeHMoRWUse2NoaWxkcmVuOltpLmpzeHMoQ2Use2NsYXNzTmFtZToidGV4dC14bCIsY2hpbGRyZW46WyJPRSBFbGVtZW50ICIsQS5lbGVtZW50TnVtYmVyLCI6ICIsQS50aXRsZV19KSxpLmpzeChYcix7Y2hpbGRyZW46QS5kZXNjcmlwdGlvbn0pXX0pLGkuanN4cyhsZSx7Y2xhc3NOYW1lOiJzcGFjZS15LTYiLGNoaWxkcmVuOltNLmxlbmd0aD4wJiZpLmpzeHMoImRpdiIse2NoaWxkcmVuOltpLmpzeHMoImgzIix7Y2xhc3NOYW1lOiJ0ZXh0LWxnIGZvbnQtc2VtaWJvbGQgbWItNCBmbGV4IGl0ZW1zLWNlbnRlciIsY2hpbGRyZW46W2kuanN4KFRvLHtjbGFzc05hbWU6InctNSBoLTUgbXItMiJ9KSwiUGVyZm9ybWFuY2UgTWV0cmljcyJdfSksaS5qc3goImRpdiIse2NsYXNzTmFtZToiZ3JpZCBncmlkLWNvbHMtMSBtZDpncmlkLWNvbHMtMiBsZzpncmlkLWNvbHMtMyBnYXAtNCIsY2hpbGRyZW46TS5tYXAoRD0+aS5qc3goaWUse2NsYXNzTmFtZToiYm9yZGVyIixjaGlsZHJlbjppLmpzeChsZSx7Y2xhc3NOYW1lOiJwLTQiLGNoaWxkcmVuOmM9PT1ELmlkP2kuanN4cygiZGl2Iix7Y2xhc3NOYW1lOiJzcGFjZS15LTMiLGNoaWxkcmVuOltpLmpzeHMoImRpdiIse2NoaWxkcmVuOltpLmpzeChWZSx7aHRtbEZvcjpgbWV0cmljLW5hbWUtJHtELmlkfWAsY2hpbGRyZW46Ik1ldHJpYyBOYW1lIn0pLGkuanN4KHplLHtpZDpgbWV0cmljLW5hbWUtJHtELmlkfWAsdmFsdWU6ZC5tZXRyaWNOYW1lfHxELm1ldHJpY05hbWUsb25DaGFuZ2U6Uj0+Zih7Li4uZCxtZXRyaWNOYW1lOlIudGFyZ2V0LnZhbHVlfSksImRhdGEtdGVzdGlkIjpgaW5wdXQtbWV0cmljLW5hbWUtJHtELmlkfWB9KV19KSxpLmpzeHMoImRpdiIse2NsYXNzTmFtZToiZ3JpZCBncmlkLWNvbHMtMiBnYXAtMiIsY2hpbGRyZW46W2kuanN4cygiZGl2Iix7Y2hpbGRyZW46W2kuanN4KFZlLHtodG1sRm9yOmBjdXJyZW50LXZhbHVlLSR7RC5pZH1gLGNoaWxkcmVuOiJDdXJyZW50IFZhbHVlIn0pLGkuanN4KHplLHtpZDpgY3VycmVudC12YWx1ZS0ke0QuaWR9YCx0eXBlOiJudW1iZXIiLHZhbHVlOmQuY3VycmVudFZhbHVlPz9ELmN1cnJlbnRWYWx1ZSxvbkNoYW5nZTpSPT5mKHsuLi5kLGN1cnJlbnRWYWx1ZTpwYXJzZUZsb2F0KFIudGFyZ2V0LnZhbHVlKXx8MH0pLCJkYXRhLXRlc3RpZCI6YGlucHV0LWN1cnJlbnQtdmFsdWUtJHtELmlkfWB9KV19KSxpLmpzeHMoImRpdiIse2NoaWxkcmVuOltpLmpzeChWZSx7aHRtbEZvcjpgdGFyZ2V0LXZhbHVlLSR7RC5pZH1gLGNoaWxkcmVuOiJUYXJnZXQgVmFsdWUifSksaS5qc3goemUse2lkOmB0YXJnZXQtdmFsdWUtJHtELmlkfWAsdHlwZToibnVtYmVyIix2YWx1ZTpkLnRhcmdldFZhbHVlPz9ELnRhcmdldFZhbHVlLG9uQ2hhbmdlOlI9PmYoey4uLmQsdGFyZ2V0VmFsdWU6cGFyc2VGbG9hdChSLnRhcmdldC52YWx1ZSl8fDB9KSwiZGF0YS10ZXN0aWQiOmBpbnB1dC10YXJnZXQtdmFsdWUtJHtELmlkfWB9KV19KV19KSxpLmpzeHMoImRpdiIse2NsYXNzTmFtZToiZ3JpZCBncmlkLWNvbHMtMiBnYXAtMiIsY2hpbGRyZW46W2kuanN4cygiZGl2Iix7Y2hpbGRyZW46W2kuanN4KFZlLHtodG1sRm9yOmB1bml0LSR7RC5pZH1gLGNoaWxkcmVuOiJVbml0In0pLGkuanN4KHplLHtpZDpgdW5pdC0ke0QuaWR9YCx2YWx1ZTpkLnVuaXR8fEQudW5pdCxvbkNoYW5nZTpSPT5mKHsuLi5kLHVuaXQ6Ui50YXJnZXQudmFsdWV9KSwiZGF0YS10ZXN0aWQiOmBpbnB1dC11bml0LSR7RC5pZH1gfSldfSksaS5qc3hzKCJkaXYiLHtjaGlsZHJlbjpbaS5qc3goVmUse2h0bWxGb3I6YHRyZW5kLSR7RC5pZH1gLGNoaWxkcmVuOiJUcmVuZCJ9KSxpLmpzeHMoInNlbGVjdCIse2lkOmB0cmVuZC0ke0QuaWR9YCx2YWx1ZTpkLnRyZW5kfHxELnRyZW5kLG9uQ2hhbmdlOlI9PmYoey4uLmQsdHJlbmQ6Ui50YXJnZXQudmFsdWV9KSxjbGFzc05hbWU6InctZnVsbCBwLTIgYm9yZGVyIHJvdW5kZWQtbWQiLCJkYXRhLXRlc3RpZCI6YHNlbGVjdC10cmVuZC0ke0QuaWR9YCxjaGlsZHJlbjpbaS5qc3goIm9wdGlvbiIse3ZhbHVlOiJ1cCIsY2hpbGRyZW46IlVwIn0pLGkuanN4KCJvcHRpb24iLHt2YWx1ZToiZG93biIsY2hpbGRyZW46IkRvd24ifSksaS5qc3goIm9wdGlvbiIse3ZhbHVlOiJzdGFibGUiLGNoaWxkcmVuOiJTdGFibGUifSldfSldfSldfSksaS5qc3hzKCJkaXYiLHtjbGFzc05hbWU6ImZsZXgganVzdGlmeS1lbmQgc3BhY2UteC0yIG10LTQiLGNoaWxkcmVuOltpLmpzeChZLHt2YXJpYW50OiJvdXRsaW5lIixzaXplOiJzbSIsb25DbGljazooKT0+e3UobnVsbCksZih7fSl9LCJkYXRhLXRlc3RpZCI6YGJ1dHRvbi1jYW5jZWwtZWRpdC0ke0QuaWR9YCxjaGlsZHJlbjoiQ2FuY2VsIn0pLGkuanN4KFkse3NpemU6InNtIixvbkNsaWNrOigpPT57Y29uc3QgUj1kLmN1cnJlbnRWYWx1ZT8/RC5jdXJyZW50VmFsdWUsZmU9ZC50YXJnZXRWYWx1ZT8/RC50YXJnZXRWYWx1ZSxkdD1mZT4wP01hdGgucm91bmQoUi9mZSoxMDApOjA7TC5tdXRhdGUoe2lkOkQuaWQsZGF0YTp7Li4uZCxwZXJjZW50YWdlOmR0fX0pfSxkaXNhYmxlZDpMLmlzUGVuZGluZywiZGF0YS10ZXN0aWQiOmBidXR0b24tc2F2ZS1lZGl0LSR7RC5pZH1gLGNoaWxkcmVuOkwuaXNQZW5kaW5nPyJTYXZpbmcuLi4iOiJTYXZlIn0pXX0pXX0pOmkuanN4cygiZGl2Iix7Y2hpbGRyZW46W2kuanN4cygiZGl2Iix7Y2xhc3NOYW1lOiJmbGV4IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWJldHdlZW4gbWItMiIsY2hpbGRyZW46W2kuanN4KCJoNCIse2NsYXNzTmFtZToiZm9udC1tZWRpdW0gdGV4dC1zbSIsY2hpbGRyZW46RC5tZXRyaWNOYW1lfSksaS5qc3hzKCJkaXYiLHtjbGFzc05hbWU6ImZsZXggaXRlbXMtY2VudGVyIHNwYWNlLXgtMiIsY2hpbGRyZW46W2ooRC50cmVuZCksaS5qc3goWSx7dmFyaWFudDoiZ2hvc3QiLHNpemU6InNtIixvbkNsaWNrOigpPT57dShELmlkKSxmKHt9KX0sImRhdGEtdGVzdGlkIjpgYnV0dG9uLWVkaXQtbWV0cmljLSR7RC5pZH1gLGNoaWxkcmVuOmkuanN4KGdhLHtjbGFzc05hbWU6InctNCBoLTQifSl9KV19KV19KSxpLmpzeHMoImRpdiIse2NsYXNzTmFtZToidGV4dC0yeGwgZm9udC1ib2xkIG1iLTEiLGNoaWxkcmVuOltELmN1cnJlbnRWYWx1ZSxELnVuaXRdfSksaS5qc3hzKCJkaXYiLHtjbGFzc05hbWU6InRleHQtc20gdGV4dC1tdXRlZC1mb3JlZ3JvdW5kIixjaGlsZHJlbjpbIlRhcmdldDogIixELnRhcmdldFZhbHVlLEQudW5pdF19KSxpLmpzeCgiZGl2Iix7Y2xhc3NOYW1lOiJ0ZXh0LXNtIixjaGlsZHJlbjppLmpzeHMoInNwYW4iLHtjbGFzc05hbWU6YGZvbnQtbWVkaXVtICR7RC5wZXJjZW50YWdlPj0xMDA/InRleHQtZ3JlZW4tNjAwIjpELnBlcmNlbnRhZ2U+PTc1PyJ0ZXh0LXllbGxvdy02MDAiOiJ0ZXh0LXJlZC02MDAifWAsY2hpbGRyZW46W0QucGVyY2VudGFnZSwiJSBvZiB0YXJnZXQiXX0pfSldfSl9KX0sRC5pZCkpfSldfSksJC5sZW5ndGg+MCYmaS5qc3hzKCJkaXYiLHtjaGlsZHJlbjpbaS5qc3hzKCJoMyIse2NsYXNzTmFtZToidGV4dC1sZyBmb250LXNlbWlib2xkIG1iLTQgZmxleCBpdGVtcy1jZW50ZXIiLGNoaWxkcmVuOltpLmpzeChzcix7Y2xhc3NOYW1lOiJ3LTUgaC01IG1yLTIifSksIlByb2Nlc3MgUGVyZm9ybWFuY2UgTWVhc3VyZXMiXX0pLFsiRmluYW5jaWFsIiwiQ3VzdG9tZXIiLCJJbnRlcm5hbCBQcm9jZXNzIiwiTGVhcm5pbmcgJiBHcm93dGgiXS5tYXAoRD0+e2NvbnN0IFI9WihBLmlkLEQpO3JldHVybiBSLmxlbmd0aD09PTA/bnVsbDppLmpzeHMoImRpdiIse2NsYXNzTmFtZToibWItNiIsY2hpbGRyZW46W2kuanN4KCJkaXYiLHtjbGFzc05hbWU6ImZsZXggaXRlbXMtY2VudGVyIG1iLTMiLGNoaWxkcmVuOmkuanN4KGJlLHtjbGFzc05hbWU6YG1yLTIgJHtJKEQpfWAsY2hpbGRyZW46RH0pfSksaS5qc3goImRpdiIse2NsYXNzTmFtZToiZ3JpZCBncmlkLWNvbHMtMSBtZDpncmlkLWNvbHMtMiBsZzpncmlkLWNvbHMtMyBnYXAtNCIsY2hpbGRyZW46Ui5tYXAoZmU9PmkuanN4KGllLHtjbGFzc05hbWU6ImJvcmRlciIsY2hpbGRyZW46aS5qc3hzKGxlLHtjbGFzc05hbWU6InAtNCIsY2hpbGRyZW46W2kuanN4cygiZGl2Iix7Y2xhc3NOYW1lOiJmbGV4IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWJldHdlZW4gbWItMiIsY2hpbGRyZW46W2kuanN4KCJoNCIse2NsYXNzTmFtZToiZm9udC1tZWRpdW0gdGV4dC1zbSIsY2hpbGRyZW46ZmUubWVhc3VyZU5hbWV9KSxpLmpzeChiZSx7dmFyaWFudDoib3V0bGluZSIsY2xhc3NOYW1lOiJ0ZXh0LXhzIixjaGlsZHJlbjpmZS5wcm9jZXNzTnVtYmVyfSldfSksaS5qc3hzKCJkaXYiLHtjbGFzc05hbWU6InRleHQtc20gdGV4dC1tdXRlZC1mb3JlZ3JvdW5kIG1iLTIiLGNoaWxkcmVuOlsiRnJvbTogIixmZS5wcm9jZXNzTmFtZV19KSxmZS50YXJnZXQmJmkuanN4cygiZGl2Iix7Y2xhc3NOYW1lOiJ0ZXh0LXNtIHRleHQtZm9yZWdyb3VuZCIsY2hpbGRyZW46WyJUYXJnZXQ6ICIsZmUudGFyZ2V0XX0pLGZlLmZyZXF1ZW5jeSYmaS5qc3hzKCJkaXYiLHtjbGFzc05hbWU6InRleHQteHMgdGV4dC1tdXRlZC1mb3JlZ3JvdW5kIixjaGlsZHJlbjpbIkZyZXF1ZW5jeTogIixmZS5mcmVxdWVuY3ldfSksZmUuZm9ybXVsYSYmaS5qc3hzKCJkaXYiLHtjbGFzc05hbWU6InRleHQteHMgdGV4dC1tdXRlZC1mb3JlZ3JvdW5kIG10LTEiLGNoaWxkcmVuOlsiRm9ybXVsYTogIixmZS5mb3JtdWxhXX0pXX0pfSxmZS5pZCkpfSldfSxEKX0pXX0pXX0pXX0sQS5pZCl9KX0pLGkuanN4cyhpZSx7Y2xhc3NOYW1lOiJtdC04IGJvcmRlci0yIGJvcmRlci1kYXNoZWQiLGNoaWxkcmVuOltpLmpzeHMoRWUse2NoaWxkcmVuOltpLmpzeHMoQ2Use2NsYXNzTmFtZToiZmxleCBpdGVtcy1jZW50ZXIiLGNoaWxkcmVuOltpLmpzeChIdCx7Y2xhc3NOYW1lOiJ3LTUgaC01IG1yLTIifSksIkFkZCBOZXcgU3RyYXRlZ2ljIEdvYWwiXX0pLGkuanN4KFhyLHtjaGlsZHJlbjoiQ3JlYXRlIGEgbmV3IHN0cmF0ZWdpYyBnb2FsIGZvciBhbnkgT0UgZWxlbWVudCJ9KV19KSxpLmpzeHMobGUse2NoaWxkcmVuOltpLmpzeHMoImRpdiIse2NsYXNzTmFtZToiZ3JpZCBncmlkLWNvbHMtMSBtZDpncmlkLWNvbHMtMiBnYXAtNCIsY2hpbGRyZW46W2kuanN4cygiZGl2Iix7Y2xhc3NOYW1lOiJzcGFjZS15LTIiLGNoaWxkcmVuOltpLmpzeChWZSx7aHRtbEZvcjoiZ29hbC10aXRsZSIsY2hpbGRyZW46IkdvYWwgVGl0bGUifSksaS5qc3goemUse2lkOiJnb2FsLXRpdGxlIix2YWx1ZTpwLnRpdGxlLG9uQ2hhbmdlOkE9Pngoey4uLnAsdGl0bGU6QS50YXJnZXQudmFsdWV9KSxwbGFjZWhvbGRlcjoiRW50ZXIgZ29hbCB0aXRsZSJ9KV19KSxpLmpzeHMoImRpdiIse2NsYXNzTmFtZToic3BhY2UteS0yIixjaGlsZHJlbjpbaS5qc3goVmUse2h0bWxGb3I6ImdvYWwtY2F0ZWdvcnkiLGNoaWxkcmVuOiJDYXRlZ29yeSJ9KSxpLmpzeHMoInNlbGVjdCIse2lkOiJnb2FsLWNhdGVnb3J5Iix2YWx1ZTpwLmNhdGVnb3J5LG9uQ2hhbmdlOkE9Pngoey4uLnAsY2F0ZWdvcnk6QS50YXJnZXQudmFsdWV9KSxjbGFzc05hbWU6InctZnVsbCBwLTIgYm9yZGVyIHJvdW5kZWQtbWQiLGNoaWxkcmVuOltpLmpzeCgib3B0aW9uIix7dmFsdWU6IkZpbmFuY2lhbCIsY2hpbGRyZW46IkZpbmFuY2lhbCJ9KSxpLmpzeCgib3B0aW9uIix7dmFsdWU6IkN1c3RvbWVyIixjaGlsZHJlbjoiQ3VzdG9tZXIifSksaS5qc3goIm9wdGlvbiIse3ZhbHVlOiJJbnRlcm5hbCBQcm9jZXNzIixjaGlsZHJlbjoiSW50ZXJuYWwgUHJvY2VzcyJ9KSxpLmpzeCgib3B0aW9uIix7dmFsdWU6IkxlYXJuaW5nICYgR3Jvd3RoIixjaGlsZHJlbjoiTGVhcm5pbmcgJiBHcm93dGgifSldfSldfSksaS5qc3hzKCJkaXYiLHtjbGFzc05hbWU6InNwYWNlLXktMiIsY2hpbGRyZW46W2kuanN4KFZlLHtodG1sRm9yOiJnb2FsLXRhcmdldCIsY2hpbGRyZW46IlRhcmdldCBWYWx1ZSJ9KSxpLmpzeCh6ZSx7aWQ6ImdvYWwtdGFyZ2V0Iix0eXBlOiJudW1iZXIiLHZhbHVlOnAudGFyZ2V0VmFsdWUsb25DaGFuZ2U6QT0+eCh7Li4ucCx0YXJnZXRWYWx1ZTpwYXJzZUZsb2F0KEEudGFyZ2V0LnZhbHVlKXx8MH0pLHBsYWNlaG9sZGVyOiJFbnRlciB0YXJnZXQgdmFsdWUifSldfSksaS5qc3hzKCJkaXYiLHtjbGFzc05hbWU6InNwYWNlLXktMiIsY2hpbGRyZW46W2kuanN4KFZlLHtodG1sRm9yOiJnb2FsLXVuaXQiLGNoaWxkcmVuOiJVbml0In0pLGkuanN4KHplLHtpZDoiZ29hbC11bml0Iix2YWx1ZTpwLnVuaXQsb25DaGFuZ2U6QT0+eCh7Li4ucCx1bml0OkEudGFyZ2V0LnZhbHVlfSkscGxhY2Vob2xkZXI6ImUuZy4sICUsICQsIGhvdXJzIn0pXX0pLGkuanN4cygiZGl2Iix7Y2xhc3NOYW1lOiJtZDpjb2wtc3Bhbi0yIHNwYWNlLXktMiIsY2hpbGRyZW46W2kuanN4KFZlLHtodG1sRm9yOiJnb2FsLWRlc2NyaXB0aW9uIixjaGlsZHJlbjoiRGVzY3JpcHRpb24ifSksaS5qc3gobm4se2lkOiJnb2FsLWRlc2NyaXB0aW9uIix2YWx1ZTpwLmRlc2NyaXB0aW9uLG9uQ2hhbmdlOkE9Pngoey4uLnAsZGVzY3JpcHRpb246QS50YXJnZXQudmFsdWV9KSxwbGFjZWhvbGRlcjoiRGVzY3JpYmUgdGhlIHN0cmF0ZWdpYyBnb2FsIGFuZCBob3cgaXQgd2lsbCBiZSBtZWFzdXJlZCIscm93czozfSldfSldfSksaS5qc3goImRpdiIse2NsYXNzTmFtZToiZmxleCBqdXN0aWZ5LWVuZCBtdC00IixjaGlsZHJlbjppLmpzeHMoWSx7b25DbGljazooKT0+ay5tdXRhdGUocCksZGlzYWJsZWQ6IXAudGl0bGV8fCFwLmRlc2NyaXB0aW9ufHxrLmlzUGVuZGluZyxjaGlsZHJlbjpbaS5qc3goSHQse2NsYXNzTmFtZToidy00IGgtNCBtci0yIn0pLGsuaXNQZW5kaW5nPyJDcmVhdGluZy4uLiI6IkNyZWF0ZSBHb2FsIl19KX0pXX0pXX0pXX0pXX0pXX0pfWNvbnN0IHRjPShlLHQpPT57aWYoIWV8fCF0KXJldHVybntsZXZlbDoiTm90IEFzc2Vzc2VkIixjb2xvcjoiZ3JheSIsc2NvcmU6MH07Y29uc3Qgcj1lLnRvTG93ZXJDYXNlKCk9PT0iaGlnaCI/MzplLnRvTG93ZXJDYXNlKCk9PT0ibWVkaXVtIj8yOjEsbj10LnRvTG93ZXJDYXNlKCk9PT0iaGlnaCI/Mzp0LnRvTG93ZXJDYXNlKCk9PT0ibWVkaXVtIj8yOjEscz1yKm47cmV0dXJuIHM+PTc/e2xldmVsOiJIaWdoIFJpc2siLGNvbG9yOiJyZWQiLHNjb3JlOnN9OnM+PTM/e2xldmVsOiJNZWRpdW0gUmlzayIsY29sb3I6InllbGxvdyIsc2NvcmU6c306e2xldmVsOiJMb3cgUmlzayIsY29sb3I6ImdyZWVuIixzY29yZTpzfX0sWmc9ZT0+e3N3aXRjaChlKXtjYXNlInJlZCI6cmV0dXJuImJnLXJlZC0xMDAgdGV4dC1yZWQtODAwIGJvcmRlci1yZWQtMjAwIjtjYXNlInllbGxvdyI6cmV0dXJuImJnLXllbGxvdy0xMDAgdGV4dC15ZWxsb3ctODAwIGJvcmRlci15ZWxsb3ctMjAwIjtjYXNlImdyZWVuIjpyZXR1cm4iYmctZ3JlZW4tMTAwIHRleHQtZ3JlZW4tODAwIGJvcmRlci1ncmVlbi0yMDAiO2RlZmF1bHQ6cmV0dXJuImJnLWdyYXktMTAwIHRleHQtZ3JheS04MDAgYm9yZGVyLWdyYXktMjAwIn19O2Z1bmN0aW9uIFRQKCl7Y29uc3R7aXNBdXRoZW50aWNhdGVkOmUsaXNMb2FkaW5nOnR9PVdyKCkse2RhdGE6cj1bXSxpc0xvYWRpbmc6bn09YnQoe3F1ZXJ5S2V5OlsiL2FwaS9vZS1wcm9jZXNzZXMiXSxlbmFibGVkOmV9KTtpZih0KXJldHVybiBpLmpzeCgiZGl2Iix7Y2xhc3NOYW1lOiJmbGV4IGp1c3RpZnktY2VudGVyIGl0ZW1zLWNlbnRlciBoLTY0IixjaGlsZHJlbjoiTG9hZGluZy4uLiJ9KTtpZighZSlyZXR1cm4gaS5qc3goImRpdiIse2NsYXNzTmFtZToidGV4dC1jZW50ZXIgcHktOCIsY2hpbGRyZW46IlBsZWFzZSBsb2cgaW4gdG8gYWNjZXNzIHJpc2sgbWFuYWdlbWVudC4ifSk7Y29uc3Qgcz1yLmZpbHRlcih1PT51LnJpc2tGcmVxdWVuY3kmJnUucmlza0ltcGFjdCksYT1yLmZpbHRlcih1PT4hdS5yaXNrRnJlcXVlbmN5fHwhdS5yaXNrSW1wYWN0KSxvPXMuZmlsdGVyKHU9PnRjKHUucmlza0ZyZXF1ZW5jeSx1LnJpc2tJbXBhY3QpLmxldmVsPT09IkhpZ2ggUmlzayIpLGw9cy5maWx0ZXIodT0+dGModS5yaXNrRnJlcXVlbmN5LHUucmlza0ltcGFjdCkubGV2ZWw9PT0iTWVkaXVtIFJpc2siKSxjPXMuZmlsdGVyKHU9PnRjKHUucmlza0ZyZXF1ZW5jeSx1LnJpc2tJbXBhY3QpLmxldmVsPT09IkxvdyBSaXNrIik7cmV0dXJuIGkuanN4cygiZGl2Iix7Y2xhc3NOYW1lOiJtaW4taC1zY3JlZW4gZmxleCBiZy1iYWNrZ3JvdW5kIixjaGlsZHJlbjpbaS5qc3goRnQse30pLGkuanN4cygibWFpbiIse2NsYXNzTmFtZToiZmxleC0xIG92ZXJmbG93LWF1dG8iLGNoaWxkcmVuOltpLmpzeChJdCx7fSksaS5qc3goImRpdiIse2NsYXNzTmFtZToicC02IixjaGlsZHJlbjppLmpzeHMoImRpdiIse2NsYXNzTmFtZToic3BhY2UteS02IixjaGlsZHJlbjpbaS5qc3goImRpdiIse2NsYXNzTmFtZToiZmxleCBpdGVtcy1jZW50ZXIganVzdGlmeS1iZXR3ZWVuIixjaGlsZHJlbjppLmpzeHMoImRpdiIse2NoaWxkcmVuOltpLmpzeHMoImgxIix7Y2xhc3NOYW1lOiJ0ZXh0LTN4bCBmb250LWJvbGQgdGV4dC1ncmF5LTkwMCBkYXJrOnRleHQtZ3JheS0xMDAgZmxleCBpdGVtcy1jZW50ZXIiLGNoaWxkcmVuOltpLmpzeCh2cyx7Y2xhc3NOYW1lOiJ3LTggaC04IG1yLTMgdGV4dC1ibHVlLTYwMCJ9KSwiUmlzayBNYW5hZ2VtZW50Il19KSxpLmpzeCgicCIse2NsYXNzTmFtZToidGV4dC1ncmF5LTYwMCBkYXJrOnRleHQtZ3JheS00MDAgbXQtMiIsY2hpbGRyZW46IkFzc2VzcyBhbmQgbWFuYWdlIHByb2Nlc3Mgcmlza3MgYWNyb3NzIHlvdXIgT0UgZnJhbWV3b3JrIn0pXX0pfSksaS5qc3hzKCJkaXYiLHtjbGFzc05hbWU6ImdyaWQgZ3JpZC1jb2xzLTEgbWQ6Z3JpZC1jb2xzLTQgZ2FwLTQiLGNoaWxkcmVuOltpLmpzeChpZSx7Y2xhc3NOYW1lOiJib3JkZXItcmVkLTIwMCBiZy1yZWQtNTAgZGFyazpiZy1yZWQtOTUwLzIwIixjaGlsZHJlbjppLmpzeChsZSx7Y2xhc3NOYW1lOiJwLTQiLGNoaWxkcmVuOmkuanN4cygiZGl2Iix7Y2xhc3NOYW1lOiJmbGV4IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWJldHdlZW4iLGNoaWxkcmVuOltpLmpzeHMoImRpdiIse2NoaWxkcmVuOltpLmpzeCgicCIse2NsYXNzTmFtZToidGV4dC1yZWQtNjAwIHRleHQtc20gZm9udC1tZWRpdW0iLGNoaWxkcmVuOiJIaWdoIFJpc2sifSksaS5qc3goInAiLHtjbGFzc05hbWU6InRleHQtMnhsIGZvbnQtYm9sZCB0ZXh0LXJlZC03MDAiLGNoaWxkcmVuOm8ubGVuZ3RofSldfSksaS5qc3goamcse2NsYXNzTmFtZToidy04IGgtOCB0ZXh0LXJlZC02MDAifSldfSl9KX0pLGkuanN4KGllLHtjbGFzc05hbWU6ImJvcmRlci15ZWxsb3ctMjAwIGJnLXllbGxvdy01MCBkYXJrOmJnLXllbGxvdy05NTAvMjAiLGNoaWxkcmVuOmkuanN4KGxlLHtjbGFzc05hbWU6InAtNCIsY2hpbGRyZW46aS5qc3hzKCJkaXYiLHtjbGFzc05hbWU6ImZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktYmV0d2VlbiIsY2hpbGRyZW46W2kuanN4cygiZGl2Iix7Y2hpbGRyZW46W2kuanN4KCJwIix7Y2xhc3NOYW1lOiJ0ZXh0LXllbGxvdy02MDAgdGV4dC1zbSBmb250LW1lZGl1bSIsY2hpbGRyZW46Ik1lZGl1bSBSaXNrIn0pLGkuanN4KCJwIix7Y2xhc3NOYW1lOiJ0ZXh0LTJ4bCBmb250LWJvbGQgdGV4dC15ZWxsb3ctNzAwIixjaGlsZHJlbjpsLmxlbmd0aH0pXX0pLGkuanN4KFRvLHtjbGFzc05hbWU6InctOCBoLTggdGV4dC15ZWxsb3ctNjAwIn0pXX0pfSl9KSxpLmpzeChpZSx7Y2xhc3NOYW1lOiJib3JkZXItZ3JlZW4tMjAwIGJnLWdyZWVuLTUwIGRhcms6YmctZ3JlZW4tOTUwLzIwIixjaGlsZHJlbjppLmpzeChsZSx7Y2xhc3NOYW1lOiJwLTQiLGNoaWxkcmVuOmkuanN4cygiZGl2Iix7Y2xhc3NOYW1lOiJmbGV4IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWJldHdlZW4iLGNoaWxkcmVuOltpLmpzeHMoImRpdiIse2NoaWxkcmVuOltpLmpzeCgicCIse2NsYXNzTmFtZToidGV4dC1ncmVlbi02MDAgdGV4dC1zbSBmb250LW1lZGl1bSIsY2hpbGRyZW46IkxvdyBSaXNrIn0pLGkuanN4KCJwIix7Y2xhc3NOYW1lOiJ0ZXh0LTJ4bCBmb250LWJvbGQgdGV4dC1ncmVlbi03MDAiLGNoaWxkcmVuOmMubGVuZ3RofSldfSksaS5qc3godnMse2NsYXNzTmFtZToidy04IGgtOCB0ZXh0LWdyZWVuLTYwMCJ9KV19KX0pfSksaS5qc3goaWUse2NsYXNzTmFtZToiYm9yZGVyLWdyYXktMjAwIGJnLWdyYXktNTAgZGFyazpiZy1ncmF5LTk1MC8yMCIsY2hpbGRyZW46aS5qc3gobGUse2NsYXNzTmFtZToicC00IixjaGlsZHJlbjppLmpzeHMoImRpdiIse2NsYXNzTmFtZToiZmxleCBpdGVtcy1jZW50ZXIganVzdGlmeS1iZXR3ZWVuIixjaGlsZHJlbjpbaS5qc3hzKCJkaXYiLHtjaGlsZHJlbjpbaS5qc3goInAiLHtjbGFzc05hbWU6InRleHQtZ3JheS02MDAgdGV4dC1zbSBmb250LW1lZGl1bSIsY2hpbGRyZW46Ik5vdCBBc3Nlc3NlZCJ9KSxpLmpzeCgicCIse2NsYXNzTmFtZToidGV4dC0yeGwgZm9udC1ib2xkIHRleHQtZ3JheS03MDAiLGNoaWxkcmVuOmEubGVuZ3RofSldfSksaS5qc3goSGYse2NsYXNzTmFtZToidy04IGgtOCB0ZXh0LWdyYXktNjAwIn0pXX0pfSl9KV19KSxvLmxlbmd0aD4wJiZpLmpzeHMoaWUse2NoaWxkcmVuOltpLmpzeChFZSx7Y2hpbGRyZW46aS5qc3hzKENlLHtjbGFzc05hbWU6InRleHQtcmVkLTcwMCBmbGV4IGl0ZW1zLWNlbnRlciIsY2hpbGRyZW46W2kuanN4KGpnLHtjbGFzc05hbWU6InctNSBoLTUgbXItMiJ9KSwiSGlnaCBSaXNrIFByb2Nlc3NlcyAtIEltbWVkaWF0ZSBBdHRlbnRpb24gUmVxdWlyZWQiXX0pfSksaS5qc3gobGUse2NoaWxkcmVuOmkuanN4KCJkaXYiLHtjbGFzc05hbWU6InNwYWNlLXktNCIsY2hpbGRyZW46by5tYXAodT0+aS5qc3goSWwse3Byb2Nlc3M6dX0sdS5pZCkpfSl9KV19KSxsLmxlbmd0aD4wJiZpLmpzeHMoaWUse2NoaWxkcmVuOltpLmpzeChFZSx7Y2hpbGRyZW46aS5qc3hzKENlLHtjbGFzc05hbWU6InRleHQteWVsbG93LTcwMCBmbGV4IGl0ZW1zLWNlbnRlciIsY2hpbGRyZW46W2kuanN4KFRvLHtjbGFzc05hbWU6InctNSBoLTUgbXItMiJ9KSwiTWVkaXVtIFJpc2sgUHJvY2Vzc2VzIC0gTW9uaXRvciBhbmQgTWl0aWdhdGUiXX0pfSksaS5qc3gobGUse2NoaWxkcmVuOmkuanN4KCJkaXYiLHtjbGFzc05hbWU6InNwYWNlLXktNCIsY2hpbGRyZW46bC5tYXAodT0+aS5qc3goSWwse3Byb2Nlc3M6dX0sdS5pZCkpfSl9KV19KSxjLmxlbmd0aD4wJiZpLmpzeHMoaWUse2NoaWxkcmVuOltpLmpzeChFZSx7Y2hpbGRyZW46aS5qc3hzKENlLHtjbGFzc05hbWU6InRleHQtZ3JlZW4tNzAwIGZsZXggaXRlbXMtY2VudGVyIixjaGlsZHJlbjpbaS5qc3godnMse2NsYXNzTmFtZToidy01IGgtNSBtci0yIn0pLCJMb3cgUmlzayBQcm9jZXNzZXMgLSBXZWxsIENvbnRyb2xsZWQiXX0pfSksaS5qc3gobGUse2NoaWxkcmVuOmkuanN4KCJkaXYiLHtjbGFzc05hbWU6InNwYWNlLXktNCIsY2hpbGRyZW46Yy5tYXAodT0+aS5qc3goSWwse3Byb2Nlc3M6dX0sdS5pZCkpfSl9KV19KSxhLmxlbmd0aD4wJiZpLmpzeHMoaWUse2NoaWxkcmVuOltpLmpzeChFZSx7Y2hpbGRyZW46aS5qc3hzKENlLHtjbGFzc05hbWU6InRleHQtZ3JheS03MDAgZmxleCBpdGVtcy1jZW50ZXIiLGNoaWxkcmVuOltpLmpzeChIZix7Y2xhc3NOYW1lOiJ3LTUgaC01IG1yLTIifSksIlByb2Nlc3NlcyBSZXF1aXJpbmcgUmlzayBBc3Nlc3NtZW50Il19KX0pLGkuanN4KGxlLHtjaGlsZHJlbjppLmpzeCgiZGl2Iix7Y2xhc3NOYW1lOiJzcGFjZS15LTQiLGNoaWxkcmVuOmEubWFwKHU9PmkuanN4KElsLHtwcm9jZXNzOnV9LHUuaWQpKX0pfSldfSldfSl9KV19KV19KX1mdW5jdGlvbiBJbCh7cHJvY2VzczplfSl7Y29uc3QgdD10YyhlLnJpc2tGcmVxdWVuY3ksZS5yaXNrSW1wYWN0KTtyZXR1cm4gaS5qc3hzKCJkaXYiLHtjbGFzc05hbWU6ImJvcmRlciByb3VuZGVkLWxnIHAtNCBob3ZlcjpzaGFkb3ctbWQgdHJhbnNpdGlvbi1zaGFkb3ciLGNoaWxkcmVuOltpLmpzeHMoImRpdiIse2NsYXNzTmFtZToiZmxleCBpdGVtcy1jZW50ZXIganVzdGlmeS1iZXR3ZWVuIG1iLTMiLGNoaWxkcmVuOltpLmpzeCgiZGl2Iix7Y2xhc3NOYW1lOiJmbGV4IGl0ZW1zLWNlbnRlciBzcGFjZS14LTMiLGNoaWxkcmVuOmkuanN4cygiZGl2Iix7Y2hpbGRyZW46W2kuanN4cygiaDMiLHtjbGFzc05hbWU6ImZvbnQtbWVkaXVtIHRleHQtZ3JheS05MDAgZGFyazp0ZXh0LWdyYXktMTAwIixjaGlsZHJlbjpbZS5wcm9jZXNzTnVtYmVyLCIgLSAiLGUubmFtZV19KSxpLmpzeHMoInAiLHtjbGFzc05hbWU6InRleHQtc20gdGV4dC1ncmF5LTYwMCBkYXJrOnRleHQtZ3JheS00MDAiLGNoaWxkcmVuOlsiRWxlbWVudCAiLGUuZWxlbWVudE51bWJlciwiOiAiLGUuZWxlbWVudFRpdGxlXX0pXX0pfSksaS5qc3hzKCJkaXYiLHtjbGFzc05hbWU6ImZsZXggaXRlbXMtY2VudGVyIHNwYWNlLXgtMiIsY2hpbGRyZW46W2kuanN4KGJlLHtjbGFzc05hbWU6WmcodC5jb2xvciksY2hpbGRyZW46dC5sZXZlbH0pLGkuanN4KHV0LHtocmVmOmAvcHJvY2Vzcy8ke2UuaWR9L2VkaXRgLGNoaWxkcmVuOmkuanN4KFkse3ZhcmlhbnQ6Im91dGxpbmUiLHNpemU6InNtIiwiZGF0YS10ZXN0aWQiOmBlZGl0LXJpc2stJHtlLmlkfWAsY2hpbGRyZW46IkVkaXQgUmlzayJ9KX0pLGkuanN4KHV0LHtocmVmOmAvcHJvY2Vzcy8ke2UuaWR9YCxjaGlsZHJlbjppLmpzeChZLHt2YXJpYW50OiJnaG9zdCIsc2l6ZToic20iLCJkYXRhLXRlc3RpZCI6YHZpZXctcHJvY2Vzcy0ke2UuaWR9YCxjaGlsZHJlbjppLmpzeChIZix7Y2xhc3NOYW1lOiJ3LTQgaC00In0pfSl9KV19KV19KSxlLnJpc2tGcmVxdWVuY3kmJmUucmlza0ltcGFjdCYmaS5qc3hzKCJkaXYiLHtjbGFzc05hbWU6ImdyaWQgZ3JpZC1jb2xzLTEgbWQ6Z3JpZC1jb2xzLTQgZ2FwLTQgdGV4dC1zbSIsY2hpbGRyZW46W2kuanN4cygiZGl2Iix7Y2hpbGRyZW46W2kuanN4KCJzcGFuIix7Y2xhc3NOYW1lOiJmb250LW1lZGl1bSB0ZXh0LWdyYXktNzAwIGRhcms6dGV4dC1ncmF5LTMwMCIsY2hpbGRyZW46IkZyZXF1ZW5jeToifSksaS5qc3goYmUse3ZhcmlhbnQ6Im91dGxpbmUiLGNsYXNzTmFtZToibWwtMiIsY2hpbGRyZW46ZS5yaXNrRnJlcXVlbmN5fSldfSksaS5qc3hzKCJkaXYiLHtjaGlsZHJlbjpbaS5qc3goInNwYW4iLHtjbGFzc05hbWU6ImZvbnQtbWVkaXVtIHRleHQtZ3JheS03MDAgZGFyazp0ZXh0LWdyYXktMzAwIixjaGlsZHJlbjoiSW1wYWN0OiJ9KSxpLmpzeChiZSx7dmFyaWFudDoib3V0bGluZSIsY2xhc3NOYW1lOiJtbC0yIixjaGlsZHJlbjplLnJpc2tJbXBhY3R9KV19KSxpLmpzeHMoImRpdiIse2NoaWxkcmVuOltpLmpzeCgic3BhbiIse2NsYXNzTmFtZToiZm9udC1tZWRpdW0gdGV4dC1ncmF5LTcwMCBkYXJrOnRleHQtZ3JheS0zMDAiLGNoaWxkcmVuOiJSaXNrIFNjb3JlOiJ9KSxpLmpzeChiZSx7dmFyaWFudDoib3V0bGluZSIsY2xhc3NOYW1lOmBtbC0yICR7WmcodC5jb2xvcil9YCxjaGlsZHJlbjp0LnNjb3JlfSldfSksaS5qc3hzKCJkaXYiLHtjaGlsZHJlbjpbaS5qc3goInNwYW4iLHtjbGFzc05hbWU6ImZvbnQtbWVkaXVtIHRleHQtZ3JheS03MDAgZGFyazp0ZXh0LWdyYXktMzAwIixjaGlsZHJlbjoiU3RhdHVzOiJ9KSxpLmpzeChiZSx7dmFyaWFudDoib3V0bGluZSIsY2xhc3NOYW1lOiJtbC0yIixjaGlsZHJlbjplLnN0YXR1c30pXX0pXX0pLGUucmlza0Rlc2NyaXB0aW9uJiZpLmpzeCgiZGl2Iix7Y2xhc3NOYW1lOiJtdC0zIHAtMyBiZy1vcmFuZ2UtNTAgZGFyazpiZy1vcmFuZ2UtOTUwLzIwIHJvdW5kZWQtbWQiLGNoaWxkcmVuOmkuanN4cygicCIse2NsYXNzTmFtZToidGV4dC1zbSIsY2hpbGRyZW46W2kuanN4KCJzcGFuIix7Y2xhc3NOYW1lOiJmb250LW1lZGl1bSB0ZXh0LW9yYW5nZS03MDAgZGFyazp0ZXh0LW9yYW5nZS0zMDAiLGNoaWxkcmVuOiJSaXNrIERlc2NyaXB0aW9uOiJ9KSxpLmpzeCgic3BhbiIse2NsYXNzTmFtZToibWwtMiB0ZXh0LWdyYXktNzAwIGRhcms6dGV4dC1ncmF5LTMwMCIsY2hpbGRyZW46ZS5yaXNrRGVzY3JpcHRpb259KV19KX0pLGUucmlza01pdGlnYXRpb24mJmkuanN4KCJkaXYiLHtjbGFzc05hbWU6Im10LTMgcC0zIGJnLWJsdWUtNTAgZGFyazpiZy1ibHVlLTk1MC8yMCByb3VuZGVkLW1kIixjaGlsZHJlbjppLmpzeHMoInAiLHtjbGFzc05hbWU6InRleHQtc20iLGNoaWxkcmVuOltpLmpzeCgic3BhbiIse2NsYXNzTmFtZToiZm9udC1tZWRpdW0gdGV4dC1ibHVlLTcwMCBkYXJrOnRleHQtYmx1ZS0zMDAiLGNoaWxkcmVuOiJNaXRpZ2F0aW9uIFN0cmF0ZWd5OiJ9KSxpLmpzeCgic3BhbiIse2NsYXNzTmFtZToibWwtMiB0ZXh0LWdyYXktNzAwIGRhcms6dGV4dC1ncmF5LTMwMCIsY2hpbGRyZW46ZS5yaXNrTWl0aWdhdGlvbn0pXX0pfSksKCFlLnJpc2tGcmVxdWVuY3l8fCFlLnJpc2tJbXBhY3QpJiZpLmpzeCgiZGl2Iix7Y2xhc3NOYW1lOiJtdC0zIHAtMyBiZy15ZWxsb3ctNTAgZGFyazpiZy15ZWxsb3ctOTUwLzIwIHJvdW5kZWQtbWQiLGNoaWxkcmVuOmkuanN4KCJwIix7Y2xhc3NOYW1lOiJ0ZXh0LXNtIHRleHQteWVsbG93LTcwMCBkYXJrOnRleHQteWVsbG93LTMwMCIsY2hpbGRyZW46J+KaoO+4jyBSaXNrIGFzc2Vzc21lbnQgbm90IGNvbXBsZXRlZC4gQ2xpY2sgIkVkaXQgUmlzayIgdG8gYWRkIGZyZXF1ZW5jeSwgaW1wYWN0LCBhbmQgbWl0aWdhdGlvbiBkZXRhaWxzLid9KX0pXX0pfWZ1bmN0aW9uIFJQKHtwcm9jZXNzZXM6ZSxlbGVtZW50VGl0bGU6dH0pe3JldHVybiFlfHxlLmxlbmd0aD09PTA/aS5qc3hzKCJkaXYiLHtjbGFzc05hbWU6InRleHQtY2VudGVyIHB5LTggdGV4dC1tdXRlZC1mb3JlZ3JvdW5kIixjaGlsZHJlbjpbaS5qc3goRm4se2NsYXNzTmFtZToidy0xMiBoLTEyIG14LWF1dG8gbWItNCBvcGFjaXR5LTUwIn0pLGkuanN4KCJwIix7Y2hpbGRyZW46Ik5vIHByb2Nlc3NlcyBhdmFpbGFibGUgdG8gZGlzcGxheSBpbiBtaW5kIG1hcCJ9KV19KTppLmpzeHMoImRpdiIse2NsYXNzTmFtZToidy1mdWxsIixjaGlsZHJlbjpbaS5qc3goImRpdiIse2NsYXNzTmFtZToibWItNiIsY2hpbGRyZW46aS5qc3goaWUse2NsYXNzTmFtZToiYmctcHJpbWFyeS8xMCBib3JkZXItcHJpbWFyeS8yMCBzaGFkb3ctbGciLGNoaWxkcmVuOmkuanN4KGxlLHtjbGFzc05hbWU6InAtNiIsY2hpbGRyZW46aS5qc3hzKCJkaXYiLHtjbGFzc05hbWU6ImZsZXggaXRlbXMtY2VudGVyIHNwYWNlLXgtNCIsY2hpbGRyZW46W2kuanN4KCJkaXYiLHtjbGFzc05hbWU6InctMTIgaC0xMiBiZy1wcmltYXJ5IHJvdW5kZWQtbGcgZmxleCBpdGVtcy1jZW50ZXIganVzdGlmeS1jZW50ZXIiLGNoaWxkcmVuOmkuanN4KEplLHtjbGFzc05hbWU6InctNiBoLTYgdGV4dC1wcmltYXJ5LWZvcmVncm91bmQifSl9KSxpLmpzeHMoImRpdiIse2NoaWxkcmVuOltpLmpzeCgiaDMiLHtjbGFzc05hbWU6InRleHQteGwgZm9udC1ib2xkIHRleHQtcHJpbWFyeSIsY2hpbGRyZW46dH0pLGkuanN4cygicCIse2NsYXNzTmFtZToidGV4dC1zbSB0ZXh0LW11dGVkLWZvcmVncm91bmQiLGNoaWxkcmVuOltlLmxlbmd0aCwiIFByb2Nlc3MiLGUubGVuZ3RoIT09MT8iZXMiOiIiXX0pXX0pXX0pfSl9KX0pLGkuanN4cygiZGl2Iix7Y2xhc3NOYW1lOiJyZWxhdGl2ZSIsY2hpbGRyZW46W2kuanN4KCJkaXYiLHtjbGFzc05hbWU6ImFic29sdXRlIGxlZnQtNiB0b3AtMCB3LTAuNSBoLTEyIGJnLWJvcmRlci80MCJ9KSxlLmxlbmd0aD4xJiZpLmpzeCgiZGl2Iix7Y2xhc3NOYW1lOiJhYnNvbHV0ZSBsZWZ0LTYgdG9wLTEyIHctZnVsbCBoLTAuNSBiZy1ib3JkZXIvNDAifSksaS5qc3goImRpdiIse2NsYXNzTmFtZToiZ3JpZCBncmlkLWNvbHMtMSBtZDpncmlkLWNvbHMtMiBsZzpncmlkLWNvbHMtMyBnYXAtNiBwdC0xMiIsY2hpbGRyZW46ZS5tYXAoKHIsbik9PmkuanN4cygiZGl2Iix7Y2xhc3NOYW1lOiJyZWxhdGl2ZSIsY2hpbGRyZW46W2kuanN4KCJkaXYiLHtjbGFzc05hbWU6ImFic29sdXRlIGxlZnQtMS8yIC10b3AtMTIgdy0wLjUgaC0xMiBiZy1ib3JkZXIvNDAgdHJhbnNmb3JtIC10cmFuc2xhdGUteC0xLzIifSksaS5qc3goaWUse2NsYXNzTmFtZToiYmctYmx1ZS01MCBkYXJrOmJnLWJsdWUtOTUwLzIwIGJvcmRlci1ibHVlLTIwMCBkYXJrOmJvcmRlci1ibHVlLTgwMCBzaGFkb3ctbWQiLGNoaWxkcmVuOmkuanN4cyhsZSx7Y2xhc3NOYW1lOiJwLTQiLGNoaWxkcmVuOltpLmpzeHMoImRpdiIse2NsYXNzTmFtZToiZmxleCBpdGVtcy1jZW50ZXIgc3BhY2UteC0zIG1iLTQiLGNoaWxkcmVuOltpLmpzeCgiZGl2Iix7Y2xhc3NOYW1lOiJ3LTggaC04IGJnLWJsdWUtNTAwIHJvdW5kZWQtbGcgZmxleCBpdGVtcy1jZW50ZXIganVzdGlmeS1jZW50ZXIiLGNoaWxkcmVuOmkuanN4KEplLHtjbGFzc05hbWU6InctNCBoLTQgdGV4dC13aGl0ZSJ9KX0pLGkuanN4cygiZGl2Iix7Y2xhc3NOYW1lOiJmbGV4LTEiLGNoaWxkcmVuOltpLmpzeCgiaDQiLHtjbGFzc05hbWU6ImZvbnQtc2VtaWJvbGQgdGV4dC1ibHVlLTcwMCBkYXJrOnRleHQtYmx1ZS0zMDAgdGV4dC1iYXNlIixjaGlsZHJlbjpyLnByb2Nlc3NOdW1iZXJ9KSxpLmpzeCgicCIse2NsYXNzTmFtZToidGV4dC1zbSB0ZXh0LWJsdWUtNjAwIGRhcms6dGV4dC1ibHVlLTQwMCBmb250LW1lZGl1bSIsY2hpbGRyZW46ci5uYW1lfSldfSldfSksci5zdGVwcyYmci5zdGVwcy5sZW5ndGg+MCYmaS5qc3hzKCJkaXYiLHtjbGFzc05hbWU6InNwYWNlLXktMiBwbC0yIixjaGlsZHJlbjpbaS5qc3goImg1Iix7Y2xhc3NOYW1lOiJ0ZXh0LXhzIGZvbnQtc2VtaWJvbGQgdGV4dC1ibHVlLTcwMCBkYXJrOnRleHQtYmx1ZS0zMDAgbWItMiBib3JkZXItYiBib3JkZXItYmx1ZS0yMDAgZGFyazpib3JkZXItYmx1ZS04MDAgcGItMSIsY2hpbGRyZW46IlNlcXVlbnRpYWwgU3RlcHM6In0pLHIuc3RlcHMubWFwKChzLGEpPT5pLmpzeHMoImRpdiIse2NsYXNzTmFtZToiZmxleCBpdGVtcy1zdGFydCBzcGFjZS14LTIgdGV4dC14cyIsY2hpbGRyZW46W2kuanN4cygiZGl2Iix7Y2xhc3NOYW1lOiJmbGV4IGl0ZW1zLWNlbnRlciBzcGFjZS14LTEgZmxleC1zaHJpbmstMCIsY2hpbGRyZW46W2kuanN4KFBjLHtjbGFzc05hbWU6InctMS41IGgtMS41IGZpbGwtZ3JlZW4tNTAwIHRleHQtZ3JlZW4tNTAwIG10LTEifSksaS5qc3goInNwYW4iLHtjbGFzc05hbWU6InctNCBoLTQgYmctZ3JlZW4tNTAwIHJvdW5kZWQtZnVsbCBmbGV4IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWNlbnRlciB0ZXh0LXdoaXRlIHRleHQteHMgZm9udC1ib2xkIixjaGlsZHJlbjpzLnN0ZXBOdW1iZXJ9KV19KSxpLmpzeCgiZGl2Iix7Y2xhc3NOYW1lOiJtaW4tdy0wIixjaGlsZHJlbjppLmpzeCgicCIse2NsYXNzTmFtZToiZm9udC1tZWRpdW0gdGV4dC1ncmVlbi03MDAgZGFyazp0ZXh0LWdyZWVuLTMwMCBsZWFkaW5nLXRpZ2h0IixjaGlsZHJlbjpzLnN0ZXBOYW1lfSl9KV19LHMuaWQpKV19KV19KX0pXX0sci5pZCkpfSldfSksaS5qc3goImRpdiIse2NsYXNzTmFtZToibXQtOCBwdC02IGJvcmRlci10IixjaGlsZHJlbjppLmpzeHMoImRpdiIse2NsYXNzTmFtZToiZmxleCBmbGV4LXdyYXAgaXRlbXMtY2VudGVyIGdhcC02IHRleHQtc20gdGV4dC1tdXRlZC1mb3JlZ3JvdW5kIixjaGlsZHJlbjpbaS5qc3hzKCJkaXYiLHtjbGFzc05hbWU6ImZsZXggaXRlbXMtY2VudGVyIHNwYWNlLXgtMiIsY2hpbGRyZW46W2kuanN4KCJkaXYiLHtjbGFzc05hbWU6InctNCBoLTQgYmctcHJpbWFyeS8yMCBib3JkZXItcHJpbWFyeS80MCBib3JkZXIgcm91bmRlZCJ9KSxpLmpzeCgic3BhbiIse2NoaWxkcmVuOiJPRSBFbGVtZW50In0pXX0pLGkuanN4cygiZGl2Iix7Y2xhc3NOYW1lOiJmbGV4IGl0ZW1zLWNlbnRlciBzcGFjZS14LTIiLGNoaWxkcmVuOltpLmpzeCgiZGl2Iix7Y2xhc3NOYW1lOiJ3LTQgaC00IGJnLWJsdWUtMTAwIGRhcms6YmctYmx1ZS05NTAvNDAgYm9yZGVyLWJsdWUtMzAwIGRhcms6Ym9yZGVyLWJsdWUtNzAwIGJvcmRlciByb3VuZGVkIn0pLGkuanN4KCJzcGFuIix7Y2hpbGRyZW46IlByb2Nlc3MifSldfSksaS5qc3hzKCJkaXYiLHtjbGFzc05hbWU6ImZsZXggaXRlbXMtY2VudGVyIHNwYWNlLXgtMiIsY2hpbGRyZW46W2kuanN4KCJkaXYiLHtjbGFzc05hbWU6InctNCBoLTQgYmctZ3JlZW4tMTAwIGRhcms6YmctZ3JlZW4tOTUwLzQwIGJvcmRlci1ncmVlbi0zMDAgZGFyazpib3JkZXItZ3JlZW4tNzAwIGJvcmRlciByb3VuZGVkIn0pLGkuanN4KCJzcGFuIix7Y2hpbGRyZW46IlByb2Nlc3MgU3RlcCJ9KV19KSxpLmpzeHMoImRpdiIse2NsYXNzTmFtZToiZmxleCBpdGVtcy1jZW50ZXIgc3BhY2UteC0yIixjaGlsZHJlbjpbaS5qc3goUGMse2NsYXNzTmFtZToidy0yIGgtMiBmaWxsLWN1cnJlbnQgdGV4dC1tdXRlZC1mb3JlZ3JvdW5kIn0pLGkuanN4KCJzcGFuIix7Y2hpbGRyZW46IkJ1bGxldCBQb2ludCJ9KV19KV19KX0pXX0pfWZ1bmN0aW9uIEFQKCl7dmFyIHUsZCxmLHA7Y29uc3R7aWQ6ZX09cmwoKSx7dG9hc3Q6dH09aG4oKSx7aXNBdXRoZW50aWNhdGVkOnIsaXNMb2FkaW5nOm59PVdyKCk7eS51c2VFZmZlY3QoKCk9PntpZighbiYmIXIpe3Qoe3RpdGxlOiJVbmF1dGhvcml6ZWQiLGRlc2NyaXB0aW9uOiJZb3UgYXJlIGxvZ2dlZCBvdXQuIExvZ2dpbmcgaW4gYWdhaW4uLi4iLHZhcmlhbnQ6ImRlc3RydWN0aXZlIn0pLHNldFRpbWVvdXQoKCk9Pnt3aW5kb3cubG9jYXRpb24uaHJlZj0iL2FwaS9sb2dpbiJ9LDUwMCk7cmV0dXJufX0sW3Isbix0XSk7Y29uc3R7ZGF0YTpzLGlzTG9hZGluZzphLGVycm9yOm99PWJ0KHtxdWVyeUtleTpbIi9hcGkvb2UtZWxlbWVudHMiLGVdLGVuYWJsZWQ6ciYmISFlfSk7eS51c2VFZmZlY3QoKCk9PntpZihvKXtpZihKdChvKSl7dCh7dGl0bGU6IlVuYXV0aG9yaXplZCIsZGVzY3JpcHRpb246IllvdSBhcmUgbG9nZ2VkIG91dC4gTG9nZ2luZyBpbiBhZ2Fpbi4uLiIsdmFyaWFudDoiZGVzdHJ1Y3RpdmUifSksc2V0VGltZW91dCgoKT0+e3dpbmRvdy5sb2NhdGlvbi5ocmVmPSIvYXBpL2xvZ2luIn0sNTAwKTtyZXR1cm59dCh7dGl0bGU6IkVycm9yIixkZXNjcmlwdGlvbjoiRmFpbGVkIHRvIGxvYWQgZWxlbWVudCBkZXRhaWxzIix2YXJpYW50OiJkZXN0cnVjdGl2ZSJ9KX19LFtvLHRdKTtjb25zdCBsPWFzeW5jKCk9Pnt2YXIgTjtpZighcylyZXR1cm47Y29uc3R7anNQREY6eH09YXdhaXQgTDEoYXN5bmMoKT0+e2NvbnN0e2pzUERGOlN9PWF3YWl0IGltcG9ydCgiLi9qc3BkZi5lcy5taW4tQzhxTGZ2OVAuanMiKS50aGVuKF89Pl8uaik7cmV0dXJue2pzUERGOlN9fSxbXSksdj1uZXcgeDtsZXQgbT0yMDtjb25zdCB3PShTLF8saz05LFQ9MTY1LEw9MCk9Pnt2LnNldEZvbnRTaXplKGspO2NvbnN0IFA9VC1MO3JldHVybiB2LnNwbGl0VGV4dFRvU2l6ZShTLFApLmZvckVhY2goKEksVik9Pnt2LnRleHQoSSxfK0wsbSksbSs9ayouNisxfSksbX0saD0oUyxfPTEpPT57ZygxNSksbSs9Xz09PTE/ODo1LHYuc2V0VGV4dENvbG9yKDAsMCwwKSx2LnNldEZvbnQoImhlbHZldGljYSIsImJvbGQiKSx2LnNldEZvbnRTaXplKF89PT0xPzEyOjEwKSx2LnRleHQoUy50b1VwcGVyQ2FzZSgpLDIwLG0pLF89PT0xJiYodi5zZXRMaW5lV2lkdGgoLjMpLHYubGluZSgyMCxtKzEsMjArdi5nZXRUZXh0V2lkdGgoUy50b1VwcGVyQ2FzZSgpKSxtKzEpKSxtKz1fPT09MT82OjR9LGc9KFM9MjApPT57bStTPjI3NSYmKHYuYWRkUGFnZSgpLG09MjApfTt2LnNldFRleHRDb2xvcigwLDAsMCksdi5zZXRGb250KCJoZWx2ZXRpY2EiLCJib2xkIiksdi5zZXRGb250U2l6ZSgxNCksdi50ZXh0KCJPUEVSQVRJT05BTCBFWENFTExFTkNFIEVMRU1FTlQiLDEwNSw1MCx7YWxpZ246ImNlbnRlciJ9KSx2LnNldEZvbnRTaXplKDE2KSx2LnRleHQoYEVMRU1FTlQgTm8uICR7cy5lbGVtZW50TnVtYmVyfWAsMTA1LDY1LHthbGlnbjoiY2VudGVyIn0pLHYuc2V0Rm9udFNpemUoMTIpLHYuc2V0Rm9udCgiaGVsdmV0aWNhIiwibm9ybWFsIiksdi50ZXh0KHMudGl0bGUudG9VcHBlckNhc2UoKSwxMDUsODAse2FsaWduOiJjZW50ZXIifSksdi5zZXRGb250U2l6ZSg5KSx2LnRleHQoYEdlbmVyYXRlZDogJHtuZXcgRGF0ZSgpLnRvTG9jYWxlRGF0ZVN0cmluZygpfWAsMTA1LDExMCx7YWxpZ246ImNlbnRlciJ9KSx2LnRleHQoIldTTSBPcGVyYXRpb25hbCBFeGNlbGxlbmNlIEZyYW1ld29yayIsMTA1LDEyMCx7YWxpZ246ImNlbnRlciJ9KSx2LnNldExpbmVXaWR0aCguNSksdi5saW5lKDUwLDEzMCwxNjAsMTMwKSx2LmFkZFBhZ2UoKSxtPTIwLGgoIjEuIEVMRU1FTlQgT1ZFUlZJRVciLDEpLHYuc2V0VGV4dENvbG9yKDAsMCwwKSx2LnNldEZvbnQoImhlbHZldGljYSIsIm5vcm1hbCIpLHYuc2V0Rm9udFNpemUoOSksdyhgRWxlbWVudCBOdW1iZXI6ICR7cy5lbGVtZW50TnVtYmVyfWAsMjAsOSksdyhgRWxlbWVudCBUaXRsZTogJHtzLnRpdGxlfWAsMjAsOSksdyhgU3RhdHVzOiAke3MuaXNBY3RpdmU/IkFjdGl2ZSI6IkluYWN0aXZlIn1gLDIwLDkpLHcoYFRvdGFsIEFzc29jaWF0ZWQgUHJvY2Vzc2VzOiAkeygoTj1zLnByb2Nlc3Nlcyk9PW51bGw/dm9pZCAwOk4ubGVuZ3RoKXx8MH1gLDIwLDkpLG0rPTMscy5kZXNjcmlwdGlvbiYmKHYuc2V0Rm9udCgiaGVsdmV0aWNhIiwiYm9sZCIpLHcoIkRlc2NyaXB0aW9uOiIsMjAsOSksdi5zZXRGb250KCJoZWx2ZXRpY2EiLCJub3JtYWwiKSx3KHMuZGVzY3JpcHRpb24sMjAsOSksbSs9MyksKHMuY3JlYXRlZEF0fHxzLnVwZGF0ZWRBdCkmJih2LnNldEZvbnQoImhlbHZldGljYSIsImJvbGQiKSx3KCJUaW1lbGluZSBJbmZvcm1hdGlvbjoiLDIwLDkpLHYuc2V0Rm9udCgiaGVsdmV0aWNhIiwibm9ybWFsIikscy5jcmVhdGVkQXQmJncoYENyZWF0ZWQ6ICR7bmV3IERhdGUocy5jcmVhdGVkQXQpLnRvTG9jYWxlRGF0ZVN0cmluZygpfWAsMjAsOSkscy51cGRhdGVkQXQmJncoYExhc3QgVXBkYXRlZDogJHtuZXcgRGF0ZShzLnVwZGF0ZWRBdCkudG9Mb2NhbGVEYXRlU3RyaW5nKCl9YCwyMCw5KSxtKz01KSxzLnByb2Nlc3NlcyYmcy5wcm9jZXNzZXMubGVuZ3RoPjAmJihoKCIyLiBBU1NPQ0lBVEVEIFBST0NFU1NFUyIsMSksdi5zZXRGb250KCJoZWx2ZXRpY2EiLCJub3JtYWwiKSx3KGBUaGlzIGVsZW1lbnQgY29udGFpbnMgJHtzLnByb2Nlc3Nlcy5sZW5ndGh9IGFzc29jaWF0ZWQgcHJvY2Vzc2VzIHRoYXQgZGVmaW5lIHRoZSBvcGVyYXRpb25hbCBwcm9jZWR1cmVzIGFuZCBzdGFuZGFyZHMuIEVhY2ggcHJvY2VzcyBpbmNsdWRlcyBkZXRhaWxlZCBzdGVwcywgcmVzcG9uc2liaWxpdGllcywgYW5kIHBlcmZvcm1hbmNlIG1lYXN1cmVzIHRvIGVuc3VyZSBjb25zaXN0ZW50IGV4ZWN1dGlvbiBhbmQgY29udGludW91cyBpbXByb3ZlbWVudC5gLDIwLDkpLG0rPTUscy5wcm9jZXNzZXMuZm9yRWFjaCgoUyxfKT0+e2coNDApLGgoYDIuJHtfKzF9ICR7Uy5wcm9jZXNzTnVtYmVyfTogJHtTLm5hbWV9YCwyKSx2LnNldEZvbnQoImhlbHZldGljYSIsImJvbGQiKSx3KCJQcm9jZXNzIEluZm9ybWF0aW9uOiIsMjAsOSksdi5zZXRGb250KCJoZWx2ZXRpY2EiLCJub3JtYWwiKSx3KGBQcm9jZXNzIE51bWJlcjogJHtTLnByb2Nlc3NOdW1iZXJ9YCwyNSw4LDE2NSw1KSx3KGBQcm9jZXNzIE5hbWU6ICR7Uy5uYW1lfWAsMjUsOCwxNjUsNSksdyhgU3RhdHVzOiAke1Muc3RhdHVzfHwiRHJhZnQifWAsMjUsOCwxNjUsNSksdyhgUmV2aXNpb246ICR7Uy5yZXZpc2lvbnx8MX1gLDI1LDgsMTY1LDUpLFMucHJvY2Vzc093bmVyJiZ3KGBQcm9jZXNzIE93bmVyOiAke1MucHJvY2Vzc093bmVyfWAsMjUsOCwxNjUsNSksUy5pc3N1ZURhdGUmJncoYElzc3VlIERhdGU6ICR7bmV3IERhdGUoUy5pc3N1ZURhdGUpLnRvTG9jYWxlRGF0ZVN0cmluZygpfWAsMjUsOCwxNjUsNSksbSs9MyxTLmRlc2NyaXB0aW9uJiYodi5zZXRGb250KCJoZWx2ZXRpY2EiLCJib2xkIiksdygiUHJvY2VzcyBEZXNjcmlwdGlvbjoiLDIwLDkpLHYuc2V0Rm9udCgiaGVsdmV0aWNhIiwibm9ybWFsIiksdyhTLmRlc2NyaXB0aW9uLDI1LDgsMTY1LDUpLG0rPTMpLFMuZXhwZWN0YXRpb25zJiYodi5zZXRGb250KCJoZWx2ZXRpY2EiLCJib2xkIiksdygiRXhwZWN0YXRpb25zOiIsMjAsOSksdi5zZXRGb250KCJoZWx2ZXRpY2EiLCJub3JtYWwiKSx3KFMuZXhwZWN0YXRpb25zLDI1LDgsMTY1LDUpLG0rPTMpLFMucmVzcG9uc2liaWxpdGllcyYmKHYuc2V0Rm9udCgiaGVsdmV0aWNhIiwiYm9sZCIpLHcoIlJlc3BvbnNpYmlsaXRpZXM6IiwyMCw5KSx2LnNldEZvbnQoImhlbHZldGljYSIsIm5vcm1hbCIpLHcoUy5yZXNwb25zaWJpbGl0aWVzLDI1LDgsMTY1LDUpLG0rPTMpLFMuc3RlcHMmJlMuc3RlcHMubGVuZ3RoPjAmJihnKDMwKSx2LnNldEZvbnQoImhlbHZldGljYSIsImJvbGQiKSx3KGBEZXRhaWxlZCBQcm9jZXNzIFN0ZXBzICgke1Muc3RlcHMubGVuZ3RofSBzdGVwcyk6YCwyMCw5KSxtKz0yLFMuc3RlcHMuZm9yRWFjaChrPT57ZygyNSksdi5zZXRGb250KCJoZWx2ZXRpY2EiLCJib2xkIiksdyhgU3RlcCAke2suc3RlcE51bWJlcn06ICR7ay5zdGVwTmFtZX1gLDI1LDgsMTY1LDUpLHYuc2V0Rm9udCgiaGVsdmV0aWNhIiwibm9ybWFsIiksay5zdGVwRGV0YWlscyYmdyhgRGV0YWlsczogJHtrLnN0ZXBEZXRhaWxzfWAsMzAsOCwxNjUsMTApLGsucmVzcG9uc2liaWxpdGllcyYmdyhgUmVzcG9uc2liaWxpdGllczogJHtrLnJlc3BvbnNpYmlsaXRpZXN9YCwzMCw4LDE2NSwxMCksay5yZWZlcmVuY2VzJiZ3KGBSZWZlcmVuY2VzOiAke2sucmVmZXJlbmNlc31gLDMwLDgsMTY1LDEwKSxtKz0yfSksbSs9MyksUy5wcm9jZXNzU3RlcHNDb250ZW50JiYodi5zZXRGb250KCJoZWx2ZXRpY2EiLCJib2xkIiksdygiUHJvY2VzcyBTdGVwcyBPdmVydmlldzoiLDIwLDkpLHYuc2V0Rm9udCgiaGVsdmV0aWNhIiwibm9ybWFsIiksdyhTLnByb2Nlc3NTdGVwc0NvbnRlbnQsMjUsOCwxNjUsNSksbSs9MyksUy5wZXJmb3JtYW5jZU1lYXN1cmVDb250ZW50JiYoZygyMCksdi5zZXRGb250KCJoZWx2ZXRpY2EiLCJib2xkIiksdygiUGVyZm9ybWFuY2UgTWVhc3VyZXMgT3ZlcnZpZXc6IiwyMCw5KSx2LnNldEZvbnQoImhlbHZldGljYSIsIm5vcm1hbCIpLHcoUy5wZXJmb3JtYW5jZU1lYXN1cmVDb250ZW50LDI1LDgsMTY1LDUpLG0rPTMpLFMucGVyZm9ybWFuY2VNZWFzdXJlcyYmUy5wZXJmb3JtYW5jZU1lYXN1cmVzLmxlbmd0aD4wJiYoZygzMCksdi5zZXRGb250KCJoZWx2ZXRpY2EiLCJib2xkIiksdyhgUGVyZm9ybWFuY2UgTWVhc3VyZXMgKCR7Uy5wZXJmb3JtYW5jZU1lYXN1cmVzLmxlbmd0aH0gbWVhc3VyZXMpOmAsMjAsOSksbSs9MixTLnBlcmZvcm1hbmNlTWVhc3VyZXMuZm9yRWFjaCgoayxUKT0+e2coMjApLHYuc2V0Rm9udCgiaGVsdmV0aWNhIiwiYm9sZCIpLHcoYCR7VCsxfS4gJHtrLm1lYXN1cmVOYW1lfWAsMjUsOCwxNjUsNSksdi5zZXRGb250KCJoZWx2ZXRpY2EiLCJub3JtYWwiKSxrLmZvcm11bGEmJncoYEZvcm11bGE6ICR7ay5mb3JtdWxhfWAsMzAsOCwxNjUsMTApLGsudGFyZ2V0JiZ3KGBUYXJnZXQ6ICR7ay50YXJnZXR9YCwzMCw4LDE2NSwxMCksay5mcmVxdWVuY3kmJncoYEZyZXF1ZW5jeTogJHtrLmZyZXF1ZW5jeX1gLDMwLDgsMTY1LDEwKSxrLnNvdXJjZSYmdyhgU291cmNlOiAke2suc291cmNlfWAsMzAsOCwxNjUsMTApLG0rPTJ9KSxtKz0zKSxTLnByb2Nlc3NGbG93Q29udGVudCYmKHYuc2V0Rm9udCgiaGVsdmV0aWNhIiwiYm9sZCIpLHcoIlByb2Nlc3MgRmxvdzoiLDIwLDkpLHYuc2V0Rm9udCgiaGVsdmV0aWNhIiwibm9ybWFsIiksdyhTLnByb2Nlc3NGbG93Q29udGVudCwyNSw4LDE2NSw1KSxtKz0zKSxTLnJlc291cmNlUmVxdWlyZW1lbnRzJiYodi5zZXRGb250KCJoZWx2ZXRpY2EiLCJib2xkIiksdygiUmVzb3VyY2UgUmVxdWlyZW1lbnRzOiIsMjAsOSksdi5zZXRGb250KCJoZWx2ZXRpY2EiLCJub3JtYWwiKSx3KFMucmVzb3VyY2VSZXF1aXJlbWVudHMsMjUsOCwxNjUsNSksbSs9MyksUy5yaXNrQ29uc2lkZXJhdGlvbnMmJih2LnNldEZvbnQoImhlbHZldGljYSIsImJvbGQiKSx3KCJSaXNrIENvbnNpZGVyYXRpb25zOiIsMjAsOSksdi5zZXRGb250KCJoZWx2ZXRpY2EiLCJub3JtYWwiKSx3KFMucmlza0NvbnNpZGVyYXRpb25zLDI1LDgsMTY1LDUpLG0rPTMpLG0rPTh9KSk7Y29uc3QgYj12LmdldE51bWJlck9mUGFnZXMoKTtmb3IobGV0IFM9MTtTPD1iO1MrKyl2LnNldFBhZ2UoUyksdi5zZXRMaW5lV2lkdGgoLjMpLHYuc2V0RHJhd0NvbG9yKDAsMCwwKSx2LmxpbmUoMjAsMjg1LDE5MCwyODUpLHYuc2V0VGV4dENvbG9yKDAsMCwwKSx2LnNldEZvbnQoImhlbHZldGljYSIsIm5vcm1hbCIpLHYuc2V0Rm9udFNpemUoNyksdi50ZXh0KGBPRSBFbGVtZW50ICR7cy5lbGVtZW50TnVtYmVyfSAtICR7cy50aXRsZX1gLDIwLDI5Miksdi50ZXh0KGBQYWdlICR7U30gb2YgJHtifWAsMTkwLDI5Mix7YWxpZ246InJpZ2h0In0pLHYudGV4dChgR2VuZXJhdGVkOiAke25ldyBEYXRlKCkudG9Mb2NhbGVEYXRlU3RyaW5nKCl9YCwxMDUsMjkyLHthbGlnbjoiY2VudGVyIn0pO3Yuc2F2ZShgT0UtRWxlbWVudC0ke3MuZWxlbWVudE51bWJlcn0tJHtzLnRpdGxlLnJlcGxhY2UoL1teYS16QS1aMC05XS9nLCItIil9LnBkZmApLHQoe3RpdGxlOiJFeHBvcnQgU3VjY2Vzc2Z1bCIsZGVzY3JpcHRpb246IkVsZW1lbnQgcmVwb3J0IGhhcyBiZWVuIGV4cG9ydGVkIGFzIFBERiJ9KX07aWYobnx8IXImJiFuKXJldHVybiBpLmpzeCgiZGl2Iix7Y2xhc3NOYW1lOiJtaW4taC1zY3JlZW4gZmxleCBpdGVtcy1jZW50ZXIganVzdGlmeS1jZW50ZXIiLGNoaWxkcmVuOmkuanN4cygiZGl2Iix7Y2xhc3NOYW1lOiJ0ZXh0LWNlbnRlciIsY2hpbGRyZW46W2kuanN4KCJkaXYiLHtjbGFzc05hbWU6ImFuaW1hdGUtc3BpbiByb3VuZGVkLWZ1bGwgaC04IHctOCBib3JkZXItYi0yIGJvcmRlci1wcmltYXJ5IG14LWF1dG8gbWItNCJ9KSxpLmpzeCgicCIse2NsYXNzTmFtZToidGV4dC1tdXRlZC1mb3JlZ3JvdW5kIixjaGlsZHJlbjoiTG9hZGluZy4uLiJ9KV19KX0pO2lmKGEpcmV0dXJuIGkuanN4cygiZGl2Iix7Y2xhc3NOYW1lOiJtaW4taC1zY3JlZW4gZmxleCBiZy1iYWNrZ3JvdW5kIixjaGlsZHJlbjpbaS5qc3goRnQse30pLGkuanN4cygibWFpbiIse2NsYXNzTmFtZToiZmxleC0xIG92ZXJmbG93LWF1dG8iLGNoaWxkcmVuOltpLmpzeChJdCx7fSksaS5qc3goImRpdiIse2NsYXNzTmFtZToicC02IixjaGlsZHJlbjppLmpzeHMoImRpdiIse2NsYXNzTmFtZToiYW5pbWF0ZS1wdWxzZSIsY2hpbGRyZW46W2kuanN4KCJkaXYiLHtjbGFzc05hbWU6ImgtOCBiZy1tdXRlZCByb3VuZGVkIG1iLTQgdy0xLzMifSksaS5qc3goImRpdiIse2NsYXNzTmFtZToiaC02IGJnLW11dGVkIHJvdW5kZWQgbWItNiB3LTEvMiJ9KSxpLmpzeHMoImRpdiIse2NsYXNzTmFtZToiZ3JpZCBncmlkLWNvbHMtMSBsZzpncmlkLWNvbHMtMyBnYXAtNiIsY2hpbGRyZW46W2kuanN4KCJkaXYiLHtjbGFzc05hbWU6ImxnOmNvbC1zcGFuLTIgc3BhY2UteS02IixjaGlsZHJlbjpbLi4uQXJyYXkoMyldLm1hcCgoeCx2KT0+aS5qc3goImRpdiIse2NsYXNzTmFtZToiaC00OCBiZy1tdXRlZCByb3VuZGVkLWxnIn0sdikpfSksaS5qc3goImRpdiIse2NsYXNzTmFtZToic3BhY2UteS02IixjaGlsZHJlbjpbLi4uQXJyYXkoMildLm1hcCgoeCx2KT0+aS5qc3goImRpdiIse2NsYXNzTmFtZToiaC0zMiBiZy1tdXRlZCByb3VuZGVkLWxnIn0sdikpfSldfSldfSl9KV19KV19KTtpZighcylyZXR1cm4gaS5qc3hzKCJkaXYiLHtjbGFzc05hbWU6Im1pbi1oLXNjcmVlbiBmbGV4IGJnLWJhY2tncm91bmQiLGNoaWxkcmVuOltpLmpzeChGdCx7fSksaS5qc3hzKCJtYWluIix7Y2xhc3NOYW1lOiJmbGV4LTEgb3ZlcmZsb3ctYXV0byIsY2hpbGRyZW46W2kuanN4KEl0LHt9KSxpLmpzeCgiZGl2Iix7Y2xhc3NOYW1lOiJwLTYiLGNoaWxkcmVuOmkuanN4KGllLHtjaGlsZHJlbjppLmpzeHMobGUse2NsYXNzTmFtZToicC04IHRleHQtY2VudGVyIixjaGlsZHJlbjpbaS5qc3goWXMse2NsYXNzTmFtZToidy0xMiBoLTEyIHRleHQtbXV0ZWQtZm9yZWdyb3VuZCBteC1hdXRvIG1iLTQifSksaS5qc3goImgzIix7Y2xhc3NOYW1lOiJ0ZXh0LWxnIGZvbnQtc2VtaWJvbGQgbWItMiIsY2hpbGRyZW46IkVsZW1lbnQgTm90IEZvdW5kIn0pLGkuanN4KCJwIix7Y2xhc3NOYW1lOiJ0ZXh0LW11dGVkLWZvcmVncm91bmQgbWItNCIsY2hpbGRyZW46IlRoZSByZXF1ZXN0ZWQgT0UgZWxlbWVudCBjb3VsZCBub3QgYmUgZm91bmQgb3IgeW91IGRvbid0IGhhdmUgcGVybWlzc2lvbiB0byB2aWV3IGl0LiJ9KSxpLmpzeChZLHthc0NoaWxkOiEwLCJkYXRhLXRlc3RpZCI6ImJ1dHRvbi1iYWNrLXRvLWRhc2hib2FyZCIsY2hpbGRyZW46aS5qc3hzKHV0LHtocmVmOiIvIixjaGlsZHJlbjpbaS5qc3gob2kse2NsYXNzTmFtZToidy00IGgtNCBtci0yIn0pLCJCYWNrIHRvIERhc2hib2FyZCJdfSl9KV19KX0pfSldfSldfSk7Y29uc3QgYz14PT57c3dpdGNoKHgpe2Nhc2UiYWN0aXZlIjpyZXR1cm4iYmctZ3JlZW4tMTAwIHRleHQtZ3JlZW4tODAwIjtjYXNlInJldmlldyI6cmV0dXJuImJnLXllbGxvdy0xMDAgdGV4dC15ZWxsb3ctODAwIjtjYXNlImRyYWZ0IjpyZXR1cm4iYmctZ3JheS0xMDAgdGV4dC1ncmF5LTgwMCI7Y2FzZSJhcmNoaXZlZCI6cmV0dXJuImJnLXJlZC0xMDAgdGV4dC1yZWQtODAwIjtkZWZhdWx0OnJldHVybiJiZy1ibHVlLTEwMCB0ZXh0LWJsdWUtODAwIn19O3JldHVybiBpLmpzeHMoImRpdiIse2NsYXNzTmFtZToibWluLWgtc2NyZWVuIGZsZXggYmctYmFja2dyb3VuZCIsY2hpbGRyZW46W2kuanN4KEZ0LHt9KSxpLmpzeHMoIm1haW4iLHtjbGFzc05hbWU6ImZsZXgtMSBvdmVyZmxvdy1hdXRvIixjaGlsZHJlbjpbaS5qc3goSXQse30pLGkuanN4cygiZGl2Iix7Y2xhc3NOYW1lOiJwLTYiLGNoaWxkcmVuOltpLmpzeHMoImRpdiIse2NsYXNzTmFtZToiZmxleCBpdGVtcy1jZW50ZXIganVzdGlmeS1iZXR3ZWVuIG1iLTYiLGNoaWxkcmVuOltpLmpzeHMoImRpdiIse2NsYXNzTmFtZToiZmxleCBpdGVtcy1jZW50ZXIgc3BhY2UteC00IixjaGlsZHJlbjpbaS5qc3goWSx7dmFyaWFudDoiZ2hvc3QiLHNpemU6InNtIixhc0NoaWxkOiEwLCJkYXRhLXRlc3RpZCI6ImJ1dHRvbi1iYWNrIixjaGlsZHJlbjppLmpzeHModXQse2hyZWY6Ii8iLGNoaWxkcmVuOltpLmpzeChvaSx7Y2xhc3NOYW1lOiJ3LTQgaC00IG1yLTIifSksIkJhY2siXX0pfSksaS5qc3goeWEse29yaWVudGF0aW9uOiJ2ZXJ0aWNhbCIsY2xhc3NOYW1lOiJoLTYifSksaS5qc3hzKCJkaXYiLHtjaGlsZHJlbjpbaS5qc3hzKCJkaXYiLHtjbGFzc05hbWU6ImZsZXggaXRlbXMtY2VudGVyIHNwYWNlLXgtMyBtYi0yIixjaGlsZHJlbjpbaS5qc3goImRpdiIse2NsYXNzTmFtZToidy0xMCBoLTEwIHJvdW5kZWQtbGcgZmxleCBpdGVtcy1jZW50ZXIganVzdGlmeS1jZW50ZXIgdGV4dC0yeGwiLHN0eWxlOntiYWNrZ3JvdW5kQ29sb3I6cy5jb2xvcnx8IiMzQjgyRjYifSxjaGlsZHJlbjpzLmljb259KSxpLmpzeHMoImgxIix7Y2xhc3NOYW1lOiJ0ZXh0LTJ4bCBmb250LWJvbGQiLCJkYXRhLXRlc3RpZCI6ImVsZW1lbnQtdGl0bGUiLGNoaWxkcmVuOlsiT0UgRWxlbWVudCBOby4gIixzLmVsZW1lbnROdW1iZXIsIjogIixzLnRpdGxlXX0pXX0pLGkuanN4cygiZGl2Iix7Y2xhc3NOYW1lOiJmbGV4IGl0ZW1zLWNlbnRlciBzcGFjZS14LTQgdGV4dC1zbSB0ZXh0LW11dGVkLWZvcmVncm91bmQiLGNoaWxkcmVuOltpLmpzeHMoInNwYW4iLHsiZGF0YS10ZXN0aWQiOiJlbGVtZW50LXByb2Nlc3Nlcy1jb3VudCIsY2hpbGRyZW46WygodT1zLnByb2Nlc3Nlcyk9PW51bGw/dm9pZCAwOnUubGVuZ3RoKXx8MCwiIFByb2Nlc3MiLCgoKGQ9cy5wcm9jZXNzZXMpPT1udWxsP3ZvaWQgMDpkLmxlbmd0aCl8fDApIT09MT8iZXMiOiIiXX0pLGkuanN4KCJzcGFuIix7Y2hpbGRyZW46IuKAoiJ9KSxpLmpzeChiZSx7dmFyaWFudDpzLmlzQWN0aXZlPyJkZWZhdWx0Ijoic2Vjb25kYXJ5IiwiZGF0YS10ZXN0aWQiOiJlbGVtZW50LXN0YXR1cyIsY2hpbGRyZW46cy5pc0FjdGl2ZT8iQWN0aXZlIjoiSW5hY3RpdmUifSldfSldfSldfSksaS5qc3hzKCJkaXYiLHtjbGFzc05hbWU6ImZsZXggaXRlbXMtY2VudGVyIHNwYWNlLXgtMyIsY2hpbGRyZW46W2kuanN4KFkse3ZhcmlhbnQ6Im91dGxpbmUiLHNpemU6InNtIixhc0NoaWxkOiEwLCJkYXRhLXRlc3RpZCI6ImJ1dHRvbi1lZGl0LWVsZW1lbnQiLGNoaWxkcmVuOmkuanN4cyh1dCx7aHJlZjpgL2VsZW1lbnQvJHtzLmlkfS9lZGl0YCxjaGlsZHJlbjpbaS5qc3goeUUse2NsYXNzTmFtZToidy00IGgtNCBtci0yIn0pLCJFZGl0IEVsZW1lbnQiXX0pfSksaS5qc3hzKFkse3ZhcmlhbnQ6Im91dGxpbmUiLHNpemU6InNtIixvbkNsaWNrOmwsImRhdGEtdGVzdGlkIjoiYnV0dG9uLWV4cG9ydCIsY2hpbGRyZW46W2kuanN4KEIwLHtjbGFzc05hbWU6InctNCBoLTQgbXItMiJ9KSwiRXhwb3J0IFJlcG9ydCJdfSksaS5qc3goWSx7c2l6ZToic20iLGFzQ2hpbGQ6ITAsImRhdGEtdGVzdGlkIjoiYnV0dG9uLWNyZWF0ZS1wcm9jZXNzIixjaGlsZHJlbjppLmpzeHModXQse2hyZWY6YC9jcmVhdGUtcHJvY2Vzcz9lbGVtZW50SWQ9JHtzLmlkfWAsY2hpbGRyZW46W2kuanN4KEh0LHtjbGFzc05hbWU6InctNCBoLTQgbXItMiJ9KSwiQ3JlYXRlIFByb2Nlc3MiXX0pfSldfSldfSksaS5qc3hzKCJkaXYiLHtjbGFzc05hbWU6ImdyaWQgZ3JpZC1jb2xzLTEgbGc6Z3JpZC1jb2xzLTMgZ2FwLTYiLGNoaWxkcmVuOltpLmpzeHMoImRpdiIse2NsYXNzTmFtZToibGc6Y29sLXNwYW4tMiBzcGFjZS15LTYiLGNoaWxkcmVuOltpLmpzeHMoaWUse2NoaWxkcmVuOltpLmpzeChFZSx7Y2hpbGRyZW46aS5qc3hzKENlLHtjbGFzc05hbWU6ImZsZXggaXRlbXMtY2VudGVyIHNwYWNlLXgtMiIsY2hpbGRyZW46W2kuanN4KFlzLHtjbGFzc05hbWU6InctNSBoLTUifSksaS5qc3goInNwYW4iLHtjaGlsZHJlbjoiRWxlbWVudCBPdmVydmlldyJ9KV19KX0pLGkuanN4cyhsZSx7Y2hpbGRyZW46W3MuZGVzY3JpcHRpb24/aS5qc3goInAiLHtjbGFzc05hbWU6InRleHQtbXV0ZWQtZm9yZWdyb3VuZCBtYi02IiwiZGF0YS10ZXN0aWQiOiJlbGVtZW50LWRlc2NyaXB0aW9uIixjaGlsZHJlbjpzLmRlc2NyaXB0aW9ufSk6aS5qc3goInAiLHtjbGFzc05hbWU6InRleHQtbXV0ZWQtZm9yZWdyb3VuZCBpdGFsaWMgbWItNiIsY2hpbGRyZW46Ik5vIGRlc2NyaXB0aW9uIGF2YWlsYWJsZS4ifSksaS5qc3hzKCJkaXYiLHtjbGFzc05hbWU6Im10LTYiLGNoaWxkcmVuOltpLmpzeHMoImgzIix7Y2xhc3NOYW1lOiJ0ZXh0LWxnIGZvbnQtc2VtaWJvbGQgbWItNCBmbGV4IGl0ZW1zLWNlbnRlciBzcGFjZS14LTIiLGNoaWxkcmVuOltpLmpzeChKZSx7Y2xhc3NOYW1lOiJ3LTUgaC01In0pLGkuanN4KCJzcGFuIix7Y2hpbGRyZW46IlByb2Nlc3MgTWluZCBNYXAifSldfSksaS5qc3goUlAse3Byb2Nlc3NlczooKGY9cy5wcm9jZXNzZXMpPT1udWxsP3ZvaWQgMDpmLm1hcCh4PT57dmFyIHY7cmV0dXJue2lkOnguaWQscHJvY2Vzc051bWJlcjp4LnByb2Nlc3NOdW1iZXIsbmFtZTp4Lm5hbWUsc3RlcHM6KCh2PXguc3RlcHMpPT1udWxsP3ZvaWQgMDp2Lm1hcChtPT4oe2lkOm0uaWQsc3RlcE51bWJlcjptLnN0ZXBOdW1iZXIsc3RlcE5hbWU6bS5zdGVwTmFtZSxzdGVwRGV0YWlsczptLnN0ZXBEZXRhaWxzfSkpKXx8W119fSkpfHxbXSxlbGVtZW50VGl0bGU6cy50aXRsZX0pXX0pXX0pXX0pLGkuanN4cyhpZSx7Y2hpbGRyZW46W2kuanN4KEVlLHtjaGlsZHJlbjppLmpzeHMoQ2Use2NsYXNzTmFtZToiZmxleCBpdGVtcy1jZW50ZXIgc3BhY2UteC0yIixjaGlsZHJlbjpbaS5qc3goSmUse2NsYXNzTmFtZToidy01IGgtNSJ9KSxpLmpzeCgic3BhbiIse2NoaWxkcmVuOiJBc3NvY2lhdGVkIFByb2Nlc3NlcyJ9KV19KX0pLGkuanN4KGxlLHtjaGlsZHJlbjpzLnByb2Nlc3NlcyYmcy5wcm9jZXNzZXMubGVuZ3RoPjA/aS5qc3goImRpdiIse2NsYXNzTmFtZToiZ3JpZCBncmlkLWNvbHMtMSBnYXAtNCIsY2hpbGRyZW46cy5wcm9jZXNzZXMubWFwKHg9PmkuanN4KGllLHtjbGFzc05hbWU6ImN1cnNvci1wb2ludGVyIHRyYW5zaXRpb24tYWxsIGR1cmF0aW9uLTIwMCBob3ZlcjpzaGFkb3ctbWQiLCJkYXRhLXRlc3RpZCI6YHByb2Nlc3MtY2FyZC0ke3guaWR9YCxjaGlsZHJlbjppLmpzeCh1dCx7aHJlZjpgL3Byb2Nlc3MvJHt4LmlkfWAsY2hpbGRyZW46aS5qc3hzKGxlLHtjbGFzc05hbWU6InAtNCIsY2hpbGRyZW46W2kuanN4cygiZGl2Iix7Y2xhc3NOYW1lOiJmbGV4IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWJldHdlZW4gbWItMyIsY2hpbGRyZW46W2kuanN4cygiZGl2Iix7Y2xhc3NOYW1lOiJmbGV4IGl0ZW1zLWNlbnRlciBzcGFjZS14LTMiLGNoaWxkcmVuOltpLmpzeCgiZGl2Iix7Y2xhc3NOYW1lOiJ3LTggaC04IGJnLXByaW1hcnkvMTAgcm91bmRlZC1sZyBmbGV4IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWNlbnRlciIsY2hpbGRyZW46aS5qc3goSmUse2NsYXNzTmFtZToidy00IGgtNCB0ZXh0LXByaW1hcnkifSl9KSxpLmpzeHMoImRpdiIse2NoaWxkcmVuOltpLmpzeCgiaDMiLHtjbGFzc05hbWU6ImZvbnQtc2VtaWJvbGQgdGV4dC1zbSIsY2hpbGRyZW46eC5uYW1lfSksaS5qc3goInAiLHtjbGFzc05hbWU6InRleHQteHMgdGV4dC1tdXRlZC1mb3JlZ3JvdW5kIixjaGlsZHJlbjp4LnByb2Nlc3NOdW1iZXJ9KV19KV19KSxpLmpzeChiZSx7Y2xhc3NOYW1lOmMoeC5zdGF0dXN8fCJkcmFmdCIpLGNoaWxkcmVuOnguc3RhdHVzfHwiZHJhZnQifSldfSkseC5kZXNjcmlwdGlvbiYmaS5qc3goInAiLHtjbGFzc05hbWU6InRleHQtc20gdGV4dC1tdXRlZC1mb3JlZ3JvdW5kIG1iLTMgbGluZS1jbGFtcC0yIixjaGlsZHJlbjp4LmRlc2NyaXB0aW9ufSksaS5qc3hzKCJkaXYiLHtjbGFzc05hbWU6ImZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktYmV0d2VlbiB0ZXh0LXhzIHRleHQtbXV0ZWQtZm9yZWdyb3VuZCBtYi0zIixjaGlsZHJlbjpbaS5qc3hzKCJkaXYiLHtjbGFzc05hbWU6ImZsZXggaXRlbXMtY2VudGVyIHNwYWNlLXgtNCIsY2hpbGRyZW46W3gucHJvY2Vzc093bmVyJiZpLmpzeHMoImRpdiIse2NsYXNzTmFtZToiZmxleCBpdGVtcy1jZW50ZXIgc3BhY2UteC0xIixjaGlsZHJlbjpbaS5qc3gocTAse2NsYXNzTmFtZToidy0zIGgtMyJ9KSxpLmpzeCgic3BhbiIse2NoaWxkcmVuOngucHJvY2Vzc093bmVyfSldfSkseC51cGRhdGVkQXQmJmkuanN4cygiZGl2Iix7Y2xhc3NOYW1lOiJmbGV4IGl0ZW1zLWNlbnRlciBzcGFjZS14LTEiLGNoaWxkcmVuOltpLmpzeCgkMCx7Y2xhc3NOYW1lOiJ3LTMgaC0zIn0pLGkuanN4KCJzcGFuIix7Y2hpbGRyZW46bmV3IERhdGUoeC51cGRhdGVkQXQpLnRvTG9jYWxlRGF0ZVN0cmluZygpfSldfSldfSkseC5pc01hbmRhdG9yeSYmaS5qc3hzKCJkaXYiLHtjbGFzc05hbWU6ImZsZXggaXRlbXMtY2VudGVyIHNwYWNlLXgtMSB0ZXh0LXByaW1hcnkiLGNoaWxkcmVuOltpLmpzeChKZSx7Y2xhc3NOYW1lOiJ3LTMgaC0zIn0pLGkuanN4KCJzcGFuIix7Y2xhc3NOYW1lOiJ0ZXh0LXhzIGZvbnQtbWVkaXVtIixjaGlsZHJlbjoiTWFuZGF0b3J5In0pXX0pXX0pLGkuanN4KCJkaXYiLHtjbGFzc05hbWU6Im10LTMgcHQtMyBib3JkZXItdCBib3JkZXItYm9yZGVyLzUwIixjaGlsZHJlbjppLmpzeChBaCx7cHJvY2Vzc051bWJlcjp4LnByb2Nlc3NOdW1iZXIsc3RlcHM6W10sY29tcGFjdDohMH0pfSldfSl9KX0seC5pZCkpfSk6aS5qc3hzKCJkaXYiLHtjbGFzc05hbWU6InRleHQtY2VudGVyIHB5LTggdGV4dC1tdXRlZC1mb3JlZ3JvdW5kIixjaGlsZHJlbjpbaS5qc3goSmUse2NsYXNzTmFtZToidy0xMiBoLTEyIG14LWF1dG8gbWItNCBvcGFjaXR5LTUwIn0pLGkuanN4KCJoMyIse2NsYXNzTmFtZToidGV4dC1sZyBmb250LW1lZGl1bSBtYi0yIixjaGlsZHJlbjoiTm8gUHJvY2Vzc2VzIFlldCJ9KSxpLmpzeCgicCIse2NsYXNzTmFtZToibWItNCIsY2hpbGRyZW46IlRoaXMgZWxlbWVudCBkb2Vzbid0IGhhdmUgYW55IHByb2Nlc3NlcyBkZWZpbmVkIHlldC4ifSksaS5qc3goWSx7YXNDaGlsZDohMCxjaGlsZHJlbjppLmpzeHModXQse2hyZWY6YC9jcmVhdGUtcHJvY2Vzcz9lbGVtZW50SWQ9JHtzLmlkfWAsY2hpbGRyZW46W2kuanN4KEh0LHtjbGFzc05hbWU6InctNCBoLTQgbXItMiJ9KSwiQ3JlYXRlIEZpcnN0IFByb2Nlc3MiXX0pfSldfSl9KV19KSxpLmpzeHMoaWUse2NoaWxkcmVuOltpLmpzeChFZSx7Y2hpbGRyZW46aS5qc3hzKENlLHtjbGFzc05hbWU6ImZsZXggaXRlbXMtY2VudGVyIHNwYWNlLXgtMiIsY2hpbGRyZW46W2kuanN4KHNyLHtjbGFzc05hbWU6InctNSBoLTUifSksaS5qc3goInNwYW4iLHtjaGlsZHJlbjoiUGVyZm9ybWFuY2UgTWVhc3VyZW1lbnRzIn0pXX0pfSksaS5qc3gobGUse2NoaWxkcmVuOnMucHJvY2Vzc2VzJiZzLnByb2Nlc3Nlcy5sZW5ndGg+MD9pLmpzeCgiZGl2Iix7Y2xhc3NOYW1lOiJzcGFjZS15LTYiLGNoaWxkcmVuOnMucHJvY2Vzc2VzLm1hcCh4PT5pLmpzeHMoImRpdiIse2NsYXNzTmFtZToiYm9yZGVyLWwtNCBib3JkZXItcHJpbWFyeS8yMCBwbC00IixjaGlsZHJlbjpbaS5qc3goImRpdiIse2NsYXNzTmFtZToibWItNCIsY2hpbGRyZW46aS5qc3hzKCJoMyIse2NsYXNzTmFtZToiZm9udC1zZW1pYm9sZCB0ZXh0LWxnIGZsZXggaXRlbXMtY2VudGVyIHNwYWNlLXgtMiIsY2hpbGRyZW46W2kuanN4KEplLHtjbGFzc05hbWU6InctNSBoLTUgdGV4dC1wcmltYXJ5In0pLGkuanN4cygic3BhbiIse2NoaWxkcmVuOlt4LnByb2Nlc3NOdW1iZXIsIjogIix4Lm5hbWVdfSldfSl9KSx4LnBlcmZvcm1hbmNlTWVhc3VyZXMmJngucGVyZm9ybWFuY2VNZWFzdXJlcy5sZW5ndGg+MD9pLmpzeCgiZGl2Iix7Y2xhc3NOYW1lOiJvdmVyZmxvdy14LWF1dG8iLGNoaWxkcmVuOmkuanN4cygidGFibGUiLHtjbGFzc05hbWU6InctZnVsbCBib3JkZXIgYm9yZGVyLWJvcmRlciByb3VuZGVkLWxnIixjaGlsZHJlbjpbaS5qc3goInRoZWFkIix7Y2hpbGRyZW46aS5qc3hzKCJ0ciIse2NsYXNzTmFtZToiYm9yZGVyLWIgYmctbXV0ZWQvNTAiLGNoaWxkcmVuOltpLmpzeCgidGgiLHtjbGFzc05hbWU6InRleHQtbGVmdCBwLTMgZm9udC1zZW1pYm9sZCB0ZXh0LXNtIixjaGlsZHJlbjoiIyJ9KSxpLmpzeCgidGgiLHtjbGFzc05hbWU6InRleHQtbGVmdCBwLTMgZm9udC1zZW1pYm9sZCB0ZXh0LXNtIixjaGlsZHJlbjoiTWVhc3VyZSBOYW1lIn0pLGkuanN4KCJ0aCIse2NsYXNzTmFtZToidGV4dC1sZWZ0IHAtMyBmb250LXNlbWlib2xkIHRleHQtc20iLGNoaWxkcmVuOiJUYXJnZXQifSksaS5qc3goInRoIix7Y2xhc3NOYW1lOiJ0ZXh0LWxlZnQgcC0zIGZvbnQtc2VtaWJvbGQgdGV4dC1zbSIsY2hpbGRyZW46IkZvcm11bGEifSksaS5qc3goInRoIix7Y2xhc3NOYW1lOiJ0ZXh0LWxlZnQgcC0zIGZvbnQtc2VtaWJvbGQgdGV4dC1zbSIsY2hpbGRyZW46IkZyZXF1ZW5jeSJ9KSxpLmpzeCgidGgiLHtjbGFzc05hbWU6InRleHQtbGVmdCBwLTMgZm9udC1zZW1pYm9sZCB0ZXh0LXNtIixjaGlsZHJlbjoiU291cmNlIn0pXX0pfSksaS5qc3goInRib2R5Iix7Y2hpbGRyZW46eC5wZXJmb3JtYW5jZU1lYXN1cmVzLm1hcCgodixtKT0+aS5qc3hzKCJ0ciIse2NsYXNzTmFtZToiYm9yZGVyLWIgbGFzdDpib3JkZXItYi0wIGhvdmVyOmJnLW11dGVkLzMwIixjaGlsZHJlbjpbaS5qc3goInRkIix7Y2xhc3NOYW1lOiJwLTMgdGV4dC1zbSBmb250LW1lZGl1bSB0ZXh0LXByaW1hcnkiLGNoaWxkcmVuOm0rMX0pLGkuanN4KCJ0ZCIse2NsYXNzTmFtZToicC0zIHRleHQtc20gZm9udC1tZWRpdW0iLGNoaWxkcmVuOnYubWVhc3VyZU5hbWV9KSxpLmpzeCgidGQiLHtjbGFzc05hbWU6InAtMyIsY2hpbGRyZW46di50YXJnZXQmJmkuanN4KGJlLHt2YXJpYW50OiJvdXRsaW5lIixjbGFzc05hbWU6InRleHQteHMiLGNoaWxkcmVuOnYudGFyZ2V0fSl9KSxpLmpzeCgidGQiLHtjbGFzc05hbWU6InAtMyB0ZXh0LXhzIHRleHQtbXV0ZWQtZm9yZWdyb3VuZCBtYXgtdy14cyIsY2hpbGRyZW46aS5qc3goImRpdiIse2NsYXNzTmFtZToidHJ1bmNhdGUiLHRpdGxlOnYuZm9ybXVsYSxjaGlsZHJlbjp2LmZvcm11bGF8fCItIn0pfSksaS5qc3goInRkIix7Y2xhc3NOYW1lOiJwLTMgdGV4dC14cyB0ZXh0LW11dGVkLWZvcmVncm91bmQiLGNoaWxkcmVuOnYuZnJlcXVlbmN5fHwiLSJ9KSxpLmpzeCgidGQiLHtjbGFzc05hbWU6InAtMyB0ZXh0LXhzIHRleHQtbXV0ZWQtZm9yZWdyb3VuZCBtYXgtdy14cyIsY2hpbGRyZW46aS5qc3goImRpdiIse2NsYXNzTmFtZToidHJ1bmNhdGUiLHRpdGxlOnYuc291cmNlLGNoaWxkcmVuOnYuc291cmNlfHwiLSJ9KX0pXX0sdi5pZCkpfSldfSl9KTppLmpzeHMoImRpdiIse2NsYXNzTmFtZToidGV4dC1jZW50ZXIgcHktNCB0ZXh0LW11dGVkLWZvcmVncm91bmQgYmctbXV0ZWQvMzAgcm91bmRlZC1sZyIsY2hpbGRyZW46W2kuanN4KHNyLHtjbGFzc05hbWU6InctOCBoLTggbXgtYXV0byBtYi0yIG9wYWNpdHktNTAifSksaS5qc3goInAiLHtjbGFzc05hbWU6InRleHQtc20iLGNoaWxkcmVuOiJObyBwZXJmb3JtYW5jZSBtZWFzdXJlcyBkZWZpbmVkIn0pXX0pXX0seC5pZCkpfSk6aS5qc3hzKCJkaXYiLHtjbGFzc05hbWU6InRleHQtY2VudGVyIHB5LTggdGV4dC1tdXRlZC1mb3JlZ3JvdW5kIixjaGlsZHJlbjpbaS5qc3goc3Ise2NsYXNzTmFtZToidy0xMiBoLTEyIG14LWF1dG8gbWItNCBvcGFjaXR5LTUwIn0pLGkuanN4KCJoMyIse2NsYXNzTmFtZToidGV4dC1sZyBmb250LW1lZGl1bSBtYi0yIixjaGlsZHJlbjoiTm8gUGVyZm9ybWFuY2UgRGF0YSJ9KSxpLmpzeCgicCIse2NoaWxkcmVuOiJQZXJmb3JtYW5jZSBtZWFzdXJlbWVudHMgd2lsbCBiZSBhdmFpbGFibGUgb25jZSBwcm9jZXNzZXMgYXJlIGNyZWF0ZWQuIn0pXX0pfSldfSldfSksaS5qc3goImRpdiIse2NsYXNzTmFtZToic3BhY2UteS02IixjaGlsZHJlbjppLmpzeHMoaWUse2NoaWxkcmVuOltpLmpzeChFZSx7Y2hpbGRyZW46aS5qc3hzKENlLHtjbGFzc05hbWU6ImZsZXggaXRlbXMtY2VudGVyIHNwYWNlLXgtMiIsY2hpbGRyZW46W2kuanN4KEZuLHtjbGFzc05hbWU6InctNSBoLTUifSksaS5qc3goInNwYW4iLHtjaGlsZHJlbjoiRWxlbWVudCBEZXRhaWxzIn0pXX0pfSksaS5qc3hzKGxlLHtjbGFzc05hbWU6InNwYWNlLXktNCIsY2hpbGRyZW46W2kuanN4cygiZGl2Iix7Y2hpbGRyZW46W2kuanN4KCJkdCIse2NsYXNzTmFtZToidGV4dC1zbSBmb250LW1lZGl1bSB0ZXh0LW11dGVkLWZvcmVncm91bmQiLGNoaWxkcmVuOiJFbGVtZW50IE51bWJlciJ9KSxpLmpzeCgiZGQiLHtjbGFzc05hbWU6Im10LTEgdGV4dC1zbSIsImRhdGEtdGVzdGlkIjoiZWxlbWVudC1udW1iZXIiLGNoaWxkcmVuOnMuZWxlbWVudE51bWJlcn0pXX0pLGkuanN4cygiZGl2Iix7Y2hpbGRyZW46W2kuanN4KCJkdCIse2NsYXNzTmFtZToidGV4dC1zbSBmb250LW1lZGl1bSB0ZXh0LW11dGVkLWZvcmVncm91bmQiLGNoaWxkcmVuOiJTdGF0dXMifSksaS5qc3goImRkIix7Y2xhc3NOYW1lOiJtdC0xIixjaGlsZHJlbjppLmpzeChiZSx7dmFyaWFudDpzLmlzQWN0aXZlPyJkZWZhdWx0Ijoic2Vjb25kYXJ5IixjaGlsZHJlbjpzLmlzQWN0aXZlPyJBY3RpdmUiOiJJbmFjdGl2ZSJ9KX0pXX0pLGkuanN4cygiZGl2Iix7Y2hpbGRyZW46W2kuanN4KCJkdCIse2NsYXNzTmFtZToidGV4dC1zbSBmb250LW1lZGl1bSB0ZXh0LW11dGVkLWZvcmVncm91bmQiLGNoaWxkcmVuOiJUb3RhbCBQcm9jZXNzZXMifSksaS5qc3goImRkIix7Y2xhc3NOYW1lOiJtdC0xIHRleHQtc20iLCJkYXRhLXRlc3RpZCI6ImVsZW1lbnQtcHJvY2Vzcy1jb3VudCIsY2hpbGRyZW46KChwPXMucHJvY2Vzc2VzKT09bnVsbD92b2lkIDA6cC5sZW5ndGgpfHwwfSldfSkscy5jcmVhdGVkQXQmJmkuanN4cygiZGl2Iix7Y2hpbGRyZW46W2kuanN4KCJkdCIse2NsYXNzTmFtZToidGV4dC1zbSBmb250LW1lZGl1bSB0ZXh0LW11dGVkLWZvcmVncm91bmQiLGNoaWxkcmVuOiJDcmVhdGVkIn0pLGkuanN4KCJkZCIse2NsYXNzTmFtZToibXQtMSB0ZXh0LXNtIiwiZGF0YS10ZXN0aWQiOiJlbGVtZW50LWNyZWF0ZWQtZGF0ZSIsY2hpbGRyZW46bmV3IERhdGUocy5jcmVhdGVkQXQpLnRvTG9jYWxlRGF0ZVN0cmluZygpfSldfSkscy51cGRhdGVkQXQmJmkuanN4cygiZGl2Iix7Y2hpbGRyZW46W2kuanN4KCJkdCIse2NsYXNzTmFtZToidGV4dC1zbSBmb250LW1lZGl1bSB0ZXh0LW11dGVkLWZvcmVncm91bmQiLGNoaWxkcmVuOiJMYXN0IFVwZGF0ZWQifSksaS5qc3goImRkIix7Y2xhc3NOYW1lOiJtdC0xIHRleHQtc20iLCJkYXRhLXRlc3RpZCI6ImVsZW1lbnQtdXBkYXRlZC1kYXRlIixjaGlsZHJlbjpuZXcgRGF0ZShzLnVwZGF0ZWRBdCkudG9Mb2NhbGVEYXRlU3RyaW5nKCl9KV19KV19KV19KX0pXX0pXX0pXX0pXX0pfWZ1bmN0aW9uIE1QKHtwcm9jZXNzTmFtZTplLHByb2Nlc3NOdW1iZXI6dCxzdGVwczpyfSl7aWYoIXJ8fHIubGVuZ3RoPT09MClyZXR1cm4gbnVsbDtjb25zdCBzPSh1PT57c3dpdGNoKHUpe2Nhc2UiT0UtNC4xIjpyZXR1cm57cHJpbWFyeToiYmctYmx1ZS01MDAiLHNlY29uZGFyeToiYmctYmx1ZS01MCIsYWNjZW50OiJ0ZXh0LWJsdWUtNzAwIixib3JkZXI6ImJvcmRlci1ibHVlLTIwMCJ9O2Nhc2UiT0UtNC4yIjpyZXR1cm57cHJpbWFyeToiYmctZ3JlZW4tNTAwIixzZWNvbmRhcnk6ImJnLWdyZWVuLTUwIixhY2NlbnQ6InRleHQtZ3JlZW4tNzAwIixib3JkZXI6ImJvcmRlci1ncmVlbi0yMDAifTtkZWZhdWx0OnJldHVybntwcmltYXJ5OiJiZy1wdXJwbGUtNTAwIixzZWNvbmRhcnk6ImJnLXB1cnBsZS01MCIsYWNjZW50OiJ0ZXh0LXB1cnBsZS03MDAiLGJvcmRlcjoiYm9yZGVyLXB1cnBsZS0yMDAifX19KSh0KSxvPSh1PT57c3dpdGNoKHUpe2Nhc2UiT0UtNC4xIjpyZXR1cm5bIlJpc2sgTWFuYWdlbWVudCIsIkRvY3VtZW50IENvbnRyb2wiLCJDaGFuZ2UgTWFuYWdlbWVudCIsIlF1YWxpdHkgQXNzdXJhbmNlIl07Y2FzZSJPRS00LjIiOnJldHVyblsiUGVyZm9ybWFuY2UgTW9uaXRvcmluZyIsIk1haW50ZW5hbmNlIFBsYW5uaW5nIiwiSW5zcGVjdGlvbiBQcm9ncmFtcyIsIkFzc2V0IEludGVncml0eSJdO2RlZmF1bHQ6cmV0dXJuWyJRdWFsaXR5IE1hbmFnZW1lbnQiLCJSaXNrIEFzc2Vzc21lbnQiLCJEb2N1bWVudGF0aW9uIiwiVHJhaW5pbmciXX19KSh0KSxjPSh1PT57c3dpdGNoKHUpe2Nhc2UiT0UtNC4xIjpyZXR1cm57cHVycG9zZToiVGhpcyBwcm9jZXNzIGVuc3VyZXMgZWZmZWN0aXZlIG1hbmFnZW1lbnQgb2YgcGh5c2ljYWwgYXNzZXRzIHRocm91Z2hvdXQgdGhlaXIgZW50aXJlIGxpZmVjeWNsZSBmcm9tIGRlc2lnbiBhbmQgcHJvY3VyZW1lbnQgdGhyb3VnaCBjb25zdHJ1Y3Rpb24sIGNvbW1pc3Npb25pbmcsIGFuZCBoYW5kb3ZlciB0byBvcGVyYXRpb25zLiIsc2NvcGU6IkFwcGxpZXMgdG8gYWxsIG1ham9yIGNhcGl0YWwgcHJvamVjdHMsIGVxdWlwbWVudCBwcm9jdXJlbWVudCwgYW5kIGluZnJhc3RydWN0dXJlIGRldmVsb3BtZW50IHdpdGhpbiBXU00gb3BlcmF0aW9ucy4iLGV4cGVjdGVkT3V0Y29tZXM6WyJPcHRpbWl6ZWQgYXNzZXQgcGVyZm9ybWFuY2UiLCJDb3N0LWVmZmVjdGl2ZSBwcm9jdXJlbWVudCIsIlF1YWxpdHkgY29uc3RydWN0aW9uIGRlbGl2ZXJ5IiwiU21vb3RoIG9wZXJhdGlvbmFsIGhhbmRvdmVyIl19O2Nhc2UiT0UtNC4yIjpyZXR1cm57cHVycG9zZToiVGhpcyBwcm9jZXNzIGVzdGFibGlzaGVzIHN5c3RlbWF0aWMgYXBwcm9hY2hlcyBmb3IgbWFpbnRhaW5pbmcgYXNzZXQgaW50ZWdyaXR5LCBvcHRpbWl6aW5nIHBlcmZvcm1hbmNlLCBhbmQgZW5zdXJpbmcgc2FmZSBhbmQgcmVsaWFibGUgb3BlcmF0aW9ucyB0aHJvdWdob3V0IHRoZSBhc3NldCBsaWZlY3ljbGUuIixzY29wZToiQ292ZXJzIGFsbCBvcGVyYXRpb25hbCBhc3NldHMgaW5jbHVkaW5nIGZhY2lsaXRpZXMsIGVxdWlwbWVudCwgYW5kIGluZnJhc3RydWN0dXJlIHN5c3RlbXMgdW5kZXIgV1NNIG1hbmFnZW1lbnQuIixleHBlY3RlZE91dGNvbWVzOlsiTWF4aW11bSBhc3NldCB1cHRpbWUiLCJQcmVkaWN0aXZlIG1haW50ZW5hbmNlIiwiQ29zdCBvcHRpbWl6YXRpb24iLCJTYWZldHkgY29tcGxpYW5jZSJdfTtkZWZhdWx0OnJldHVybntwdXJwb3NlOiJUaGlzIHByb2Nlc3MgZGVmaW5lcyBzeXN0ZW1hdGljIGFwcHJvYWNoZXMgZm9yIG1hbmFnaW5nIG9wZXJhdGlvbmFsIGV4Y2VsbGVuY2UgYWN0aXZpdGllcyB3aXRoaW4gdGhlIG9yZ2FuaXphdGlvbi4iLHNjb3BlOiJBcHBsaWVzIHRvIGFsbCByZWxldmFudCBvcmdhbml6YXRpb25hbCBhY3Rpdml0aWVzIGFuZCBzdGFrZWhvbGRlcnMuIixleHBlY3RlZE91dGNvbWVzOlsiSW1wcm92ZWQgZWZmaWNpZW5jeSIsIkVuaGFuY2VkIHF1YWxpdHkiLCJSaXNrIG1pdGlnYXRpb24iLCJDb250aW51b3VzIGltcHJvdmVtZW50Il19fX0pKHQpO3JldHVybiBpLmpzeHMoaWUse2NsYXNzTmFtZToibWItNiIsY2hpbGRyZW46W2kuanN4KEVlLHtjaGlsZHJlbjppLmpzeHMoQ2Use2NsYXNzTmFtZToiZmxleCBpdGVtcy1jZW50ZXIgc3BhY2UteC0yIixjaGlsZHJlbjpbaS5qc3goImRpdiIse2NsYXNzTmFtZTpgdy02IGgtNiAke3MucHJpbWFyeX0gcm91bmRlZC1sZyBmbGV4IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWNlbnRlciB0ZXh0LXdoaXRlIHRleHQteHMgZm9udC1ib2xkYCxjaGlsZHJlbjpyLmxlbmd0aH0pLGkuanN4KCJzcGFuIix7Y2hpbGRyZW46IlByb2Nlc3MgRmxvdyBPdmVydmlldyJ9KSxpLmpzeChiZSx7dmFyaWFudDoib3V0bGluZSIsY2xhc3NOYW1lOnMuYWNjZW50LGNoaWxkcmVuOnR9KV19KX0pLGkuanN4KGxlLHtjaGlsZHJlbjppLmpzeHMoImRpdiIse2NsYXNzTmFtZToic3BhY2UteS02IixjaGlsZHJlbjpbaS5qc3hzKCJkaXYiLHtjbGFzc05hbWU6InRleHQtY2VudGVyIixjaGlsZHJlbjpbaS5qc3goImgzIix7Y2xhc3NOYW1lOiJ0ZXh0LWxnIGZvbnQtc2VtaWJvbGQgbWItMiIsY2hpbGRyZW46ZX0pLGkuanN4cygicCIse2NsYXNzTmFtZToidGV4dC1zbSB0ZXh0LW11dGVkLWZvcmVncm91bmQiLGNoaWxkcmVuOltyLmxlbmd0aCwiIHN0ZXAiLHIubGVuZ3RoIT09MT8icyI6IiIsIiBpbiB0aGlzIHByb2Nlc3MiXX0pXX0pLGkuanN4KCJkaXYiLHtjbGFzc05hbWU6ImZsZXggZmxleC1yb3cgaXRlbXMtY2VudGVyIGp1c3RpZnktc3RhcnQgc3BhY2UteC0zIG92ZXJmbG93LXgtYXV0byBwYi00IixjaGlsZHJlbjpyLm1hcCgodSxkKT0+aS5qc3hzKCJkaXYiLHtjbGFzc05hbWU6ImZsZXggaXRlbXMtY2VudGVyIGZsZXgtc2hyaW5rLTAiLGNoaWxkcmVuOltpLmpzeHMoImRpdiIse2NsYXNzTmFtZTpgbWluLXctMzIgbWF4LXctNDggJHtzLnNlY29uZGFyeX0gJHtzLmJvcmRlcn0gcm91bmRlZC1sZyBwLTMgYm9yZGVyIGhvdmVyOnNoYWRvdy1zbSB0cmFuc2l0aW9uLWFsbCBkdXJhdGlvbi0yMDAgY3Vyc29yLXBvaW50ZXIgZ3JvdXBgLCJkYXRhLXRlc3RpZCI6YGZsb3ctc3RlcC0ke2R9YCxjaGlsZHJlbjpbaS5qc3hzKCJkaXYiLHtjbGFzc05hbWU6ImZsZXggaXRlbXMtY2VudGVyIHNwYWNlLXgtMiBtYi0yIixjaGlsZHJlbjpbaS5qc3goImRpdiIse2NsYXNzTmFtZTpgdy02IGgtNiAke3MucHJpbWFyeX0gcm91bmRlZC1mdWxsIGZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktY2VudGVyIHRleHQtd2hpdGUgZm9udC1ib2xkIHRleHQteHNgLGNoaWxkcmVuOnUuc3RlcE51bWJlcn0pLGkuanN4KCJkaXYiLHtjbGFzc05hbWU6ImZsZXgtMSIsY2hpbGRyZW46aS5qc3goImg0Iix7Y2xhc3NOYW1lOmBmb250LW1lZGl1bSB0ZXh0LXhzICR7cy5hY2NlbnR9IGdyb3VwLWhvdmVyOnRleHQtcHJpbWFyeSBsZWFkaW5nLXRpZ2h0YCxjaGlsZHJlbjp1LnN0ZXBOYW1lfSl9KV19KSx1LnN0ZXBEZXRhaWxzJiZpLmpzeCgicCIse2NsYXNzTmFtZToidGV4dC14cyB0ZXh0LW11dGVkLWZvcmVncm91bmQgbGVhZGluZy1yZWxheGVkIixjaGlsZHJlbjp1LnN0ZXBEZXRhaWxzfSksdS5yZXNwb25zaWJpbGl0aWVzJiZpLmpzeCgiZGl2Iix7Y2xhc3NOYW1lOiJtdC0yIHB0LTIgYm9yZGVyLXQgYm9yZGVyLWJvcmRlci81MCIsY2hpbGRyZW46aS5qc3goInAiLHtjbGFzc05hbWU6InRleHQteHMgZm9udC1tZWRpdW0gdGV4dC1tdXRlZC1mb3JlZ3JvdW5kIixjaGlsZHJlbjp1LnJlc3BvbnNpYmlsaXRpZXN9KX0pXX0pLGQ8ci5sZW5ndGgtMSYmaS5qc3goImRpdiIse2NsYXNzTmFtZToiZmxleCBpdGVtcy1jZW50ZXIganVzdGlmeS1jZW50ZXIgbXgtMiIsY2hpbGRyZW46aS5qc3goanIse2NsYXNzTmFtZTpgdy00IGgtNCAke3MuYWNjZW50fWB9KX0pXX0sdS5pZCkpfSksaS5qc3hzKCJkaXYiLHtjbGFzc05hbWU6ImdyaWQgZ3JpZC1jb2xzLTEgbWQ6Z3JpZC1jb2xzLTIgZ2FwLTYiLGNoaWxkcmVuOltpLmpzeHMoImRpdiIse2NsYXNzTmFtZToic3BhY2UteS00IixjaGlsZHJlbjpbaS5qc3hzKCJkaXYiLHtjaGlsZHJlbjpbaS5qc3hzKCJoNCIse2NsYXNzTmFtZToiZm9udC1zZW1pYm9sZCB0ZXh0LXNtIG1iLTIgZmxleCBpdGVtcy1jZW50ZXIiLGNoaWxkcmVuOltpLmpzeChGbix7Y2xhc3NOYW1lOiJ3LTQgaC00IG1yLTIifSksIlB1cnBvc2UiXX0pLGkuanN4KCJwIix7Y2xhc3NOYW1lOiJ0ZXh0LXNtIHRleHQtbXV0ZWQtZm9yZWdyb3VuZCIsY2hpbGRyZW46Yy5wdXJwb3NlfSldfSksaS5qc3hzKCJkaXYiLHtjaGlsZHJlbjpbaS5qc3goImg0Iix7Y2xhc3NOYW1lOiJmb250LXNlbWlib2xkIHRleHQtc20gbWItMiIsY2hpbGRyZW46IlNjb3BlIn0pLGkuanN4KCJwIix7Y2xhc3NOYW1lOiJ0ZXh0LXNtIHRleHQtbXV0ZWQtZm9yZWdyb3VuZCIsY2hpbGRyZW46Yy5zY29wZX0pXX0pXX0pLGkuanN4KCJkaXYiLHtjbGFzc05hbWU6InNwYWNlLXktNCIsY2hpbGRyZW46aS5qc3hzKCJkaXYiLHtjaGlsZHJlbjpbaS5qc3goImg0Iix7Y2xhc3NOYW1lOiJmb250LXNlbWlib2xkIHRleHQtc20gbWItMiIsY2hpbGRyZW46IkV4cGVjdGVkIE91dGNvbWVzIn0pLGkuanN4KCJ1bCIse2NsYXNzTmFtZToidGV4dC1zbSB0ZXh0LW11dGVkLWZvcmVncm91bmQgc3BhY2UteS0xIixjaGlsZHJlbjpjLmV4cGVjdGVkT3V0Y29tZXMubWFwKCh1LGQpPT5pLmpzeHMoImxpIix7Y2xhc3NOYW1lOiJmbGV4IGl0ZW1zLWNlbnRlciIsY2hpbGRyZW46W2kuanN4KCJkaXYiLHtjbGFzc05hbWU6YHctMiBoLTIgJHtzLnByaW1hcnl9IHJvdW5kZWQtZnVsbCBtci0yYH0pLHVdfSxkKSl9KV19KX0pXX0pLGkuanN4cygiZGl2Iix7Y2xhc3NOYW1lOmAke3Muc2Vjb25kYXJ5fSAke3MuYm9yZGVyfSByb3VuZGVkLWxnIHAtNCBib3JkZXJgLGNoaWxkcmVuOltpLmpzeCgiaDQiLHtjbGFzc05hbWU6ImZvbnQtc2VtaWJvbGQgdGV4dC1zbSBtYi0zIixjaGlsZHJlbjoiRW5hYmxpbmcgT0UgRWxlbWVudHMifSksaS5qc3goImRpdiIse2NsYXNzTmFtZToiZ3JpZCBncmlkLWNvbHMtMiBtZDpncmlkLWNvbHMtNCBnYXAtMiIsY2hpbGRyZW46by5tYXAoKHUsZCk9PmkuanN4KCJkaXYiLHtjbGFzc05hbWU6YGJnLXdoaXRlIHJvdW5kZWQgcHgtMyBweS0yIHRleHQtY2VudGVyIGJvcmRlciAke3MuYm9yZGVyfWAsY2hpbGRyZW46aS5qc3goInNwYW4iLHtjbGFzc05hbWU6YHRleHQteHMgZm9udC1tZWRpdW0gJHtzLmFjY2VudH1gLGNoaWxkcmVuOnV9KX0sZCkpfSldfSksaS5qc3goImRpdiIse2NsYXNzTmFtZTpgJHtzLnNlY29uZGFyeX0gcm91bmRlZC1sZyBwLTQgYm9yZGVyIGJvcmRlci1ib3JkZXIvNTBgLGNoaWxkcmVuOmkuanN4cygiZGl2Iix7Y2xhc3NOYW1lOiJmbGV4IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWJldHdlZW4gdGV4dC1zbSIsY2hpbGRyZW46W2kuanN4cygiZGl2Iix7Y2xhc3NOYW1lOiJmbGV4IGl0ZW1zLWNlbnRlciBzcGFjZS14LTQiLGNoaWxkcmVuOltpLmpzeCgic3BhbiIse2NsYXNzTmFtZToiZm9udC1tZWRpdW0iLGNoaWxkcmVuOiJQcm9jZXNzIFN1bW1hcnk6In0pLGkuanN4cygic3BhbiIse2NsYXNzTmFtZToidGV4dC1tdXRlZC1mb3JlZ3JvdW5kIixjaGlsZHJlbjpbdD09PSJPRS00LjEiJiYiRGVzaWduIOKGkiBQcm9jdXJlIOKGkiBDb25zdHJ1Y3Qg4oaSIENvbW1pc3Npb24iLHQ9PT0iT0UtNC4yIiYmIlN0cmF0ZWd5IOKGkiBPcGVyYXRlIOKGkiBNb25pdG9yIOKGkiBJbXByb3ZlIiwhWyJPRS00LjEiLCJPRS00LjIiXS5pbmNsdWRlcyh0KSYmIlNlcXVlbnRpYWwgUHJvY2VzcyBGbG93Il19KV19KSxpLmpzeChiZSx7dmFyaWFudDoic2Vjb25kYXJ5IixjbGFzc05hbWU6InRleHQteHMiLGNoaWxkcmVuOiJIb3Jpem9udGFsIEZsb3cifSldfSl9KV19KX0pXX0pfWZ1bmN0aW9uIE9QKHtwcm9jZXNzOmV9KXtjb25zdFt0LHJdPXkudXNlU3RhdGUobnVsbCksW24sc109eS51c2VTdGF0ZSgiIikse3RvYXN0OmF9PWhuKCksbz1DYSgpLGw9W3trZXk6ImV4cGVjdGF0aW9ucyIsdGl0bGU6IkVYUEVDVEFUSU9OUyIsaWNvbjpjRSxudW1iZXI6MSxkZWZhdWx0Q29udGVudDoiRGVmaW5lIGNsZWFyIGV4cGVjdGF0aW9ucyBmb3IgdGhpcyBwcm9jZXNzIGluY2x1ZGluZyB3aGF0IG91dGNvbWVzIGFyZSBleHBlY3RlZCwgcXVhbGl0eSBzdGFuZGFyZHMsIGFuZCBzdWNjZXNzIGNyaXRlcmlhLiJ9LHtrZXk6InJlc3BvbnNpYmlsaXRpZXMiLHRpdGxlOiJSRVNQT05TSUJJTElUSUVTIixpY29uOkcwLG51bWJlcjoyLGRlZmF1bHRDb250ZW50OiJPdXRsaW5lIHJvbGVzIGFuZCByZXNwb25zaWJpbGl0aWVzIGZvciBhbGwgc3Rha2Vob2xkZXJzIGludm9sdmVkIGluIHRoaXMgcHJvY2VzcywgaW5jbHVkaW5nIHByb2Nlc3Mgb3duZXJzLCBwYXJ0aWNpcGFudHMsIGFuZCBhcHByb3ZlcnMuIn0se2tleToicHJvY2Vzc1N0ZXBzQ29udGVudCIsdGl0bGU6IlBST0NFU1MgU1RFUFMiLGljb246X3IsbnVtYmVyOjMsZGVmYXVsdENvbnRlbnQ6IlByb3ZpZGUgY29tcHJlaGVuc2l2ZSBndWlkYW5jZSBvbiBleGVjdXRpbmcgcHJvY2VzcyBzdGVwcywgaW5jbHVkaW5nIG1ldGhvZG9sb2d5LCBiZXN0IHByYWN0aWNlcywgYW5kIGNvb3JkaW5hdGlvbiByZXF1aXJlbWVudHMuIn0se2tleToicGVyZm9ybWFuY2VNZWFzdXJlQ29udGVudCIsdGl0bGU6IlBFUkZPUk1BTkNFIE1FQVNVUkUiLGljb246c3IsbnVtYmVyOjQsZGVmYXVsdENvbnRlbnQ6IkVzdGFibGlzaCBwZXJmb3JtYW5jZSBtZWFzdXJlbWVudCBmcmFtZXdvcmsgaW5jbHVkaW5nIGtleSBtZXRyaWNzLCBtb25pdG9yaW5nIHByb2NlZHVyZXMsIGFuZCByZXBvcnRpbmcgcmVxdWlyZW1lbnRzLiJ9XSxjPV9uKHttdXRhdGlvbkZuOmFzeW5jIHg9PmF3YWl0IHNuKGAvYXBpL29lLXByb2Nlc3Nlcy8ke2UuaWR9YCwiUEFUQ0giLHgpLG9uU3VjY2VzczooKT0+e2Eoe3RpdGxlOiJTdWNjZXNzIixkZXNjcmlwdGlvbjoiUHJvY2VzcyBjb250ZW50IHVwZGF0ZWQgc3VjY2Vzc2Z1bGx5In0pLG8uaW52YWxpZGF0ZVF1ZXJpZXMoe3F1ZXJ5S2V5OlsiL2FwaS9vZS1wcm9jZXNzZXMiLGUuaWRdfSkscihudWxsKX0sb25FcnJvcjp4PT57YSh7dGl0bGU6IkVycm9yIixkZXNjcmlwdGlvbjoiRmFpbGVkIHRvIHVwZGF0ZSBwcm9jZXNzIGNvbnRlbnQiLHZhcmlhbnQ6ImRlc3RydWN0aXZlIn0pLGNvbnNvbGUuZXJyb3IoIlVwZGF0ZSBlcnJvcjoiLHgpfX0pLHU9eD0+e3IoeC5rZXkpLHMoZVt4LmtleV18fHguZGVmYXVsdENvbnRlbnQpfSxkPSgpPT57cihudWxsKSxzKCIiKX0sZj0oKT0+e3QmJmMubXV0YXRlKHtbdF06bn0pfSxwPXg9Pntjb25zdCB2PWVbeC5rZXldO2lmKHYpcmV0dXJuIHY7Y29uc3QgbT1lLnByb2Nlc3NOdW1iZXI7c3dpdGNoKHgua2V5KXtjYXNlImV4cGVjdGF0aW9ucyI6cmV0dXJuIG09PT0iT0UtNC4xIj9gQXNzZXQgTWFuYWdlbWVudCBEZXNpZ24gJiBQcm9jdXJlbWVudCBwcm9jZXNzIGlzIGV4cGVjdGVkIHRvIGRlbGl2ZXI6CuKAoiBPcHRpbWl6ZWQgYXNzZXQgcGVyZm9ybWFuY2UgdGhyb3VnaCBlZmZlY3RpdmUgZGVzaWduIGFuZCBwcm9jdXJlbWVudCBzdHJhdGVnaWVzCuKAoiBDb3N0LWVmZmVjdGl2ZSBwcm9jdXJlbWVudCBkZWNpc2lvbnMgdGhhdCBiYWxhbmNlIHF1YWxpdHksIGNvc3QsIGFuZCBkZWxpdmVyeSByZXF1aXJlbWVudHMK4oCiIFF1YWxpdHkgY29uc3RydWN0aW9uIGRlbGl2ZXJ5IG1lZXRpbmcgYWxsIHNwZWNpZmljYXRpb25zIGFuZCBzdGFuZGFyZHMK4oCiIFNtb290aCBvcGVyYXRpb25hbCBoYW5kb3ZlciB3aXRoIHByb3BlciBkb2N1bWVudGF0aW9uIGFuZCB0cmFpbmluZwoKS2V5IFBlcmZvcm1hbmNlIEV4cGVjdGF0aW9uczoKLSBBbGwgcHJvY3VyZW1lbnQgYWN0aXZpdGllcyBtdXN0IGNvbXBseSB3aXRoIFdTTSBwcm9jdXJlbWVudCBwb2xpY2llcyBhbmQgcHJvY2VkdXJlcwotIERlc2lnbiBzcGVjaWZpY2F0aW9ucyBtdXN0IG1lZXQgb3BlcmF0aW9uYWwgcmVxdWlyZW1lbnRzIGFuZCBzYWZldHkgc3RhbmRhcmRzCi0gQ29uc3RydWN0aW9uIHF1YWxpdHkgbXVzdCBhY2hpZXZlIHBsYW5uZWQgYXNzZXQgcmVsaWFiaWxpdHkgYW5kIGF2YWlsYWJpbGl0eSB0YXJnZXRzCi0gSGFuZG92ZXIgZG9jdW1lbnRhdGlvbiBtdXN0IGJlIGNvbXBsZXRlIGFuZCBhY2N1cmF0ZSBmb3Igb3BlcmF0aW9uYWwgcmVhZGluZXNzYDptPT09Ik9FLTQuMiI/YEFzc2V0IE1hbmFnZW1lbnQgT3BlcmF0aW9ucyAmIE1haW50ZW5hbmNlIHByb2Nlc3MgaXMgZXhwZWN0ZWQgdG8gZGVsaXZlcjoK4oCiIE1heGltdW0gYXNzZXQgdXB0aW1lIHRocm91Z2ggcHJvYWN0aXZlIG1haW50ZW5hbmNlIHN0cmF0ZWdpZXMK4oCiIFByZWRpY3RpdmUgbWFpbnRlbmFuY2UgY2FwYWJpbGl0aWVzIHRvIHByZXZlbnQgdW5wbGFubmVkIGRvd250aW1lCuKAoiBDb3N0IG9wdGltaXphdGlvbiB0aHJvdWdoIGVmZmljaWVudCByZXNvdXJjZSB1dGlsaXphdGlvbiBhbmQgcGxhbm5pbmcK4oCiIEZ1bGwgc2FmZXR5IGNvbXBsaWFuY2Ugd2l0aCBhbGwgcmVndWxhdG9yeSBhbmQgaW50ZXJuYWwgcmVxdWlyZW1lbnRzCgpLZXkgUGVyZm9ybWFuY2UgRXhwZWN0YXRpb25zOgotIE1haW50ZW5hbmNlIGFjdGl2aXRpZXMgbXVzdCBiZSBleGVjdXRlZCBhY2NvcmRpbmcgdG8gc2NoZWR1bGVkIHBsYW5zIGFuZCBwcm9jZWR1cmVzCi0gQXNzZXQgcGVyZm9ybWFuY2UgbW9uaXRvcmluZyBtdXN0IHByb3ZpZGUgZWFybHkgd2FybmluZyBvZiBwb3RlbnRpYWwgaXNzdWVzCi0gTWFpbnRlbmFuY2UgY29zdHMgbXVzdCBiZSBvcHRpbWl6ZWQgd2hpbGUgbWFpbnRhaW5pbmcgcmVsaWFiaWxpdHkgdGFyZ2V0cwotIEFsbCBzYWZldHkgcHJvdG9jb2xzIG11c3QgYmUgc3RyaWN0bHkgZm9sbG93ZWQgZHVyaW5nIG1haW50ZW5hbmNlIG9wZXJhdGlvbnNgOnguZGVmYXVsdENvbnRlbnQ7Y2FzZSJyZXNwb25zaWJpbGl0aWVzIjpyZXR1cm4gbT09PSJPRS00LjEiP2BQUk9DRVNTIE9XTkVSOiBBc3NldCBNYW5hZ2VtZW50IE1hbmFnZXIKLSBPdmVyYWxsIGFjY291bnRhYmlsaXR5IGZvciBwcm9jZXNzIGV4ZWN1dGlvbiBhbmQgcGVyZm9ybWFuY2UKLSBBcHByb3ZhbCBvZiBtYWpvciBwcm9jdXJlbWVudCBkZWNpc2lvbnMgYW5kIGRlc2lnbiBjaGFuZ2VzCi0gU3Rha2Vob2xkZXIgY29vcmRpbmF0aW9uIGFuZCBjb21tdW5pY2F0aW9uCgpERVNJR04gRU5HSU5FRVJTOgotIERldmVsb3BtZW50IG9mIHRlY2huaWNhbCBzcGVjaWZpY2F0aW9ucyBhbmQgZGVzaWduIHJlcXVpcmVtZW50cwotIFJldmlldyBhbmQgYXBwcm92YWwgb2YgdmVuZG9yIGRlc2lnbnMgYW5kIHRlY2huaWNhbCBzdWJtaXR0YWxzCi0gSW50ZXJmYWNlIHdpdGggb3BlcmF0aW9ucyB0ZWFtIGZvciBkZXNpZ24gb3B0aW1pemF0aW9uCgpQUk9DVVJFTUVOVCBURUFNOgotIFZlbmRvciBldmFsdWF0aW9uIGFuZCBzZWxlY3Rpb24gcHJvY2Vzc2VzCi0gQ29udHJhY3QgbmVnb3RpYXRpb24gYW5kIG1hbmFnZW1lbnQKLSBQcm9jdXJlbWVudCB0aW1lbGluZSBtYW5hZ2VtZW50IGFuZCBkZWxpdmVyeSBjb29yZGluYXRpb24KClBST0pFQ1QgTUFOQUdFUlM6Ci0gQ29uc3RydWN0aW9uIHBsYW5uaW5nIGFuZCBleGVjdXRpb24gb3ZlcnNpZ2h0Ci0gUXVhbGl0eSBjb250cm9sIGFuZCBjb21wbGlhbmNlIG1vbml0b3JpbmcKLSBIYW5kb3ZlciBjb29yZGluYXRpb24gd2l0aCBvcGVyYXRpb25zIHRlYW0KCk9QRVJBVElPTlMgVEVBTToKLSBPcGVyYXRpb25hbCByZXF1aXJlbWVudHMgZGVmaW5pdGlvbiBhbmQgdmFsaWRhdGlvbgotIEFjY2VwdGFuY2UgdGVzdGluZyBhbmQgY29tbWlzc2lvbmluZyBzdXBwb3J0Ci0gVHJhaW5pbmcgYW5kIGhhbmRvdmVyIGRvY3VtZW50YXRpb24gcmV2aWV3YDptPT09Ik9FLTQuMiI/YFBST0NFU1MgT1dORVI6IEFzc2V0IE1hbmFnZW1lbnQgTWFuYWdlcgotIE92ZXJhbGwgYWNjb3VudGFiaWxpdHkgZm9yIGFzc2V0IHBlcmZvcm1hbmNlIGFuZCBtYWludGVuYW5jZSBleGNlbGxlbmNlCi0gUmVzb3VyY2UgYWxsb2NhdGlvbiBhbmQgbWFpbnRlbmFuY2Ugc3RyYXRlZ3kgYXBwcm92YWwKLSBQZXJmb3JtYW5jZSBtb25pdG9yaW5nIGFuZCBjb250aW51b3VzIGltcHJvdmVtZW50IGluaXRpYXRpdmVzCgpNQUlOVEVOQU5DRSBNQU5BR0VSUzoKLSBNYWludGVuYW5jZSBwbGFubmluZyBhbmQgc2NoZWR1bGluZyBjb29yZGluYXRpb24KLSBXb3JrIG9yZGVyIG1hbmFnZW1lbnQgYW5kIGV4ZWN1dGlvbiBvdmVyc2lnaHQKLSBNYWludGVuYW5jZSB0ZWFtIHN1cGVydmlzaW9uIGFuZCBwZXJmb3JtYW5jZSBtYW5hZ2VtZW50CgpNQUlOVEVOQU5DRSBURUNITklDSUFOUzoKLSBQcmV2ZW50aXZlIGFuZCBjb3JyZWN0aXZlIG1haW50ZW5hbmNlIGV4ZWN1dGlvbgotIEFzc2V0IGNvbmRpdGlvbiBtb25pdG9yaW5nIGFuZCByZXBvcnRpbmcKLSBDb21wbGlhbmNlIHdpdGggc2FmZXR5IGFuZCBxdWFsaXR5IHByb2NlZHVyZXMKClJFTElBQklMSVRZIEVOR0lORUVSUzoKLSBBc3NldCBwZXJmb3JtYW5jZSBhbmFseXNpcyBhbmQgb3B0aW1pemF0aW9uCi0gRmFpbHVyZSBhbmFseXNpcyBhbmQgcm9vdCBjYXVzZSBpbnZlc3RpZ2F0aW9uCi0gTWFpbnRlbmFuY2Ugc3RyYXRlZ3kgZGV2ZWxvcG1lbnQgYW5kIGltcHJvdmVtZW50CgpPUEVSQVRJT05TIFNVUEVSVklTT1JTOgotIE9wZXJhdGlvbmFsIGNvb3JkaW5hdGlvbiBkdXJpbmcgbWFpbnRlbmFuY2UgYWN0aXZpdGllcwotIEFzc2V0IHBlcmZvcm1hbmNlIG1vbml0b3JpbmcgYW5kIGZlZWRiYWNrCi0gUHJvZHVjdGlvbiBwbGFubmluZyBpbnRlZ3JhdGlvbiB3aXRoIG1haW50ZW5hbmNlIHNjaGVkdWxlc2A6eC5kZWZhdWx0Q29udGVudDtjYXNlInByb2Nlc3NTdGVwc0NvbnRlbnQiOnJldHVybiBtPT09Ik9FLTQuMSI/YFRoaXMgQXNzZXQgTWFuYWdlbWVudCBEZXNpZ24gJiBQcm9jdXJlbWVudCBwcm9jZXNzIGZvbGxvd3MgYSBzeXN0ZW1hdGljIGFwcHJvYWNoOgoKREVTSUdOIFBIQVNFIE1FVEhPRE9MT0dZOgpUaGUgZGVzaWduIHBoYXNlIGVzdGFibGlzaGVzIHRlY2huaWNhbCByZXF1aXJlbWVudHMgYmFzZWQgb24gb3BlcmF0aW9uYWwgbmVlZHMgYW5kIHBlcmZvcm1hbmNlIHRhcmdldHMuIEVuZ2luZWVyaW5nIHRlYW1zIGRldmVsb3AgZGV0YWlsZWQgc3BlY2lmaWNhdGlvbnMgY29uc2lkZXJpbmcgc2FmZXR5LCByZWxpYWJpbGl0eSwgbWFpbnRhaW5hYmlsaXR5LCBhbmQgbGlmZWN5Y2xlIGNvc3RzLiBEZXNpZ24gcmV2aWV3cyBlbnN1cmUgYWxpZ25tZW50IHdpdGggV1NNIHN0YW5kYXJkcyBhbmQgYmVzdCBwcmFjdGljZXMuCgpQUk9DVVJFTUVOVCBTVFJBVEVHWToKUHJvY3VyZW1lbnQgYWN0aXZpdGllcyBmb2xsb3cgV1NNIHByb2N1cmVtZW50IHBvbGljaWVzIGVuc3VyaW5nIGNvbXBldGl0aXZlIGJpZGRpbmcsIHZlbmRvciBxdWFsaWZpY2F0aW9uLCBhbmQgY29udHJhY3QgdGVybXMgb3B0aW1pemF0aW9uLiBUZWNobmljYWwgYW5kIGNvbW1lcmNpYWwgZXZhbHVhdGlvbnMgYXJlIGNvbmR1Y3RlZCB0byBzZWxlY3QgdmVuZG9ycyB0aGF0IGJlc3QgbWVldCBwcm9qZWN0IHJlcXVpcmVtZW50cyB3aGlsZSBkZWxpdmVyaW5nIHZhbHVlIGZvciBtb25leS4KCkNPTlNUUlVDVElPTiBNQU5BR0VNRU5UOgpDb25zdHJ1Y3Rpb24gZXhlY3V0aW9uIHJlcXVpcmVzIGNsb3NlIGNvb3JkaW5hdGlvbiBiZXR3ZWVuIHByb2plY3QgdGVhbXMsIGNvbnRyYWN0b3JzLCBhbmQgb3BlcmF0aW9ucyBwZXJzb25uZWwuIFF1YWxpdHkgY29udHJvbCBjaGVja3BvaW50cyBlbnN1cmUgY29tcGxpYW5jZSB3aXRoIHNwZWNpZmljYXRpb25zIGFuZCBzdGFuZGFyZHMuIFByb2dyZXNzIG1vbml0b3JpbmcgYW5kIHJpc2sgbWFuYWdlbWVudCBhcmUgZXNzZW50aWFsIHRocm91Z2hvdXQgdGhlIGNvbnN0cnVjdGlvbiBwaGFzZS4KCkNPTU1JU1NJT05JTkcgJiBIQU5ET1ZFUjoKVGhlIGNvbW1pc3Npb25pbmcgcHJvY2VzcyB2YWxpZGF0ZXMgdGhhdCBhc3NldHMgbWVldCBkZXNpZ24gc3BlY2lmaWNhdGlvbnMgYW5kIG9wZXJhdGlvbmFsIHJlcXVpcmVtZW50cy4gQ29tcHJlaGVuc2l2ZSB0ZXN0aW5nLCBkb2N1bWVudGF0aW9uIHByZXBhcmF0aW9uLCBhbmQgdHJhaW5pbmcgZGVsaXZlcnkgZW5zdXJlIHNtb290aCB0cmFuc2l0aW9uIHRvIG9wZXJhdGlvbnMgd2l0aCBmdWxsIG9wZXJhdGlvbmFsIHJlYWRpbmVzcy5gOm09PT0iT0UtNC4yIj9gVGhpcyBBc3NldCBNYW5hZ2VtZW50IE9wZXJhdGlvbnMgJiBNYWludGVuYW5jZSBwcm9jZXNzIGVuc3VyZXMgb3B0aW1hbCBhc3NldCBwZXJmb3JtYW5jZToKClNUUkFURUdJQyBQTEFOTklORyBBUFBST0FDSDoKTWFpbnRlbmFuY2Ugc3RyYXRlZ2llcyBhcmUgZGV2ZWxvcGVkIGJhc2VkIG9uIGFzc2V0IGNyaXRpY2FsaXR5LCBmYWlsdXJlIG1vZGVzLCBhbmQgYnVzaW5lc3MgaW1wYWN0IGFuYWx5c2lzLiBQcmV2ZW50aXZlIG1haW50ZW5hbmNlIHByb2dyYW1zIGFyZSBlc3RhYmxpc2hlZCB1c2luZyBtYW51ZmFjdHVyZXIgcmVjb21tZW5kYXRpb25zLCBpbmR1c3RyeSBiZXN0IHByYWN0aWNlcywgYW5kIGhpc3RvcmljYWwgcGVyZm9ybWFuY2UgZGF0YS4KCk9QRVJBVElPTkFMIEVYRUNVVElPTjoKRGF5LXRvLWRheSBtYWludGVuYW5jZSBvcGVyYXRpb25zIGZvbGxvdyBlc3RhYmxpc2hlZCBwcm9jZWR1cmVzIGFuZCB3b3JrIGluc3RydWN0aW9ucy4gTWFpbnRlbmFuY2UgY3Jld3MgZXhlY3V0ZSBwbGFubmVkIGFuZCB1bnBsYW5uZWQgd29yayBvcmRlcnMgd2hpbGUgbWFpbnRhaW5pbmcgc2FmZXR5IGFuZCBxdWFsaXR5IHN0YW5kYXJkcy4gUmVhbC10aW1lIGNvb3JkaW5hdGlvbiBlbnN1cmVzIG1pbmltYWwgaW1wYWN0IG9uIHByb2R1Y3Rpb24gb3BlcmF0aW9ucy4KCk1PTklUT1JJTkcgJiBBTkFMWVRJQ1M6CkNvbnRpbnVvdXMgbW9uaXRvcmluZyBzeXN0ZW1zIHRyYWNrIGFzc2V0IHBlcmZvcm1hbmNlIGluZGljYXRvcnMsIHZpYnJhdGlvbiBhbmFseXNpcywgb2lsIGFuYWx5c2lzLCBhbmQgb3RoZXIgY29uZGl0aW9uLWJhc2VkIHBhcmFtZXRlcnMuIERhdGEgYW5hbHl0aWNzIGlkZW50aWZ5IHRyZW5kcyBhbmQgcHJlZGljdCBwb3RlbnRpYWwgZmFpbHVyZXMgZW5hYmxpbmcgcHJvYWN0aXZlIG1haW50ZW5hbmNlIGludGVydmVudGlvbnMuCgpDT05USU5VT1VTIElNUFJPVkVNRU5UOgpSZWd1bGFyIHBlcmZvcm1hbmNlIHJldmlld3MgaWRlbnRpZnkgb3Bwb3J0dW5pdGllcyBmb3IgbWFpbnRlbmFuY2Ugb3B0aW1pemF0aW9uLiBGYWlsdXJlIGFuYWx5c2lzIGRyaXZlcyBpbXByb3ZlbWVudHMgaW4gbWFpbnRlbmFuY2UgcHJvY2VkdXJlcyBhbmQgYXNzZXQgcmVsaWFiaWxpdHkuIEJlc3QgcHJhY3RpY2Ugc2hhcmluZyBhbmQgbGVzc29ucyBsZWFybmVkIGVuaGFuY2Ugb3ZlcmFsbCBtYWludGVuYW5jZSBlZmZlY3RpdmVuZXNzLmA6eC5kZWZhdWx0Q29udGVudDtjYXNlInBlcmZvcm1hbmNlTWVhc3VyZUNvbnRlbnQiOnJldHVybiBtPT09Ik9FLTQuMSI/YEFTU0VUIE1BTkFHRU1FTlQgREVTSUdOICYgUFJPQ1VSRU1FTlQgUEVSRk9STUFOQ0UgRlJBTUVXT1JLOgoKUFJJTUFSWSBQRVJGT1JNQU5DRSBJTkRJQ0FUT1JTOgrigKIgRGVzaWduIFF1YWxpdHkgSW5kZXg6IE1lYXN1cmVzIGRlc2lnbiBjb21wbGV0ZW5lc3MgYW5kIGFjY3VyYWN5IChUYXJnZXQ6ID45NSUpCuKAoiBQcm9jdXJlbWVudCBDb3N0IFBlcmZvcm1hbmNlOiBBY3R1YWwgdnMuIGJ1ZGdldGVkIGNvc3RzIChUYXJnZXQ6IFdpdGhpbiArLy01JSkK4oCiIFNjaGVkdWxlIFBlcmZvcm1hbmNlIEluZGV4OiBQcm9qZWN0IHRpbWVsaW5lIGFkaGVyZW5jZSAoVGFyZ2V0OiA+OTAlKQrigKIgQXNzZXQgQXZhaWxhYmlsaXR5IGF0IEhhbmRvdmVyOiBPcGVyYXRpb25hbCByZWFkaW5lc3MgKFRhcmdldDogPjk4JSkKClFVQUxJVFkgTUVUUklDUzoK4oCiIERlc2lnbiBSZXZpZXcgQ29tcGxldGlvbiBSYXRlOiBBbGwgcmVxdWlyZWQgcmV2aWV3cyBjb21wbGV0ZWQgKFRhcmdldDogMTAwJSkK4oCiIFZlbmRvciBQZXJmb3JtYW5jZSBTY29yZTogUXVhbGl0eSwgZGVsaXZlcnksIGFuZCBzZXJ2aWNlIHJhdGluZyAoVGFyZ2V0OiA+ODUlKQrigKIgQ29uc3RydWN0aW9uIFF1YWxpdHkgSW5kZXg6IERlZmVjdCByYXRlIGFuZCByZXdvcmsgcmVxdWlyZW1lbnRzIChUYXJnZXQ6IDwyJSkK4oCiIENvbW1pc3Npb25pbmcgRmlyc3QtUGFzcyBTdWNjZXNzOiBTeXN0ZW1zIG9wZXJhdGlvbmFsIHdpdGhvdXQgbWFqb3IgaXNzdWVzIChUYXJnZXQ6ID45NSUpCgpNRUFTVVJFTUVOVCBQUk9DRURVUkVTOgotIE1vbnRobHkgcGVyZm9ybWFuY2UgZGFzaGJvYXJkcyB3aXRoIHRyYWZmaWMgbGlnaHQgaW5kaWNhdG9ycwotIFF1YXJ0ZXJseSBzdGFrZWhvbGRlciByZXZpZXdzIHdpdGggZGV0YWlsZWQgcGVyZm9ybWFuY2UgYW5hbHlzaXMKLSBBbm51YWwgYmVuY2htYXJraW5nIGFnYWluc3QgaW5kdXN0cnkgc3RhbmRhcmRzIGFuZCBiZXN0IHByYWN0aWNlcwotIENvbnRpbnVvdXMgdHJhY2tpbmcgb2YgY29zdCwgc2NoZWR1bGUsIGFuZCBxdWFsaXR5IG1ldHJpY3MgdGhyb3VnaG91dCBwcm9qZWN0IGxpZmVjeWNsZQoKUkVQT1JUSU5HIFJFUVVJUkVNRU5UUzoKV2Vla2x5IHByb2dyZXNzIHJlcG9ydHMgZHVyaW5nIGFjdGl2ZSBwaGFzZXMsIG1vbnRobHkgZXhlY3V0aXZlIHN1bW1hcmllcywgYW5kIHF1YXJ0ZXJseSBjb21wcmVoZW5zaXZlIHBlcmZvcm1hbmNlIHJldmlld3Mgd2l0aCBpbXByb3ZlbWVudCBhY3Rpb24gcGxhbnMuYDptPT09Ik9FLTQuMiI/YEFTU0VUIE1BTkFHRU1FTlQgT1BFUkFUSU9OUyAmIE1BSU5URU5BTkNFIFBFUkZPUk1BTkNFIEZSQU1FV09SSzoKClBSSU1BUlkgUEVSRk9STUFOQ0UgSU5ESUNBVE9SUzoK4oCiIE92ZXJhbGwgRXF1aXBtZW50IEVmZmVjdGl2ZW5lc3MgKE9FRSk6IEF2YWlsYWJpbGl0eSDDlyBQZXJmb3JtYW5jZSDDlyBRdWFsaXR5IChUYXJnZXQ6ID44NSUpCuKAoiBNZWFuIFRpbWUgQmV0d2VlbiBGYWlsdXJlcyAoTVRCRik6IEFzc2V0IHJlbGlhYmlsaXR5IG1lYXN1cmUgKFRhcmdldDogSW5kdXN0cnkgYmVuY2htYXJrICsxMCUpCuKAoiBNZWFuIFRpbWUgVG8gUmVwYWlyIChNVFRSKTogTWFpbnRlbmFuY2UgZWZmaWNpZW5jeSAoVGFyZ2V0OiA8NCBob3VycykK4oCiIFBsYW5uZWQgTWFpbnRlbmFuY2UgQ29tcGxpYW5jZTogU2NoZWR1bGUgYWRoZXJlbmNlIChUYXJnZXQ6ID45NSUpCgpDT1NUICYgRUZGSUNJRU5DWSBNRVRSSUNTOgrigKIgTWFpbnRlbmFuY2UgQ29zdCBwZXIgVW5pdCBvZiBQcm9kdWN0aW9uOiBDb3N0IGVmZmVjdGl2ZW5lc3MgKFRhcmdldDogRGVjcmVhc2luZyB0cmVuZCkK4oCiIFByZXZlbnRpdmUgdnMuIFJlYWN0aXZlIE1haW50ZW5hbmNlIFJhdGlvOiBQcm9hY3RpdmUgbWFpbnRlbmFuY2UgYmFsYW5jZSAoVGFyZ2V0OiA4MDoyMCkK4oCiIE1haW50ZW5hbmNlIExhYm9yIFByb2R1Y3Rpdml0eTogV29yayBob3VycyBwZXIgY29tcGxldGVkIHdvcmsgb3JkZXIgKFRhcmdldDogSW1wcm92aW5nIHRyZW5kKQrigKIgQXNzZXQgTGlmZWN5Y2xlIENvc3Q6IFRvdGFsIGNvc3Qgb2Ygb3duZXJzaGlwIG9wdGltaXphdGlvbiAoVGFyZ2V0OiA8QnVkZ2V0IGJhc2VsaW5lKQoKTUVBU1VSRU1FTlQgUFJPQ0VEVVJFUzoKLSBSZWFsLXRpbWUgbW9uaXRvcmluZyB0aHJvdWdoIENNTVMgYW5kIGNvbmRpdGlvbiBtb25pdG9yaW5nIHN5c3RlbXMKLSBEYWlseSBtYWludGVuYW5jZSBwZXJmb3JtYW5jZSByZXZpZXdzIGFuZCBLUEkgdHJhY2tpbmcKLSBXZWVrbHkgbWFpbnRlbmFuY2UgcGxhbm5pbmcgYW5kIHNjaGVkdWxpbmcgZWZmZWN0aXZlbmVzcyBhc3Nlc3NtZW50cwotIE1vbnRobHkgYXNzZXQgcGVyZm9ybWFuY2UgYW5hbHlzaXMgd2l0aCB0cmVuZCBpZGVudGlmaWNhdGlvbgoKUkVQT1JUSU5HIFJFUVVJUkVNRU5UUzoKRGFpbHkgb3BlcmF0aW9uYWwgZGFzaGJvYXJkcywgd2Vla2x5IG1haW50ZW5hbmNlIHNjb3JlY2FyZHMsIG1vbnRobHkgZXhlY3V0aXZlIHJlcG9ydHMsIGFuZCBxdWFydGVybHkgYXNzZXQgbWFuYWdlbWVudCByZXZpZXdzIHdpdGggc3RyYXRlZ2ljIHBsYW5uaW5nIHVwZGF0ZXMuYDp4LmRlZmF1bHRDb250ZW50O2RlZmF1bHQ6cmV0dXJuIHguZGVmYXVsdENvbnRlbnR9fTtyZXR1cm4gaS5qc3hzKGllLHtjbGFzc05hbWU6Im1iLTYiLGNoaWxkcmVuOltpLmpzeChFZSx7Y2hpbGRyZW46aS5qc3hzKENlLHtjbGFzc05hbWU6ImZsZXggaXRlbXMtY2VudGVyIHNwYWNlLXgtMiIsY2hpbGRyZW46W2kuanN4KEZuLHtjbGFzc05hbWU6InctNSBoLTUifSksaS5qc3goInNwYW4iLHtjaGlsZHJlbjoiVEFCTEUgT0YgQ09OVEVOVFMifSksaS5qc3goYmUse3ZhcmlhbnQ6Im91dGxpbmUiLGNsYXNzTmFtZToibWwtMiIsY2hpbGRyZW46IlByb2Nlc3MgRG9jdW1lbnRhdGlvbiJ9KV19KX0pLGkuanN4KGxlLHtjbGFzc05hbWU6InNwYWNlLXktNiIsY2hpbGRyZW46bC5tYXAoKHgsdik9Pntjb25zdCBtPXguaWNvbix3PXAoeCksaD10PT09eC5rZXk7cmV0dXJuIGkuanN4cygiZGl2Iix7Y2hpbGRyZW46W2kuanN4cygiZGl2Iix7Y2xhc3NOYW1lOiJzcGFjZS15LTQiLGNoaWxkcmVuOltpLmpzeHMoImRpdiIse2NsYXNzTmFtZToiZmxleCBpdGVtcy1jZW50ZXIganVzdGlmeS1iZXR3ZWVuIixjaGlsZHJlbjpbaS5qc3hzKCJkaXYiLHtjbGFzc05hbWU6ImZsZXggaXRlbXMtY2VudGVyIHNwYWNlLXgtMyIsY2hpbGRyZW46W2kuanN4KCJkaXYiLHtjbGFzc05hbWU6InctOCBoLTggYmctcHJpbWFyeSByb3VuZGVkLWxnIGZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktY2VudGVyIHRleHQtd2hpdGUgZm9udC1ib2xkIHRleHQtc20iLGNoaWxkcmVuOngubnVtYmVyfSksaS5qc3hzKCJkaXYiLHtjbGFzc05hbWU6ImZsZXggaXRlbXMtY2VudGVyIHNwYWNlLXgtMiIsY2hpbGRyZW46W2kuanN4KG0se2NsYXNzTmFtZToidy01IGgtNSB0ZXh0LXByaW1hcnkifSksaS5qc3goImgzIix7Y2xhc3NOYW1lOiJ0ZXh0LWxnIGZvbnQtc2VtaWJvbGQiLGNoaWxkcmVuOngudGl0bGV9KV19KV19KSwhaCYmaS5qc3hzKFkse3ZhcmlhbnQ6Im91dGxpbmUiLHNpemU6InNtIixvbkNsaWNrOigpPT51KHgpLCJkYXRhLXRlc3RpZCI6YGJ1dHRvbi1lZGl0LSR7eC5rZXl9YCxjaGlsZHJlbjpbaS5qc3goZ2Ese2NsYXNzTmFtZToidy00IGgtNCBtci0yIn0pLCJFZGl0Il19KV19KSxoP2kuanN4cygiZGl2Iix7Y2xhc3NOYW1lOiJzcGFjZS15LTQiLGNoaWxkcmVuOltpLmpzeChubix7dmFsdWU6bixvbkNoYW5nZTpnPT5zKGcudGFyZ2V0LnZhbHVlKSxjbGFzc05hbWU6Im1pbi1oLVsyMDBweF0gZm9udC1tb25vIHRleHQtc20iLHBsYWNlaG9sZGVyOmBFbnRlciAke3gudGl0bGUudG9Mb3dlckNhc2UoKX0gY29udGVudC4uLmAsImRhdGEtdGVzdGlkIjpgdGV4dGFyZWEtJHt4LmtleX1gfSksaS5qc3hzKCJkaXYiLHtjbGFzc05hbWU6ImZsZXggaXRlbXMtY2VudGVyIHNwYWNlLXgtMiIsY2hpbGRyZW46W2kuanN4cyhZLHtzaXplOiJzbSIsb25DbGljazpmLGRpc2FibGVkOmMuaXNQZW5kaW5nLCJkYXRhLXRlc3RpZCI6YGJ1dHRvbi1zYXZlLSR7eC5rZXl9YCxjaGlsZHJlbjpbaS5qc3gocGgse2NsYXNzTmFtZToidy00IGgtNCBtci0yIn0pLGMuaXNQZW5kaW5nPyJTYXZpbmcuLi4iOiJTYXZlIl19KSxpLmpzeHMoWSx7dmFyaWFudDoib3V0bGluZSIsc2l6ZToic20iLG9uQ2xpY2s6ZCxkaXNhYmxlZDpjLmlzUGVuZGluZywiZGF0YS10ZXN0aWQiOmBidXR0b24tY2FuY2VsLSR7eC5rZXl9YCxjaGlsZHJlbjpbaS5qc3goZ2gse2NsYXNzTmFtZToidy00IGgtNCBtci0yIn0pLCJDYW5jZWwiXX0pXX0pXX0pOmkuanN4KCJkaXYiLHtjbGFzc05hbWU6ImJnLW11dGVkLzMwIHJvdW5kZWQtbGcgcC00IGJvcmRlci1sLTQgYm9yZGVyLXByaW1hcnkiLGNoaWxkcmVuOmkuanN4KCJkaXYiLHtjbGFzc05hbWU6IndoaXRlc3BhY2UtcHJlLXdyYXAgdGV4dC1zbSBsZWFkaW5nLXJlbGF4ZWQiLCJkYXRhLXRlc3RpZCI6YGNvbnRlbnQtJHt4LmtleX1gLGNoaWxkcmVuOnd9KX0pXX0pLHY8bC5sZW5ndGgtMSYmaS5qc3goeWEse2NsYXNzTmFtZToibXQtNiJ9KV19LHgua2V5KX0pfSldfSl9Y29uc3QgRlA9ZT0+e3N3aXRjaChlPT1udWxsP3ZvaWQgMDplLnRvTG93ZXJDYXNlKCkpe2Nhc2UiZmluYW5jaWFsIjpyZXR1cm4i8J+SsCI7Y2FzZSJjdXN0b21lciI6cmV0dXJuIvCfkaUiO2Nhc2UiaW50ZXJuYWwgcHJvY2VzcyI6cmV0dXJuIuKame+4jyI7Y2FzZSJsZWFybmluZyAmIGdyb3d0aCI6cmV0dXJuIvCfk5oiO2RlZmF1bHQ6cmV0dXJuIvCfk4oifX07ZnVuY3Rpb24gSVAoKXt2YXIgZCxmLHAseDtjb25zdHtpZDplfT1ybCgpLHt0b2FzdDp0fT1obigpLHtpc0F1dGhlbnRpY2F0ZWQ6cixpc0xvYWRpbmc6bn09V3IoKTt5LnVzZUVmZmVjdCgoKT0+e2lmKCFuJiYhcil7dCh7dGl0bGU6IlVuYXV0aG9yaXplZCIsZGVzY3JpcHRpb246IllvdSBhcmUgbG9nZ2VkIG91dC4gTG9nZ2luZyBpbiBhZ2Fpbi4uLiIsdmFyaWFudDoiZGVzdHJ1Y3RpdmUifSksc2V0VGltZW91dCgoKT0+e3dpbmRvdy5sb2NhdGlvbi5ocmVmPSIvYXBpL2xvZ2luIn0sNTAwKTtyZXR1cm59fSxbcixuLHRdKTtjb25zdHtkYXRhOnMsaXNMb2FkaW5nOmEsZXJyb3I6b309YnQoe3F1ZXJ5S2V5OlsiL2FwaS9vZS1wcm9jZXNzZXMiLGVdLGVuYWJsZWQ6ciYmISFlfSkse2RhdGE6bD1bXX09YnQoe3F1ZXJ5S2V5OlsiL2FwaS9zdHJhdGVnaWMtZ29hbHMiXSxlbmFibGVkOnJ9KTtpZih5LnVzZUVmZmVjdCgoKT0+e2lmKG8pe2lmKEp0KG8pKXt0KHt0aXRsZToiVW5hdXRob3JpemVkIixkZXNjcmlwdGlvbjoiWW91IGFyZSBsb2dnZWQgb3V0LiBMb2dnaW5nIGluIGFnYWluLi4uIix2YXJpYW50OiJkZXN0cnVjdGl2ZSJ9KSxzZXRUaW1lb3V0KCgpPT57d2luZG93LmxvY2F0aW9uLmhyZWY9Ii9hcGkvbG9naW4ifSw1MDApO3JldHVybn10KHt0aXRsZToiRXJyb3IiLGRlc2NyaXB0aW9uOiJGYWlsZWQgdG8gbG9hZCBwcm9jZXNzIGRldGFpbHMiLHZhcmlhbnQ6ImRlc3RydWN0aXZlIn0pfX0sW28sdF0pLG58fCFyJiYhbilyZXR1cm4gaS5qc3goImRpdiIse2NsYXNzTmFtZToibWluLWgtc2NyZWVuIGZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktY2VudGVyIixjaGlsZHJlbjppLmpzeHMoImRpdiIse2NsYXNzTmFtZToidGV4dC1jZW50ZXIiLGNoaWxkcmVuOltpLmpzeCgiZGl2Iix7Y2xhc3NOYW1lOiJhbmltYXRlLXNwaW4gcm91bmRlZC1mdWxsIGgtOCB3LTggYm9yZGVyLWItMiBib3JkZXItcHJpbWFyeSBteC1hdXRvIG1iLTQifSksaS5qc3goInAiLHtjbGFzc05hbWU6InRleHQtbXV0ZWQtZm9yZWdyb3VuZCIsY2hpbGRyZW46IkxvYWRpbmcuLi4ifSldfSl9KTtjb25zdCBjPXY9Pntzd2l0Y2godil7Y2FzZSJhY3RpdmUiOnJldHVybiJiZy1ncmVlbi0xMDAgdGV4dC1ncmVlbi04MDAiO2Nhc2UicmV2aWV3IjpyZXR1cm4iYmcteWVsbG93LTEwMCB0ZXh0LXllbGxvdy04MDAiO2Nhc2UiZHJhZnQiOnJldHVybiJiZy1ncmF5LTEwMCB0ZXh0LWdyYXktODAwIjtjYXNlImFyY2hpdmVkIjpyZXR1cm4iYmctcmVkLTEwMCB0ZXh0LXJlZC04MDAiO2RlZmF1bHQ6cmV0dXJuImJnLWJsdWUtMTAwIHRleHQtYmx1ZS04MDAifX0sdT12PT57c3dpdGNoKHYpe2Nhc2UgMTpyZXR1cm4i8J+RkSI7Y2FzZSAyOnJldHVybiLwn5SEIjtjYXNlIDM6cmV0dXJuIvCfkaUiO2Nhc2UgNDpyZXR1cm4i8J+boO+4jyI7Y2FzZSA1OnJldHVybiLwn5OKIjtjYXNlIDY6cmV0dXJuIvCfkrAiO2Nhc2UgNzpyZXR1cm4i8J+boe+4jyI7Y2FzZSA4OnJldHVybiLwn46TIjtkZWZhdWx0OnJldHVybiLwn5OLIn19O3JldHVybiBhP2kuanN4cygiZGl2Iix7Y2xhc3NOYW1lOiJtaW4taC1zY3JlZW4gZmxleCBiZy1iYWNrZ3JvdW5kIixjaGlsZHJlbjpbaS5qc3goRnQse30pLGkuanN4cygibWFpbiIse2NsYXNzTmFtZToiZmxleC0xIG92ZXJmbG93LWF1dG8iLGNoaWxkcmVuOltpLmpzeChJdCx7fSksaS5qc3goImRpdiIse2NsYXNzTmFtZToicC02IixjaGlsZHJlbjppLmpzeHMoImRpdiIse2NsYXNzTmFtZToiYW5pbWF0ZS1wdWxzZSIsY2hpbGRyZW46W2kuanN4KCJkaXYiLHtjbGFzc05hbWU6ImgtOCBiZy1tdXRlZCByb3VuZGVkIG1iLTQgdy0xLzMifSksaS5qc3goImRpdiIse2NsYXNzTmFtZToiaC02IGJnLW11dGVkIHJvdW5kZWQgbWItNiB3LTEvMiJ9KSxpLmpzeHMoImRpdiIse2NsYXNzTmFtZToiZ3JpZCBncmlkLWNvbHMtMSBsZzpncmlkLWNvbHMtMyBnYXAtNiIsY2hpbGRyZW46W2kuanN4KCJkaXYiLHtjbGFzc05hbWU6ImxnOmNvbC1zcGFuLTIgc3BhY2UteS02IixjaGlsZHJlbjpbLi4uQXJyYXkoMyldLm1hcCgodixtKT0+aS5qc3goImRpdiIse2NsYXNzTmFtZToiaC00OCBiZy1tdXRlZCByb3VuZGVkLWxnIn0sbSkpfSksaS5qc3goImRpdiIse2NsYXNzTmFtZToic3BhY2UteS02IixjaGlsZHJlbjpbLi4uQXJyYXkoMildLm1hcCgodixtKT0+aS5qc3goImRpdiIse2NsYXNzTmFtZToiaC0zMiBiZy1tdXRlZCByb3VuZGVkLWxnIn0sbSkpfSldfSldfSl9KV19KV19KTpzP2kuanN4cygiZGl2Iix7Y2xhc3NOYW1lOiJtaW4taC1zY3JlZW4gZmxleCBiZy1iYWNrZ3JvdW5kIixjaGlsZHJlbjpbaS5qc3goRnQse30pLGkuanN4cygibWFpbiIse2NsYXNzTmFtZToiZmxleC0xIG92ZXJmbG93LWF1dG8iLGNoaWxkcmVuOltpLmpzeChJdCx7fSksaS5qc3hzKCJkaXYiLHtjbGFzc05hbWU6InAtNiIsY2hpbGRyZW46W2kuanN4cygiZGl2Iix7Y2xhc3NOYW1lOiJmbGV4IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWJldHdlZW4gbWItNiIsY2hpbGRyZW46W2kuanN4cygiZGl2Iix7Y2xhc3NOYW1lOiJmbGV4IGl0ZW1zLWNlbnRlciBzcGFjZS14LTQiLGNoaWxkcmVuOltpLmpzeChZLHt2YXJpYW50OiJnaG9zdCIsc2l6ZToic20iLGFzQ2hpbGQ6ITAsImRhdGEtdGVzdGlkIjoiYnV0dG9uLWJhY2siLGNoaWxkcmVuOmkuanN4cyh1dCx7aHJlZjoiLyIsY2hpbGRyZW46W2kuanN4KG9pLHtjbGFzc05hbWU6InctNCBoLTQgbXItMiJ9KSwiQmFjayJdfSl9KSxpLmpzeCh5YSx7b3JpZW50YXRpb246InZlcnRpY2FsIixjbGFzc05hbWU6ImgtNiJ9KSxpLmpzeHMoImRpdiIse2NoaWxkcmVuOltpLmpzeHMoImRpdiIse2NsYXNzTmFtZToiZmxleCBpdGVtcy1jZW50ZXIgc3BhY2UteC0zIG1iLTIiLGNoaWxkcmVuOltpLmpzeCgiaDEiLHtjbGFzc05hbWU6InRleHQtMnhsIGZvbnQtYm9sZCIsImRhdGEtdGVzdGlkIjoicHJvY2Vzcy10aXRsZSIsY2hpbGRyZW46cy5uYW1lfSkscy5pc01hbmRhdG9yeSYmaS5qc3god0Use2NsYXNzTmFtZToidy01IGgtNSB0ZXh0LWFjY2VudCBmaWxsLWFjY2VudCJ9KV19KSxpLmpzeHMoImRpdiIse2NsYXNzTmFtZToiZmxleCBpdGVtcy1jZW50ZXIgc3BhY2UteC00IHRleHQtc20gdGV4dC1tdXRlZC1mb3JlZ3JvdW5kIixjaGlsZHJlbjpbaS5qc3goInNwYW4iLHsiZGF0YS10ZXN0aWQiOiJwcm9jZXNzLW51bWJlciIsY2hpbGRyZW46cy5wcm9jZXNzTnVtYmVyfSksaS5qc3goInNwYW4iLHtjaGlsZHJlbjoi4oCiIn0pLGkuanN4KCJzcGFuIix7Y2hpbGRyZW46KGQ9cy5lbGVtZW50KT09bnVsbD92b2lkIDA6ZC50aXRsZX0pLGkuanN4KCJzcGFuIix7Y2hpbGRyZW46IuKAoiJ9KSxpLmpzeChiZSx7Y2xhc3NOYW1lOmMocy5zdGF0dXN8fCJkcmFmdCIpLCJkYXRhLXRlc3RpZCI6InByb2Nlc3Mtc3RhdHVzIixjaGlsZHJlbjpzLnN0YXR1c3x8ImRyYWZ0In0pXX0pXX0pXX0pLGkuanN4cygiZGl2Iix7Y2xhc3NOYW1lOiJmbGV4IGl0ZW1zLWNlbnRlciBzcGFjZS14LTMiLGNoaWxkcmVuOltpLmpzeHMoWSx7dmFyaWFudDoib3V0bGluZSIsc2l6ZToic20iLCJkYXRhLXRlc3RpZCI6ImJ1dHRvbi1oaXN0b3J5IixjaGlsZHJlbjpbaS5qc3godWQse2NsYXNzTmFtZToidy00IGgtNCBtci0yIn0pLCJIaXN0b3J5Il19KSxpLmpzeChZLHtzaXplOiJzbSIsYXNDaGlsZDohMCwiZGF0YS10ZXN0aWQiOiJidXR0b24tZWRpdCIsY2hpbGRyZW46aS5qc3hzKHV0LHtocmVmOmAvcHJvY2Vzcy8ke3MuaWR9L2VkaXRgLGNoaWxkcmVuOltpLmpzeChnYSx7Y2xhc3NOYW1lOiJ3LTQgaC00IG1yLTIifSksIkVkaXQiXX0pfSldfSldfSksaS5qc3hzKCJkaXYiLHtjbGFzc05hbWU6ImdyaWQgZ3JpZC1jb2xzLTEgbGc6Z3JpZC1jb2xzLTMgZ2FwLTYiLGNoaWxkcmVuOltpLmpzeHMoImRpdiIse2NsYXNzTmFtZToibGc6Y29sLXNwYW4tMiBzcGFjZS15LTYiLGNoaWxkcmVuOltpLmpzeHMoaWUse2NoaWxkcmVuOltpLmpzeChFZSx7Y2hpbGRyZW46aS5qc3hzKENlLHtjbGFzc05hbWU6ImZsZXggaXRlbXMtY2VudGVyIHNwYWNlLXgtMiIsY2hpbGRyZW46W2kuanN4KEZuLHtjbGFzc05hbWU6InctNSBoLTUifSksaS5qc3goInNwYW4iLHtjaGlsZHJlbjoiUHJvY2VzcyBPdmVydmlldyJ9KV19KX0pLGkuanN4cyhsZSx7Y2xhc3NOYW1lOiJzcGFjZS15LTQiLGNoaWxkcmVuOltzLmRlc2NyaXB0aW9uJiZpLmpzeHMoImRpdiIse2NoaWxkcmVuOltpLmpzeCgiaDQiLHtjbGFzc05hbWU6ImZvbnQtbWVkaXVtIG1iLTIiLGNoaWxkcmVuOiJEZXNjcmlwdGlvbiJ9KSxpLmpzeCgicCIse2NsYXNzTmFtZToidGV4dC1tdXRlZC1mb3JlZ3JvdW5kIiwiZGF0YS10ZXN0aWQiOiJwcm9jZXNzLWRlc2NyaXB0aW9uIixjaGlsZHJlbjpzLmRlc2NyaXB0aW9ufSldfSkscy5leHBlY3RhdGlvbnMmJmkuanN4cygiZGl2Iix7Y2hpbGRyZW46W2kuanN4KCJoNCIse2NsYXNzTmFtZToiZm9udC1tZWRpdW0gbWItMiIsY2hpbGRyZW46IkV4cGVjdGF0aW9ucyJ9KSxpLmpzeCgicCIse2NsYXNzTmFtZToidGV4dC1tdXRlZC1mb3JlZ3JvdW5kIiwiZGF0YS10ZXN0aWQiOiJwcm9jZXNzLWV4cGVjdGF0aW9ucyIsY2hpbGRyZW46cy5leHBlY3RhdGlvbnN9KV19KV19KV19KSxpLmpzeChNUCx7cHJvY2Vzc05hbWU6cy5uYW1lLHByb2Nlc3NOdW1iZXI6cy5wcm9jZXNzTnVtYmVyLHN0ZXBzOnMuc3RlcHN8fFtdfSksaS5qc3hzKGllLHtjaGlsZHJlbjpbaS5qc3goRWUse2NoaWxkcmVuOmkuanN4cyhDZSx7Y2xhc3NOYW1lOiJmbGV4IGl0ZW1zLWNlbnRlciBzcGFjZS14LTIiLGNoaWxkcmVuOltpLmpzeChfcix7Y2xhc3NOYW1lOiJ3LTUgaC01In0pLGkuanN4KCJzcGFuIix7Y2hpbGRyZW46IlByb2Nlc3MgU3RlcHMifSldfSl9KSxpLmpzeChsZSx7Y2hpbGRyZW46cy5zdGVwcyYmcy5zdGVwcy5sZW5ndGg+MD9pLmpzeCgiZGl2Iix7Y2xhc3NOYW1lOiJzcGFjZS15LTQiLGNoaWxkcmVuOnMuc3RlcHMubWFwKCh2LG0pPT5pLmpzeHMoImRpdiIse2NsYXNzTmFtZToiYm9yZGVyIHJvdW5kZWQtbGcgcC00IiwiZGF0YS10ZXN0aWQiOmBwcm9jZXNzLXN0ZXAtJHttfWAsY2hpbGRyZW46W2kuanN4cygiZGl2Iix7Y2xhc3NOYW1lOiJmbGV4IGl0ZW1zLWNlbnRlciBzcGFjZS14LTMgbWItMyIsY2hpbGRyZW46W2kuanN4KCJkaXYiLHtjbGFzc05hbWU6InctOCBoLTggYmctcHJpbWFyeS8xMCByb3VuZGVkLWZ1bGwgZmxleCBpdGVtcy1jZW50ZXIganVzdGlmeS1jZW50ZXIgdGV4dC1wcmltYXJ5IGZvbnQtbWVkaXVtIHRleHQtc20iLGNoaWxkcmVuOnYuc3RlcE51bWJlcn0pLGkuanN4KCJoNCIse2NsYXNzTmFtZToiZm9udC1tZWRpdW0iLGNoaWxkcmVuOnYuc3RlcE5hbWV9KV19KSx2LnN0ZXBEZXRhaWxzJiZpLmpzeHMoImRpdiIse2NsYXNzTmFtZToibWItMyIsY2hpbGRyZW46W2kuanN4KCJoNSIse2NsYXNzTmFtZToidGV4dC1zbSBmb250LW1lZGl1bSB0ZXh0LW11dGVkLWZvcmVncm91bmQgbWItMSIsY2hpbGRyZW46IkRldGFpbHMifSksaS5qc3goInAiLHtjbGFzc05hbWU6InRleHQtc20iLGNoaWxkcmVuOnYuc3RlcERldGFpbHN9KV19KSx2LnJlc3BvbnNpYmlsaXRpZXMmJmkuanN4cygiZGl2Iix7Y2xhc3NOYW1lOiJtYi0zIixjaGlsZHJlbjpbaS5qc3goImg1Iix7Y2xhc3NOYW1lOiJ0ZXh0LXNtIGZvbnQtbWVkaXVtIHRleHQtbXV0ZWQtZm9yZWdyb3VuZCBtYi0xIixjaGlsZHJlbjoiUmVzcG9uc2liaWxpdGllcyJ9KSxpLmpzeCgicCIse2NsYXNzTmFtZToidGV4dC1zbSIsY2hpbGRyZW46di5yZXNwb25zaWJpbGl0aWVzfSldfSksdi5yZWZlcmVuY2VzJiZpLmpzeHMoImRpdiIse2NoaWxkcmVuOltpLmpzeCgiaDUiLHtjbGFzc05hbWU6InRleHQtc20gZm9udC1tZWRpdW0gdGV4dC1tdXRlZC1mb3JlZ3JvdW5kIG1iLTEiLGNoaWxkcmVuOiJSZWZlcmVuY2VzIn0pLGkuanN4KCJwIix7Y2xhc3NOYW1lOiJ0ZXh0LXNtIixjaGlsZHJlbjp2LnJlZmVyZW5jZXN9KV19KV19LHYuaWQpKX0pOmkuanN4cygiZGl2Iix7Y2xhc3NOYW1lOiJ0ZXh0LWNlbnRlciBweS04IHRleHQtbXV0ZWQtZm9yZWdyb3VuZCIsY2hpbGRyZW46W2kuanN4KF9yLHtjbGFzc05hbWU6InctOCBoLTggbXgtYXV0byBtYi0yIG9wYWNpdHktNTAifSksaS5qc3goInAiLHtjaGlsZHJlbjoiTm8gcHJvY2VzcyBzdGVwcyBkZWZpbmVkIHlldC4ifSldfSl9KV19KSxpLmpzeChPUCx7cHJvY2VzczpzfSksaS5qc3hzKGllLHtjaGlsZHJlbjpbaS5qc3goRWUse2NoaWxkcmVuOmkuanN4cyhDZSx7Y2xhc3NOYW1lOiJmbGV4IGl0ZW1zLWNlbnRlciBzcGFjZS14LTIiLGNoaWxkcmVuOltpLmpzeChzcix7Y2xhc3NOYW1lOiJ3LTUgaC01In0pLGkuanN4KCJzcGFuIix7Y2hpbGRyZW46IlBlcmZvcm1hbmNlIE1lYXN1cmVzIn0pXX0pfSksaS5qc3gobGUse2NoaWxkcmVuOnMucGVyZm9ybWFuY2VNZWFzdXJlcyYmcy5wZXJmb3JtYW5jZU1lYXN1cmVzLmxlbmd0aD4wP2kuanN4KCJkaXYiLHtjbGFzc05hbWU6InNwYWNlLXktNCIsY2hpbGRyZW46cy5wZXJmb3JtYW5jZU1lYXN1cmVzLm1hcCgodixtKT0+aS5qc3hzKCJkaXYiLHtjbGFzc05hbWU6ImJvcmRlciByb3VuZGVkLWxnIHAtNCIsImRhdGEtdGVzdGlkIjpgcGVyZm9ybWFuY2UtbWVhc3VyZS0ke219YCxjaGlsZHJlbjpbaS5qc3hzKCJkaXYiLHtjbGFzc05hbWU6ImZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktYmV0d2VlbiBtYi0yIixjaGlsZHJlbjpbaS5qc3goImg0Iix7Y2xhc3NOYW1lOiJmb250LW1lZGl1bSIsY2hpbGRyZW46di5tZWFzdXJlTmFtZX0pLGkuanN4KFkse3ZhcmlhbnQ6Imdob3N0IixzaXplOiJzbSIsYXNDaGlsZDohMCwiZGF0YS10ZXN0aWQiOmBidXR0b24tZWRpdC1tZWFzdXJlLSR7bX1gLGNoaWxkcmVuOmkuanN4KHV0LHtocmVmOmAvcHJvY2Vzcy8ke3MuaWR9L2VkaXRgLGNoaWxkcmVuOmkuanN4KGdhLHtjbGFzc05hbWU6InctNCBoLTQifSl9KX0pXX0pLGkuanN4cygiZGl2Iix7Y2xhc3NOYW1lOiJncmlkIGdyaWQtY29scy0xIG1kOmdyaWQtY29scy0yIGdhcC00IHRleHQtc20iLGNoaWxkcmVuOlt2LmZvcm11bGEmJmkuanN4cygiZGl2Iix7Y2hpbGRyZW46W2kuanN4KCJzcGFuIix7Y2xhc3NOYW1lOiJ0ZXh0LW11dGVkLWZvcmVncm91bmQiLGNoaWxkcmVuOiJGb3JtdWxhOiAifSksaS5qc3goInNwYW4iLHtjaGlsZHJlbjp2LmZvcm11bGF9KV19KSx2LnNvdXJjZSYmaS5qc3hzKCJkaXYiLHtjaGlsZHJlbjpbaS5qc3goInNwYW4iLHtjbGFzc05hbWU6InRleHQtbXV0ZWQtZm9yZWdyb3VuZCIsY2hpbGRyZW46IlNvdXJjZTogIn0pLGkuanN4KCJzcGFuIix7Y2hpbGRyZW46di5zb3VyY2V9KV19KSx2LmZyZXF1ZW5jeSYmaS5qc3hzKCJkaXYiLHtjaGlsZHJlbjpbaS5qc3goInNwYW4iLHtjbGFzc05hbWU6InRleHQtbXV0ZWQtZm9yZWdyb3VuZCIsY2hpbGRyZW46IkZyZXF1ZW5jeTogIn0pLGkuanN4KCJzcGFuIix7Y2hpbGRyZW46di5mcmVxdWVuY3l9KV19KSx2LnRhcmdldCYmaS5qc3hzKCJkaXYiLHtjaGlsZHJlbjpbaS5qc3goInNwYW4iLHtjbGFzc05hbWU6InRleHQtbXV0ZWQtZm9yZWdyb3VuZCIsY2hpbGRyZW46IlRhcmdldDogIn0pLGkuanN4KCJzcGFuIix7Y2hpbGRyZW46di50YXJnZXR9KV19KSx2LnNjb3JlY2FyZENhdGVnb3J5JiZpLmpzeHMoImRpdiIse2NoaWxkcmVuOltpLmpzeCgic3BhbiIse2NsYXNzTmFtZToidGV4dC1tdXRlZC1mb3JlZ3JvdW5kIixjaGlsZHJlbjoiU2NvcmVjYXJkOiAifSksaS5qc3hzKCJzcGFuIix7Y2xhc3NOYW1lOiJmbGV4IGl0ZW1zLWNlbnRlciBnYXAtMSIsY2hpbGRyZW46W2kuanN4KCJzcGFuIix7Y2xhc3NOYW1lOiJ0ZXh0LWxnIixjaGlsZHJlbjpGUCh2LnNjb3JlY2FyZENhdGVnb3J5KX0pLGkuanN4KCJzcGFuIix7Y2hpbGRyZW46di5zY29yZWNhcmRDYXRlZ29yeX0pXX0pXX0pLHYuc3RyYXRlZ2ljR29hbElkJiZpLmpzeHMoImRpdiIse2NoaWxkcmVuOltpLmpzeCgic3BhbiIse2NsYXNzTmFtZToidGV4dC1tdXRlZC1mb3JlZ3JvdW5kIixjaGlsZHJlbjoiTGlua2VkIEdvYWw6ICJ9KSxpLmpzeCgic3BhbiIse2NsYXNzTmFtZToiZm9udC1tZWRpdW0gdGV4dC1ibHVlLTYwMCIsY2hpbGRyZW46KCgpPT57Y29uc3Qgdz1sLmZpbmQoaD0+aC5pZD09PXYuc3RyYXRlZ2ljR29hbElkKTtyZXR1cm4gdz9gJHt3LnRpdGxlfSAoJHt3LmNhdGVnb3J5fSlgOiJTdHJhdGVnaWMgR29hbCJ9KSgpfSldfSldfSldfSx2LmlkKSl9KTppLmpzeHMoImRpdiIse2NsYXNzTmFtZToidGV4dC1jZW50ZXIgcHktOCB0ZXh0LW11dGVkLWZvcmVncm91bmQiLGNoaWxkcmVuOltpLmpzeChzcix7Y2xhc3NOYW1lOiJ3LTggaC04IG14LWF1dG8gbWItMiBvcGFjaXR5LTUwIn0pLGkuanN4KCJwIix7Y2hpbGRyZW46Ik5vIHBlcmZvcm1hbmNlIG1lYXN1cmVzIGRlZmluZWQgeWV0LiJ9KV19KX0pXX0pXX0pLGkuanN4cygiZGl2Iix7Y2xhc3NOYW1lOiJzcGFjZS15LTYiLGNoaWxkcmVuOltpLmpzeHMoaWUse2NoaWxkcmVuOltpLmpzeChFZSx7Y2hpbGRyZW46aS5qc3goQ2Use2NoaWxkcmVuOiJQcm9jZXNzIEluZm9ybWF0aW9uIn0pfSksaS5qc3hzKGxlLHtjbGFzc05hbWU6InNwYWNlLXktNCIsY2hpbGRyZW46W2kuanN4cygiZGl2Iix7Y2xhc3NOYW1lOiJmbGV4IGl0ZW1zLWNlbnRlciBzcGFjZS14LTMiLGNoaWxkcmVuOltpLmpzeCgiZGl2Iix7Y2xhc3NOYW1lOiJ3LTEyIGgtMTIgYmctcHJpbWFyeS8xMCByb3VuZGVkLWxnIGZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktY2VudGVyIHRleHQtMnhsIixjaGlsZHJlbjp1KCgoZj1zLmVsZW1lbnQpPT1udWxsP3ZvaWQgMDpmLmVsZW1lbnROdW1iZXIpfHwxKX0pLGkuanN4cygiZGl2Iix7Y2hpbGRyZW46W2kuanN4cygicCIse2NsYXNzTmFtZToiZm9udC1tZWRpdW0iLGNoaWxkcmVuOlsiT0UgRWxlbWVudCBOby4gIiwocD1zLmVsZW1lbnQpPT1udWxsP3ZvaWQgMDpwLmVsZW1lbnROdW1iZXJdfSksaS5qc3goInAiLHtjbGFzc05hbWU6InRleHQtc20gdGV4dC1tdXRlZC1mb3JlZ3JvdW5kIixjaGlsZHJlbjooeD1zLmVsZW1lbnQpPT1udWxsP3ZvaWQgMDp4LnRpdGxlfSldfSldfSksaS5qc3goeWEse30pLGkuanN4cygiZGl2Iix7Y2xhc3NOYW1lOiJzcGFjZS15LTMgdGV4dC1zbSIsY2hpbGRyZW46W2kuanN4cygiZGl2Iix7Y2xhc3NOYW1lOiJmbGV4IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWJldHdlZW4iLGNoaWxkcmVuOltpLmpzeCgic3BhbiIse2NsYXNzTmFtZToidGV4dC1tdXRlZC1mb3JlZ3JvdW5kIixjaGlsZHJlbjoiUHJvY2VzcyBPd25lciJ9KSxpLmpzeCgic3BhbiIseyJkYXRhLXRlc3RpZCI6InByb2Nlc3Mtb3duZXIiLGNoaWxkcmVuOnMucHJvY2Vzc093bmVyfHwiTm90IGFzc2lnbmVkIn0pXX0pLGkuanN4cygiZGl2Iix7Y2xhc3NOYW1lOiJmbGV4IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWJldHdlZW4iLGNoaWxkcmVuOltpLmpzeCgic3BhbiIse2NsYXNzTmFtZToidGV4dC1tdXRlZC1mb3JlZ3JvdW5kIixjaGlsZHJlbjoiUmV2aXNpb24ifSksaS5qc3hzKCJzcGFuIix7ImRhdGEtdGVzdGlkIjoicHJvY2Vzcy1yZXZpc2lvbiIsY2hpbGRyZW46WyJ2IixzLnJldmlzaW9uXX0pXX0pLGkuanN4cygiZGl2Iix7Y2xhc3NOYW1lOiJmbGV4IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWJldHdlZW4iLGNoaWxkcmVuOltpLmpzeCgic3BhbiIse2NsYXNzTmFtZToidGV4dC1tdXRlZC1mb3JlZ3JvdW5kIixjaGlsZHJlbjoiTWFuZGF0b3J5In0pLGkuanN4KCJzcGFuIix7ImRhdGEtdGVzdGlkIjoicHJvY2Vzcy1tYW5kYXRvcnkiLGNoaWxkcmVuOnMuaXNNYW5kYXRvcnk/IlllcyI6Ik5vIn0pXX0pLHMuaXNzdWVEYXRlJiZpLmpzeHMoImRpdiIse2NsYXNzTmFtZToiZmxleCBpdGVtcy1jZW50ZXIganVzdGlmeS1iZXR3ZWVuIixjaGlsZHJlbjpbaS5qc3goInNwYW4iLHtjbGFzc05hbWU6InRleHQtbXV0ZWQtZm9yZWdyb3VuZCIsY2hpbGRyZW46Iklzc3VlIERhdGUifSksaS5qc3goInNwYW4iLHsiZGF0YS10ZXN0aWQiOiJwcm9jZXNzLWlzc3VlLWRhdGUiLGNoaWxkcmVuOm5ldyBEYXRlKHMuaXNzdWVEYXRlKS50b0xvY2FsZURhdGVTdHJpbmcoKX0pXX0pLHMuY3JlYXRlZEF0JiZpLmpzeHMoImRpdiIse2NsYXNzTmFtZToiZmxleCBpdGVtcy1jZW50ZXIganVzdGlmeS1iZXR3ZWVuIixjaGlsZHJlbjpbaS5qc3goInNwYW4iLHtjbGFzc05hbWU6InRleHQtbXV0ZWQtZm9yZWdyb3VuZCIsY2hpbGRyZW46IkNyZWF0ZWQifSksaS5qc3goInNwYW4iLHsiZGF0YS10ZXN0aWQiOiJwcm9jZXNzLWNyZWF0ZWQtZGF0ZSIsY2hpbGRyZW46bmV3IERhdGUocy5jcmVhdGVkQXQpLnRvTG9jYWxlRGF0ZVN0cmluZygpfSldfSkscy51cGRhdGVkQXQmJmkuanN4cygiZGl2Iix7Y2xhc3NOYW1lOiJmbGV4IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWJldHdlZW4iLGNoaWxkcmVuOltpLmpzeCgic3BhbiIse2NsYXNzTmFtZToidGV4dC1tdXRlZC1mb3JlZ3JvdW5kIixjaGlsZHJlbjoiTGFzdCBVcGRhdGVkIn0pLGkuanN4KCJzcGFuIix7ImRhdGEtdGVzdGlkIjoicHJvY2Vzcy11cGRhdGVkLWRhdGUiLGNoaWxkcmVuOm5ldyBEYXRlKHMudXBkYXRlZEF0KS50b0xvY2FsZURhdGVTdHJpbmcoKX0pXX0pXX0pXX0pXX0pLGkuanN4cyhpZSx7Y2hpbGRyZW46W2kuanN4KEVlLHtjaGlsZHJlbjppLmpzeHMoQ2Use2NsYXNzTmFtZToiZmxleCBpdGVtcy1jZW50ZXIgc3BhY2UteC0yIixjaGlsZHJlbjpbaS5qc3godWQse2NsYXNzTmFtZToidy01IGgtNSJ9KSxpLmpzeCgic3BhbiIse2NoaWxkcmVuOiJEb2N1bWVudCBWZXJzaW9ucyJ9KV19KX0pLGkuanN4KGxlLHtjaGlsZHJlbjpzLnZlcnNpb25zJiZzLnZlcnNpb25zLmxlbmd0aD4wP2kuanN4KCJkaXYiLHtjbGFzc05hbWU6InNwYWNlLXktMyIsY2hpbGRyZW46cy52ZXJzaW9ucy5zbGljZSgwLDUpLm1hcCgodixtKT0+aS5qc3hzKCJkaXYiLHtjbGFzc05hbWU6ImZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktYmV0d2VlbiB0ZXh0LXNtIiwiZGF0YS10ZXN0aWQiOmB2ZXJzaW9uLSR7bX1gLGNoaWxkcmVuOltpLmpzeHMoImRpdiIse2NoaWxkcmVuOltpLmpzeHMoInAiLHtjbGFzc05hbWU6ImZvbnQtbWVkaXVtIixjaGlsZHJlbjpbIlZlcnNpb24gIix2LnZlcnNpb25OdW1iZXJdfSksdi5jaGFuZ2VMb2cmJmkuanN4KCJwIix7Y2xhc3NOYW1lOiJ0ZXh0LW11dGVkLWZvcmVncm91bmQgdGV4dC14cyIsY2hpbGRyZW46di5jaGFuZ2VMb2d9KV19KSxpLmpzeCgiZGl2Iix7Y2xhc3NOYW1lOiJ0ZXh0LXhzIHRleHQtbXV0ZWQtZm9yZWdyb3VuZCIsY2hpbGRyZW46di5jcmVhdGVkQXQ/bmV3IERhdGUodi5jcmVhdGVkQXQpLnRvTG9jYWxlRGF0ZVN0cmluZygpOiJVbmtub3duIn0pXX0sdi5pZCkpfSk6aS5qc3hzKCJkaXYiLHtjbGFzc05hbWU6InRleHQtY2VudGVyIHB5LTQgdGV4dC1tdXRlZC1mb3JlZ3JvdW5kIHRleHQtc20iLGNoaWxkcmVuOltpLmpzeCh1ZCx7Y2xhc3NOYW1lOiJ3LTYgaC02IG14LWF1dG8gbWItMiBvcGFjaXR5LTUwIn0pLGkuanN4KCJwIix7Y2hpbGRyZW46Ik5vIHZlcnNpb24gaGlzdG9yeSBhdmFpbGFibGUuIn0pXX0pfSldfSldfSldfSldfSldfSldfSk6aS5qc3hzKCJkaXYiLHtjbGFzc05hbWU6Im1pbi1oLXNjcmVlbiBmbGV4IGJnLWJhY2tncm91bmQiLGNoaWxkcmVuOltpLmpzeChGdCx7fSksaS5qc3hzKCJtYWluIix7Y2xhc3NOYW1lOiJmbGV4LTEgb3ZlcmZsb3ctYXV0byIsY2hpbGRyZW46W2kuanN4KEl0LHt9KSxpLmpzeCgiZGl2Iix7Y2xhc3NOYW1lOiJwLTYiLGNoaWxkcmVuOmkuanN4KGllLHtjaGlsZHJlbjppLmpzeHMobGUse2NsYXNzTmFtZToicC04IHRleHQtY2VudGVyIixjaGlsZHJlbjpbaS5qc3goRm4se2NsYXNzTmFtZToidy0xMiBoLTEyIHRleHQtbXV0ZWQtZm9yZWdyb3VuZCBteC1hdXRvIG1iLTQifSksaS5qc3goImgzIix7Y2xhc3NOYW1lOiJ0ZXh0LWxnIGZvbnQtc2VtaWJvbGQgbWItMiIsY2hpbGRyZW46IlByb2Nlc3MgTm90IEZvdW5kIn0pLGkuanN4KCJwIix7Y2xhc3NOYW1lOiJ0ZXh0LW11dGVkLWZvcmVncm91bmQgbWItNCIsY2hpbGRyZW46IlRoZSByZXF1ZXN0ZWQgcHJvY2VzcyBjb3VsZCBub3QgYmUgZm91bmQgb3IgeW91IGRvbid0IGhhdmUgcGVybWlzc2lvbiB0byB2aWV3IGl0LiJ9KSxpLmpzeChZLHthc0NoaWxkOiEwLCJkYXRhLXRlc3RpZCI6ImJ1dHRvbi1iYWNrLXRvLWRhc2hib2FyZCIsY2hpbGRyZW46aS5qc3hzKHV0LHtocmVmOiIvIixjaGlsZHJlbjpbaS5qc3gob2kse2NsYXNzTmFtZToidy00IGgtNCBtci0yIn0pLCJCYWNrIHRvIERhc2hib2FyZCJdfSl9KV19KX0pfSldfSldfSl9dmFyIGFsPWU9PmUudHlwZT09PSJjaGVja2JveCIsVnM9ZT0+ZSBpbnN0YW5jZW9mIERhdGUsQnQ9ZT0+ZT09bnVsbDtjb25zdCB6MT1lPT50eXBlb2YgZT09Im9iamVjdCI7dmFyIG10PWU9PiFCdChlKSYmIUFycmF5LmlzQXJyYXkoZSkmJnoxKGUpJiYhVnMoZSksVjE9ZT0+bXQoZSkmJmUudGFyZ2V0P2FsKGUudGFyZ2V0KT9lLnRhcmdldC5jaGVja2VkOmUudGFyZ2V0LnZhbHVlOmUsTFA9ZT0+ZS5zdWJzdHJpbmcoMCxlLnNlYXJjaCgvXC5cZCsoXC58JCkvKSl8fGUsVTE9KGUsdCk9PmUuaGFzKExQKHQpKSxEUD1lPT57Y29uc3QgdD1lLmNvbnN0cnVjdG9yJiZlLmNvbnN0cnVjdG9yLnByb3RvdHlwZTtyZXR1cm4gbXQodCkmJnQuaGFzT3duUHJvcGVydHkoImlzUHJvdG90eXBlT2YiKX0sRmg9dHlwZW9mIHdpbmRvdzwidSImJnR5cGVvZiB3aW5kb3cuSFRNTEVsZW1lbnQ8InUiJiZ0eXBlb2YgZG9jdW1lbnQ8InUiO2Z1bmN0aW9uIHJ0KGUpe2xldCB0O2NvbnN0IHI9QXJyYXkuaXNBcnJheShlKSxuPXR5cGVvZiBGaWxlTGlzdDwidSI/ZSBpbnN0YW5jZW9mIEZpbGVMaXN0OiExO2lmKGUgaW5zdGFuY2VvZiBEYXRlKXQ9bmV3IERhdGUoZSk7ZWxzZSBpZihlIGluc3RhbmNlb2YgU2V0KXQ9bmV3IFNldChlKTtlbHNlIGlmKCEoRmgmJihlIGluc3RhbmNlb2YgQmxvYnx8bikpJiYocnx8bXQoZSkpKWlmKHQ9cj9bXTp7fSwhciYmIURQKGUpKXQ9ZTtlbHNlIGZvcihjb25zdCBzIGluIGUpZS5oYXNPd25Qcm9wZXJ0eShzKSYmKHRbc109cnQoZVtzXSkpO2Vsc2UgcmV0dXJuIGU7cmV0dXJuIHR9dmFyIG9sPWU9PkFycmF5LmlzQXJyYXkoZSk/ZS5maWx0ZXIoQm9vbGVhbik6W10sR2U9ZT0+ZT09PXZvaWQgMCxXPShlLHQscik9PntpZighdHx8IW10KGUpKXJldHVybiByO2NvbnN0IG49b2wodC5zcGxpdCgvWyxbXF0uXSs/LykpLnJlZHVjZSgocyxhKT0+QnQocyk/czpzW2FdLGUpO3JldHVybiBHZShuKXx8bj09PWU/R2UoZVt0XSk/cjplW3RdOm59LGxyPWU9PnR5cGVvZiBlPT0iYm9vbGVhbiIsSWg9ZT0+L15cdyokLy50ZXN0KGUpLEIxPWU9Pm9sKGUucmVwbGFjZSgvWyJ8J118XF0vZywiIikuc3BsaXQoL1wufFxbLykpLE1lPShlLHQscik9PntsZXQgbj0tMTtjb25zdCBzPUloKHQpP1t0XTpCMSh0KSxhPXMubGVuZ3RoLG89YS0xO2Zvcig7KytuPGE7KXtjb25zdCBsPXNbbl07bGV0IGM9cjtpZihuIT09byl7Y29uc3QgdT1lW2xdO2M9bXQodSl8fEFycmF5LmlzQXJyYXkodSk/dTppc05hTigrc1tuKzFdKT97fTpbXX1pZihsPT09Il9fcHJvdG9fXyJ8fGw9PT0iY29uc3RydWN0b3IifHxsPT09InByb3RvdHlwZSIpcmV0dXJuO2VbbF09YyxlPWVbbF19fTtjb25zdCBEYz17QkxVUjoiYmx1ciIsRk9DVVNfT1VUOiJmb2N1c291dCIsQ0hBTkdFOiJjaGFuZ2UifSxOcj17b25CbHVyOiJvbkJsdXIiLG9uQ2hhbmdlOiJvbkNoYW5nZSIsb25TdWJtaXQ6Im9uU3VibWl0IixvblRvdWNoZWQ6Im9uVG91Y2hlZCIsYWxsOiJhbGwifSx4bj17bWF4OiJtYXgiLG1pbjoibWluIixtYXhMZW5ndGg6Im1heExlbmd0aCIsbWluTGVuZ3RoOiJtaW5MZW5ndGgiLHBhdHRlcm46InBhdHRlcm4iLHJlcXVpcmVkOiJyZXF1aXJlZCIsdmFsaWRhdGU6InZhbGlkYXRlIn0sSDE9c2UuY3JlYXRlQ29udGV4dChudWxsKSxsbD0oKT0+c2UudXNlQ29udGV4dChIMSksJFA9ZT0+e2NvbnN0e2NoaWxkcmVuOnQsLi4ucn09ZTtyZXR1cm4gc2UuY3JlYXRlRWxlbWVudChIMS5Qcm92aWRlcix7dmFsdWU6cn0sdCl9O3ZhciBXMT0oZSx0LHIsbj0hMCk9Pntjb25zdCBzPXtkZWZhdWx0VmFsdWVzOnQuX2RlZmF1bHRWYWx1ZXN9O2Zvcihjb25zdCBhIGluIGUpT2JqZWN0LmRlZmluZVByb3BlcnR5KHMsYSx7Z2V0OigpPT57Y29uc3Qgbz1hO3JldHVybiB0Ll9wcm94eUZvcm1TdGF0ZVtvXSE9PU5yLmFsbCYmKHQuX3Byb3h5Rm9ybVN0YXRlW29dPSFufHxOci5hbGwpLHImJihyW29dPSEwKSxlW29dfX0pO3JldHVybiBzfTtmdW5jdGlvbiB6UChlKXtjb25zdCB0PWxsKCkse2NvbnRyb2w6cj10LmNvbnRyb2wsZGlzYWJsZWQ6bixuYW1lOnMsZXhhY3Q6YX09ZXx8e30sW28sbF09c2UudXNlU3RhdGUoci5fZm9ybVN0YXRlKSxjPXNlLnVzZVJlZih7aXNEaXJ0eTohMSxpc0xvYWRpbmc6ITEsZGlydHlGaWVsZHM6ITEsdG91Y2hlZEZpZWxkczohMSx2YWxpZGF0aW5nRmllbGRzOiExLGlzVmFsaWRhdGluZzohMSxpc1ZhbGlkOiExLGVycm9yczohMX0pLHU9c2UudXNlUmVmKHMpO3JldHVybiB1LmN1cnJlbnQ9cyxzZS51c2VFZmZlY3QoKCk9PnIuX3N1YnNjcmliZSh7bmFtZTp1LmN1cnJlbnQsZm9ybVN0YXRlOmMuY3VycmVudCxleGFjdDphLGNhbGxiYWNrOmQ9PnshbiYmbCh7Li4uci5fZm9ybVN0YXRlLC4uLmR9KX19KSxbcixuLGFdKSxzZS51c2VFZmZlY3QoKCk9PntjLmN1cnJlbnQuaXNWYWxpZCYmci5fc2V0VmFsaWQoITApfSxbcl0pLHNlLnVzZU1lbW8oKCk9PlcxKG8scixjLmN1cnJlbnQsITEpLFtvLHJdKX12YXIgYW49ZT0+dHlwZW9mIGU9PSJzdHJpbmciLHExPShlLHQscixuLHMpPT5hbihlKT8obiYmdC53YXRjaC5hZGQoZSksVyhyLGUscykpOkFycmF5LmlzQXJyYXkoZSk/ZS5tYXAoYT0+KG4mJnQud2F0Y2guYWRkKGEpLFcocixhKSkpOihuJiYodC53YXRjaEFsbD0hMCkscik7ZnVuY3Rpb24gVlAoZSl7Y29uc3QgdD1sbCgpLHtjb250cm9sOnI9dC5jb250cm9sLG5hbWU6bixkZWZhdWx0VmFsdWU6cyxkaXNhYmxlZDphLGV4YWN0Om99PWV8fHt9LGw9c2UudXNlUmVmKG4pLGM9c2UudXNlUmVmKHMpO2wuY3VycmVudD1uLHNlLnVzZUVmZmVjdCgoKT0+ci5fc3Vic2NyaWJlKHtuYW1lOmwuY3VycmVudCxmb3JtU3RhdGU6e3ZhbHVlczohMH0sZXhhY3Q6byxjYWxsYmFjazpmPT4hYSYmZChxMShsLmN1cnJlbnQsci5fbmFtZXMsZi52YWx1ZXN8fHIuX2Zvcm1WYWx1ZXMsITEsYy5jdXJyZW50KSl9KSxbcixhLG9dKTtjb25zdFt1LGRdPXNlLnVzZVN0YXRlKHIuX2dldFdhdGNoKG4scykpO3JldHVybiBzZS51c2VFZmZlY3QoKCk9PnIuX3JlbW92ZVVubW91bnRlZCgpKSx1fWZ1bmN0aW9uIFVQKGUpe2NvbnN0IHQ9bGwoKSx7bmFtZTpyLGRpc2FibGVkOm4sY29udHJvbDpzPXQuY29udHJvbCxzaG91bGRVbnJlZ2lzdGVyOmF9PWUsbz1VMShzLl9uYW1lcy5hcnJheSxyKSxsPVZQKHtjb250cm9sOnMsbmFtZTpyLGRlZmF1bHRWYWx1ZTpXKHMuX2Zvcm1WYWx1ZXMscixXKHMuX2RlZmF1bHRWYWx1ZXMscixlLmRlZmF1bHRWYWx1ZSkpLGV4YWN0OiEwfSksYz16UCh7Y29udHJvbDpzLG5hbWU6cixleGFjdDohMH0pLHU9c2UudXNlUmVmKGUpLGQ9c2UudXNlUmVmKHMucmVnaXN0ZXIocix7Li4uZS5ydWxlcyx2YWx1ZTpsLC4uLmxyKGUuZGlzYWJsZWQpP3tkaXNhYmxlZDplLmRpc2FibGVkfTp7fX0pKSxmPXNlLnVzZU1lbW8oKCk9Pk9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKHt9LHtpbnZhbGlkOntlbnVtZXJhYmxlOiEwLGdldDooKT0+ISFXKGMuZXJyb3JzLHIpfSxpc0RpcnR5OntlbnVtZXJhYmxlOiEwLGdldDooKT0+ISFXKGMuZGlydHlGaWVsZHMscil9LGlzVG91Y2hlZDp7ZW51bWVyYWJsZTohMCxnZXQ6KCk9PiEhVyhjLnRvdWNoZWRGaWVsZHMscil9LGlzVmFsaWRhdGluZzp7ZW51bWVyYWJsZTohMCxnZXQ6KCk9PiEhVyhjLnZhbGlkYXRpbmdGaWVsZHMscil9LGVycm9yOntlbnVtZXJhYmxlOiEwLGdldDooKT0+VyhjLmVycm9ycyxyKX19KSxbYyxyXSkscD1zZS51c2VDYWxsYmFjayh3PT5kLmN1cnJlbnQub25DaGFuZ2Uoe3RhcmdldDp7dmFsdWU6VjEodyksbmFtZTpyfSx0eXBlOkRjLkNIQU5HRX0pLFtyXSkseD1zZS51c2VDYWxsYmFjaygoKT0+ZC5jdXJyZW50Lm9uQmx1cih7dGFyZ2V0Ont2YWx1ZTpXKHMuX2Zvcm1WYWx1ZXMsciksbmFtZTpyfSx0eXBlOkRjLkJMVVJ9KSxbcixzLl9mb3JtVmFsdWVzXSksdj1zZS51c2VDYWxsYmFjayh3PT57Y29uc3QgaD1XKHMuX2ZpZWxkcyxyKTtoJiZ3JiYoaC5fZi5yZWY9e2ZvY3VzOigpPT53LmZvY3VzKCksc2VsZWN0OigpPT53LnNlbGVjdCgpLHNldEN1c3RvbVZhbGlkaXR5Omc9Pncuc2V0Q3VzdG9tVmFsaWRpdHkoZykscmVwb3J0VmFsaWRpdHk6KCk9PncucmVwb3J0VmFsaWRpdHkoKX0pfSxbcy5fZmllbGRzLHJdKSxtPXNlLnVzZU1lbW8oKCk9Pih7bmFtZTpyLHZhbHVlOmwsLi4ubHIobil8fGMuZGlzYWJsZWQ/e2Rpc2FibGVkOmMuZGlzYWJsZWR8fG59Ont9LG9uQ2hhbmdlOnAsb25CbHVyOngscmVmOnZ9KSxbcixuLGMuZGlzYWJsZWQscCx4LHYsbF0pO3JldHVybiBzZS51c2VFZmZlY3QoKCk9Pntjb25zdCB3PXMuX29wdGlvbnMuc2hvdWxkVW5yZWdpc3Rlcnx8YTtzLnJlZ2lzdGVyKHIsey4uLnUuY3VycmVudC5ydWxlcywuLi5scih1LmN1cnJlbnQuZGlzYWJsZWQpP3tkaXNhYmxlZDp1LmN1cnJlbnQuZGlzYWJsZWR9Ont9fSk7Y29uc3QgaD0oZyxiKT0+e2NvbnN0IE49VyhzLl9maWVsZHMsZyk7TiYmTi5fZiYmKE4uX2YubW91bnQ9Yil9O2lmKGgociwhMCksdyl7Y29uc3QgZz1ydChXKHMuX29wdGlvbnMuZGVmYXVsdFZhbHVlcyxyKSk7TWUocy5fZGVmYXVsdFZhbHVlcyxyLGcpLEdlKFcocy5fZm9ybVZhbHVlcyxyKSkmJk1lKHMuX2Zvcm1WYWx1ZXMscixnKX1yZXR1cm4hbyYmcy5yZWdpc3RlcihyKSwoKT0+eyhvP3cmJiFzLl9zdGF0ZS5hY3Rpb246dyk/cy51bnJlZ2lzdGVyKHIpOmgociwhMSl9fSxbcixzLG8sYV0pLHNlLnVzZUVmZmVjdCgoKT0+e3MuX3NldERpc2FibGVkRmllbGQoe2Rpc2FibGVkOm4sbmFtZTpyfSl9LFtuLHIsc10pLHNlLnVzZU1lbW8oKCk9Pih7ZmllbGQ6bSxmb3JtU3RhdGU6YyxmaWVsZFN0YXRlOmZ9KSxbbSxjLGZdKX1jb25zdCBCUD1lPT5lLnJlbmRlcihVUChlKSk7dmFyIEcxPShlLHQscixuLHMpPT50P3suLi5yW2VdLHR5cGVzOnsuLi5yW2VdJiZyW2VdLnR5cGVzP3JbZV0udHlwZXM6e30sW25dOnN8fCEwfX06e30sZXI9ZT0+QXJyYXkuaXNBcnJheShlKT9lOltlXSxLZz0oKT0+e2xldCBlPVtdO3JldHVybntnZXQgb2JzZXJ2ZXJzKCl7cmV0dXJuIGV9LG5leHQ6cz0+e2Zvcihjb25zdCBhIG9mIGUpYS5uZXh0JiZhLm5leHQocyl9LHN1YnNjcmliZTpzPT4oZS5wdXNoKHMpLHt1bnN1YnNjcmliZTooKT0+e2U9ZS5maWx0ZXIoYT0+YSE9PXMpfX0pLHVuc3Vic2NyaWJlOigpPT57ZT1bXX19fSxubT1lPT5CdChlKXx8IXoxKGUpO2Z1bmN0aW9uIFhuKGUsdCl7aWYobm0oZSl8fG5tKHQpKXJldHVybiBlPT09dDtpZihWcyhlKSYmVnModCkpcmV0dXJuIGUuZ2V0VGltZSgpPT09dC5nZXRUaW1lKCk7Y29uc3Qgcj1PYmplY3Qua2V5cyhlKSxuPU9iamVjdC5rZXlzKHQpO2lmKHIubGVuZ3RoIT09bi5sZW5ndGgpcmV0dXJuITE7Zm9yKGNvbnN0IHMgb2Ygcil7Y29uc3QgYT1lW3NdO2lmKCFuLmluY2x1ZGVzKHMpKXJldHVybiExO2lmKHMhPT0icmVmIil7Y29uc3Qgbz10W3NdO2lmKFZzKGEpJiZWcyhvKXx8bXQoYSkmJm10KG8pfHxBcnJheS5pc0FycmF5KGEpJiZBcnJheS5pc0FycmF5KG8pPyFYbihhLG8pOmEhPT1vKXJldHVybiExfX1yZXR1cm4hMH12YXIgTXQ9ZT0+bXQoZSkmJiFPYmplY3Qua2V5cyhlKS5sZW5ndGgsTGg9ZT0+ZS50eXBlPT09ImZpbGUiLElyPWU9PnR5cGVvZiBlPT0iZnVuY3Rpb24iLCRjPWU9PntpZighRmgpcmV0dXJuITE7Y29uc3QgdD1lP2Uub3duZXJEb2N1bWVudDowO3JldHVybiBlIGluc3RhbmNlb2YodCYmdC5kZWZhdWx0Vmlldz90LmRlZmF1bHRWaWV3LkhUTUxFbGVtZW50OkhUTUxFbGVtZW50KX0sUTE9ZT0+ZS50eXBlPT09InNlbGVjdC1tdWx0aXBsZSIsRGg9ZT0+ZS50eXBlPT09InJhZGlvIixIUD1lPT5EaChlKXx8YWwoZSksTmQ9ZT0+JGMoZSkmJmUuaXNDb25uZWN0ZWQ7ZnVuY3Rpb24gV1AoZSx0KXtjb25zdCByPXQuc2xpY2UoMCwtMSkubGVuZ3RoO2xldCBuPTA7Zm9yKDtuPHI7KWU9R2UoZSk/bisrOmVbdFtuKytdXTtyZXR1cm4gZX1mdW5jdGlvbiBxUChlKXtmb3IoY29uc3QgdCBpbiBlKWlmKGUuaGFzT3duUHJvcGVydHkodCkmJiFHZShlW3RdKSlyZXR1cm4hMTtyZXR1cm4hMH1mdW5jdGlvbiBwdChlLHQpe2NvbnN0IHI9QXJyYXkuaXNBcnJheSh0KT90OkloKHQpP1t0XTpCMSh0KSxuPXIubGVuZ3RoPT09MT9lOldQKGUscikscz1yLmxlbmd0aC0xLGE9cltzXTtyZXR1cm4gbiYmZGVsZXRlIG5bYV0scyE9PTAmJihtdChuKSYmTXQobil8fEFycmF5LmlzQXJyYXkobikmJnFQKG4pKSYmcHQoZSxyLnNsaWNlKDAsLTEpKSxlfXZhciBaMT1lPT57Zm9yKGNvbnN0IHQgaW4gZSlpZihJcihlW3RdKSlyZXR1cm4hMDtyZXR1cm4hMX07ZnVuY3Rpb24gemMoZSx0PXt9KXtjb25zdCByPUFycmF5LmlzQXJyYXkoZSk7aWYobXQoZSl8fHIpZm9yKGNvbnN0IG4gaW4gZSlBcnJheS5pc0FycmF5KGVbbl0pfHxtdChlW25dKSYmIVoxKGVbbl0pPyh0W25dPUFycmF5LmlzQXJyYXkoZVtuXSk/W106e30semMoZVtuXSx0W25dKSk6QnQoZVtuXSl8fCh0W25dPSEwKTtyZXR1cm4gdH1mdW5jdGlvbiBLMShlLHQscil7Y29uc3Qgbj1BcnJheS5pc0FycmF5KGUpO2lmKG10KGUpfHxuKWZvcihjb25zdCBzIGluIGUpQXJyYXkuaXNBcnJheShlW3NdKXx8bXQoZVtzXSkmJiFaMShlW3NdKT9HZSh0KXx8bm0ocltzXSk/cltzXT1BcnJheS5pc0FycmF5KGVbc10pP3pjKGVbc10sW10pOnsuLi56YyhlW3NdKX06SzEoZVtzXSxCdCh0KT97fTp0W3NdLHJbc10pOnJbc109IVhuKGVbc10sdFtzXSk7cmV0dXJuIHJ9dmFyIFVhPShlLHQpPT5LMShlLHQsemModCkpO2NvbnN0IFlnPXt2YWx1ZTohMSxpc1ZhbGlkOiExfSxYZz17dmFsdWU6ITAsaXNWYWxpZDohMH07dmFyIFkxPWU9PntpZihBcnJheS5pc0FycmF5KGUpKXtpZihlLmxlbmd0aD4xKXtjb25zdCB0PWUuZmlsdGVyKHI9PnImJnIuY2hlY2tlZCYmIXIuZGlzYWJsZWQpLm1hcChyPT5yLnZhbHVlKTtyZXR1cm57dmFsdWU6dCxpc1ZhbGlkOiEhdC5sZW5ndGh9fXJldHVybiBlWzBdLmNoZWNrZWQmJiFlWzBdLmRpc2FibGVkP2VbMF0uYXR0cmlidXRlcyYmIUdlKGVbMF0uYXR0cmlidXRlcy52YWx1ZSk/R2UoZVswXS52YWx1ZSl8fGVbMF0udmFsdWU9PT0iIj9YZzp7dmFsdWU6ZVswXS52YWx1ZSxpc1ZhbGlkOiEwfTpYZzpZZ31yZXR1cm4gWWd9LFgxPShlLHt2YWx1ZUFzTnVtYmVyOnQsdmFsdWVBc0RhdGU6cixzZXRWYWx1ZUFzOm59KT0+R2UoZSk/ZTp0P2U9PT0iIj9OYU46ZSYmK2U6ciYmYW4oZSk/bmV3IERhdGUoZSk6bj9uKGUpOmU7Y29uc3QgSmc9e2lzVmFsaWQ6ITEsdmFsdWU6bnVsbH07dmFyIEoxPWU9PkFycmF5LmlzQXJyYXkoZSk/ZS5yZWR1Y2UoKHQscik9PnImJnIuY2hlY2tlZCYmIXIuZGlzYWJsZWQ/e2lzVmFsaWQ6ITAsdmFsdWU6ci52YWx1ZX06dCxKZyk6Smc7ZnVuY3Rpb24gZXgoZSl7Y29uc3QgdD1lLnJlZjtyZXR1cm4gTGgodCk/dC5maWxlczpEaCh0KT9KMShlLnJlZnMpLnZhbHVlOlExKHQpP1suLi50LnNlbGVjdGVkT3B0aW9uc10ubWFwKCh7dmFsdWU6cn0pPT5yKTphbCh0KT9ZMShlLnJlZnMpLnZhbHVlOlgxKEdlKHQudmFsdWUpP2UucmVmLnZhbHVlOnQudmFsdWUsZSl9dmFyIEdQPShlLHQscixuKT0+e2NvbnN0IHM9e307Zm9yKGNvbnN0IGEgb2YgZSl7Y29uc3Qgbz1XKHQsYSk7byYmTWUocyxhLG8uX2YpfXJldHVybntjcml0ZXJpYU1vZGU6cixuYW1lczpbLi4uZV0sZmllbGRzOnMsc2hvdWxkVXNlTmF0aXZlVmFsaWRhdGlvbjpufX0sVmM9ZT0+ZSBpbnN0YW5jZW9mIFJlZ0V4cCxCYT1lPT5HZShlKT9lOlZjKGUpP2Uuc291cmNlOm10KGUpP1ZjKGUudmFsdWUpP2UudmFsdWUuc291cmNlOmUudmFsdWU6ZSxGaT1lPT4oe2lzT25TdWJtaXQ6IWV8fGU9PT1Oci5vblN1Ym1pdCxpc09uQmx1cjplPT09TnIub25CbHVyLGlzT25DaGFuZ2U6ZT09PU5yLm9uQ2hhbmdlLGlzT25BbGw6ZT09PU5yLmFsbCxpc09uVG91Y2g6ZT09PU5yLm9uVG91Y2hlZH0pO2NvbnN0IHR4PSJBc3luY0Z1bmN0aW9uIjt2YXIgUVA9ZT0+ISFlJiYhIWUudmFsaWRhdGUmJiEhKElyKGUudmFsaWRhdGUpJiZlLnZhbGlkYXRlLmNvbnN0cnVjdG9yLm5hbWU9PT10eHx8bXQoZS52YWxpZGF0ZSkmJk9iamVjdC52YWx1ZXMoZS52YWxpZGF0ZSkuZmluZCh0PT50LmNvbnN0cnVjdG9yLm5hbWU9PT10eCkpLFpQPWU9PmUubW91bnQmJihlLnJlcXVpcmVkfHxlLm1pbnx8ZS5tYXh8fGUubWF4TGVuZ3RofHxlLm1pbkxlbmd0aHx8ZS5wYXR0ZXJufHxlLnZhbGlkYXRlKSxzbT0oZSx0LHIpPT4hciYmKHQud2F0Y2hBbGx8fHQud2F0Y2guaGFzKGUpfHxbLi4udC53YXRjaF0uc29tZShuPT5lLnN0YXJ0c1dpdGgobikmJi9eXC5cdysvLnRlc3QoZS5zbGljZShuLmxlbmd0aCkpKSk7Y29uc3QgR2k9KGUsdCxyLG4pPT57Zm9yKGNvbnN0IHMgb2Ygcnx8T2JqZWN0LmtleXMoZSkpe2NvbnN0IGE9VyhlLHMpO2lmKGEpe2NvbnN0e19mOm8sLi4ubH09YTtpZihvKXtpZihvLnJlZnMmJm8ucmVmc1swXSYmdChvLnJlZnNbMF0scykmJiFuKXJldHVybiEwO2lmKG8ucmVmJiZ0KG8ucmVmLG8ubmFtZSkmJiFuKXJldHVybiEwO2lmKEdpKGwsdCkpYnJlYWt9ZWxzZSBpZihtdChsKSYmR2kobCx0KSlicmVha319fTtmdW5jdGlvbiByeChlLHQscil7Y29uc3Qgbj1XKGUscik7aWYobnx8SWgocikpcmV0dXJue2Vycm9yOm4sbmFtZTpyfTtjb25zdCBzPXIuc3BsaXQoIi4iKTtmb3IoO3MubGVuZ3RoOyl7Y29uc3QgYT1zLmpvaW4oIi4iKSxvPVcodCxhKSxsPVcoZSxhKTtpZihvJiYhQXJyYXkuaXNBcnJheShvKSYmciE9PWEpcmV0dXJue25hbWU6cn07aWYobCYmbC50eXBlKXJldHVybntuYW1lOmEsZXJyb3I6bH07cy5wb3AoKX1yZXR1cm57bmFtZTpyfX12YXIgS1A9KGUsdCxyLG4pPT57cihlKTtjb25zdHtuYW1lOnMsLi4uYX09ZTtyZXR1cm4gTXQoYSl8fE9iamVjdC5rZXlzKGEpLmxlbmd0aD49T2JqZWN0LmtleXModCkubGVuZ3RofHxPYmplY3Qua2V5cyhhKS5maW5kKG89PnRbb109PT0oIW58fE5yLmFsbCkpfSxZUD0oZSx0LHIpPT4hZXx8IXR8fGU9PT10fHxlcihlKS5zb21lKG49Pm4mJihyP249PT10Om4uc3RhcnRzV2l0aCh0KXx8dC5zdGFydHNXaXRoKG4pKSksWFA9KGUsdCxyLG4scyk9PnMuaXNPbkFsbD8hMTohciYmcy5pc09uVG91Y2g/ISh0fHxlKToocj9uLmlzT25CbHVyOnMuaXNPbkJsdXIpPyFlOihyP24uaXNPbkNoYW5nZTpzLmlzT25DaGFuZ2UpP2U6ITAsSlA9KGUsdCk9PiFvbChXKGUsdCkpLmxlbmd0aCYmcHQoZSx0KSxlYj0oZSx0LHIpPT57Y29uc3Qgbj1lcihXKGUscikpO3JldHVybiBNZShuLCJyb290Iix0W3JdKSxNZShlLHIsbiksZX0scmM9ZT0+YW4oZSk7ZnVuY3Rpb24gbngoZSx0LHI9InZhbGlkYXRlIil7aWYocmMoZSl8fEFycmF5LmlzQXJyYXkoZSkmJmUuZXZlcnkocmMpfHxscihlKSYmIWUpcmV0dXJue3R5cGU6cixtZXNzYWdlOnJjKGUpP2U6IiIscmVmOnR9fXZhciBiaT1lPT5tdChlKSYmIVZjKGUpP2U6e3ZhbHVlOmUsbWVzc2FnZToiIn0saW09YXN5bmMoZSx0LHIsbixzLGEpPT57Y29uc3R7cmVmOm8scmVmczpsLHJlcXVpcmVkOmMsbWF4TGVuZ3RoOnUsbWluTGVuZ3RoOmQsbWluOmYsbWF4OnAscGF0dGVybjp4LHZhbGlkYXRlOnYsbmFtZTptLHZhbHVlQXNOdW1iZXI6dyxtb3VudDpofT1lLl9mLGc9VyhyLG0pO2lmKCFofHx0LmhhcyhtKSlyZXR1cm57fTtjb25zdCBiPWw/bFswXTpvLE49ST0+e3MmJmIucmVwb3J0VmFsaWRpdHkmJihiLnNldEN1c3RvbVZhbGlkaXR5KGxyKEkpPyIiOkl8fCIiKSxiLnJlcG9ydFZhbGlkaXR5KCkpfSxTPXt9LF89RGgobyksaz1hbChvKSxUPV98fGssTD0od3x8TGgobykpJiZHZShvLnZhbHVlKSYmR2UoZyl8fCRjKG8pJiZvLnZhbHVlPT09IiJ8fGc9PT0iInx8QXJyYXkuaXNBcnJheShnKSYmIWcubGVuZ3RoLFA9RzEuYmluZChudWxsLG0sbixTKSxqPShJLFYsTyxaPXhuLm1heExlbmd0aCxRPXhuLm1pbkxlbmd0aCk9Pntjb25zdCBBPUk/VjpPO1NbbV09e3R5cGU6ST9aOlEsbWVzc2FnZTpBLHJlZjpvLC4uLlAoST9aOlEsQSl9fTtpZihhPyFBcnJheS5pc0FycmF5KGcpfHwhZy5sZW5ndGg6YyYmKCFUJiYoTHx8QnQoZykpfHxscihnKSYmIWd8fGsmJiFZMShsKS5pc1ZhbGlkfHxfJiYhSjEobCkuaXNWYWxpZCkpe2NvbnN0e3ZhbHVlOkksbWVzc2FnZTpWfT1yYyhjKT97dmFsdWU6ISFjLG1lc3NhZ2U6Y306YmkoYyk7aWYoSSYmKFNbbV09e3R5cGU6eG4ucmVxdWlyZWQsbWVzc2FnZTpWLHJlZjpiLC4uLlAoeG4ucmVxdWlyZWQsVil9LCFuKSlyZXR1cm4gTihWKSxTfWlmKCFMJiYoIUJ0KGYpfHwhQnQocCkpKXtsZXQgSSxWO2NvbnN0IE89YmkocCksWj1iaShmKTtpZighQnQoZykmJiFpc05hTihnKSl7Y29uc3QgUT1vLnZhbHVlQXNOdW1iZXJ8fGcmJitnO0J0KE8udmFsdWUpfHwoST1RPk8udmFsdWUpLEJ0KFoudmFsdWUpfHwoVj1RPFoudmFsdWUpfWVsc2V7Y29uc3QgUT1vLnZhbHVlQXNEYXRlfHxuZXcgRGF0ZShnKSxBPUQ9Pm5ldyBEYXRlKG5ldyBEYXRlKCkudG9EYXRlU3RyaW5nKCkrIiAiK0QpLE09by50eXBlPT0idGltZSIsJD1vLnR5cGU9PSJ3ZWVrIjthbihPLnZhbHVlKSYmZyYmKEk9TT9BKGcpPkEoTy52YWx1ZSk6JD9nPk8udmFsdWU6UT5uZXcgRGF0ZShPLnZhbHVlKSksYW4oWi52YWx1ZSkmJmcmJihWPU0/QShnKTxBKFoudmFsdWUpOiQ/ZzxaLnZhbHVlOlE8bmV3IERhdGUoWi52YWx1ZSkpfWlmKChJfHxWKSYmKGooISFJLE8ubWVzc2FnZSxaLm1lc3NhZ2UseG4ubWF4LHhuLm1pbiksIW4pKXJldHVybiBOKFNbbV0ubWVzc2FnZSksU31pZigodXx8ZCkmJiFMJiYoYW4oZyl8fGEmJkFycmF5LmlzQXJyYXkoZykpKXtjb25zdCBJPWJpKHUpLFY9YmkoZCksTz0hQnQoSS52YWx1ZSkmJmcubGVuZ3RoPitJLnZhbHVlLFo9IUJ0KFYudmFsdWUpJiZnLmxlbmd0aDwrVi52YWx1ZTtpZigoT3x8WikmJihqKE8sSS5tZXNzYWdlLFYubWVzc2FnZSksIW4pKXJldHVybiBOKFNbbV0ubWVzc2FnZSksU31pZih4JiYhTCYmYW4oZykpe2NvbnN0e3ZhbHVlOkksbWVzc2FnZTpWfT1iaSh4KTtpZihWYyhJKSYmIWcubWF0Y2goSSkmJihTW21dPXt0eXBlOnhuLnBhdHRlcm4sbWVzc2FnZTpWLHJlZjpvLC4uLlAoeG4ucGF0dGVybixWKX0sIW4pKXJldHVybiBOKFYpLFN9aWYodil7aWYoSXIodikpe2NvbnN0IEk9YXdhaXQgdihnLHIpLFY9bngoSSxiKTtpZihWJiYoU1ttXT17Li4uViwuLi5QKHhuLnZhbGlkYXRlLFYubWVzc2FnZSl9LCFuKSlyZXR1cm4gTihWLm1lc3NhZ2UpLFN9ZWxzZSBpZihtdCh2KSl7bGV0IEk9e307Zm9yKGNvbnN0IFYgaW4gdil7aWYoIU10KEkpJiYhbilicmVhaztjb25zdCBPPW54KGF3YWl0IHZbVl0oZyxyKSxiLFYpO08mJihJPXsuLi5PLC4uLlAoVixPLm1lc3NhZ2UpfSxOKE8ubWVzc2FnZSksbiYmKFNbbV09SSkpfWlmKCFNdChJKSYmKFNbbV09e3JlZjpiLC4uLkl9LCFuKSlyZXR1cm4gU319cmV0dXJuIE4oITApLFN9O2NvbnN0IGVUPXttb2RlOk5yLm9uU3VibWl0LHJlVmFsaWRhdGVNb2RlOk5yLm9uQ2hhbmdlLHNob3VsZEZvY3VzRXJyb3I6ITB9O2Z1bmN0aW9uIHRUKGU9e30pe2xldCB0PXsuLi5lVCwuLi5lfSxyPXtzdWJtaXRDb3VudDowLGlzRGlydHk6ITEsaXNMb2FkaW5nOklyKHQuZGVmYXVsdFZhbHVlcyksaXNWYWxpZGF0aW5nOiExLGlzU3VibWl0dGVkOiExLGlzU3VibWl0dGluZzohMSxpc1N1Ym1pdFN1Y2Nlc3NmdWw6ITEsaXNWYWxpZDohMSx0b3VjaGVkRmllbGRzOnt9LGRpcnR5RmllbGRzOnt9LHZhbGlkYXRpbmdGaWVsZHM6e30sZXJyb3JzOnQuZXJyb3JzfHx7fSxkaXNhYmxlZDp0LmRpc2FibGVkfHwhMX07Y29uc3Qgbj17fTtsZXQgcz1tdCh0LmRlZmF1bHRWYWx1ZXMpfHxtdCh0LnZhbHVlcyk/cnQodC52YWx1ZXN8fHQuZGVmYXVsdFZhbHVlcyl8fHt9Ont9LGE9dC5zaG91bGRVbnJlZ2lzdGVyP3t9OnJ0KHMpLG89e2FjdGlvbjohMSxtb3VudDohMSx3YXRjaDohMX0sbD17bW91bnQ6bmV3IFNldCxkaXNhYmxlZDpuZXcgU2V0LHVuTW91bnQ6bmV3IFNldCxhcnJheTpuZXcgU2V0LHdhdGNoOm5ldyBTZXR9LGMsdT0wO2NvbnN0IGQ9e2lzRGlydHk6ITEsZGlydHlGaWVsZHM6ITEsdmFsaWRhdGluZ0ZpZWxkczohMSx0b3VjaGVkRmllbGRzOiExLGlzVmFsaWRhdGluZzohMSxpc1ZhbGlkOiExLGVycm9yczohMX07bGV0IGY9ey4uLmR9O2NvbnN0IHA9e2FycmF5OktnKCksc3RhdGU6S2coKX0seD1GaSh0Lm1vZGUpLHY9RmkodC5yZVZhbGlkYXRlTW9kZSksbT10LmNyaXRlcmlhTW9kZT09PU5yLmFsbCx3PUU9PkY9PntjbGVhclRpbWVvdXQodSksdT1zZXRUaW1lb3V0KEUsRil9LGg9YXN5bmMgRT0+e2lmKCF0LmRpc2FibGVkJiYoZC5pc1ZhbGlkfHxmLmlzVmFsaWR8fEUpKXtjb25zdCBGPXQucmVzb2x2ZXI/TXQoKGF3YWl0IEwoKSkuZXJyb3JzKTphd2FpdCBqKG4sITApO0YhPT1yLmlzVmFsaWQmJnAuc3RhdGUubmV4dCh7aXNWYWxpZDpGfSl9fSxnPShFLEYpPT57IXQuZGlzYWJsZWQmJihkLmlzVmFsaWRhdGluZ3x8ZC52YWxpZGF0aW5nRmllbGRzfHxmLmlzVmFsaWRhdGluZ3x8Zi52YWxpZGF0aW5nRmllbGRzKSYmKChFfHxBcnJheS5mcm9tKGwubW91bnQpKS5mb3JFYWNoKHo9Pnt6JiYoRj9NZShyLnZhbGlkYXRpbmdGaWVsZHMseixGKTpwdChyLnZhbGlkYXRpbmdGaWVsZHMseikpfSkscC5zdGF0ZS5uZXh0KHt2YWxpZGF0aW5nRmllbGRzOnIudmFsaWRhdGluZ0ZpZWxkcyxpc1ZhbGlkYXRpbmc6IU10KHIudmFsaWRhdGluZ0ZpZWxkcyl9KSl9LGI9KEUsRj1bXSx6LGVlLHE9ITAsSD0hMCk9PntpZihlZSYmeiYmIXQuZGlzYWJsZWQpe2lmKG8uYWN0aW9uPSEwLEgmJkFycmF5LmlzQXJyYXkoVyhuLEUpKSl7Y29uc3QgcmU9eihXKG4sRSksZWUuYXJnQSxlZS5hcmdCKTtxJiZNZShuLEUscmUpfWlmKEgmJkFycmF5LmlzQXJyYXkoVyhyLmVycm9ycyxFKSkpe2NvbnN0IHJlPXooVyhyLmVycm9ycyxFKSxlZS5hcmdBLGVlLmFyZ0IpO3EmJk1lKHIuZXJyb3JzLEUscmUpLEpQKHIuZXJyb3JzLEUpfWlmKChkLnRvdWNoZWRGaWVsZHN8fGYudG91Y2hlZEZpZWxkcykmJkgmJkFycmF5LmlzQXJyYXkoVyhyLnRvdWNoZWRGaWVsZHMsRSkpKXtjb25zdCByZT16KFcoci50b3VjaGVkRmllbGRzLEUpLGVlLmFyZ0EsZWUuYXJnQik7cSYmTWUoci50b3VjaGVkRmllbGRzLEUscmUpfShkLmRpcnR5RmllbGRzfHxmLmRpcnR5RmllbGRzKSYmKHIuZGlydHlGaWVsZHM9VWEocyxhKSkscC5zdGF0ZS5uZXh0KHtuYW1lOkUsaXNEaXJ0eTpWKEUsRiksZGlydHlGaWVsZHM6ci5kaXJ0eUZpZWxkcyxlcnJvcnM6ci5lcnJvcnMsaXNWYWxpZDpyLmlzVmFsaWR9KX1lbHNlIE1lKGEsRSxGKX0sTj0oRSxGKT0+e01lKHIuZXJyb3JzLEUsRikscC5zdGF0ZS5uZXh0KHtlcnJvcnM6ci5lcnJvcnN9KX0sUz1FPT57ci5lcnJvcnM9RSxwLnN0YXRlLm5leHQoe2Vycm9yczpyLmVycm9ycyxpc1ZhbGlkOiExfSl9LF89KEUsRix6LGVlKT0+e2NvbnN0IHE9VyhuLEUpO2lmKHEpe2NvbnN0IEg9VyhhLEUsR2Uoeik/VyhzLEUpOnopO0dlKEgpfHxlZSYmZWUuZGVmYXVsdENoZWNrZWR8fEY/TWUoYSxFLEY/SDpleChxLl9mKSk6UShFLEgpLG8ubW91bnQmJmgoKX19LGs9KEUsRix6LGVlLHEpPT57bGV0IEg9ITEscmU9ITE7Y29uc3QgQWU9e25hbWU6RX07aWYoIXQuZGlzYWJsZWQpe2lmKCF6fHxlZSl7KGQuaXNEaXJ0eXx8Zi5pc0RpcnR5KSYmKHJlPXIuaXNEaXJ0eSxyLmlzRGlydHk9QWUuaXNEaXJ0eT1WKCksSD1yZSE9PUFlLmlzRGlydHkpO2NvbnN0IGh0PVhuKFcocyxFKSxGKTtyZT0hIVcoci5kaXJ0eUZpZWxkcyxFKSxodD9wdChyLmRpcnR5RmllbGRzLEUpOk1lKHIuZGlydHlGaWVsZHMsRSwhMCksQWUuZGlydHlGaWVsZHM9ci5kaXJ0eUZpZWxkcyxIPUh8fChkLmRpcnR5RmllbGRzfHxmLmRpcnR5RmllbGRzKSYmcmUhPT0haHR9aWYoeil7Y29uc3QgaHQ9VyhyLnRvdWNoZWRGaWVsZHMsRSk7aHR8fChNZShyLnRvdWNoZWRGaWVsZHMsRSx6KSxBZS50b3VjaGVkRmllbGRzPXIudG91Y2hlZEZpZWxkcyxIPUh8fChkLnRvdWNoZWRGaWVsZHN8fGYudG91Y2hlZEZpZWxkcykmJmh0IT09eil9SCYmcSYmcC5zdGF0ZS5uZXh0KEFlKX1yZXR1cm4gSD9BZTp7fX0sVD0oRSxGLHosZWUpPT57Y29uc3QgcT1XKHIuZXJyb3JzLEUpLEg9KGQuaXNWYWxpZHx8Zi5pc1ZhbGlkKSYmbHIoRikmJnIuaXNWYWxpZCE9PUY7aWYodC5kZWxheUVycm9yJiZ6PyhjPXcoKCk9Pk4oRSx6KSksYyh0LmRlbGF5RXJyb3IpKTooY2xlYXJUaW1lb3V0KHUpLGM9bnVsbCx6P01lKHIuZXJyb3JzLEUseik6cHQoci5lcnJvcnMsRSkpLCh6PyFYbihxLHopOnEpfHwhTXQoZWUpfHxIKXtjb25zdCByZT17Li4uZWUsLi4uSCYmbHIoRik/e2lzVmFsaWQ6Rn06e30sZXJyb3JzOnIuZXJyb3JzLG5hbWU6RX07cj17Li4uciwuLi5yZX0scC5zdGF0ZS5uZXh0KHJlKX19LEw9YXN5bmMgRT0+e2coRSwhMCk7Y29uc3QgRj1hd2FpdCB0LnJlc29sdmVyKGEsdC5jb250ZXh0LEdQKEV8fGwubW91bnQsbix0LmNyaXRlcmlhTW9kZSx0LnNob3VsZFVzZU5hdGl2ZVZhbGlkYXRpb24pKTtyZXR1cm4gZyhFKSxGfSxQPWFzeW5jIEU9Pntjb25zdHtlcnJvcnM6Rn09YXdhaXQgTChFKTtpZihFKWZvcihjb25zdCB6IG9mIEUpe2NvbnN0IGVlPVcoRix6KTtlZT9NZShyLmVycm9ycyx6LGVlKTpwdChyLmVycm9ycyx6KX1lbHNlIHIuZXJyb3JzPUY7cmV0dXJuIEZ9LGo9YXN5bmMoRSxGLHo9e3ZhbGlkOiEwfSk9Pntmb3IoY29uc3QgZWUgaW4gRSl7Y29uc3QgcT1FW2VlXTtpZihxKXtjb25zdHtfZjpILC4uLnJlfT1xO2lmKEgpe2NvbnN0IEFlPWwuYXJyYXkuaGFzKEgubmFtZSksaHQ9cS5fZiYmUVAocS5fZik7aHQmJmQudmFsaWRhdGluZ0ZpZWxkcyYmZyhbZWVdLCEwKTtjb25zdCBQdD1hd2FpdCBpbShxLGwuZGlzYWJsZWQsYSxtLHQuc2hvdWxkVXNlTmF0aXZlVmFsaWRhdGlvbiYmIUYsQWUpO2lmKGh0JiZkLnZhbGlkYXRpbmdGaWVsZHMmJmcoW2VlXSksUHRbSC5uYW1lXSYmKHoudmFsaWQ9ITEsRikpYnJlYWs7IUYmJihXKFB0LEgubmFtZSk/QWU/ZWIoci5lcnJvcnMsUHQsSC5uYW1lKTpNZShyLmVycm9ycyxILm5hbWUsUHRbSC5uYW1lXSk6cHQoci5lcnJvcnMsSC5uYW1lKSl9IU10KHJlKSYmYXdhaXQgaihyZSxGLHopfX1yZXR1cm4gei52YWxpZH0sST0oKT0+e2Zvcihjb25zdCBFIG9mIGwudW5Nb3VudCl7Y29uc3QgRj1XKG4sRSk7RiYmKEYuX2YucmVmcz9GLl9mLnJlZnMuZXZlcnkoej0+IU5kKHopKTohTmQoRi5fZi5yZWYpKSYmb3QoRSl9bC51bk1vdW50PW5ldyBTZXR9LFY9KEUsRik9PiF0LmRpc2FibGVkJiYoRSYmRiYmTWUoYSxFLEYpLCFYbihmZSgpLHMpKSxPPShFLEYseik9PnExKEUsbCx7Li4uby5tb3VudD9hOkdlKEYpP3M6YW4oRSk/e1tFXTpGfTpGfSx6LEYpLFo9RT0+b2woVyhvLm1vdW50P2E6cyxFLHQuc2hvdWxkVW5yZWdpc3Rlcj9XKHMsRSxbXSk6W10pKSxRPShFLEYsej17fSk9Pntjb25zdCBlZT1XKG4sRSk7bGV0IHE9RjtpZihlZSl7Y29uc3QgSD1lZS5fZjtIJiYoIUguZGlzYWJsZWQmJk1lKGEsRSxYMShGLEgpKSxxPSRjKEgucmVmKSYmQnQoRik/IiI6RixRMShILnJlZik/Wy4uLkgucmVmLm9wdGlvbnNdLmZvckVhY2gocmU9PnJlLnNlbGVjdGVkPXEuaW5jbHVkZXMocmUudmFsdWUpKTpILnJlZnM/YWwoSC5yZWYpP0gucmVmcy5sZW5ndGg+MT9ILnJlZnMuZm9yRWFjaChyZT0+KCFyZS5kZWZhdWx0Q2hlY2tlZHx8IXJlLmRpc2FibGVkKSYmKHJlLmNoZWNrZWQ9QXJyYXkuaXNBcnJheShxKT8hIXEuZmluZChBZT0+QWU9PT1yZS52YWx1ZSk6cT09PXJlLnZhbHVlKSk6SC5yZWZzWzBdJiYoSC5yZWZzWzBdLmNoZWNrZWQ9ISFxKTpILnJlZnMuZm9yRWFjaChyZT0+cmUuY2hlY2tlZD1yZS52YWx1ZT09PXEpOkxoKEgucmVmKT9ILnJlZi52YWx1ZT0iIjooSC5yZWYudmFsdWU9cSxILnJlZi50eXBlfHxwLnN0YXRlLm5leHQoe25hbWU6RSx2YWx1ZXM6cnQoYSl9KSkpfSh6LnNob3VsZERpcnR5fHx6LnNob3VsZFRvdWNoKSYmayhFLHEsei5zaG91bGRUb3VjaCx6LnNob3VsZERpcnR5LCEwKSx6LnNob3VsZFZhbGlkYXRlJiZSKEUpfSxBPShFLEYseik9Pntmb3IoY29uc3QgZWUgaW4gRil7Y29uc3QgcT1GW2VlXSxIPWAke0V9LiR7ZWV9YCxyZT1XKG4sSCk7KGwuYXJyYXkuaGFzKEUpfHxtdChxKXx8cmUmJiFyZS5fZikmJiFWcyhxKT9BKEgscSx6KTpRKEgscSx6KX19LE09KEUsRix6PXt9KT0+e2NvbnN0IGVlPVcobixFKSxxPWwuYXJyYXkuaGFzKEUpLEg9cnQoRik7TWUoYSxFLEgpLHE/KHAuYXJyYXkubmV4dCh7bmFtZTpFLHZhbHVlczpydChhKX0pLChkLmlzRGlydHl8fGQuZGlydHlGaWVsZHN8fGYuaXNEaXJ0eXx8Zi5kaXJ0eUZpZWxkcykmJnouc2hvdWxkRGlydHkmJnAuc3RhdGUubmV4dCh7bmFtZTpFLGRpcnR5RmllbGRzOlVhKHMsYSksaXNEaXJ0eTpWKEUsSCl9KSk6ZWUmJiFlZS5fZiYmIUJ0KEgpP0EoRSxILHopOlEoRSxILHopLHNtKEUsbCkmJnAuc3RhdGUubmV4dCh7Li4ucn0pLHAuc3RhdGUubmV4dCh7bmFtZTpvLm1vdW50P0U6dm9pZCAwLHZhbHVlczpydChhKX0pfSwkPWFzeW5jIEU9PntvLm1vdW50PSEwO2NvbnN0IEY9RS50YXJnZXQ7bGV0IHo9Ri5uYW1lLGVlPSEwO2NvbnN0IHE9VyhuLHopLEg9cmU9PntlZT1OdW1iZXIuaXNOYU4ocmUpfHxWcyhyZSkmJmlzTmFOKHJlLmdldFRpbWUoKSl8fFhuKHJlLFcoYSx6LHJlKSl9O2lmKHEpe2xldCByZSxBZTtjb25zdCBodD1GLnR5cGU/ZXgocS5fZik6VjEoRSksUHQ9RS50eXBlPT09RGMuQkxVUnx8RS50eXBlPT09RGMuRk9DVVNfT1VULENiPSFaUChxLl9mKSYmIXQucmVzb2x2ZXImJiFXKHIuZXJyb3JzLHopJiYhcS5fZi5kZXBzfHxYUChQdCxXKHIudG91Y2hlZEZpZWxkcyx6KSxyLmlzU3VibWl0dGVkLHYseCksVHU9c20oeixsLFB0KTtNZShhLHosaHQpLFB0PyhxLl9mLm9uQmx1ciYmcS5fZi5vbkJsdXIoRSksYyYmYygwKSk6cS5fZi5vbkNoYW5nZSYmcS5fZi5vbkNoYW5nZShFKTtjb25zdCBSdT1rKHosaHQsUHQpLF9iPSFNdChSdSl8fFR1O2lmKCFQdCYmcC5zdGF0ZS5uZXh0KHtuYW1lOnosdHlwZTpFLnR5cGUsdmFsdWVzOnJ0KGEpfSksQ2IpcmV0dXJuKGQuaXNWYWxpZHx8Zi5pc1ZhbGlkKSYmKHQubW9kZT09PSJvbkJsdXIiP1B0JiZoKCk6UHR8fGgoKSksX2ImJnAuc3RhdGUubmV4dCh7bmFtZTp6LC4uLlR1P3t9OlJ1fSk7aWYoIVB0JiZUdSYmcC5zdGF0ZS5uZXh0KHsuLi5yfSksdC5yZXNvbHZlcil7Y29uc3R7ZXJyb3JzOlVofT1hd2FpdCBMKFt6XSk7aWYoSChodCksZWUpe2NvbnN0IFBiPXJ4KHIuZXJyb3JzLG4seiksQmg9cngoVWgsbixQYi5uYW1lfHx6KTtyZT1CaC5lcnJvcix6PUJoLm5hbWUsQWU9TXQoVWgpfX1lbHNlIGcoW3pdLCEwKSxyZT0oYXdhaXQgaW0ocSxsLmRpc2FibGVkLGEsbSx0LnNob3VsZFVzZU5hdGl2ZVZhbGlkYXRpb24pKVt6XSxnKFt6XSksSChodCksZWUmJihyZT9BZT0hMTooZC5pc1ZhbGlkfHxmLmlzVmFsaWQpJiYoQWU9YXdhaXQgaihuLCEwKSkpO2VlJiYocS5fZi5kZXBzJiZSKHEuX2YuZGVwcyksVCh6LEFlLHJlLFJ1KSl9fSxEPShFLEYpPT57aWYoVyhyLmVycm9ycyxGKSYmRS5mb2N1cylyZXR1cm4gRS5mb2N1cygpLDF9LFI9YXN5bmMoRSxGPXt9KT0+e2xldCB6LGVlO2NvbnN0IHE9ZXIoRSk7aWYodC5yZXNvbHZlcil7Y29uc3QgSD1hd2FpdCBQKEdlKEUpP0U6cSk7ej1NdChIKSxlZT1FPyFxLnNvbWUocmU9PlcoSCxyZSkpOnp9ZWxzZSBFPyhlZT0oYXdhaXQgUHJvbWlzZS5hbGwocS5tYXAoYXN5bmMgSD0+e2NvbnN0IHJlPVcobixIKTtyZXR1cm4gYXdhaXQgaihyZSYmcmUuX2Y/e1tIXTpyZX06cmUpfSkpKS5ldmVyeShCb29sZWFuKSwhKCFlZSYmIXIuaXNWYWxpZCkmJmgoKSk6ZWU9ej1hd2FpdCBqKG4pO3JldHVybiBwLnN0YXRlLm5leHQoey4uLiFhbihFKXx8KGQuaXNWYWxpZHx8Zi5pc1ZhbGlkKSYmeiE9PXIuaXNWYWxpZD97fTp7bmFtZTpFfSwuLi50LnJlc29sdmVyfHwhRT97aXNWYWxpZDp6fTp7fSxlcnJvcnM6ci5lcnJvcnN9KSxGLnNob3VsZEZvY3VzJiYhZWUmJkdpKG4sRCxFP3E6bC5tb3VudCksZWV9LGZlPUU9Pntjb25zdCBGPXsuLi5vLm1vdW50P2E6c307cmV0dXJuIEdlKEUpP0Y6YW4oRSk/VyhGLEUpOkUubWFwKHo9PlcoRix6KSl9LGR0PShFLEYpPT4oe2ludmFsaWQ6ISFXKChGfHxyKS5lcnJvcnMsRSksaXNEaXJ0eTohIVcoKEZ8fHIpLmRpcnR5RmllbGRzLEUpLGVycm9yOlcoKEZ8fHIpLmVycm9ycyxFKSxpc1ZhbGlkYXRpbmc6ISFXKHIudmFsaWRhdGluZ0ZpZWxkcyxFKSxpc1RvdWNoZWQ6ISFXKChGfHxyKS50b3VjaGVkRmllbGRzLEUpfSksdHQ9RT0+e0UmJmVyKEUpLmZvckVhY2goRj0+cHQoci5lcnJvcnMsRikpLHAuc3RhdGUubmV4dCh7ZXJyb3JzOkU/ci5lcnJvcnM6e319KX0sX3Q9KEUsRix6KT0+e2NvbnN0IGVlPShXKG4sRSx7X2Y6e319KS5fZnx8e30pLnJlZixxPVcoci5lcnJvcnMsRSl8fHt9LHtyZWY6SCxtZXNzYWdlOnJlLHR5cGU6QWUsLi4uaHR9PXE7TWUoci5lcnJvcnMsRSx7Li4uaHQsLi4uRixyZWY6ZWV9KSxwLnN0YXRlLm5leHQoe25hbWU6RSxlcnJvcnM6ci5lcnJvcnMsaXNWYWxpZDohMX0pLHomJnouc2hvdWxkRm9jdXMmJmVlJiZlZS5mb2N1cyYmZWUuZm9jdXMoKX0seHQ9KEUsRik9PklyKEUpP3Auc3RhdGUuc3Vic2NyaWJlKHtuZXh0Ono9PkUoTyh2b2lkIDAsRikseil9KTpPKEUsRiwhMCksY2U9RT0+cC5zdGF0ZS5zdWJzY3JpYmUoe25leHQ6Rj0+e1lQKEUubmFtZSxGLm5hbWUsRS5leGFjdCkmJktQKEYsRS5mb3JtU3RhdGV8fGQsem4sRS5yZVJlbmRlclJvb3QpJiZFLmNhbGxiYWNrKHt2YWx1ZXM6ey4uLmF9LC4uLnIsLi4uRn0pfX0pLnVuc3Vic2NyaWJlLEllPUU9PihvLm1vdW50PSEwLGY9ey4uLmYsLi4uRS5mb3JtU3RhdGV9LGNlKHsuLi5FLGZvcm1TdGF0ZTpmfSkpLG90PShFLEY9e30pPT57Zm9yKGNvbnN0IHogb2YgRT9lcihFKTpsLm1vdW50KWwubW91bnQuZGVsZXRlKHopLGwuYXJyYXkuZGVsZXRlKHopLEYua2VlcFZhbHVlfHwocHQobix6KSxwdChhLHopKSwhRi5rZWVwRXJyb3ImJnB0KHIuZXJyb3JzLHopLCFGLmtlZXBEaXJ0eSYmcHQoci5kaXJ0eUZpZWxkcyx6KSwhRi5rZWVwVG91Y2hlZCYmcHQoci50b3VjaGVkRmllbGRzLHopLCFGLmtlZXBJc1ZhbGlkYXRpbmcmJnB0KHIudmFsaWRhdGluZ0ZpZWxkcyx6KSwhdC5zaG91bGRVbnJlZ2lzdGVyJiYhRi5rZWVwRGVmYXVsdFZhbHVlJiZwdChzLHopO3Auc3RhdGUubmV4dCh7dmFsdWVzOnJ0KGEpfSkscC5zdGF0ZS5uZXh0KHsuLi5yLC4uLkYua2VlcERpcnR5P3tpc0RpcnR5OlYoKX06e319KSwhRi5rZWVwSXNWYWxpZCYmaCgpfSxoZT0oe2Rpc2FibGVkOkUsbmFtZTpGfSk9PnsobHIoRSkmJm8ubW91bnR8fEV8fGwuZGlzYWJsZWQuaGFzKEYpKSYmKEU/bC5kaXNhYmxlZC5hZGQoRik6bC5kaXNhYmxlZC5kZWxldGUoRikpfSxLPShFLEY9e30pPT57bGV0IHo9VyhuLEUpO2NvbnN0IGVlPWxyKEYuZGlzYWJsZWQpfHxscih0LmRpc2FibGVkKTtyZXR1cm4gTWUobixFLHsuLi56fHx7fSxfZjp7Li4ueiYmei5fZj96Ll9mOntyZWY6e25hbWU6RX19LG5hbWU6RSxtb3VudDohMCwuLi5GfX0pLGwubW91bnQuYWRkKEUpLHo/aGUoe2Rpc2FibGVkOmxyKEYuZGlzYWJsZWQpP0YuZGlzYWJsZWQ6dC5kaXNhYmxlZCxuYW1lOkV9KTpfKEUsITAsRi52YWx1ZSksey4uLmVlP3tkaXNhYmxlZDpGLmRpc2FibGVkfHx0LmRpc2FibGVkfTp7fSwuLi50LnByb2dyZXNzaXZlP3tyZXF1aXJlZDohIUYucmVxdWlyZWQsbWluOkJhKEYubWluKSxtYXg6QmEoRi5tYXgpLG1pbkxlbmd0aDpCYShGLm1pbkxlbmd0aCksbWF4TGVuZ3RoOkJhKEYubWF4TGVuZ3RoKSxwYXR0ZXJuOkJhKEYucGF0dGVybil9Ont9LG5hbWU6RSxvbkNoYW5nZTokLG9uQmx1cjokLHJlZjpxPT57aWYocSl7SyhFLEYpLHo9VyhuLEUpO2NvbnN0IEg9R2UocS52YWx1ZSkmJnEucXVlcnlTZWxlY3RvckFsbCYmcS5xdWVyeVNlbGVjdG9yQWxsKCJpbnB1dCxzZWxlY3QsdGV4dGFyZWEiKVswXXx8cSxyZT1IUChIKSxBZT16Ll9mLnJlZnN8fFtdO2lmKHJlP0FlLmZpbmQoaHQ9Pmh0PT09SCk6SD09PXouX2YucmVmKXJldHVybjtNZShuLEUse19mOnsuLi56Ll9mLC4uLnJlP3tyZWZzOlsuLi5BZS5maWx0ZXIoTmQpLEgsLi4uQXJyYXkuaXNBcnJheShXKHMsRSkpP1t7fV06W11dLHJlZjp7dHlwZTpILnR5cGUsbmFtZTpFfX06e3JlZjpIfX19KSxfKEUsITEsdm9pZCAwLEgpfWVsc2Ugej1XKG4sRSx7fSksei5fZiYmKHouX2YubW91bnQ9ITEpLCh0LnNob3VsZFVucmVnaXN0ZXJ8fEYuc2hvdWxkVW5yZWdpc3RlcikmJiEoVTEobC5hcnJheSxFKSYmby5hY3Rpb24pJiZsLnVuTW91bnQuYWRkKEUpfX19LGFlPSgpPT50LnNob3VsZEZvY3VzRXJyb3ImJkdpKG4sRCxsLm1vdW50KSxvZT1FPT57bHIoRSkmJihwLnN0YXRlLm5leHQoe2Rpc2FibGVkOkV9KSxHaShuLChGLHopPT57Y29uc3QgZWU9VyhuLHopO2VlJiYoRi5kaXNhYmxlZD1lZS5fZi5kaXNhYmxlZHx8RSxBcnJheS5pc0FycmF5KGVlLl9mLnJlZnMpJiZlZS5fZi5yZWZzLmZvckVhY2gocT0+e3EuZGlzYWJsZWQ9ZWUuX2YuZGlzYWJsZWR8fEV9KSl9LDAsITEpKX0sTGU9KEUsRik9PmFzeW5jIHo9PntsZXQgZWU7eiYmKHoucHJldmVudERlZmF1bHQmJnoucHJldmVudERlZmF1bHQoKSx6LnBlcnNpc3QmJnoucGVyc2lzdCgpKTtsZXQgcT1ydChhKTtpZihwLnN0YXRlLm5leHQoe2lzU3VibWl0dGluZzohMH0pLHQucmVzb2x2ZXIpe2NvbnN0e2Vycm9yczpILHZhbHVlczpyZX09YXdhaXQgTCgpO3IuZXJyb3JzPUgscT1yZX1lbHNlIGF3YWl0IGoobik7aWYobC5kaXNhYmxlZC5zaXplKWZvcihjb25zdCBIIG9mIGwuZGlzYWJsZWQpTWUocSxILHZvaWQgMCk7aWYocHQoci5lcnJvcnMsInJvb3QiKSxNdChyLmVycm9ycykpe3Auc3RhdGUubmV4dCh7ZXJyb3JzOnt9fSk7dHJ5e2F3YWl0IEUocSx6KX1jYXRjaChIKXtlZT1IfX1lbHNlIEYmJmF3YWl0IEYoey4uLnIuZXJyb3JzfSx6KSxhZSgpLHNldFRpbWVvdXQoYWUpO2lmKHAuc3RhdGUubmV4dCh7aXNTdWJtaXR0ZWQ6ITAsaXNTdWJtaXR0aW5nOiExLGlzU3VibWl0U3VjY2Vzc2Z1bDpNdChyLmVycm9ycykmJiFlZSxzdWJtaXRDb3VudDpyLnN1Ym1pdENvdW50KzEsZXJyb3JzOnIuZXJyb3JzfSksZWUpdGhyb3cgZWV9LFJlPShFLEY9e30pPT57VyhuLEUpJiYoR2UoRi5kZWZhdWx0VmFsdWUpP00oRSxydChXKHMsRSkpKTooTShFLEYuZGVmYXVsdFZhbHVlKSxNZShzLEUscnQoRi5kZWZhdWx0VmFsdWUpKSksRi5rZWVwVG91Y2hlZHx8cHQoci50b3VjaGVkRmllbGRzLEUpLEYua2VlcERpcnR5fHwocHQoci5kaXJ0eUZpZWxkcyxFKSxyLmlzRGlydHk9Ri5kZWZhdWx0VmFsdWU/VihFLHJ0KFcocyxFKSkpOlYoKSksRi5rZWVwRXJyb3J8fChwdChyLmVycm9ycyxFKSxkLmlzVmFsaWQmJmgoKSkscC5zdGF0ZS5uZXh0KHsuLi5yfSkpfSxEZT0oRSxGPXt9KT0+e2NvbnN0IHo9RT9ydChFKTpzLGVlPXJ0KHopLHE9TXQoRSksSD1xP3M6ZWU7aWYoRi5rZWVwRGVmYXVsdFZhbHVlc3x8KHM9eiksIUYua2VlcFZhbHVlcyl7aWYoRi5rZWVwRGlydHlWYWx1ZXMpe2NvbnN0IHJlPW5ldyBTZXQoWy4uLmwubW91bnQsLi4uT2JqZWN0LmtleXMoVWEocyxhKSldKTtmb3IoY29uc3QgQWUgb2YgQXJyYXkuZnJvbShyZSkpVyhyLmRpcnR5RmllbGRzLEFlKT9NZShILEFlLFcoYSxBZSkpOk0oQWUsVyhILEFlKSl9ZWxzZXtpZihGaCYmR2UoRSkpZm9yKGNvbnN0IHJlIG9mIGwubW91bnQpe2NvbnN0IEFlPVcobixyZSk7aWYoQWUmJkFlLl9mKXtjb25zdCBodD1BcnJheS5pc0FycmF5KEFlLl9mLnJlZnMpP0FlLl9mLnJlZnNbMF06QWUuX2YucmVmO2lmKCRjKGh0KSl7Y29uc3QgUHQ9aHQuY2xvc2VzdCgiZm9ybSIpO2lmKFB0KXtQdC5yZXNldCgpO2JyZWFrfX19fWZvcihjb25zdCByZSBvZiBsLm1vdW50KU0ocmUsVyhILHJlKSl9YT1ydChIKSxwLmFycmF5Lm5leHQoe3ZhbHVlczp7Li4uSH19KSxwLnN0YXRlLm5leHQoe3ZhbHVlczp7Li4uSH19KX1sPXttb3VudDpGLmtlZXBEaXJ0eVZhbHVlcz9sLm1vdW50Om5ldyBTZXQsdW5Nb3VudDpuZXcgU2V0LGFycmF5Om5ldyBTZXQsZGlzYWJsZWQ6bmV3IFNldCx3YXRjaDpuZXcgU2V0LHdhdGNoQWxsOiExLGZvY3VzOiIifSxvLm1vdW50PSFkLmlzVmFsaWR8fCEhRi5rZWVwSXNWYWxpZHx8ISFGLmtlZXBEaXJ0eVZhbHVlcyxvLndhdGNoPSEhdC5zaG91bGRVbnJlZ2lzdGVyLHAuc3RhdGUubmV4dCh7c3VibWl0Q291bnQ6Ri5rZWVwU3VibWl0Q291bnQ/ci5zdWJtaXRDb3VudDowLGlzRGlydHk6cT8hMTpGLmtlZXBEaXJ0eT9yLmlzRGlydHk6ISEoRi5rZWVwRGVmYXVsdFZhbHVlcyYmIVhuKEUscykpLGlzU3VibWl0dGVkOkYua2VlcElzU3VibWl0dGVkP3IuaXNTdWJtaXR0ZWQ6ITEsZGlydHlGaWVsZHM6cT97fTpGLmtlZXBEaXJ0eVZhbHVlcz9GLmtlZXBEZWZhdWx0VmFsdWVzJiZhP1VhKHMsYSk6ci5kaXJ0eUZpZWxkczpGLmtlZXBEZWZhdWx0VmFsdWVzJiZFP1VhKHMsRSk6Ri5rZWVwRGlydHk/ci5kaXJ0eUZpZWxkczp7fSx0b3VjaGVkRmllbGRzOkYua2VlcFRvdWNoZWQ/ci50b3VjaGVkRmllbGRzOnt9LGVycm9yczpGLmtlZXBFcnJvcnM/ci5lcnJvcnM6e30saXNTdWJtaXRTdWNjZXNzZnVsOkYua2VlcElzU3VibWl0U3VjY2Vzc2Z1bD9yLmlzU3VibWl0U3VjY2Vzc2Z1bDohMSxpc1N1Ym1pdHRpbmc6ITF9KX0sU3Q9KEUsRik9PkRlKElyKEUpP0UoYSk6RSxGKSxGcz0oRSxGPXt9KT0+e2NvbnN0IHo9VyhuLEUpLGVlPXomJnouX2Y7aWYoZWUpe2NvbnN0IHE9ZWUucmVmcz9lZS5yZWZzWzBdOmVlLnJlZjtxLmZvY3VzJiYocS5mb2N1cygpLEYuc2hvdWxkU2VsZWN0JiZJcihxLnNlbGVjdCkmJnEuc2VsZWN0KCkpfX0sem49RT0+e3I9ey4uLnIsLi4uRX19LFZuPXtjb250cm9sOntyZWdpc3RlcjpLLHVucmVnaXN0ZXI6b3QsZ2V0RmllbGRTdGF0ZTpkdCxoYW5kbGVTdWJtaXQ6TGUsc2V0RXJyb3I6X3QsX3N1YnNjcmliZTpjZSxfcnVuU2NoZW1hOkwsX2dldFdhdGNoOk8sX2dldERpcnR5OlYsX3NldFZhbGlkOmgsX3NldEZpZWxkQXJyYXk6Yixfc2V0RGlzYWJsZWRGaWVsZDpoZSxfc2V0RXJyb3JzOlMsX2dldEZpZWxkQXJyYXk6WixfcmVzZXQ6RGUsX3Jlc2V0RGVmYXVsdFZhbHVlczooKT0+SXIodC5kZWZhdWx0VmFsdWVzKSYmdC5kZWZhdWx0VmFsdWVzKCkudGhlbihFPT57U3QoRSx0LnJlc2V0T3B0aW9ucykscC5zdGF0ZS5uZXh0KHtpc0xvYWRpbmc6ITF9KX0pLF9yZW1vdmVVbm1vdW50ZWQ6SSxfZGlzYWJsZUZvcm06b2UsX3N1YmplY3RzOnAsX3Byb3h5Rm9ybVN0YXRlOmQsZ2V0IF9maWVsZHMoKXtyZXR1cm4gbn0sZ2V0IF9mb3JtVmFsdWVzKCl7cmV0dXJuIGF9LGdldCBfc3RhdGUoKXtyZXR1cm4gb30sc2V0IF9zdGF0ZShFKXtvPUV9LGdldCBfZGVmYXVsdFZhbHVlcygpe3JldHVybiBzfSxnZXQgX25hbWVzKCl7cmV0dXJuIGx9LHNldCBfbmFtZXMoRSl7bD1FfSxnZXQgX2Zvcm1TdGF0ZSgpe3JldHVybiByfSxnZXQgX29wdGlvbnMoKXtyZXR1cm4gdH0sc2V0IF9vcHRpb25zKEUpe3Q9ey4uLnQsLi4uRX19fSxzdWJzY3JpYmU6SWUsdHJpZ2dlcjpSLHJlZ2lzdGVyOkssaGFuZGxlU3VibWl0OkxlLHdhdGNoOnh0LHNldFZhbHVlOk0sZ2V0VmFsdWVzOmZlLHJlc2V0OlN0LHJlc2V0RmllbGQ6UmUsY2xlYXJFcnJvcnM6dHQsdW5yZWdpc3RlcjpvdCxzZXRFcnJvcjpfdCxzZXRGb2N1czpGcyxnZXRGaWVsZFN0YXRlOmR0fTtyZXR1cm57Li4uVm4sZm9ybUNvbnRyb2w6Vm59fXZhciBXbj0oKT0+e2NvbnN0IGU9dHlwZW9mIHBlcmZvcm1hbmNlPiJ1Ij9EYXRlLm5vdygpOnBlcmZvcm1hbmNlLm5vdygpKjFlMztyZXR1cm4ieHh4eHh4eHgteHh4eC00eHh4LXl4eHgteHh4eHh4eHh4eHh4Ii5yZXBsYWNlKC9beHldL2csdD0+e2NvbnN0IHI9KE1hdGgucmFuZG9tKCkqMTYrZSklMTZ8MDtyZXR1cm4odD09IngiP3I6ciYzfDgpLnRvU3RyaW5nKDE2KX0pfSxTZD0oZSx0LHI9e30pPT5yLnNob3VsZEZvY3VzfHxHZShyLnNob3VsZEZvY3VzKT9yLmZvY3VzTmFtZXx8YCR7ZX0uJHtHZShyLmZvY3VzSW5kZXgpP3Q6ci5mb2N1c0luZGV4fS5gOiIiLGtkPShlLHQpPT5bLi4uZSwuLi5lcih0KV0sRWQ9ZT0+QXJyYXkuaXNBcnJheShlKT9lLm1hcCgoKT0+e30pOnZvaWQgMDtmdW5jdGlvbiBDZChlLHQscil7cmV0dXJuWy4uLmUuc2xpY2UoMCx0KSwuLi5lcihyKSwuLi5lLnNsaWNlKHQpXX12YXIgX2Q9KGUsdCxyKT0+QXJyYXkuaXNBcnJheShlKT8oR2UoZVtyXSkmJihlW3JdPXZvaWQgMCksZS5zcGxpY2UociwwLGUuc3BsaWNlKHQsMSlbMF0pLGUpOltdLFBkPShlLHQpPT5bLi4uZXIodCksLi4uZXIoZSldO2Z1bmN0aW9uIHJUKGUsdCl7bGV0IHI9MDtjb25zdCBuPVsuLi5lXTtmb3IoY29uc3QgcyBvZiB0KW4uc3BsaWNlKHMtciwxKSxyKys7cmV0dXJuIG9sKG4pLmxlbmd0aD9uOltdfXZhciBUZD0oZSx0KT0+R2UodCk/W106clQoZSxlcih0KS5zb3J0KChyLG4pPT5yLW4pKSxSZD0oZSx0LHIpPT57W2VbdF0sZVtyXV09W2Vbcl0sZVt0XV19LHN4PShlLHQscik9PihlW3RdPXIsZSk7ZnVuY3Rpb24gaXgoZSl7Y29uc3QgdD1sbCgpLHtjb250cm9sOnI9dC5jb250cm9sLG5hbWU6bixrZXlOYW1lOnM9ImlkIixzaG91bGRVbnJlZ2lzdGVyOmEscnVsZXM6b309ZSxbbCxjXT1zZS51c2VTdGF0ZShyLl9nZXRGaWVsZEFycmF5KG4pKSx1PXNlLnVzZVJlZihyLl9nZXRGaWVsZEFycmF5KG4pLm1hcChXbikpLGQ9c2UudXNlUmVmKGwpLGY9c2UudXNlUmVmKG4pLHA9c2UudXNlUmVmKCExKTtmLmN1cnJlbnQ9bixkLmN1cnJlbnQ9bCxyLl9uYW1lcy5hcnJheS5hZGQobiksbyYmci5yZWdpc3RlcihuLG8pLHNlLnVzZUVmZmVjdCgoKT0+ci5fc3ViamVjdHMuYXJyYXkuc3Vic2NyaWJlKHtuZXh0Oih7dmFsdWVzOl8sbmFtZTprfSk9PntpZihrPT09Zi5jdXJyZW50fHwhayl7Y29uc3QgVD1XKF8sZi5jdXJyZW50KTtBcnJheS5pc0FycmF5KFQpJiYoYyhUKSx1LmN1cnJlbnQ9VC5tYXAoV24pKX19fSkudW5zdWJzY3JpYmUsW3JdKTtjb25zdCB4PXNlLnVzZUNhbGxiYWNrKF89PntwLmN1cnJlbnQ9ITAsci5fc2V0RmllbGRBcnJheShuLF8pfSxbcixuXSksdj0oXyxrKT0+e2NvbnN0IFQ9ZXIocnQoXykpLEw9a2Qoci5fZ2V0RmllbGRBcnJheShuKSxUKTtyLl9uYW1lcy5mb2N1cz1TZChuLEwubGVuZ3RoLTEsayksdS5jdXJyZW50PWtkKHUuY3VycmVudCxULm1hcChXbikpLHgoTCksYyhMKSxyLl9zZXRGaWVsZEFycmF5KG4sTCxrZCx7YXJnQTpFZChfKX0pfSxtPShfLGspPT57Y29uc3QgVD1lcihydChfKSksTD1QZChyLl9nZXRGaWVsZEFycmF5KG4pLFQpO3IuX25hbWVzLmZvY3VzPVNkKG4sMCxrKSx1LmN1cnJlbnQ9UGQodS5jdXJyZW50LFQubWFwKFduKSkseChMKSxjKEwpLHIuX3NldEZpZWxkQXJyYXkobixMLFBkLHthcmdBOkVkKF8pfSl9LHc9Xz0+e2NvbnN0IGs9VGQoci5fZ2V0RmllbGRBcnJheShuKSxfKTt1LmN1cnJlbnQ9VGQodS5jdXJyZW50LF8pLHgoayksYyhrKSwhQXJyYXkuaXNBcnJheShXKHIuX2ZpZWxkcyxuKSkmJk1lKHIuX2ZpZWxkcyxuLHZvaWQgMCksci5fc2V0RmllbGRBcnJheShuLGssVGQse2FyZ0E6X30pfSxoPShfLGssVCk9Pntjb25zdCBMPWVyKHJ0KGspKSxQPUNkKHIuX2dldEZpZWxkQXJyYXkobiksXyxMKTtyLl9uYW1lcy5mb2N1cz1TZChuLF8sVCksdS5jdXJyZW50PUNkKHUuY3VycmVudCxfLEwubWFwKFduKSkseChQKSxjKFApLHIuX3NldEZpZWxkQXJyYXkobixQLENkLHthcmdBOl8sYXJnQjpFZChrKX0pfSxnPShfLGspPT57Y29uc3QgVD1yLl9nZXRGaWVsZEFycmF5KG4pO1JkKFQsXyxrKSxSZCh1LmN1cnJlbnQsXyxrKSx4KFQpLGMoVCksci5fc2V0RmllbGRBcnJheShuLFQsUmQse2FyZ0E6XyxhcmdCOmt9LCExKX0sYj0oXyxrKT0+e2NvbnN0IFQ9ci5fZ2V0RmllbGRBcnJheShuKTtfZChULF8sayksX2QodS5jdXJyZW50LF8saykseChUKSxjKFQpLHIuX3NldEZpZWxkQXJyYXkobixULF9kLHthcmdBOl8sYXJnQjprfSwhMSl9LE49KF8sayk9Pntjb25zdCBUPXJ0KGspLEw9c3goci5fZ2V0RmllbGRBcnJheShuKSxfLFQpO3UuY3VycmVudD1bLi4uTF0ubWFwKChQLGopPT4hUHx8aj09PV8/V24oKTp1LmN1cnJlbnRbal0pLHgoTCksYyhbLi4uTF0pLHIuX3NldEZpZWxkQXJyYXkobixMLHN4LHthcmdBOl8sYXJnQjpUfSwhMCwhMSl9LFM9Xz0+e2NvbnN0IGs9ZXIocnQoXykpO3UuY3VycmVudD1rLm1hcChXbikseChbLi4ua10pLGMoWy4uLmtdKSxyLl9zZXRGaWVsZEFycmF5KG4sWy4uLmtdLFQ9PlQse30sITAsITEpfTtyZXR1cm4gc2UudXNlRWZmZWN0KCgpPT57aWYoci5fc3RhdGUuYWN0aW9uPSExLHNtKG4sci5fbmFtZXMpJiZyLl9zdWJqZWN0cy5zdGF0ZS5uZXh0KHsuLi5yLl9mb3JtU3RhdGV9KSxwLmN1cnJlbnQmJighRmkoci5fb3B0aW9ucy5tb2RlKS5pc09uU3VibWl0fHxyLl9mb3JtU3RhdGUuaXNTdWJtaXR0ZWQpJiYhRmkoci5fb3B0aW9ucy5yZVZhbGlkYXRlTW9kZSkuaXNPblN1Ym1pdClpZihyLl9vcHRpb25zLnJlc29sdmVyKXIuX3J1blNjaGVtYShbbl0pLnRoZW4oXz0+e2NvbnN0IGs9VyhfLmVycm9ycyxuKSxUPVcoci5fZm9ybVN0YXRlLmVycm9ycyxuKTsoVD8hayYmVC50eXBlfHxrJiYoVC50eXBlIT09ay50eXBlfHxULm1lc3NhZ2UhPT1rLm1lc3NhZ2UpOmsmJmsudHlwZSkmJihrP01lKHIuX2Zvcm1TdGF0ZS5lcnJvcnMsbixrKTpwdChyLl9mb3JtU3RhdGUuZXJyb3JzLG4pLHIuX3N1YmplY3RzLnN0YXRlLm5leHQoe2Vycm9yczpyLl9mb3JtU3RhdGUuZXJyb3JzfSkpfSk7ZWxzZXtjb25zdCBfPVcoci5fZmllbGRzLG4pO18mJl8uX2YmJiEoRmkoci5fb3B0aW9ucy5yZVZhbGlkYXRlTW9kZSkuaXNPblN1Ym1pdCYmRmkoci5fb3B0aW9ucy5tb2RlKS5pc09uU3VibWl0KSYmaW0oXyxyLl9uYW1lcy5kaXNhYmxlZCxyLl9mb3JtVmFsdWVzLHIuX29wdGlvbnMuY3JpdGVyaWFNb2RlPT09TnIuYWxsLHIuX29wdGlvbnMuc2hvdWxkVXNlTmF0aXZlVmFsaWRhdGlvbiwhMCkudGhlbihrPT4hTXQoaykmJnIuX3N1YmplY3RzLnN0YXRlLm5leHQoe2Vycm9yczplYihyLl9mb3JtU3RhdGUuZXJyb3JzLGssbil9KSl9ci5fc3ViamVjdHMuc3RhdGUubmV4dCh7bmFtZTpuLHZhbHVlczpydChyLl9mb3JtVmFsdWVzKX0pLHIuX25hbWVzLmZvY3VzJiZHaShyLl9maWVsZHMsKF8sayk9PntpZihyLl9uYW1lcy5mb2N1cyYmay5zdGFydHNXaXRoKHIuX25hbWVzLmZvY3VzKSYmXy5mb2N1cylyZXR1cm4gXy5mb2N1cygpLDF9KSxyLl9uYW1lcy5mb2N1cz0iIixyLl9zZXRWYWxpZCgpLHAuY3VycmVudD0hMX0sW2wsbixyXSksc2UudXNlRWZmZWN0KCgpPT4oIVcoci5fZm9ybVZhbHVlcyxuKSYmci5fc2V0RmllbGRBcnJheShuKSwoKT0+e2NvbnN0IF89KGssVCk9Pntjb25zdCBMPVcoci5fZmllbGRzLGspO0wmJkwuX2YmJihMLl9mLm1vdW50PVQpfTtyLl9vcHRpb25zLnNob3VsZFVucmVnaXN0ZXJ8fGE/ci51bnJlZ2lzdGVyKG4pOl8obiwhMSl9KSxbbixyLHMsYV0pLHtzd2FwOnNlLnVzZUNhbGxiYWNrKGcsW3gsbixyXSksbW92ZTpzZS51c2VDYWxsYmFjayhiLFt4LG4scl0pLHByZXBlbmQ6c2UudXNlQ2FsbGJhY2sobSxbeCxuLHJdKSxhcHBlbmQ6c2UudXNlQ2FsbGJhY2sodixbeCxuLHJdKSxyZW1vdmU6c2UudXNlQ2FsbGJhY2sodyxbeCxuLHJdKSxpbnNlcnQ6c2UudXNlQ2FsbGJhY2soaCxbeCxuLHJdKSx1cGRhdGU6c2UudXNlQ2FsbGJhY2soTixbeCxuLHJdKSxyZXBsYWNlOnNlLnVzZUNhbGxiYWNrKFMsW3gsbixyXSksZmllbGRzOnNlLnVzZU1lbW8oKCk9PmwubWFwKChfLGspPT4oey4uLl8sW3NdOnUuY3VycmVudFtrXXx8V24oKX0pKSxbbCxzXSl9fWZ1bmN0aW9uIG5UKGU9e30pe2NvbnN0IHQ9c2UudXNlUmVmKHZvaWQgMCkscj1zZS51c2VSZWYodm9pZCAwKSxbbixzXT1zZS51c2VTdGF0ZSh7aXNEaXJ0eTohMSxpc1ZhbGlkYXRpbmc6ITEsaXNMb2FkaW5nOklyKGUuZGVmYXVsdFZhbHVlcyksaXNTdWJtaXR0ZWQ6ITEsaXNTdWJtaXR0aW5nOiExLGlzU3VibWl0U3VjY2Vzc2Z1bDohMSxpc1ZhbGlkOiExLHN1Ym1pdENvdW50OjAsZGlydHlGaWVsZHM6e30sdG91Y2hlZEZpZWxkczp7fSx2YWxpZGF0aW5nRmllbGRzOnt9LGVycm9yczplLmVycm9yc3x8e30sZGlzYWJsZWQ6ZS5kaXNhYmxlZHx8ITEsZGVmYXVsdFZhbHVlczpJcihlLmRlZmF1bHRWYWx1ZXMpP3ZvaWQgMDplLmRlZmF1bHRWYWx1ZXN9KTt0LmN1cnJlbnR8fCh0LmN1cnJlbnQ9ey4uLmUuZm9ybUNvbnRyb2w/ZS5mb3JtQ29udHJvbDp0VChlKSxmb3JtU3RhdGU6bn0sZS5mb3JtQ29udHJvbCYmZS5kZWZhdWx0VmFsdWVzJiYhSXIoZS5kZWZhdWx0VmFsdWVzKSYmZS5mb3JtQ29udHJvbC5yZXNldChlLmRlZmF1bHRWYWx1ZXMsZS5yZXNldE9wdGlvbnMpKTtjb25zdCBhPXQuY3VycmVudC5jb250cm9sO3JldHVybiBhLl9vcHRpb25zPWUsc2UudXNlTGF5b3V0RWZmZWN0KCgpPT5hLl9zdWJzY3JpYmUoe2Zvcm1TdGF0ZTphLl9wcm94eUZvcm1TdGF0ZSxjYWxsYmFjazooKT0+cyh7Li4uYS5fZm9ybVN0YXRlfSkscmVSZW5kZXJSb290OiEwfSksW2FdKSxzZS51c2VFZmZlY3QoKCk9PmEuX2Rpc2FibGVGb3JtKGUuZGlzYWJsZWQpLFthLGUuZGlzYWJsZWRdKSxzZS51c2VFZmZlY3QoKCk9PntpZihhLl9wcm94eUZvcm1TdGF0ZS5pc0RpcnR5KXtjb25zdCBvPWEuX2dldERpcnR5KCk7byE9PW4uaXNEaXJ0eSYmYS5fc3ViamVjdHMuc3RhdGUubmV4dCh7aXNEaXJ0eTpvfSl9fSxbYSxuLmlzRGlydHldKSxzZS51c2VFZmZlY3QoKCk9PntlLnZhbHVlcyYmIVhuKGUudmFsdWVzLHIuY3VycmVudCk/KGEuX3Jlc2V0KGUudmFsdWVzLGEuX29wdGlvbnMucmVzZXRPcHRpb25zKSxyLmN1cnJlbnQ9ZS52YWx1ZXMscyhvPT4oey4uLm99KSkpOmEuX3Jlc2V0RGVmYXVsdFZhbHVlcygpfSxbZS52YWx1ZXMsYV0pLHNlLnVzZUVmZmVjdCgoKT0+e2UuZXJyb3JzJiYhTXQoZS5lcnJvcnMpJiZhLl9zZXRFcnJvcnMoZS5lcnJvcnMpfSxbZS5lcnJvcnMsYV0pLHNlLnVzZUVmZmVjdCgoKT0+e2EuX3N0YXRlLm1vdW50fHwoYS5fc2V0VmFsaWQoKSxhLl9zdGF0ZS5tb3VudD0hMCksYS5fc3RhdGUud2F0Y2gmJihhLl9zdGF0ZS53YXRjaD0hMSxhLl9zdWJqZWN0cy5zdGF0ZS5uZXh0KHsuLi5hLl9mb3JtU3RhdGV9KSksYS5fcmVtb3ZlVW5tb3VudGVkKCl9KSxzZS51c2VFZmZlY3QoKCk9PntlLnNob3VsZFVucmVnaXN0ZXImJmEuX3N1YmplY3RzLnN0YXRlLm5leHQoe3ZhbHVlczphLl9nZXRXYXRjaCgpfSl9LFtlLnNob3VsZFVucmVnaXN0ZXIsYV0pLHQuY3VycmVudC5mb3JtU3RhdGU9VzEobixhKSx0LmN1cnJlbnR9Y29uc3QgYXg9KGUsdCxyKT0+e2lmKGUmJiJyZXBvcnRWYWxpZGl0eSJpbiBlKXtjb25zdCBuPVcocix0KTtlLnNldEN1c3RvbVZhbGlkaXR5KG4mJm4ubWVzc2FnZXx8IiIpLGUucmVwb3J0VmFsaWRpdHkoKX19LHRiPShlLHQpPT57Zm9yKGNvbnN0IHIgaW4gdC5maWVsZHMpe2NvbnN0IG49dC5maWVsZHNbcl07biYmbi5yZWYmJiJyZXBvcnRWYWxpZGl0eSJpbiBuLnJlZj9heChuLnJlZixyLGUpOm4ucmVmcyYmbi5yZWZzLmZvckVhY2gocz0+YXgocyxyLGUpKX19LHNUPShlLHQpPT57dC5zaG91bGRVc2VOYXRpdmVWYWxpZGF0aW9uJiZ0YihlLHQpO2NvbnN0IHI9e307Zm9yKGNvbnN0IG4gaW4gZSl7Y29uc3Qgcz1XKHQuZmllbGRzLG4pLGE9T2JqZWN0LmFzc2lnbihlW25dfHx7fSx7cmVmOnMmJnMucmVmfSk7aWYoaVQodC5uYW1lc3x8T2JqZWN0LmtleXMoZSksbikpe2NvbnN0IG89T2JqZWN0LmFzc2lnbih7fSxXKHIsbikpO01lKG8sInJvb3QiLGEpLE1lKHIsbixvKX1lbHNlIE1lKHIsbixhKX1yZXR1cm4gcn0saVQ9KGUsdCk9PmUuc29tZShyPT5yLnN0YXJ0c1dpdGgodCsiLiIpKTt2YXIgYVQ9ZnVuY3Rpb24oZSx0KXtmb3IodmFyIHI9e307ZS5sZW5ndGg7KXt2YXIgbj1lWzBdLHM9bi5jb2RlLGE9bi5tZXNzYWdlLG89bi5wYXRoLmpvaW4oIi4iKTtpZighcltvXSlpZigidW5pb25FcnJvcnMiaW4gbil7dmFyIGw9bi51bmlvbkVycm9yc1swXS5lcnJvcnNbMF07cltvXT17bWVzc2FnZTpsLm1lc3NhZ2UsdHlwZTpsLmNvZGV9fWVsc2UgcltvXT17bWVzc2FnZTphLHR5cGU6c307aWYoInVuaW9uRXJyb3JzImluIG4mJm4udW5pb25FcnJvcnMuZm9yRWFjaChmdW5jdGlvbihkKXtyZXR1cm4gZC5lcnJvcnMuZm9yRWFjaChmdW5jdGlvbihmKXtyZXR1cm4gZS5wdXNoKGYpfSl9KSx0KXt2YXIgYz1yW29dLnR5cGVzLHU9YyYmY1tuLmNvZGVdO3Jbb109RzEobyx0LHIscyx1P1tdLmNvbmNhdCh1LG4ubWVzc2FnZSk6bi5tZXNzYWdlKX1lLnNoaWZ0KCl9cmV0dXJuIHJ9LG9UPWZ1bmN0aW9uKGUsdCxyKXtyZXR1cm4gcj09PXZvaWQgMCYmKHI9e30pLGZ1bmN0aW9uKG4scyxhKXt0cnl7cmV0dXJuIFByb21pc2UucmVzb2x2ZShmdW5jdGlvbihvLGwpe3RyeXt2YXIgYz1Qcm9taXNlLnJlc29sdmUoZVtyLm1vZGU9PT0ic3luYyI/InBhcnNlIjoicGFyc2VBc3luYyJdKG4sdCkpLnRoZW4oZnVuY3Rpb24odSl7cmV0dXJuIGEuc2hvdWxkVXNlTmF0aXZlVmFsaWRhdGlvbiYmdGIoe30sYSkse2Vycm9yczp7fSx2YWx1ZXM6ci5yYXc/bjp1fX0pfWNhdGNoKHUpe3JldHVybiBsKHUpfXJldHVybiBjJiZjLnRoZW4/Yy50aGVuKHZvaWQgMCxsKTpjfSgwLGZ1bmN0aW9uKG8pe2lmKGZ1bmN0aW9uKGwpe3JldHVybiBBcnJheS5pc0FycmF5KGw9PW51bGw/dm9pZCAwOmwuZXJyb3JzKX0obykpcmV0dXJue3ZhbHVlczp7fSxlcnJvcnM6c1QoYVQoby5lcnJvcnMsIWEuc2hvdWxkVXNlTmF0aXZlVmFsaWRhdGlvbiYmYS5jcml0ZXJpYU1vZGU9PT0iYWxsIiksYSl9O3Rocm93IG99KSl9Y2F0Y2gobyl7cmV0dXJuIFByb21pc2UucmVqZWN0KG8pfX19LF9lOyhmdW5jdGlvbihlKXtlLmFzc2VydEVxdWFsPXM9PnM7ZnVuY3Rpb24gdChzKXt9ZS5hc3NlcnRJcz10O2Z1bmN0aW9uIHIocyl7dGhyb3cgbmV3IEVycm9yfWUuYXNzZXJ0TmV2ZXI9cixlLmFycmF5VG9FbnVtPXM9Pntjb25zdCBhPXt9O2Zvcihjb25zdCBvIG9mIHMpYVtvXT1vO3JldHVybiBhfSxlLmdldFZhbGlkRW51bVZhbHVlcz1zPT57Y29uc3QgYT1lLm9iamVjdEtleXMocykuZmlsdGVyKGw9PnR5cGVvZiBzW3NbbF1dIT0ibnVtYmVyIiksbz17fTtmb3IoY29uc3QgbCBvZiBhKW9bbF09c1tsXTtyZXR1cm4gZS5vYmplY3RWYWx1ZXMobyl9LGUub2JqZWN0VmFsdWVzPXM9PmUub2JqZWN0S2V5cyhzKS5tYXAoZnVuY3Rpb24oYSl7cmV0dXJuIHNbYV19KSxlLm9iamVjdEtleXM9dHlwZW9mIE9iamVjdC5rZXlzPT0iZnVuY3Rpb24iP3M9Pk9iamVjdC5rZXlzKHMpOnM9Pntjb25zdCBhPVtdO2Zvcihjb25zdCBvIGluIHMpT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMsbykmJmEucHVzaChvKTtyZXR1cm4gYX0sZS5maW5kPShzLGEpPT57Zm9yKGNvbnN0IG8gb2YgcylpZihhKG8pKXJldHVybiBvfSxlLmlzSW50ZWdlcj10eXBlb2YgTnVtYmVyLmlzSW50ZWdlcj09ImZ1bmN0aW9uIj9zPT5OdW1iZXIuaXNJbnRlZ2VyKHMpOnM9PnR5cGVvZiBzPT0ibnVtYmVyIiYmaXNGaW5pdGUocykmJk1hdGguZmxvb3Iocyk9PT1zO2Z1bmN0aW9uIG4ocyxhPSIgfCAiKXtyZXR1cm4gcy5tYXAobz0+dHlwZW9mIG89PSJzdHJpbmciP2AnJHtvfSdgOm8pLmpvaW4oYSl9ZS5qb2luVmFsdWVzPW4sZS5qc29uU3RyaW5naWZ5UmVwbGFjZXI9KHMsYSk9PnR5cGVvZiBhPT0iYmlnaW50Ij9hLnRvU3RyaW5nKCk6YX0pKF9lfHwoX2U9e30pKTt2YXIgYW07KGZ1bmN0aW9uKGUpe2UubWVyZ2VTaGFwZXM9KHQscik9Pih7Li4udCwuLi5yfSl9KShhbXx8KGFtPXt9KSk7Y29uc3QgSj1fZS5hcnJheVRvRW51bShbInN0cmluZyIsIm5hbiIsIm51bWJlciIsImludGVnZXIiLCJmbG9hdCIsImJvb2xlYW4iLCJkYXRlIiwiYmlnaW50Iiwic3ltYm9sIiwiZnVuY3Rpb24iLCJ1bmRlZmluZWQiLCJudWxsIiwiYXJyYXkiLCJvYmplY3QiLCJ1bmtub3duIiwicHJvbWlzZSIsInZvaWQiLCJuZXZlciIsIm1hcCIsInNldCJdKSxTbj1lPT57c3dpdGNoKHR5cGVvZiBlKXtjYXNlInVuZGVmaW5lZCI6cmV0dXJuIEoudW5kZWZpbmVkO2Nhc2Uic3RyaW5nIjpyZXR1cm4gSi5zdHJpbmc7Y2FzZSJudW1iZXIiOnJldHVybiBpc05hTihlKT9KLm5hbjpKLm51bWJlcjtjYXNlImJvb2xlYW4iOnJldHVybiBKLmJvb2xlYW47Y2FzZSJmdW5jdGlvbiI6cmV0dXJuIEouZnVuY3Rpb247Y2FzZSJiaWdpbnQiOnJldHVybiBKLmJpZ2ludDtjYXNlInN5bWJvbCI6cmV0dXJuIEouc3ltYm9sO2Nhc2Uib2JqZWN0IjpyZXR1cm4gQXJyYXkuaXNBcnJheShlKT9KLmFycmF5OmU9PT1udWxsP0oubnVsbDplLnRoZW4mJnR5cGVvZiBlLnRoZW49PSJmdW5jdGlvbiImJmUuY2F0Y2gmJnR5cGVvZiBlLmNhdGNoPT0iZnVuY3Rpb24iP0oucHJvbWlzZTp0eXBlb2YgTWFwPCJ1IiYmZSBpbnN0YW5jZW9mIE1hcD9KLm1hcDp0eXBlb2YgU2V0PCJ1IiYmZSBpbnN0YW5jZW9mIFNldD9KLnNldDp0eXBlb2YgRGF0ZTwidSImJmUgaW5zdGFuY2VvZiBEYXRlP0ouZGF0ZTpKLm9iamVjdDtkZWZhdWx0OnJldHVybiBKLnVua25vd259fSxVPV9lLmFycmF5VG9FbnVtKFsiaW52YWxpZF90eXBlIiwiaW52YWxpZF9saXRlcmFsIiwiY3VzdG9tIiwiaW52YWxpZF91bmlvbiIsImludmFsaWRfdW5pb25fZGlzY3JpbWluYXRvciIsImludmFsaWRfZW51bV92YWx1ZSIsInVucmVjb2duaXplZF9rZXlzIiwiaW52YWxpZF9hcmd1bWVudHMiLCJpbnZhbGlkX3JldHVybl90eXBlIiwiaW52YWxpZF9kYXRlIiwiaW52YWxpZF9zdHJpbmciLCJ0b29fc21hbGwiLCJ0b29fYmlnIiwiaW52YWxpZF9pbnRlcnNlY3Rpb25fdHlwZXMiLCJub3RfbXVsdGlwbGVfb2YiLCJub3RfZmluaXRlIl0pLGxUPWU9PkpTT04uc3RyaW5naWZ5KGUsbnVsbCwyKS5yZXBsYWNlKC8iKFteIl0rKSI6L2csIiQxOiIpO2NsYXNzIG1yIGV4dGVuZHMgRXJyb3J7Z2V0IGVycm9ycygpe3JldHVybiB0aGlzLmlzc3Vlc31jb25zdHJ1Y3Rvcih0KXtzdXBlcigpLHRoaXMuaXNzdWVzPVtdLHRoaXMuYWRkSXNzdWU9bj0+e3RoaXMuaXNzdWVzPVsuLi50aGlzLmlzc3VlcyxuXX0sdGhpcy5hZGRJc3N1ZXM9KG49W10pPT57dGhpcy5pc3N1ZXM9Wy4uLnRoaXMuaXNzdWVzLC4uLm5dfTtjb25zdCByPW5ldy50YXJnZXQucHJvdG90eXBlO09iamVjdC5zZXRQcm90b3R5cGVPZj9PYmplY3Quc2V0UHJvdG90eXBlT2YodGhpcyxyKTp0aGlzLl9fcHJvdG9fXz1yLHRoaXMubmFtZT0iWm9kRXJyb3IiLHRoaXMuaXNzdWVzPXR9Zm9ybWF0KHQpe2NvbnN0IHI9dHx8ZnVuY3Rpb24oYSl7cmV0dXJuIGEubWVzc2FnZX0sbj17X2Vycm9yczpbXX0scz1hPT57Zm9yKGNvbnN0IG8gb2YgYS5pc3N1ZXMpaWYoby5jb2RlPT09ImludmFsaWRfdW5pb24iKW8udW5pb25FcnJvcnMubWFwKHMpO2Vsc2UgaWYoby5jb2RlPT09ImludmFsaWRfcmV0dXJuX3R5cGUiKXMoby5yZXR1cm5UeXBlRXJyb3IpO2Vsc2UgaWYoby5jb2RlPT09ImludmFsaWRfYXJndW1lbnRzIilzKG8uYXJndW1lbnRzRXJyb3IpO2Vsc2UgaWYoby5wYXRoLmxlbmd0aD09PTApbi5fZXJyb3JzLnB1c2gocihvKSk7ZWxzZXtsZXQgbD1uLGM9MDtmb3IoO2M8by5wYXRoLmxlbmd0aDspe2NvbnN0IHU9by5wYXRoW2NdO2M9PT1vLnBhdGgubGVuZ3RoLTE/KGxbdV09bFt1XXx8e19lcnJvcnM6W119LGxbdV0uX2Vycm9ycy5wdXNoKHIobykpKTpsW3VdPWxbdV18fHtfZXJyb3JzOltdfSxsPWxbdV0sYysrfX19O3JldHVybiBzKHRoaXMpLG59c3RhdGljIGFzc2VydCh0KXtpZighKHQgaW5zdGFuY2VvZiBtcikpdGhyb3cgbmV3IEVycm9yKGBOb3QgYSBab2RFcnJvcjogJHt0fWApfXRvU3RyaW5nKCl7cmV0dXJuIHRoaXMubWVzc2FnZX1nZXQgbWVzc2FnZSgpe3JldHVybiBKU09OLnN0cmluZ2lmeSh0aGlzLmlzc3VlcyxfZS5qc29uU3RyaW5naWZ5UmVwbGFjZXIsMil9Z2V0IGlzRW1wdHkoKXtyZXR1cm4gdGhpcy5pc3N1ZXMubGVuZ3RoPT09MH1mbGF0dGVuKHQ9cj0+ci5tZXNzYWdlKXtjb25zdCByPXt9LG49W107Zm9yKGNvbnN0IHMgb2YgdGhpcy5pc3N1ZXMpcy5wYXRoLmxlbmd0aD4wPyhyW3MucGF0aFswXV09cltzLnBhdGhbMF1dfHxbXSxyW3MucGF0aFswXV0ucHVzaCh0KHMpKSk6bi5wdXNoKHQocykpO3JldHVybntmb3JtRXJyb3JzOm4sZmllbGRFcnJvcnM6cn19Z2V0IGZvcm1FcnJvcnMoKXtyZXR1cm4gdGhpcy5mbGF0dGVuKCl9fW1yLmNyZWF0ZT1lPT5uZXcgbXIoZSk7Y29uc3Qgd2E9KGUsdCk9PntsZXQgcjtzd2l0Y2goZS5jb2RlKXtjYXNlIFUuaW52YWxpZF90eXBlOmUucmVjZWl2ZWQ9PT1KLnVuZGVmaW5lZD9yPSJSZXF1aXJlZCI6cj1gRXhwZWN0ZWQgJHtlLmV4cGVjdGVkfSwgcmVjZWl2ZWQgJHtlLnJlY2VpdmVkfWA7YnJlYWs7Y2FzZSBVLmludmFsaWRfbGl0ZXJhbDpyPWBJbnZhbGlkIGxpdGVyYWwgdmFsdWUsIGV4cGVjdGVkICR7SlNPTi5zdHJpbmdpZnkoZS5leHBlY3RlZCxfZS5qc29uU3RyaW5naWZ5UmVwbGFjZXIpfWA7YnJlYWs7Y2FzZSBVLnVucmVjb2duaXplZF9rZXlzOnI9YFVucmVjb2duaXplZCBrZXkocykgaW4gb2JqZWN0OiAke19lLmpvaW5WYWx1ZXMoZS5rZXlzLCIsICIpfWA7YnJlYWs7Y2FzZSBVLmludmFsaWRfdW5pb246cj0iSW52YWxpZCBpbnB1dCI7YnJlYWs7Y2FzZSBVLmludmFsaWRfdW5pb25fZGlzY3JpbWluYXRvcjpyPWBJbnZhbGlkIGRpc2NyaW1pbmF0b3IgdmFsdWUuIEV4cGVjdGVkICR7X2Uuam9pblZhbHVlcyhlLm9wdGlvbnMpfWA7YnJlYWs7Y2FzZSBVLmludmFsaWRfZW51bV92YWx1ZTpyPWBJbnZhbGlkIGVudW0gdmFsdWUuIEV4cGVjdGVkICR7X2Uuam9pblZhbHVlcyhlLm9wdGlvbnMpfSwgcmVjZWl2ZWQgJyR7ZS5yZWNlaXZlZH0nYDticmVhaztjYXNlIFUuaW52YWxpZF9hcmd1bWVudHM6cj0iSW52YWxpZCBmdW5jdGlvbiBhcmd1bWVudHMiO2JyZWFrO2Nhc2UgVS5pbnZhbGlkX3JldHVybl90eXBlOnI9IkludmFsaWQgZnVuY3Rpb24gcmV0dXJuIHR5cGUiO2JyZWFrO2Nhc2UgVS5pbnZhbGlkX2RhdGU6cj0iSW52YWxpZCBkYXRlIjticmVhaztjYXNlIFUuaW52YWxpZF9zdHJpbmc6dHlwZW9mIGUudmFsaWRhdGlvbj09Im9iamVjdCI/ImluY2x1ZGVzImluIGUudmFsaWRhdGlvbj8ocj1gSW52YWxpZCBpbnB1dDogbXVzdCBpbmNsdWRlICIke2UudmFsaWRhdGlvbi5pbmNsdWRlc30iYCx0eXBlb2YgZS52YWxpZGF0aW9uLnBvc2l0aW9uPT0ibnVtYmVyIiYmKHI9YCR7cn0gYXQgb25lIG9yIG1vcmUgcG9zaXRpb25zIGdyZWF0ZXIgdGhhbiBvciBlcXVhbCB0byAke2UudmFsaWRhdGlvbi5wb3NpdGlvbn1gKSk6InN0YXJ0c1dpdGgiaW4gZS52YWxpZGF0aW9uP3I9YEludmFsaWQgaW5wdXQ6IG11c3Qgc3RhcnQgd2l0aCAiJHtlLnZhbGlkYXRpb24uc3RhcnRzV2l0aH0iYDoiZW5kc1dpdGgiaW4gZS52YWxpZGF0aW9uP3I9YEludmFsaWQgaW5wdXQ6IG11c3QgZW5kIHdpdGggIiR7ZS52YWxpZGF0aW9uLmVuZHNXaXRofSJgOl9lLmFzc2VydE5ldmVyKGUudmFsaWRhdGlvbik6ZS52YWxpZGF0aW9uIT09InJlZ2V4Ij9yPWBJbnZhbGlkICR7ZS52YWxpZGF0aW9ufWA6cj0iSW52YWxpZCI7YnJlYWs7Y2FzZSBVLnRvb19zbWFsbDplLnR5cGU9PT0iYXJyYXkiP3I9YEFycmF5IG11c3QgY29udGFpbiAke2UuZXhhY3Q/ImV4YWN0bHkiOmUuaW5jbHVzaXZlPyJhdCBsZWFzdCI6Im1vcmUgdGhhbiJ9ICR7ZS5taW5pbXVtfSBlbGVtZW50KHMpYDplLnR5cGU9PT0ic3RyaW5nIj9yPWBTdHJpbmcgbXVzdCBjb250YWluICR7ZS5leGFjdD8iZXhhY3RseSI6ZS5pbmNsdXNpdmU/ImF0IGxlYXN0Ijoib3ZlciJ9ICR7ZS5taW5pbXVtfSBjaGFyYWN0ZXIocylgOmUudHlwZT09PSJudW1iZXIiP3I9YE51bWJlciBtdXN0IGJlICR7ZS5leGFjdD8iZXhhY3RseSBlcXVhbCB0byAiOmUuaW5jbHVzaXZlPyJncmVhdGVyIHRoYW4gb3IgZXF1YWwgdG8gIjoiZ3JlYXRlciB0aGFuICJ9JHtlLm1pbmltdW19YDplLnR5cGU9PT0iZGF0ZSI/cj1gRGF0ZSBtdXN0IGJlICR7ZS5leGFjdD8iZXhhY3RseSBlcXVhbCB0byAiOmUuaW5jbHVzaXZlPyJncmVhdGVyIHRoYW4gb3IgZXF1YWwgdG8gIjoiZ3JlYXRlciB0aGFuICJ9JHtuZXcgRGF0ZShOdW1iZXIoZS5taW5pbXVtKSl9YDpyPSJJbnZhbGlkIGlucHV0IjticmVhaztjYXNlIFUudG9vX2JpZzplLnR5cGU9PT0iYXJyYXkiP3I9YEFycmF5IG11c3QgY29udGFpbiAke2UuZXhhY3Q/ImV4YWN0bHkiOmUuaW5jbHVzaXZlPyJhdCBtb3N0IjoibGVzcyB0aGFuIn0gJHtlLm1heGltdW19IGVsZW1lbnQocylgOmUudHlwZT09PSJzdHJpbmciP3I9YFN0cmluZyBtdXN0IGNvbnRhaW4gJHtlLmV4YWN0PyJleGFjdGx5IjplLmluY2x1c2l2ZT8iYXQgbW9zdCI6InVuZGVyIn0gJHtlLm1heGltdW19IGNoYXJhY3RlcihzKWA6ZS50eXBlPT09Im51bWJlciI/cj1gTnVtYmVyIG11c3QgYmUgJHtlLmV4YWN0PyJleGFjdGx5IjplLmluY2x1c2l2ZT8ibGVzcyB0aGFuIG9yIGVxdWFsIHRvIjoibGVzcyB0aGFuIn0gJHtlLm1heGltdW19YDplLnR5cGU9PT0iYmlnaW50Ij9yPWBCaWdJbnQgbXVzdCBiZSAke2UuZXhhY3Q/ImV4YWN0bHkiOmUuaW5jbHVzaXZlPyJsZXNzIHRoYW4gb3IgZXF1YWwgdG8iOiJsZXNzIHRoYW4ifSAke2UubWF4aW11bX1gOmUudHlwZT09PSJkYXRlIj9yPWBEYXRlIG11c3QgYmUgJHtlLmV4YWN0PyJleGFjdGx5IjplLmluY2x1c2l2ZT8ic21hbGxlciB0aGFuIG9yIGVxdWFsIHRvIjoic21hbGxlciB0aGFuIn0gJHtuZXcgRGF0ZShOdW1iZXIoZS5tYXhpbXVtKSl9YDpyPSJJbnZhbGlkIGlucHV0IjticmVhaztjYXNlIFUuY3VzdG9tOnI9IkludmFsaWQgaW5wdXQiO2JyZWFrO2Nhc2UgVS5pbnZhbGlkX2ludGVyc2VjdGlvbl90eXBlczpyPSJJbnRlcnNlY3Rpb24gcmVzdWx0cyBjb3VsZCBub3QgYmUgbWVyZ2VkIjticmVhaztjYXNlIFUubm90X211bHRpcGxlX29mOnI9YE51bWJlciBtdXN0IGJlIGEgbXVsdGlwbGUgb2YgJHtlLm11bHRpcGxlT2Z9YDticmVhaztjYXNlIFUubm90X2Zpbml0ZTpyPSJOdW1iZXIgbXVzdCBiZSBmaW5pdGUiO2JyZWFrO2RlZmF1bHQ6cj10LmRlZmF1bHRFcnJvcixfZS5hc3NlcnROZXZlcihlKX1yZXR1cm57bWVzc2FnZTpyfX07bGV0IHJiPXdhO2Z1bmN0aW9uIGNUKGUpe3JiPWV9ZnVuY3Rpb24gVWMoKXtyZXR1cm4gcmJ9Y29uc3QgQmM9ZT0+e2NvbnN0e2RhdGE6dCxwYXRoOnIsZXJyb3JNYXBzOm4saXNzdWVEYXRhOnN9PWUsYT1bLi4uciwuLi5zLnBhdGh8fFtdXSxvPXsuLi5zLHBhdGg6YX07aWYocy5tZXNzYWdlIT09dm9pZCAwKXJldHVybnsuLi5zLHBhdGg6YSxtZXNzYWdlOnMubWVzc2FnZX07bGV0IGw9IiI7Y29uc3QgYz1uLmZpbHRlcih1PT4hIXUpLnNsaWNlKCkucmV2ZXJzZSgpO2Zvcihjb25zdCB1IG9mIGMpbD11KG8se2RhdGE6dCxkZWZhdWx0RXJyb3I6bH0pLm1lc3NhZ2U7cmV0dXJuey4uLnMscGF0aDphLG1lc3NhZ2U6bH19LHVUPVtdO2Z1bmN0aW9uIEcoZSx0KXtjb25zdCByPVVjKCksbj1CYyh7aXNzdWVEYXRhOnQsZGF0YTplLmRhdGEscGF0aDplLnBhdGgsZXJyb3JNYXBzOltlLmNvbW1vbi5jb250ZXh0dWFsRXJyb3JNYXAsZS5zY2hlbWFFcnJvck1hcCxyLHI9PT13YT92b2lkIDA6d2FdLmZpbHRlcihzPT4hIXMpfSk7ZS5jb21tb24uaXNzdWVzLnB1c2gobil9Y2xhc3MgJHR7Y29uc3RydWN0b3IoKXt0aGlzLnZhbHVlPSJ2YWxpZCJ9ZGlydHkoKXt0aGlzLnZhbHVlPT09InZhbGlkIiYmKHRoaXMudmFsdWU9ImRpcnR5Iil9YWJvcnQoKXt0aGlzLnZhbHVlIT09ImFib3J0ZWQiJiYodGhpcy52YWx1ZT0iYWJvcnRlZCIpfXN0YXRpYyBtZXJnZUFycmF5KHQscil7Y29uc3Qgbj1bXTtmb3IoY29uc3QgcyBvZiByKXtpZihzLnN0YXR1cz09PSJhYm9ydGVkIilyZXR1cm4gcGU7cy5zdGF0dXM9PT0iZGlydHkiJiZ0LmRpcnR5KCksbi5wdXNoKHMudmFsdWUpfXJldHVybntzdGF0dXM6dC52YWx1ZSx2YWx1ZTpufX1zdGF0aWMgYXN5bmMgbWVyZ2VPYmplY3RBc3luYyh0LHIpe2NvbnN0IG49W107Zm9yKGNvbnN0IHMgb2Ygcil7Y29uc3QgYT1hd2FpdCBzLmtleSxvPWF3YWl0IHMudmFsdWU7bi5wdXNoKHtrZXk6YSx2YWx1ZTpvfSl9cmV0dXJuICR0Lm1lcmdlT2JqZWN0U3luYyh0LG4pfXN0YXRpYyBtZXJnZU9iamVjdFN5bmModCxyKXtjb25zdCBuPXt9O2Zvcihjb25zdCBzIG9mIHIpe2NvbnN0e2tleTphLHZhbHVlOm99PXM7aWYoYS5zdGF0dXM9PT0iYWJvcnRlZCJ8fG8uc3RhdHVzPT09ImFib3J0ZWQiKXJldHVybiBwZTthLnN0YXR1cz09PSJkaXJ0eSImJnQuZGlydHkoKSxvLnN0YXR1cz09PSJkaXJ0eSImJnQuZGlydHkoKSxhLnZhbHVlIT09Il9fcHJvdG9fXyImJih0eXBlb2Ygby52YWx1ZTwidSJ8fHMuYWx3YXlzU2V0KSYmKG5bYS52YWx1ZV09by52YWx1ZSl9cmV0dXJue3N0YXR1czp0LnZhbHVlLHZhbHVlOm59fX1jb25zdCBwZT1PYmplY3QuZnJlZXplKHtzdGF0dXM6ImFib3J0ZWQifSksSWk9ZT0+KHtzdGF0dXM6ImRpcnR5Iix2YWx1ZTplfSkscXQ9ZT0+KHtzdGF0dXM6InZhbGlkIix2YWx1ZTplfSksb209ZT0+ZS5zdGF0dXM9PT0iYWJvcnRlZCIsbG09ZT0+ZS5zdGF0dXM9PT0iZGlydHkiLGRpPWU9PmUuc3RhdHVzPT09InZhbGlkIixNbz1lPT50eXBlb2YgUHJvbWlzZTwidSImJmUgaW5zdGFuY2VvZiBQcm9taXNlO2Z1bmN0aW9uIEhjKGUsdCxyLG4pe2lmKHR5cGVvZiB0PT0iZnVuY3Rpb24iP2UhPT10fHwhbjohdC5oYXMoZSkpdGhyb3cgbmV3IFR5cGVFcnJvcigiQ2Fubm90IHJlYWQgcHJpdmF0ZSBtZW1iZXIgZnJvbSBhbiBvYmplY3Qgd2hvc2UgY2xhc3MgZGlkIG5vdCBkZWNsYXJlIGl0Iik7cmV0dXJuIHQuZ2V0KGUpfWZ1bmN0aW9uIG5iKGUsdCxyLG4scyl7aWYodHlwZW9mIHQ9PSJmdW5jdGlvbiI/ZSE9PXR8fCFzOiF0LmhhcyhlKSl0aHJvdyBuZXcgVHlwZUVycm9yKCJDYW5ub3Qgd3JpdGUgcHJpdmF0ZSBtZW1iZXIgdG8gYW4gb2JqZWN0IHdob3NlIGNsYXNzIGRpZCBub3QgZGVjbGFyZSBpdCIpO3JldHVybiB0LnNldChlLHIpLHJ9dmFyIG5lOyhmdW5jdGlvbihlKXtlLmVyclRvT2JqPXQ9PnR5cGVvZiB0PT0ic3RyaW5nIj97bWVzc2FnZTp0fTp0fHx7fSxlLnRvU3RyaW5nPXQ9PnR5cGVvZiB0PT0ic3RyaW5nIj90OnQ9PW51bGw/dm9pZCAwOnQubWVzc2FnZX0pKG5lfHwobmU9e30pKTt2YXIgS2EsWWE7Y2xhc3MgZm57Y29uc3RydWN0b3IodCxyLG4scyl7dGhpcy5fY2FjaGVkUGF0aD1bXSx0aGlzLnBhcmVudD10LHRoaXMuZGF0YT1yLHRoaXMuX3BhdGg9bix0aGlzLl9rZXk9c31nZXQgcGF0aCgpe3JldHVybiB0aGlzLl9jYWNoZWRQYXRoLmxlbmd0aHx8KHRoaXMuX2tleSBpbnN0YW5jZW9mIEFycmF5P3RoaXMuX2NhY2hlZFBhdGgucHVzaCguLi50aGlzLl9wYXRoLC4uLnRoaXMuX2tleSk6dGhpcy5fY2FjaGVkUGF0aC5wdXNoKC4uLnRoaXMuX3BhdGgsdGhpcy5fa2V5KSksdGhpcy5fY2FjaGVkUGF0aH19Y29uc3Qgb3g9KGUsdCk9PntpZihkaSh0KSlyZXR1cm57c3VjY2VzczohMCxkYXRhOnQudmFsdWV9O2lmKCFlLmNvbW1vbi5pc3N1ZXMubGVuZ3RoKXRocm93IG5ldyBFcnJvcigiVmFsaWRhdGlvbiBmYWlsZWQgYnV0IG5vIGlzc3VlcyBkZXRlY3RlZC4iKTtyZXR1cm57c3VjY2VzczohMSxnZXQgZXJyb3IoKXtpZih0aGlzLl9lcnJvcilyZXR1cm4gdGhpcy5fZXJyb3I7Y29uc3Qgcj1uZXcgbXIoZS5jb21tb24uaXNzdWVzKTtyZXR1cm4gdGhpcy5fZXJyb3I9cix0aGlzLl9lcnJvcn19fTtmdW5jdGlvbiBnZShlKXtpZighZSlyZXR1cm57fTtjb25zdHtlcnJvck1hcDp0LGludmFsaWRfdHlwZV9lcnJvcjpyLHJlcXVpcmVkX2Vycm9yOm4sZGVzY3JpcHRpb246c309ZTtpZih0JiYocnx8bikpdGhyb3cgbmV3IEVycm9yKGBDYW4ndCB1c2UgImludmFsaWRfdHlwZV9lcnJvciIgb3IgInJlcXVpcmVkX2Vycm9yIiBpbiBjb25qdW5jdGlvbiB3aXRoIGN1c3RvbSBlcnJvciBtYXAuYCk7cmV0dXJuIHQ/e2Vycm9yTWFwOnQsZGVzY3JpcHRpb246c306e2Vycm9yTWFwOihvLGwpPT57dmFyIGMsdTtjb25zdHttZXNzYWdlOmR9PWU7cmV0dXJuIG8uY29kZT09PSJpbnZhbGlkX2VudW1fdmFsdWUiP3ttZXNzYWdlOmQ/P2wuZGVmYXVsdEVycm9yfTp0eXBlb2YgbC5kYXRhPiJ1Ij97bWVzc2FnZTooYz1kPz9uKSE9PW51bGwmJmMhPT12b2lkIDA/YzpsLmRlZmF1bHRFcnJvcn06by5jb2RlIT09ImludmFsaWRfdHlwZSI/e21lc3NhZ2U6bC5kZWZhdWx0RXJyb3J9OnttZXNzYWdlOih1PWQ/P3IpIT09bnVsbCYmdSE9PXZvaWQgMD91OmwuZGVmYXVsdEVycm9yfX0sZGVzY3JpcHRpb246c319Y2xhc3MgeWV7Z2V0IGRlc2NyaXB0aW9uKCl7cmV0dXJuIHRoaXMuX2RlZi5kZXNjcmlwdGlvbn1fZ2V0VHlwZSh0KXtyZXR1cm4gU24odC5kYXRhKX1fZ2V0T3JSZXR1cm5DdHgodCxyKXtyZXR1cm4gcnx8e2NvbW1vbjp0LnBhcmVudC5jb21tb24sZGF0YTp0LmRhdGEscGFyc2VkVHlwZTpTbih0LmRhdGEpLHNjaGVtYUVycm9yTWFwOnRoaXMuX2RlZi5lcnJvck1hcCxwYXRoOnQucGF0aCxwYXJlbnQ6dC5wYXJlbnR9fV9wcm9jZXNzSW5wdXRQYXJhbXModCl7cmV0dXJue3N0YXR1czpuZXcgJHQsY3R4Ontjb21tb246dC5wYXJlbnQuY29tbW9uLGRhdGE6dC5kYXRhLHBhcnNlZFR5cGU6U24odC5kYXRhKSxzY2hlbWFFcnJvck1hcDp0aGlzLl9kZWYuZXJyb3JNYXAscGF0aDp0LnBhdGgscGFyZW50OnQucGFyZW50fX19X3BhcnNlU3luYyh0KXtjb25zdCByPXRoaXMuX3BhcnNlKHQpO2lmKE1vKHIpKXRocm93IG5ldyBFcnJvcigiU3luY2hyb25vdXMgcGFyc2UgZW5jb3VudGVyZWQgcHJvbWlzZS4iKTtyZXR1cm4gcn1fcGFyc2VBc3luYyh0KXtjb25zdCByPXRoaXMuX3BhcnNlKHQpO3JldHVybiBQcm9taXNlLnJlc29sdmUocil9cGFyc2UodCxyKXtjb25zdCBuPXRoaXMuc2FmZVBhcnNlKHQscik7aWYobi5zdWNjZXNzKXJldHVybiBuLmRhdGE7dGhyb3cgbi5lcnJvcn1zYWZlUGFyc2UodCxyKXt2YXIgbjtjb25zdCBzPXtjb21tb246e2lzc3VlczpbXSxhc3luYzoobj1yPT1udWxsP3ZvaWQgMDpyLmFzeW5jKSE9PW51bGwmJm4hPT12b2lkIDA/bjohMSxjb250ZXh0dWFsRXJyb3JNYXA6cj09bnVsbD92b2lkIDA6ci5lcnJvck1hcH0scGF0aDoocj09bnVsbD92b2lkIDA6ci5wYXRoKXx8W10sc2NoZW1hRXJyb3JNYXA6dGhpcy5fZGVmLmVycm9yTWFwLHBhcmVudDpudWxsLGRhdGE6dCxwYXJzZWRUeXBlOlNuKHQpfSxhPXRoaXMuX3BhcnNlU3luYyh7ZGF0YTp0LHBhdGg6cy5wYXRoLHBhcmVudDpzfSk7cmV0dXJuIG94KHMsYSl9In52YWxpZGF0ZSIodCl7dmFyIHIsbjtjb25zdCBzPXtjb21tb246e2lzc3VlczpbXSxhc3luYzohIXRoaXNbIn5zdGFuZGFyZCJdLmFzeW5jfSxwYXRoOltdLHNjaGVtYUVycm9yTWFwOnRoaXMuX2RlZi5lcnJvck1hcCxwYXJlbnQ6bnVsbCxkYXRhOnQscGFyc2VkVHlwZTpTbih0KX07aWYoIXRoaXNbIn5zdGFuZGFyZCJdLmFzeW5jKXRyeXtjb25zdCBhPXRoaXMuX3BhcnNlU3luYyh7ZGF0YTp0LHBhdGg6W10scGFyZW50OnN9KTtyZXR1cm4gZGkoYSk/e3ZhbHVlOmEudmFsdWV9Ontpc3N1ZXM6cy5jb21tb24uaXNzdWVzfX1jYXRjaChhKXshKChuPShyPWE9PW51bGw/dm9pZCAwOmEubWVzc2FnZSk9PT1udWxsfHxyPT09dm9pZCAwP3ZvaWQgMDpyLnRvTG93ZXJDYXNlKCkpPT09bnVsbHx8bj09PXZvaWQgMCkmJm4uaW5jbHVkZXMoImVuY291bnRlcmVkIikmJih0aGlzWyJ+c3RhbmRhcmQiXS5hc3luYz0hMCkscy5jb21tb249e2lzc3VlczpbXSxhc3luYzohMH19cmV0dXJuIHRoaXMuX3BhcnNlQXN5bmMoe2RhdGE6dCxwYXRoOltdLHBhcmVudDpzfSkudGhlbihhPT5kaShhKT97dmFsdWU6YS52YWx1ZX06e2lzc3VlczpzLmNvbW1vbi5pc3N1ZXN9KX1hc3luYyBwYXJzZUFzeW5jKHQscil7Y29uc3Qgbj1hd2FpdCB0aGlzLnNhZmVQYXJzZUFzeW5jKHQscik7aWYobi5zdWNjZXNzKXJldHVybiBuLmRhdGE7dGhyb3cgbi5lcnJvcn1hc3luYyBzYWZlUGFyc2VBc3luYyh0LHIpe2NvbnN0IG49e2NvbW1vbjp7aXNzdWVzOltdLGNvbnRleHR1YWxFcnJvck1hcDpyPT1udWxsP3ZvaWQgMDpyLmVycm9yTWFwLGFzeW5jOiEwfSxwYXRoOihyPT1udWxsP3ZvaWQgMDpyLnBhdGgpfHxbXSxzY2hlbWFFcnJvck1hcDp0aGlzLl9kZWYuZXJyb3JNYXAscGFyZW50Om51bGwsZGF0YTp0LHBhcnNlZFR5cGU6U24odCl9LHM9dGhpcy5fcGFyc2Uoe2RhdGE6dCxwYXRoOm4ucGF0aCxwYXJlbnQ6bn0pLGE9YXdhaXQoTW8ocyk/czpQcm9taXNlLnJlc29sdmUocykpO3JldHVybiBveChuLGEpfXJlZmluZSh0LHIpe2NvbnN0IG49cz0+dHlwZW9mIHI9PSJzdHJpbmcifHx0eXBlb2Ygcj4idSI/e21lc3NhZ2U6cn06dHlwZW9mIHI9PSJmdW5jdGlvbiI/cihzKTpyO3JldHVybiB0aGlzLl9yZWZpbmVtZW50KChzLGEpPT57Y29uc3Qgbz10KHMpLGw9KCk9PmEuYWRkSXNzdWUoe2NvZGU6VS5jdXN0b20sLi4ubihzKX0pO3JldHVybiB0eXBlb2YgUHJvbWlzZTwidSImJm8gaW5zdGFuY2VvZiBQcm9taXNlP28udGhlbihjPT5jPyEwOihsKCksITEpKTpvPyEwOihsKCksITEpfSl9cmVmaW5lbWVudCh0LHIpe3JldHVybiB0aGlzLl9yZWZpbmVtZW50KChuLHMpPT50KG4pPyEwOihzLmFkZElzc3VlKHR5cGVvZiByPT0iZnVuY3Rpb24iP3IobixzKTpyKSwhMSkpfV9yZWZpbmVtZW50KHQpe3JldHVybiBuZXcgSHIoe3NjaGVtYTp0aGlzLHR5cGVOYW1lOm1lLlpvZEVmZmVjdHMsZWZmZWN0Ont0eXBlOiJyZWZpbmVtZW50IixyZWZpbmVtZW50OnR9fSl9c3VwZXJSZWZpbmUodCl7cmV0dXJuIHRoaXMuX3JlZmluZW1lbnQodCl9Y29uc3RydWN0b3IodCl7dGhpcy5zcGE9dGhpcy5zYWZlUGFyc2VBc3luYyx0aGlzLl9kZWY9dCx0aGlzLnBhcnNlPXRoaXMucGFyc2UuYmluZCh0aGlzKSx0aGlzLnNhZmVQYXJzZT10aGlzLnNhZmVQYXJzZS5iaW5kKHRoaXMpLHRoaXMucGFyc2VBc3luYz10aGlzLnBhcnNlQXN5bmMuYmluZCh0aGlzKSx0aGlzLnNhZmVQYXJzZUFzeW5jPXRoaXMuc2FmZVBhcnNlQXN5bmMuYmluZCh0aGlzKSx0aGlzLnNwYT10aGlzLnNwYS5iaW5kKHRoaXMpLHRoaXMucmVmaW5lPXRoaXMucmVmaW5lLmJpbmQodGhpcyksdGhpcy5yZWZpbmVtZW50PXRoaXMucmVmaW5lbWVudC5iaW5kKHRoaXMpLHRoaXMuc3VwZXJSZWZpbmU9dGhpcy5zdXBlclJlZmluZS5iaW5kKHRoaXMpLHRoaXMub3B0aW9uYWw9dGhpcy5vcHRpb25hbC5iaW5kKHRoaXMpLHRoaXMubnVsbGFibGU9dGhpcy5udWxsYWJsZS5iaW5kKHRoaXMpLHRoaXMubnVsbGlzaD10aGlzLm51bGxpc2guYmluZCh0aGlzKSx0aGlzLmFycmF5PXRoaXMuYXJyYXkuYmluZCh0aGlzKSx0aGlzLnByb21pc2U9dGhpcy5wcm9taXNlLmJpbmQodGhpcyksdGhpcy5vcj10aGlzLm9yLmJpbmQodGhpcyksdGhpcy5hbmQ9dGhpcy5hbmQuYmluZCh0aGlzKSx0aGlzLnRyYW5zZm9ybT10aGlzLnRyYW5zZm9ybS5iaW5kKHRoaXMpLHRoaXMuYnJhbmQ9dGhpcy5icmFuZC5iaW5kKHRoaXMpLHRoaXMuZGVmYXVsdD10aGlzLmRlZmF1bHQuYmluZCh0aGlzKSx0aGlzLmNhdGNoPXRoaXMuY2F0Y2guYmluZCh0aGlzKSx0aGlzLmRlc2NyaWJlPXRoaXMuZGVzY3JpYmUuYmluZCh0aGlzKSx0aGlzLnBpcGU9dGhpcy5waXBlLmJpbmQodGhpcyksdGhpcy5yZWFkb25seT10aGlzLnJlYWRvbmx5LmJpbmQodGhpcyksdGhpcy5pc051bGxhYmxlPXRoaXMuaXNOdWxsYWJsZS5iaW5kKHRoaXMpLHRoaXMuaXNPcHRpb25hbD10aGlzLmlzT3B0aW9uYWwuYmluZCh0aGlzKSx0aGlzWyJ+c3RhbmRhcmQiXT17dmVyc2lvbjoxLHZlbmRvcjoiem9kIix2YWxpZGF0ZTpyPT50aGlzWyJ+dmFsaWRhdGUiXShyKX19b3B0aW9uYWwoKXtyZXR1cm4gdW4uY3JlYXRlKHRoaXMsdGhpcy5fZGVmKX1udWxsYWJsZSgpe3JldHVybiBfcy5jcmVhdGUodGhpcyx0aGlzLl9kZWYpfW51bGxpc2goKXtyZXR1cm4gdGhpcy5udWxsYWJsZSgpLm9wdGlvbmFsKCl9YXJyYXkoKXtyZXR1cm4genIuY3JlYXRlKHRoaXMpfXByb21pc2UoKXtyZXR1cm4gamEuY3JlYXRlKHRoaXMsdGhpcy5fZGVmKX1vcih0KXtyZXR1cm4gTG8uY3JlYXRlKFt0aGlzLHRdLHRoaXMuX2RlZil9YW5kKHQpe3JldHVybiBEby5jcmVhdGUodGhpcyx0LHRoaXMuX2RlZil9dHJhbnNmb3JtKHQpe3JldHVybiBuZXcgSHIoey4uLmdlKHRoaXMuX2RlZiksc2NoZW1hOnRoaXMsdHlwZU5hbWU6bWUuWm9kRWZmZWN0cyxlZmZlY3Q6e3R5cGU6InRyYW5zZm9ybSIsdHJhbnNmb3JtOnR9fSl9ZGVmYXVsdCh0KXtjb25zdCByPXR5cGVvZiB0PT0iZnVuY3Rpb24iP3Q6KCk9PnQ7cmV0dXJuIG5ldyBCbyh7Li4uZ2UodGhpcy5fZGVmKSxpbm5lclR5cGU6dGhpcyxkZWZhdWx0VmFsdWU6cix0eXBlTmFtZTptZS5ab2REZWZhdWx0fSl9YnJhbmQoKXtyZXR1cm4gbmV3ICRoKHt0eXBlTmFtZTptZS5ab2RCcmFuZGVkLHR5cGU6dGhpcywuLi5nZSh0aGlzLl9kZWYpfSl9Y2F0Y2godCl7Y29uc3Qgcj10eXBlb2YgdD09ImZ1bmN0aW9uIj90OigpPT50O3JldHVybiBuZXcgSG8oey4uLmdlKHRoaXMuX2RlZiksaW5uZXJUeXBlOnRoaXMsY2F0Y2hWYWx1ZTpyLHR5cGVOYW1lOm1lLlpvZENhdGNofSl9ZGVzY3JpYmUodCl7Y29uc3Qgcj10aGlzLmNvbnN0cnVjdG9yO3JldHVybiBuZXcgcih7Li4udGhpcy5fZGVmLGRlc2NyaXB0aW9uOnR9KX1waXBlKHQpe3JldHVybiBjbC5jcmVhdGUodGhpcyx0KX1yZWFkb25seSgpe3JldHVybiBXby5jcmVhdGUodGhpcyl9aXNPcHRpb25hbCgpe3JldHVybiB0aGlzLnNhZmVQYXJzZSh2b2lkIDApLnN1Y2Nlc3N9aXNOdWxsYWJsZSgpe3JldHVybiB0aGlzLnNhZmVQYXJzZShudWxsKS5zdWNjZXNzfX1jb25zdCBkVD0vXmNbXlxzLV17OCx9JC9pLGZUPS9eWzAtOWEtel0rJC8sbVQ9L15bMC05QS1ISktNTlAtVFYtWl17MjZ9JC9pLGhUPS9eWzAtOWEtZkEtRl17OH1cYi1bMC05YS1mQS1GXXs0fVxiLVswLTlhLWZBLUZdezR9XGItWzAtOWEtZkEtRl17NH1cYi1bMC05YS1mQS1GXXsxMn0kL2kscFQ9L15bYS16MC05Xy1dezIxfSQvaSxnVD0vXltBLVphLXowLTktX10rXC5bQS1aYS16MC05LV9dK1wuW0EtWmEtejAtOS1fXSokLyx4VD0vXlstK10/UCg/ISQpKD86KD86Wy0rXT9cZCtZKXwoPzpbLStdP1xkK1suLF1cZCtZJCkpPyg/Oig/OlstK10/XGQrTSl8KD86Wy0rXT9cZCtbLixdXGQrTSQpKT8oPzooPzpbLStdP1xkK1cpfCg/OlstK10/XGQrWy4sXVxkK1ckKSk/KD86KD86Wy0rXT9cZCtEKXwoPzpbLStdP1xkK1suLF1cZCtEJCkpPyg/OlQoPz1bXGQrLV0pKD86KD86Wy0rXT9cZCtIKXwoPzpbLStdP1xkK1suLF1cZCtIJCkpPyg/Oig/OlstK10/XGQrTSl8KD86Wy0rXT9cZCtbLixdXGQrTSQpKT8oPzpbLStdP1xkKyg/OlsuLF1cZCspP1MpPyk/PyQvLHZUPS9eKD8hXC4pKD8hLipcLlwuKShbQS1aMC05XycrXC1cLl0qKVtBLVowLTlfKy1dQChbQS1aMC05XVtBLVowLTlcLV0qXC4pK1tBLVpdezIsfSQvaSx5VD0iXihcXHB7RXh0ZW5kZWRfUGljdG9ncmFwaGljfXxcXHB7RW1vamlfQ29tcG9uZW50fSkrJCI7bGV0IEFkO2NvbnN0IHdUPS9eKD86KD86MjVbMC01XXwyWzAtNF1bMC05XXwxWzAtOV1bMC05XXxbMS05XVswLTldfFswLTldKVwuKXszfSg/OjI1WzAtNV18MlswLTRdWzAtOV18MVswLTldWzAtOV18WzEtOV1bMC05XXxbMC05XSkkLyxiVD0vXig/Oig/OjI1WzAtNV18MlswLTRdWzAtOV18MVswLTldWzAtOV18WzEtOV1bMC05XXxbMC05XSlcLil7M30oPzoyNVswLTVdfDJbMC00XVswLTldfDFbMC05XVswLTldfFsxLTldWzAtOV18WzAtOV0pXC8oM1swLTJdfFsxMl0/WzAtOV0pJC8salQ9L14oKFswLTlhLWZBLUZdezEsNH06KXs3LDd9WzAtOWEtZkEtRl17MSw0fXwoWzAtOWEtZkEtRl17MSw0fTopezEsN306fChbMC05YS1mQS1GXXsxLDR9Oil7MSw2fTpbMC05YS1mQS1GXXsxLDR9fChbMC05YS1mQS1GXXsxLDR9Oil7MSw1fSg6WzAtOWEtZkEtRl17MSw0fSl7MSwyfXwoWzAtOWEtZkEtRl17MSw0fTopezEsNH0oOlswLTlhLWZBLUZdezEsNH0pezEsM318KFswLTlhLWZBLUZdezEsNH06KXsxLDN9KDpbMC05YS1mQS1GXXsxLDR9KXsxLDR9fChbMC05YS1mQS1GXXsxLDR9Oil7MSwyfSg6WzAtOWEtZkEtRl17MSw0fSl7MSw1fXxbMC05YS1mQS1GXXsxLDR9OigoOlswLTlhLWZBLUZdezEsNH0pezEsNn0pfDooKDpbMC05YS1mQS1GXXsxLDR9KXsxLDd9fDopfGZlODA6KDpbMC05YS1mQS1GXXswLDR9KXswLDR9JVswLTlhLXpBLVpdezEsfXw6OihmZmZmKDowezEsNH0pezAsMX06KXswLDF9KCgyNVswLTVdfCgyWzAtNF18MXswLDF9WzAtOV0pezAsMX1bMC05XSlcLil7MywzfSgyNVswLTVdfCgyWzAtNF18MXswLDF9WzAtOV0pezAsMX1bMC05XSl8KFswLTlhLWZBLUZdezEsNH06KXsxLDR9OigoMjVbMC01XXwoMlswLTRdfDF7MCwxfVswLTldKXswLDF9WzAtOV0pXC4pezMsM30oMjVbMC01XXwoMlswLTRdfDF7MCwxfVswLTldKXswLDF9WzAtOV0pKSQvLE5UPS9eKChbMC05YS1mQS1GXXsxLDR9Oil7Nyw3fVswLTlhLWZBLUZdezEsNH18KFswLTlhLWZBLUZdezEsNH06KXsxLDd9OnwoWzAtOWEtZkEtRl17MSw0fTopezEsNn06WzAtOWEtZkEtRl17MSw0fXwoWzAtOWEtZkEtRl17MSw0fTopezEsNX0oOlswLTlhLWZBLUZdezEsNH0pezEsMn18KFswLTlhLWZBLUZdezEsNH06KXsxLDR9KDpbMC05YS1mQS1GXXsxLDR9KXsxLDN9fChbMC05YS1mQS1GXXsxLDR9Oil7MSwzfSg6WzAtOWEtZkEtRl17MSw0fSl7MSw0fXwoWzAtOWEtZkEtRl17MSw0fTopezEsMn0oOlswLTlhLWZBLUZdezEsNH0pezEsNX18WzAtOWEtZkEtRl17MSw0fTooKDpbMC05YS1mQS1GXXsxLDR9KXsxLDZ9KXw6KCg6WzAtOWEtZkEtRl17MSw0fSl7MSw3fXw6KXxmZTgwOig6WzAtOWEtZkEtRl17MCw0fSl7MCw0fSVbMC05YS16QS1aXXsxLH18OjooZmZmZig6MHsxLDR9KXswLDF9Oil7MCwxfSgoMjVbMC01XXwoMlswLTRdfDF7MCwxfVswLTldKXswLDF9WzAtOV0pXC4pezMsM30oMjVbMC01XXwoMlswLTRdfDF7MCwxfVswLTldKXswLDF9WzAtOV0pfChbMC05YS1mQS1GXXsxLDR9Oil7MSw0fTooKDI1WzAtNV18KDJbMC00XXwxezAsMX1bMC05XSl7MCwxfVswLTldKVwuKXszLDN9KDI1WzAtNV18KDJbMC00XXwxezAsMX1bMC05XSl7MCwxfVswLTldKSlcLygxMlswLThdfDFbMDFdWzAtOV18WzEtOV0/WzAtOV0pJC8sU1Q9L14oWzAtOWEtekEtWisvXXs0fSkqKChbMC05YS16QS1aKy9dezJ9PT0pfChbMC05YS16QS1aKy9dezN9PSkpPyQvLGtUPS9eKFswLTlhLXpBLVotX117NH0pKigoWzAtOWEtekEtWi1fXXsyfSg9PSk/KXwoWzAtOWEtekEtWi1fXXszfSg9KT8pKT8kLyxzYj0iKChcXGRcXGRbMjQ2OF1bMDQ4XXxcXGRcXGRbMTM1NzldWzI2XXxcXGRcXGQwWzQ4XXxbMDI0NjhdWzA0OF0wMHxbMTM1NzldWzI2XTAwKS0wMi0yOXxcXGR7NH0tKCgwWzEzNTc4XXwxWzAyXSktKDBbMS05XXxbMTJdXFxkfDNbMDFdKXwoMFs0NjldfDExKS0oMFsxLTldfFsxMl1cXGR8MzApfCgwMiktKDBbMS05XXwxXFxkfDJbMC04XSkpKSIsRVQ9bmV3IFJlZ0V4cChgXiR7c2J9JGApO2Z1bmN0aW9uIGliKGUpe2xldCB0PSIoWzAxXVxcZHwyWzAtM10pOlswLTVdXFxkOlswLTVdXFxkIjtyZXR1cm4gZS5wcmVjaXNpb24/dD1gJHt0fVxcLlxcZHske2UucHJlY2lzaW9ufX1gOmUucHJlY2lzaW9uPT1udWxsJiYodD1gJHt0fShcXC5cXGQrKT9gKSx0fWZ1bmN0aW9uIENUKGUpe3JldHVybiBuZXcgUmVnRXhwKGBeJHtpYihlKX0kYCl9ZnVuY3Rpb24gYWIoZSl7bGV0IHQ9YCR7c2J9VCR7aWIoZSl9YDtjb25zdCByPVtdO3JldHVybiByLnB1c2goZS5sb2NhbD8iWj8iOiJaIiksZS5vZmZzZXQmJnIucHVzaCgiKFsrLV1cXGR7Mn06P1xcZHsyfSkiKSx0PWAke3R9KCR7ci5qb2luKCJ8Iil9KWAsbmV3IFJlZ0V4cChgXiR7dH0kYCl9ZnVuY3Rpb24gX1QoZSx0KXtyZXR1cm4hISgodD09PSJ2NCJ8fCF0KSYmd1QudGVzdChlKXx8KHQ9PT0idjYifHwhdCkmJmpULnRlc3QoZSkpfWZ1bmN0aW9uIFBUKGUsdCl7aWYoIWdULnRlc3QoZSkpcmV0dXJuITE7dHJ5e2NvbnN0W3JdPWUuc3BsaXQoIi4iKSxuPXIucmVwbGFjZSgvLS9nLCIrIikucmVwbGFjZSgvXy9nLCIvIikucGFkRW5kKHIubGVuZ3RoKyg0LXIubGVuZ3RoJTQpJTQsIj0iKSxzPUpTT04ucGFyc2UoYXRvYihuKSk7cmV0dXJuISh0eXBlb2YgcyE9Im9iamVjdCJ8fHM9PT1udWxsfHwhcy50eXB8fCFzLmFsZ3x8dCYmcy5hbGchPT10KX1jYXRjaHtyZXR1cm4hMX19ZnVuY3Rpb24gVFQoZSx0KXtyZXR1cm4hISgodD09PSJ2NCJ8fCF0KSYmYlQudGVzdChlKXx8KHQ9PT0idjYifHwhdCkmJk5ULnRlc3QoZSkpfWNsYXNzIExyIGV4dGVuZHMgeWV7X3BhcnNlKHQpe2lmKHRoaXMuX2RlZi5jb2VyY2UmJih0LmRhdGE9U3RyaW5nKHQuZGF0YSkpLHRoaXMuX2dldFR5cGUodCkhPT1KLnN0cmluZyl7Y29uc3QgYT10aGlzLl9nZXRPclJldHVybkN0eCh0KTtyZXR1cm4gRyhhLHtjb2RlOlUuaW52YWxpZF90eXBlLGV4cGVjdGVkOkouc3RyaW5nLHJlY2VpdmVkOmEucGFyc2VkVHlwZX0pLHBlfWNvbnN0IG49bmV3ICR0O2xldCBzO2Zvcihjb25zdCBhIG9mIHRoaXMuX2RlZi5jaGVja3MpaWYoYS5raW5kPT09Im1pbiIpdC5kYXRhLmxlbmd0aDxhLnZhbHVlJiYocz10aGlzLl9nZXRPclJldHVybkN0eCh0LHMpLEcocyx7Y29kZTpVLnRvb19zbWFsbCxtaW5pbXVtOmEudmFsdWUsdHlwZToic3RyaW5nIixpbmNsdXNpdmU6ITAsZXhhY3Q6ITEsbWVzc2FnZTphLm1lc3NhZ2V9KSxuLmRpcnR5KCkpO2Vsc2UgaWYoYS5raW5kPT09Im1heCIpdC5kYXRhLmxlbmd0aD5hLnZhbHVlJiYocz10aGlzLl9nZXRPclJldHVybkN0eCh0LHMpLEcocyx7Y29kZTpVLnRvb19iaWcsbWF4aW11bTphLnZhbHVlLHR5cGU6InN0cmluZyIsaW5jbHVzaXZlOiEwLGV4YWN0OiExLG1lc3NhZ2U6YS5tZXNzYWdlfSksbi5kaXJ0eSgpKTtlbHNlIGlmKGEua2luZD09PSJsZW5ndGgiKXtjb25zdCBvPXQuZGF0YS5sZW5ndGg+YS52YWx1ZSxsPXQuZGF0YS5sZW5ndGg8YS52YWx1ZTsob3x8bCkmJihzPXRoaXMuX2dldE9yUmV0dXJuQ3R4KHQscyksbz9HKHMse2NvZGU6VS50b29fYmlnLG1heGltdW06YS52YWx1ZSx0eXBlOiJzdHJpbmciLGluY2x1c2l2ZTohMCxleGFjdDohMCxtZXNzYWdlOmEubWVzc2FnZX0pOmwmJkcocyx7Y29kZTpVLnRvb19zbWFsbCxtaW5pbXVtOmEudmFsdWUsdHlwZToic3RyaW5nIixpbmNsdXNpdmU6ITAsZXhhY3Q6ITAsbWVzc2FnZTphLm1lc3NhZ2V9KSxuLmRpcnR5KCkpfWVsc2UgaWYoYS5raW5kPT09ImVtYWlsIil2VC50ZXN0KHQuZGF0YSl8fChzPXRoaXMuX2dldE9yUmV0dXJuQ3R4KHQscyksRyhzLHt2YWxpZGF0aW9uOiJlbWFpbCIsY29kZTpVLmludmFsaWRfc3RyaW5nLG1lc3NhZ2U6YS5tZXNzYWdlfSksbi5kaXJ0eSgpKTtlbHNlIGlmKGEua2luZD09PSJlbW9qaSIpQWR8fChBZD1uZXcgUmVnRXhwKHlULCJ1IikpLEFkLnRlc3QodC5kYXRhKXx8KHM9dGhpcy5fZ2V0T3JSZXR1cm5DdHgodCxzKSxHKHMse3ZhbGlkYXRpb246ImVtb2ppIixjb2RlOlUuaW52YWxpZF9zdHJpbmcsbWVzc2FnZTphLm1lc3NhZ2V9KSxuLmRpcnR5KCkpO2Vsc2UgaWYoYS5raW5kPT09InV1aWQiKWhULnRlc3QodC5kYXRhKXx8KHM9dGhpcy5fZ2V0T3JSZXR1cm5DdHgodCxzKSxHKHMse3ZhbGlkYXRpb246InV1aWQiLGNvZGU6VS5pbnZhbGlkX3N0cmluZyxtZXNzYWdlOmEubWVzc2FnZX0pLG4uZGlydHkoKSk7ZWxzZSBpZihhLmtpbmQ9PT0ibmFub2lkIilwVC50ZXN0KHQuZGF0YSl8fChzPXRoaXMuX2dldE9yUmV0dXJuQ3R4KHQscyksRyhzLHt2YWxpZGF0aW9uOiJuYW5vaWQiLGNvZGU6VS5pbnZhbGlkX3N0cmluZyxtZXNzYWdlOmEubWVzc2FnZX0pLG4uZGlydHkoKSk7ZWxzZSBpZihhLmtpbmQ9PT0iY3VpZCIpZFQudGVzdCh0LmRhdGEpfHwocz10aGlzLl9nZXRPclJldHVybkN0eCh0LHMpLEcocyx7dmFsaWRhdGlvbjoiY3VpZCIsY29kZTpVLmludmFsaWRfc3RyaW5nLG1lc3NhZ2U6YS5tZXNzYWdlfSksbi5kaXJ0eSgpKTtlbHNlIGlmKGEua2luZD09PSJjdWlkMiIpZlQudGVzdCh0LmRhdGEpfHwocz10aGlzLl9nZXRPclJldHVybkN0eCh0LHMpLEcocyx7dmFsaWRhdGlvbjoiY3VpZDIiLGNvZGU6VS5pbnZhbGlkX3N0cmluZyxtZXNzYWdlOmEubWVzc2FnZX0pLG4uZGlydHkoKSk7ZWxzZSBpZihhLmtpbmQ9PT0idWxpZCIpbVQudGVzdCh0LmRhdGEpfHwocz10aGlzLl9nZXRPclJldHVybkN0eCh0LHMpLEcocyx7dmFsaWRhdGlvbjoidWxpZCIsY29kZTpVLmludmFsaWRfc3RyaW5nLG1lc3NhZ2U6YS5tZXNzYWdlfSksbi5kaXJ0eSgpKTtlbHNlIGlmKGEua2luZD09PSJ1cmwiKXRyeXtuZXcgVVJMKHQuZGF0YSl9Y2F0Y2h7cz10aGlzLl9nZXRPclJldHVybkN0eCh0LHMpLEcocyx7dmFsaWRhdGlvbjoidXJsIixjb2RlOlUuaW52YWxpZF9zdHJpbmcsbWVzc2FnZTphLm1lc3NhZ2V9KSxuLmRpcnR5KCl9ZWxzZSBhLmtpbmQ9PT0icmVnZXgiPyhhLnJlZ2V4Lmxhc3RJbmRleD0wLGEucmVnZXgudGVzdCh0LmRhdGEpfHwocz10aGlzLl9nZXRPclJldHVybkN0eCh0LHMpLEcocyx7dmFsaWRhdGlvbjoicmVnZXgiLGNvZGU6VS5pbnZhbGlkX3N0cmluZyxtZXNzYWdlOmEubWVzc2FnZX0pLG4uZGlydHkoKSkpOmEua2luZD09PSJ0cmltIj90LmRhdGE9dC5kYXRhLnRyaW0oKTphLmtpbmQ9PT0iaW5jbHVkZXMiP3QuZGF0YS5pbmNsdWRlcyhhLnZhbHVlLGEucG9zaXRpb24pfHwocz10aGlzLl9nZXRPclJldHVybkN0eCh0LHMpLEcocyx7Y29kZTpVLmludmFsaWRfc3RyaW5nLHZhbGlkYXRpb246e2luY2x1ZGVzOmEudmFsdWUscG9zaXRpb246YS5wb3NpdGlvbn0sbWVzc2FnZTphLm1lc3NhZ2V9KSxuLmRpcnR5KCkpOmEua2luZD09PSJ0b0xvd2VyQ2FzZSI/dC5kYXRhPXQuZGF0YS50b0xvd2VyQ2FzZSgpOmEua2luZD09PSJ0b1VwcGVyQ2FzZSI/dC5kYXRhPXQuZGF0YS50b1VwcGVyQ2FzZSgpOmEua2luZD09PSJzdGFydHNXaXRoIj90LmRhdGEuc3RhcnRzV2l0aChhLnZhbHVlKXx8KHM9dGhpcy5fZ2V0T3JSZXR1cm5DdHgodCxzKSxHKHMse2NvZGU6VS5pbnZhbGlkX3N0cmluZyx2YWxpZGF0aW9uOntzdGFydHNXaXRoOmEudmFsdWV9LG1lc3NhZ2U6YS5tZXNzYWdlfSksbi5kaXJ0eSgpKTphLmtpbmQ9PT0iZW5kc1dpdGgiP3QuZGF0YS5lbmRzV2l0aChhLnZhbHVlKXx8KHM9dGhpcy5fZ2V0T3JSZXR1cm5DdHgodCxzKSxHKHMse2NvZGU6VS5pbnZhbGlkX3N0cmluZyx2YWxpZGF0aW9uOntlbmRzV2l0aDphLnZhbHVlfSxtZXNzYWdlOmEubWVzc2FnZX0pLG4uZGlydHkoKSk6YS5raW5kPT09ImRhdGV0aW1lIj9hYihhKS50ZXN0KHQuZGF0YSl8fChzPXRoaXMuX2dldE9yUmV0dXJuQ3R4KHQscyksRyhzLHtjb2RlOlUuaW52YWxpZF9zdHJpbmcsdmFsaWRhdGlvbjoiZGF0ZXRpbWUiLG1lc3NhZ2U6YS5tZXNzYWdlfSksbi5kaXJ0eSgpKTphLmtpbmQ9PT0iZGF0ZSI/RVQudGVzdCh0LmRhdGEpfHwocz10aGlzLl9nZXRPclJldHVybkN0eCh0LHMpLEcocyx7Y29kZTpVLmludmFsaWRfc3RyaW5nLHZhbGlkYXRpb246ImRhdGUiLG1lc3NhZ2U6YS5tZXNzYWdlfSksbi5kaXJ0eSgpKTphLmtpbmQ9PT0idGltZSI/Q1QoYSkudGVzdCh0LmRhdGEpfHwocz10aGlzLl9nZXRPclJldHVybkN0eCh0LHMpLEcocyx7Y29kZTpVLmludmFsaWRfc3RyaW5nLHZhbGlkYXRpb246InRpbWUiLG1lc3NhZ2U6YS5tZXNzYWdlfSksbi5kaXJ0eSgpKTphLmtpbmQ9PT0iZHVyYXRpb24iP3hULnRlc3QodC5kYXRhKXx8KHM9dGhpcy5fZ2V0T3JSZXR1cm5DdHgodCxzKSxHKHMse3ZhbGlkYXRpb246ImR1cmF0aW9uIixjb2RlOlUuaW52YWxpZF9zdHJpbmcsbWVzc2FnZTphLm1lc3NhZ2V9KSxuLmRpcnR5KCkpOmEua2luZD09PSJpcCI/X1QodC5kYXRhLGEudmVyc2lvbil8fChzPXRoaXMuX2dldE9yUmV0dXJuQ3R4KHQscyksRyhzLHt2YWxpZGF0aW9uOiJpcCIsY29kZTpVLmludmFsaWRfc3RyaW5nLG1lc3NhZ2U6YS5tZXNzYWdlfSksbi5kaXJ0eSgpKTphLmtpbmQ9PT0iand0Ij9QVCh0LmRhdGEsYS5hbGcpfHwocz10aGlzLl9nZXRPclJldHVybkN0eCh0LHMpLEcocyx7dmFsaWRhdGlvbjoiand0Iixjb2RlOlUuaW52YWxpZF9zdHJpbmcsbWVzc2FnZTphLm1lc3NhZ2V9KSxuLmRpcnR5KCkpOmEua2luZD09PSJjaWRyIj9UVCh0LmRhdGEsYS52ZXJzaW9uKXx8KHM9dGhpcy5fZ2V0T3JSZXR1cm5DdHgodCxzKSxHKHMse3ZhbGlkYXRpb246ImNpZHIiLGNvZGU6VS5pbnZhbGlkX3N0cmluZyxtZXNzYWdlOmEubWVzc2FnZX0pLG4uZGlydHkoKSk6YS5raW5kPT09ImJhc2U2NCI/U1QudGVzdCh0LmRhdGEpfHwocz10aGlzLl9nZXRPclJldHVybkN0eCh0LHMpLEcocyx7dmFsaWRhdGlvbjoiYmFzZTY0Iixjb2RlOlUuaW52YWxpZF9zdHJpbmcsbWVzc2FnZTphLm1lc3NhZ2V9KSxuLmRpcnR5KCkpOmEua2luZD09PSJiYXNlNjR1cmwiP2tULnRlc3QodC5kYXRhKXx8KHM9dGhpcy5fZ2V0T3JSZXR1cm5DdHgodCxzKSxHKHMse3ZhbGlkYXRpb246ImJhc2U2NHVybCIsY29kZTpVLmludmFsaWRfc3RyaW5nLG1lc3NhZ2U6YS5tZXNzYWdlfSksbi5kaXJ0eSgpKTpfZS5hc3NlcnROZXZlcihhKTtyZXR1cm57c3RhdHVzOm4udmFsdWUsdmFsdWU6dC5kYXRhfX1fcmVnZXgodCxyLG4pe3JldHVybiB0aGlzLnJlZmluZW1lbnQocz0+dC50ZXN0KHMpLHt2YWxpZGF0aW9uOnIsY29kZTpVLmludmFsaWRfc3RyaW5nLC4uLm5lLmVyclRvT2JqKG4pfSl9X2FkZENoZWNrKHQpe3JldHVybiBuZXcgTHIoey4uLnRoaXMuX2RlZixjaGVja3M6Wy4uLnRoaXMuX2RlZi5jaGVja3MsdF19KX1lbWFpbCh0KXtyZXR1cm4gdGhpcy5fYWRkQ2hlY2soe2tpbmQ6ImVtYWlsIiwuLi5uZS5lcnJUb09iaih0KX0pfXVybCh0KXtyZXR1cm4gdGhpcy5fYWRkQ2hlY2soe2tpbmQ6InVybCIsLi4ubmUuZXJyVG9PYmoodCl9KX1lbW9qaSh0KXtyZXR1cm4gdGhpcy5fYWRkQ2hlY2soe2tpbmQ6ImVtb2ppIiwuLi5uZS5lcnJUb09iaih0KX0pfXV1aWQodCl7cmV0dXJuIHRoaXMuX2FkZENoZWNrKHtraW5kOiJ1dWlkIiwuLi5uZS5lcnJUb09iaih0KX0pfW5hbm9pZCh0KXtyZXR1cm4gdGhpcy5fYWRkQ2hlY2soe2tpbmQ6Im5hbm9pZCIsLi4ubmUuZXJyVG9PYmoodCl9KX1jdWlkKHQpe3JldHVybiB0aGlzLl9hZGRDaGVjayh7a2luZDoiY3VpZCIsLi4ubmUuZXJyVG9PYmoodCl9KX1jdWlkMih0KXtyZXR1cm4gdGhpcy5fYWRkQ2hlY2soe2tpbmQ6ImN1aWQyIiwuLi5uZS5lcnJUb09iaih0KX0pfXVsaWQodCl7cmV0dXJuIHRoaXMuX2FkZENoZWNrKHtraW5kOiJ1bGlkIiwuLi5uZS5lcnJUb09iaih0KX0pfWJhc2U2NCh0KXtyZXR1cm4gdGhpcy5fYWRkQ2hlY2soe2tpbmQ6ImJhc2U2NCIsLi4ubmUuZXJyVG9PYmoodCl9KX1iYXNlNjR1cmwodCl7cmV0dXJuIHRoaXMuX2FkZENoZWNrKHtraW5kOiJiYXNlNjR1cmwiLC4uLm5lLmVyclRvT2JqKHQpfSl9and0KHQpe3JldHVybiB0aGlzLl9hZGRDaGVjayh7a2luZDoiand0IiwuLi5uZS5lcnJUb09iaih0KX0pfWlwKHQpe3JldHVybiB0aGlzLl9hZGRDaGVjayh7a2luZDoiaXAiLC4uLm5lLmVyclRvT2JqKHQpfSl9Y2lkcih0KXtyZXR1cm4gdGhpcy5fYWRkQ2hlY2soe2tpbmQ6ImNpZHIiLC4uLm5lLmVyclRvT2JqKHQpfSl9ZGF0ZXRpbWUodCl7dmFyIHIsbjtyZXR1cm4gdHlwZW9mIHQ9PSJzdHJpbmciP3RoaXMuX2FkZENoZWNrKHtraW5kOiJkYXRldGltZSIscHJlY2lzaW9uOm51bGwsb2Zmc2V0OiExLGxvY2FsOiExLG1lc3NhZ2U6dH0pOnRoaXMuX2FkZENoZWNrKHtraW5kOiJkYXRldGltZSIscHJlY2lzaW9uOnR5cGVvZih0PT1udWxsP3ZvaWQgMDp0LnByZWNpc2lvbik+InUiP251bGw6dD09bnVsbD92b2lkIDA6dC5wcmVjaXNpb24sb2Zmc2V0OihyPXQ9PW51bGw/dm9pZCAwOnQub2Zmc2V0KSE9PW51bGwmJnIhPT12b2lkIDA/cjohMSxsb2NhbDoobj10PT1udWxsP3ZvaWQgMDp0LmxvY2FsKSE9PW51bGwmJm4hPT12b2lkIDA/bjohMSwuLi5uZS5lcnJUb09iaih0PT1udWxsP3ZvaWQgMDp0Lm1lc3NhZ2UpfSl9ZGF0ZSh0KXtyZXR1cm4gdGhpcy5fYWRkQ2hlY2soe2tpbmQ6ImRhdGUiLG1lc3NhZ2U6dH0pfXRpbWUodCl7cmV0dXJuIHR5cGVvZiB0PT0ic3RyaW5nIj90aGlzLl9hZGRDaGVjayh7a2luZDoidGltZSIscHJlY2lzaW9uOm51bGwsbWVzc2FnZTp0fSk6dGhpcy5fYWRkQ2hlY2soe2tpbmQ6InRpbWUiLHByZWNpc2lvbjp0eXBlb2YodD09bnVsbD92b2lkIDA6dC5wcmVjaXNpb24pPiJ1Ij9udWxsOnQ9PW51bGw/dm9pZCAwOnQucHJlY2lzaW9uLC4uLm5lLmVyclRvT2JqKHQ9PW51bGw/dm9pZCAwOnQubWVzc2FnZSl9KX1kdXJhdGlvbih0KXtyZXR1cm4gdGhpcy5fYWRkQ2hlY2soe2tpbmQ6ImR1cmF0aW9uIiwuLi5uZS5lcnJUb09iaih0KX0pfXJlZ2V4KHQscil7cmV0dXJuIHRoaXMuX2FkZENoZWNrKHtraW5kOiJyZWdleCIscmVnZXg6dCwuLi5uZS5lcnJUb09iaihyKX0pfWluY2x1ZGVzKHQscil7cmV0dXJuIHRoaXMuX2FkZENoZWNrKHtraW5kOiJpbmNsdWRlcyIsdmFsdWU6dCxwb3NpdGlvbjpyPT1udWxsP3ZvaWQgMDpyLnBvc2l0aW9uLC4uLm5lLmVyclRvT2JqKHI9PW51bGw/dm9pZCAwOnIubWVzc2FnZSl9KX1zdGFydHNXaXRoKHQscil7cmV0dXJuIHRoaXMuX2FkZENoZWNrKHtraW5kOiJzdGFydHNXaXRoIix2YWx1ZTp0LC4uLm5lLmVyclRvT2JqKHIpfSl9ZW5kc1dpdGgodCxyKXtyZXR1cm4gdGhpcy5fYWRkQ2hlY2soe2tpbmQ6ImVuZHNXaXRoIix2YWx1ZTp0LC4uLm5lLmVyclRvT2JqKHIpfSl9bWluKHQscil7cmV0dXJuIHRoaXMuX2FkZENoZWNrKHtraW5kOiJtaW4iLHZhbHVlOnQsLi4ubmUuZXJyVG9PYmoocil9KX1tYXgodCxyKXtyZXR1cm4gdGhpcy5fYWRkQ2hlY2soe2tpbmQ6Im1heCIsdmFsdWU6dCwuLi5uZS5lcnJUb09iaihyKX0pfWxlbmd0aCh0LHIpe3JldHVybiB0aGlzLl9hZGRDaGVjayh7a2luZDoibGVuZ3RoIix2YWx1ZTp0LC4uLm5lLmVyclRvT2JqKHIpfSl9bm9uZW1wdHkodCl7cmV0dXJuIHRoaXMubWluKDEsbmUuZXJyVG9PYmoodCkpfXRyaW0oKXtyZXR1cm4gbmV3IExyKHsuLi50aGlzLl9kZWYsY2hlY2tzOlsuLi50aGlzLl9kZWYuY2hlY2tzLHtraW5kOiJ0cmltIn1dfSl9dG9Mb3dlckNhc2UoKXtyZXR1cm4gbmV3IExyKHsuLi50aGlzLl9kZWYsY2hlY2tzOlsuLi50aGlzLl9kZWYuY2hlY2tzLHtraW5kOiJ0b0xvd2VyQ2FzZSJ9XX0pfXRvVXBwZXJDYXNlKCl7cmV0dXJuIG5ldyBMcih7Li4udGhpcy5fZGVmLGNoZWNrczpbLi4udGhpcy5fZGVmLmNoZWNrcyx7a2luZDoidG9VcHBlckNhc2UifV19KX1nZXQgaXNEYXRldGltZSgpe3JldHVybiEhdGhpcy5fZGVmLmNoZWNrcy5maW5kKHQ9PnQua2luZD09PSJkYXRldGltZSIpfWdldCBpc0RhdGUoKXtyZXR1cm4hIXRoaXMuX2RlZi5jaGVja3MuZmluZCh0PT50LmtpbmQ9PT0iZGF0ZSIpfWdldCBpc1RpbWUoKXtyZXR1cm4hIXRoaXMuX2RlZi5jaGVja3MuZmluZCh0PT50LmtpbmQ9PT0idGltZSIpfWdldCBpc0R1cmF0aW9uKCl7cmV0dXJuISF0aGlzLl9kZWYuY2hlY2tzLmZpbmQodD0+dC5raW5kPT09ImR1cmF0aW9uIil9Z2V0IGlzRW1haWwoKXtyZXR1cm4hIXRoaXMuX2RlZi5jaGVja3MuZmluZCh0PT50LmtpbmQ9PT0iZW1haWwiKX1nZXQgaXNVUkwoKXtyZXR1cm4hIXRoaXMuX2RlZi5jaGVja3MuZmluZCh0PT50LmtpbmQ9PT0idXJsIil9Z2V0IGlzRW1vamkoKXtyZXR1cm4hIXRoaXMuX2RlZi5jaGVja3MuZmluZCh0PT50LmtpbmQ9PT0iZW1vamkiKX1nZXQgaXNVVUlEKCl7cmV0dXJuISF0aGlzLl9kZWYuY2hlY2tzLmZpbmQodD0+dC5raW5kPT09InV1aWQiKX1nZXQgaXNOQU5PSUQoKXtyZXR1cm4hIXRoaXMuX2RlZi5jaGVja3MuZmluZCh0PT50LmtpbmQ9PT0ibmFub2lkIil9Z2V0IGlzQ1VJRCgpe3JldHVybiEhdGhpcy5fZGVmLmNoZWNrcy5maW5kKHQ9PnQua2luZD09PSJjdWlkIil9Z2V0IGlzQ1VJRDIoKXtyZXR1cm4hIXRoaXMuX2RlZi5jaGVja3MuZmluZCh0PT50LmtpbmQ9PT0iY3VpZDIiKX1nZXQgaXNVTElEKCl7cmV0dXJuISF0aGlzLl9kZWYuY2hlY2tzLmZpbmQodD0+dC5raW5kPT09InVsaWQiKX1nZXQgaXNJUCgpe3JldHVybiEhdGhpcy5fZGVmLmNoZWNrcy5maW5kKHQ9PnQua2luZD09PSJpcCIpfWdldCBpc0NJRFIoKXtyZXR1cm4hIXRoaXMuX2RlZi5jaGVja3MuZmluZCh0PT50LmtpbmQ9PT0iY2lkciIpfWdldCBpc0Jhc2U2NCgpe3JldHVybiEhdGhpcy5fZGVmLmNoZWNrcy5maW5kKHQ9PnQua2luZD09PSJiYXNlNjQiKX1nZXQgaXNCYXNlNjR1cmwoKXtyZXR1cm4hIXRoaXMuX2RlZi5jaGVja3MuZmluZCh0PT50LmtpbmQ9PT0iYmFzZTY0dXJsIil9Z2V0IG1pbkxlbmd0aCgpe2xldCB0PW51bGw7Zm9yKGNvbnN0IHIgb2YgdGhpcy5fZGVmLmNoZWNrcylyLmtpbmQ9PT0ibWluIiYmKHQ9PT1udWxsfHxyLnZhbHVlPnQpJiYodD1yLnZhbHVlKTtyZXR1cm4gdH1nZXQgbWF4TGVuZ3RoKCl7bGV0IHQ9bnVsbDtmb3IoY29uc3QgciBvZiB0aGlzLl9kZWYuY2hlY2tzKXIua2luZD09PSJtYXgiJiYodD09PW51bGx8fHIudmFsdWU8dCkmJih0PXIudmFsdWUpO3JldHVybiB0fX1Mci5jcmVhdGU9ZT0+e3ZhciB0O3JldHVybiBuZXcgTHIoe2NoZWNrczpbXSx0eXBlTmFtZTptZS5ab2RTdHJpbmcsY29lcmNlOih0PWU9PW51bGw/dm9pZCAwOmUuY29lcmNlKSE9PW51bGwmJnQhPT12b2lkIDA/dDohMSwuLi5nZShlKX0pfTtmdW5jdGlvbiBSVChlLHQpe2NvbnN0IHI9KGUudG9TdHJpbmcoKS5zcGxpdCgiLiIpWzFdfHwiIikubGVuZ3RoLG49KHQudG9TdHJpbmcoKS5zcGxpdCgiLiIpWzFdfHwiIikubGVuZ3RoLHM9cj5uP3I6bixhPXBhcnNlSW50KGUudG9GaXhlZChzKS5yZXBsYWNlKCIuIiwiIikpLG89cGFyc2VJbnQodC50b0ZpeGVkKHMpLnJlcGxhY2UoIi4iLCIiKSk7cmV0dXJuIGElby9NYXRoLnBvdygxMCxzKX1jbGFzcyBrcyBleHRlbmRzIHlle2NvbnN0cnVjdG9yKCl7c3VwZXIoLi4uYXJndW1lbnRzKSx0aGlzLm1pbj10aGlzLmd0ZSx0aGlzLm1heD10aGlzLmx0ZSx0aGlzLnN0ZXA9dGhpcy5tdWx0aXBsZU9mfV9wYXJzZSh0KXtpZih0aGlzLl9kZWYuY29lcmNlJiYodC5kYXRhPU51bWJlcih0LmRhdGEpKSx0aGlzLl9nZXRUeXBlKHQpIT09Si5udW1iZXIpe2NvbnN0IGE9dGhpcy5fZ2V0T3JSZXR1cm5DdHgodCk7cmV0dXJuIEcoYSx7Y29kZTpVLmludmFsaWRfdHlwZSxleHBlY3RlZDpKLm51bWJlcixyZWNlaXZlZDphLnBhcnNlZFR5cGV9KSxwZX1sZXQgbjtjb25zdCBzPW5ldyAkdDtmb3IoY29uc3QgYSBvZiB0aGlzLl9kZWYuY2hlY2tzKWEua2luZD09PSJpbnQiP19lLmlzSW50ZWdlcih0LmRhdGEpfHwobj10aGlzLl9nZXRPclJldHVybkN0eCh0LG4pLEcobix7Y29kZTpVLmludmFsaWRfdHlwZSxleHBlY3RlZDoiaW50ZWdlciIscmVjZWl2ZWQ6ImZsb2F0IixtZXNzYWdlOmEubWVzc2FnZX0pLHMuZGlydHkoKSk6YS5raW5kPT09Im1pbiI/KGEuaW5jbHVzaXZlP3QuZGF0YTxhLnZhbHVlOnQuZGF0YTw9YS52YWx1ZSkmJihuPXRoaXMuX2dldE9yUmV0dXJuQ3R4KHQsbiksRyhuLHtjb2RlOlUudG9vX3NtYWxsLG1pbmltdW06YS52YWx1ZSx0eXBlOiJudW1iZXIiLGluY2x1c2l2ZTphLmluY2x1c2l2ZSxleGFjdDohMSxtZXNzYWdlOmEubWVzc2FnZX0pLHMuZGlydHkoKSk6YS5raW5kPT09Im1heCI/KGEuaW5jbHVzaXZlP3QuZGF0YT5hLnZhbHVlOnQuZGF0YT49YS52YWx1ZSkmJihuPXRoaXMuX2dldE9yUmV0dXJuQ3R4KHQsbiksRyhuLHtjb2RlOlUudG9vX2JpZyxtYXhpbXVtOmEudmFsdWUsdHlwZToibnVtYmVyIixpbmNsdXNpdmU6YS5pbmNsdXNpdmUsZXhhY3Q6ITEsbWVzc2FnZTphLm1lc3NhZ2V9KSxzLmRpcnR5KCkpOmEua2luZD09PSJtdWx0aXBsZU9mIj9SVCh0LmRhdGEsYS52YWx1ZSkhPT0wJiYobj10aGlzLl9nZXRPclJldHVybkN0eCh0LG4pLEcobix7Y29kZTpVLm5vdF9tdWx0aXBsZV9vZixtdWx0aXBsZU9mOmEudmFsdWUsbWVzc2FnZTphLm1lc3NhZ2V9KSxzLmRpcnR5KCkpOmEua2luZD09PSJmaW5pdGUiP051bWJlci5pc0Zpbml0ZSh0LmRhdGEpfHwobj10aGlzLl9nZXRPclJldHVybkN0eCh0LG4pLEcobix7Y29kZTpVLm5vdF9maW5pdGUsbWVzc2FnZTphLm1lc3NhZ2V9KSxzLmRpcnR5KCkpOl9lLmFzc2VydE5ldmVyKGEpO3JldHVybntzdGF0dXM6cy52YWx1ZSx2YWx1ZTp0LmRhdGF9fWd0ZSh0LHIpe3JldHVybiB0aGlzLnNldExpbWl0KCJtaW4iLHQsITAsbmUudG9TdHJpbmcocikpfWd0KHQscil7cmV0dXJuIHRoaXMuc2V0TGltaXQoIm1pbiIsdCwhMSxuZS50b1N0cmluZyhyKSl9bHRlKHQscil7cmV0dXJuIHRoaXMuc2V0TGltaXQoIm1heCIsdCwhMCxuZS50b1N0cmluZyhyKSl9bHQodCxyKXtyZXR1cm4gdGhpcy5zZXRMaW1pdCgibWF4Iix0LCExLG5lLnRvU3RyaW5nKHIpKX1zZXRMaW1pdCh0LHIsbixzKXtyZXR1cm4gbmV3IGtzKHsuLi50aGlzLl9kZWYsY2hlY2tzOlsuLi50aGlzLl9kZWYuY2hlY2tzLHtraW5kOnQsdmFsdWU6cixpbmNsdXNpdmU6bixtZXNzYWdlOm5lLnRvU3RyaW5nKHMpfV19KX1fYWRkQ2hlY2sodCl7cmV0dXJuIG5ldyBrcyh7Li4udGhpcy5fZGVmLGNoZWNrczpbLi4udGhpcy5fZGVmLmNoZWNrcyx0XX0pfWludCh0KXtyZXR1cm4gdGhpcy5fYWRkQ2hlY2soe2tpbmQ6ImludCIsbWVzc2FnZTpuZS50b1N0cmluZyh0KX0pfXBvc2l0aXZlKHQpe3JldHVybiB0aGlzLl9hZGRDaGVjayh7a2luZDoibWluIix2YWx1ZTowLGluY2x1c2l2ZTohMSxtZXNzYWdlOm5lLnRvU3RyaW5nKHQpfSl9bmVnYXRpdmUodCl7cmV0dXJuIHRoaXMuX2FkZENoZWNrKHtraW5kOiJtYXgiLHZhbHVlOjAsaW5jbHVzaXZlOiExLG1lc3NhZ2U6bmUudG9TdHJpbmcodCl9KX1ub25wb3NpdGl2ZSh0KXtyZXR1cm4gdGhpcy5fYWRkQ2hlY2soe2tpbmQ6Im1heCIsdmFsdWU6MCxpbmNsdXNpdmU6ITAsbWVzc2FnZTpuZS50b1N0cmluZyh0KX0pfW5vbm5lZ2F0aXZlKHQpe3JldHVybiB0aGlzLl9hZGRDaGVjayh7a2luZDoibWluIix2YWx1ZTowLGluY2x1c2l2ZTohMCxtZXNzYWdlOm5lLnRvU3RyaW5nKHQpfSl9bXVsdGlwbGVPZih0LHIpe3JldHVybiB0aGlzLl9hZGRDaGVjayh7a2luZDoibXVsdGlwbGVPZiIsdmFsdWU6dCxtZXNzYWdlOm5lLnRvU3RyaW5nKHIpfSl9ZmluaXRlKHQpe3JldHVybiB0aGlzLl9hZGRDaGVjayh7a2luZDoiZmluaXRlIixtZXNzYWdlOm5lLnRvU3RyaW5nKHQpfSl9c2FmZSh0KXtyZXR1cm4gdGhpcy5fYWRkQ2hlY2soe2tpbmQ6Im1pbiIsaW5jbHVzaXZlOiEwLHZhbHVlOk51bWJlci5NSU5fU0FGRV9JTlRFR0VSLG1lc3NhZ2U6bmUudG9TdHJpbmcodCl9KS5fYWRkQ2hlY2soe2tpbmQ6Im1heCIsaW5jbHVzaXZlOiEwLHZhbHVlOk51bWJlci5NQVhfU0FGRV9JTlRFR0VSLG1lc3NhZ2U6bmUudG9TdHJpbmcodCl9KX1nZXQgbWluVmFsdWUoKXtsZXQgdD1udWxsO2Zvcihjb25zdCByIG9mIHRoaXMuX2RlZi5jaGVja3Mpci5raW5kPT09Im1pbiImJih0PT09bnVsbHx8ci52YWx1ZT50KSYmKHQ9ci52YWx1ZSk7cmV0dXJuIHR9Z2V0IG1heFZhbHVlKCl7bGV0IHQ9bnVsbDtmb3IoY29uc3QgciBvZiB0aGlzLl9kZWYuY2hlY2tzKXIua2luZD09PSJtYXgiJiYodD09PW51bGx8fHIudmFsdWU8dCkmJih0PXIudmFsdWUpO3JldHVybiB0fWdldCBpc0ludCgpe3JldHVybiEhdGhpcy5fZGVmLmNoZWNrcy5maW5kKHQ9PnQua2luZD09PSJpbnQifHx0LmtpbmQ9PT0ibXVsdGlwbGVPZiImJl9lLmlzSW50ZWdlcih0LnZhbHVlKSl9Z2V0IGlzRmluaXRlKCl7bGV0IHQ9bnVsbCxyPW51bGw7Zm9yKGNvbnN0IG4gb2YgdGhpcy5fZGVmLmNoZWNrcyl7aWYobi5raW5kPT09ImZpbml0ZSJ8fG4ua2luZD09PSJpbnQifHxuLmtpbmQ9PT0ibXVsdGlwbGVPZiIpcmV0dXJuITA7bi5raW5kPT09Im1pbiI/KHI9PT1udWxsfHxuLnZhbHVlPnIpJiYocj1uLnZhbHVlKTpuLmtpbmQ9PT0ibWF4IiYmKHQ9PT1udWxsfHxuLnZhbHVlPHQpJiYodD1uLnZhbHVlKX1yZXR1cm4gTnVtYmVyLmlzRmluaXRlKHIpJiZOdW1iZXIuaXNGaW5pdGUodCl9fWtzLmNyZWF0ZT1lPT5uZXcga3Moe2NoZWNrczpbXSx0eXBlTmFtZTptZS5ab2ROdW1iZXIsY29lcmNlOihlPT1udWxsP3ZvaWQgMDplLmNvZXJjZSl8fCExLC4uLmdlKGUpfSk7Y2xhc3MgRXMgZXh0ZW5kcyB5ZXtjb25zdHJ1Y3Rvcigpe3N1cGVyKC4uLmFyZ3VtZW50cyksdGhpcy5taW49dGhpcy5ndGUsdGhpcy5tYXg9dGhpcy5sdGV9X3BhcnNlKHQpe2lmKHRoaXMuX2RlZi5jb2VyY2UpdHJ5e3QuZGF0YT1CaWdJbnQodC5kYXRhKX1jYXRjaHtyZXR1cm4gdGhpcy5fZ2V0SW52YWxpZElucHV0KHQpfWlmKHRoaXMuX2dldFR5cGUodCkhPT1KLmJpZ2ludClyZXR1cm4gdGhpcy5fZ2V0SW52YWxpZElucHV0KHQpO2xldCBuO2NvbnN0IHM9bmV3ICR0O2Zvcihjb25zdCBhIG9mIHRoaXMuX2RlZi5jaGVja3MpYS5raW5kPT09Im1pbiI/KGEuaW5jbHVzaXZlP3QuZGF0YTxhLnZhbHVlOnQuZGF0YTw9YS52YWx1ZSkmJihuPXRoaXMuX2dldE9yUmV0dXJuQ3R4KHQsbiksRyhuLHtjb2RlOlUudG9vX3NtYWxsLHR5cGU6ImJpZ2ludCIsbWluaW11bTphLnZhbHVlLGluY2x1c2l2ZTphLmluY2x1c2l2ZSxtZXNzYWdlOmEubWVzc2FnZX0pLHMuZGlydHkoKSk6YS5raW5kPT09Im1heCI/KGEuaW5jbHVzaXZlP3QuZGF0YT5hLnZhbHVlOnQuZGF0YT49YS52YWx1ZSkmJihuPXRoaXMuX2dldE9yUmV0dXJuQ3R4KHQsbiksRyhuLHtjb2RlOlUudG9vX2JpZyx0eXBlOiJiaWdpbnQiLG1heGltdW06YS52YWx1ZSxpbmNsdXNpdmU6YS5pbmNsdXNpdmUsbWVzc2FnZTphLm1lc3NhZ2V9KSxzLmRpcnR5KCkpOmEua2luZD09PSJtdWx0aXBsZU9mIj90LmRhdGElYS52YWx1ZSE9PUJpZ0ludCgwKSYmKG49dGhpcy5fZ2V0T3JSZXR1cm5DdHgodCxuKSxHKG4se2NvZGU6VS5ub3RfbXVsdGlwbGVfb2YsbXVsdGlwbGVPZjphLnZhbHVlLG1lc3NhZ2U6YS5tZXNzYWdlfSkscy5kaXJ0eSgpKTpfZS5hc3NlcnROZXZlcihhKTtyZXR1cm57c3RhdHVzOnMudmFsdWUsdmFsdWU6dC5kYXRhfX1fZ2V0SW52YWxpZElucHV0KHQpe2NvbnN0IHI9dGhpcy5fZ2V0T3JSZXR1cm5DdHgodCk7cmV0dXJuIEcocix7Y29kZTpVLmludmFsaWRfdHlwZSxleHBlY3RlZDpKLmJpZ2ludCxyZWNlaXZlZDpyLnBhcnNlZFR5cGV9KSxwZX1ndGUodCxyKXtyZXR1cm4gdGhpcy5zZXRMaW1pdCgibWluIix0LCEwLG5lLnRvU3RyaW5nKHIpKX1ndCh0LHIpe3JldHVybiB0aGlzLnNldExpbWl0KCJtaW4iLHQsITEsbmUudG9TdHJpbmcocikpfWx0ZSh0LHIpe3JldHVybiB0aGlzLnNldExpbWl0KCJtYXgiLHQsITAsbmUudG9TdHJpbmcocikpfWx0KHQscil7cmV0dXJuIHRoaXMuc2V0TGltaXQoIm1heCIsdCwhMSxuZS50b1N0cmluZyhyKSl9c2V0TGltaXQodCxyLG4scyl7cmV0dXJuIG5ldyBFcyh7Li4udGhpcy5fZGVmLGNoZWNrczpbLi4udGhpcy5fZGVmLmNoZWNrcyx7a2luZDp0LHZhbHVlOnIsaW5jbHVzaXZlOm4sbWVzc2FnZTpuZS50b1N0cmluZyhzKX1dfSl9X2FkZENoZWNrKHQpe3JldHVybiBuZXcgRXMoey4uLnRoaXMuX2RlZixjaGVja3M6Wy4uLnRoaXMuX2RlZi5jaGVja3MsdF19KX1wb3NpdGl2ZSh0KXtyZXR1cm4gdGhpcy5fYWRkQ2hlY2soe2tpbmQ6Im1pbiIsdmFsdWU6QmlnSW50KDApLGluY2x1c2l2ZTohMSxtZXNzYWdlOm5lLnRvU3RyaW5nKHQpfSl9bmVnYXRpdmUodCl7cmV0dXJuIHRoaXMuX2FkZENoZWNrKHtraW5kOiJtYXgiLHZhbHVlOkJpZ0ludCgwKSxpbmNsdXNpdmU6ITEsbWVzc2FnZTpuZS50b1N0cmluZyh0KX0pfW5vbnBvc2l0aXZlKHQpe3JldHVybiB0aGlzLl9hZGRDaGVjayh7a2luZDoibWF4Iix2YWx1ZTpCaWdJbnQoMCksaW5jbHVzaXZlOiEwLG1lc3NhZ2U6bmUudG9TdHJpbmcodCl9KX1ub25uZWdhdGl2ZSh0KXtyZXR1cm4gdGhpcy5fYWRkQ2hlY2soe2tpbmQ6Im1pbiIsdmFsdWU6QmlnSW50KDApLGluY2x1c2l2ZTohMCxtZXNzYWdlOm5lLnRvU3RyaW5nKHQpfSl9bXVsdGlwbGVPZih0LHIpe3JldHVybiB0aGlzLl9hZGRDaGVjayh7a2luZDoibXVsdGlwbGVPZiIsdmFsdWU6dCxtZXNzYWdlOm5lLnRvU3RyaW5nKHIpfSl9Z2V0IG1pblZhbHVlKCl7bGV0IHQ9bnVsbDtmb3IoY29uc3QgciBvZiB0aGlzLl9kZWYuY2hlY2tzKXIua2luZD09PSJtaW4iJiYodD09PW51bGx8fHIudmFsdWU+dCkmJih0PXIudmFsdWUpO3JldHVybiB0fWdldCBtYXhWYWx1ZSgpe2xldCB0PW51bGw7Zm9yKGNvbnN0IHIgb2YgdGhpcy5fZGVmLmNoZWNrcylyLmtpbmQ9PT0ibWF4IiYmKHQ9PT1udWxsfHxyLnZhbHVlPHQpJiYodD1yLnZhbHVlKTtyZXR1cm4gdH19RXMuY3JlYXRlPWU9Pnt2YXIgdDtyZXR1cm4gbmV3IEVzKHtjaGVja3M6W10sdHlwZU5hbWU6bWUuWm9kQmlnSW50LGNvZXJjZToodD1lPT1udWxsP3ZvaWQgMDplLmNvZXJjZSkhPT1udWxsJiZ0IT09dm9pZCAwP3Q6ITEsLi4uZ2UoZSl9KX07Y2xhc3MgT28gZXh0ZW5kcyB5ZXtfcGFyc2UodCl7aWYodGhpcy5fZGVmLmNvZXJjZSYmKHQuZGF0YT0hIXQuZGF0YSksdGhpcy5fZ2V0VHlwZSh0KSE9PUouYm9vbGVhbil7Y29uc3Qgbj10aGlzLl9nZXRPclJldHVybkN0eCh0KTtyZXR1cm4gRyhuLHtjb2RlOlUuaW52YWxpZF90eXBlLGV4cGVjdGVkOkouYm9vbGVhbixyZWNlaXZlZDpuLnBhcnNlZFR5cGV9KSxwZX1yZXR1cm4gcXQodC5kYXRhKX19T28uY3JlYXRlPWU9Pm5ldyBPbyh7dHlwZU5hbWU6bWUuWm9kQm9vbGVhbixjb2VyY2U6KGU9PW51bGw/dm9pZCAwOmUuY29lcmNlKXx8ITEsLi4uZ2UoZSl9KTtjbGFzcyBmaSBleHRlbmRzIHlle19wYXJzZSh0KXtpZih0aGlzLl9kZWYuY29lcmNlJiYodC5kYXRhPW5ldyBEYXRlKHQuZGF0YSkpLHRoaXMuX2dldFR5cGUodCkhPT1KLmRhdGUpe2NvbnN0IGE9dGhpcy5fZ2V0T3JSZXR1cm5DdHgodCk7cmV0dXJuIEcoYSx7Y29kZTpVLmludmFsaWRfdHlwZSxleHBlY3RlZDpKLmRhdGUscmVjZWl2ZWQ6YS5wYXJzZWRUeXBlfSkscGV9aWYoaXNOYU4odC5kYXRhLmdldFRpbWUoKSkpe2NvbnN0IGE9dGhpcy5fZ2V0T3JSZXR1cm5DdHgodCk7cmV0dXJuIEcoYSx7Y29kZTpVLmludmFsaWRfZGF0ZX0pLHBlfWNvbnN0IG49bmV3ICR0O2xldCBzO2Zvcihjb25zdCBhIG9mIHRoaXMuX2RlZi5jaGVja3MpYS5raW5kPT09Im1pbiI/dC5kYXRhLmdldFRpbWUoKTxhLnZhbHVlJiYocz10aGlzLl9nZXRPclJldHVybkN0eCh0LHMpLEcocyx7Y29kZTpVLnRvb19zbWFsbCxtZXNzYWdlOmEubWVzc2FnZSxpbmNsdXNpdmU6ITAsZXhhY3Q6ITEsbWluaW11bTphLnZhbHVlLHR5cGU6ImRhdGUifSksbi5kaXJ0eSgpKTphLmtpbmQ9PT0ibWF4Ij90LmRhdGEuZ2V0VGltZSgpPmEudmFsdWUmJihzPXRoaXMuX2dldE9yUmV0dXJuQ3R4KHQscyksRyhzLHtjb2RlOlUudG9vX2JpZyxtZXNzYWdlOmEubWVzc2FnZSxpbmNsdXNpdmU6ITAsZXhhY3Q6ITEsbWF4aW11bTphLnZhbHVlLHR5cGU6ImRhdGUifSksbi5kaXJ0eSgpKTpfZS5hc3NlcnROZXZlcihhKTtyZXR1cm57c3RhdHVzOm4udmFsdWUsdmFsdWU6bmV3IERhdGUodC5kYXRhLmdldFRpbWUoKSl9fV9hZGRDaGVjayh0KXtyZXR1cm4gbmV3IGZpKHsuLi50aGlzLl9kZWYsY2hlY2tzOlsuLi50aGlzLl9kZWYuY2hlY2tzLHRdfSl9bWluKHQscil7cmV0dXJuIHRoaXMuX2FkZENoZWNrKHtraW5kOiJtaW4iLHZhbHVlOnQuZ2V0VGltZSgpLG1lc3NhZ2U6bmUudG9TdHJpbmcocil9KX1tYXgodCxyKXtyZXR1cm4gdGhpcy5fYWRkQ2hlY2soe2tpbmQ6Im1heCIsdmFsdWU6dC5nZXRUaW1lKCksbWVzc2FnZTpuZS50b1N0cmluZyhyKX0pfWdldCBtaW5EYXRlKCl7bGV0IHQ9bnVsbDtmb3IoY29uc3QgciBvZiB0aGlzLl9kZWYuY2hlY2tzKXIua2luZD09PSJtaW4iJiYodD09PW51bGx8fHIudmFsdWU+dCkmJih0PXIudmFsdWUpO3JldHVybiB0IT1udWxsP25ldyBEYXRlKHQpOm51bGx9Z2V0IG1heERhdGUoKXtsZXQgdD1udWxsO2Zvcihjb25zdCByIG9mIHRoaXMuX2RlZi5jaGVja3Mpci5raW5kPT09Im1heCImJih0PT09bnVsbHx8ci52YWx1ZTx0KSYmKHQ9ci52YWx1ZSk7cmV0dXJuIHQhPW51bGw/bmV3IERhdGUodCk6bnVsbH19ZmkuY3JlYXRlPWU9Pm5ldyBmaSh7Y2hlY2tzOltdLGNvZXJjZTooZT09bnVsbD92b2lkIDA6ZS5jb2VyY2UpfHwhMSx0eXBlTmFtZTptZS5ab2REYXRlLC4uLmdlKGUpfSk7Y2xhc3MgV2MgZXh0ZW5kcyB5ZXtfcGFyc2UodCl7aWYodGhpcy5fZ2V0VHlwZSh0KSE9PUouc3ltYm9sKXtjb25zdCBuPXRoaXMuX2dldE9yUmV0dXJuQ3R4KHQpO3JldHVybiBHKG4se2NvZGU6VS5pbnZhbGlkX3R5cGUsZXhwZWN0ZWQ6Si5zeW1ib2wscmVjZWl2ZWQ6bi5wYXJzZWRUeXBlfSkscGV9cmV0dXJuIHF0KHQuZGF0YSl9fVdjLmNyZWF0ZT1lPT5uZXcgV2Moe3R5cGVOYW1lOm1lLlpvZFN5bWJvbCwuLi5nZShlKX0pO2NsYXNzIEZvIGV4dGVuZHMgeWV7X3BhcnNlKHQpe2lmKHRoaXMuX2dldFR5cGUodCkhPT1KLnVuZGVmaW5lZCl7Y29uc3Qgbj10aGlzLl9nZXRPclJldHVybkN0eCh0KTtyZXR1cm4gRyhuLHtjb2RlOlUuaW52YWxpZF90eXBlLGV4cGVjdGVkOkoudW5kZWZpbmVkLHJlY2VpdmVkOm4ucGFyc2VkVHlwZX0pLHBlfXJldHVybiBxdCh0LmRhdGEpfX1Gby5jcmVhdGU9ZT0+bmV3IEZvKHt0eXBlTmFtZTptZS5ab2RVbmRlZmluZWQsLi4uZ2UoZSl9KTtjbGFzcyBJbyBleHRlbmRzIHlle19wYXJzZSh0KXtpZih0aGlzLl9nZXRUeXBlKHQpIT09Si5udWxsKXtjb25zdCBuPXRoaXMuX2dldE9yUmV0dXJuQ3R4KHQpO3JldHVybiBHKG4se2NvZGU6VS5pbnZhbGlkX3R5cGUsZXhwZWN0ZWQ6Si5udWxsLHJlY2VpdmVkOm4ucGFyc2VkVHlwZX0pLHBlfXJldHVybiBxdCh0LmRhdGEpfX1Jby5jcmVhdGU9ZT0+bmV3IElvKHt0eXBlTmFtZTptZS5ab2ROdWxsLC4uLmdlKGUpfSk7Y2xhc3MgYmEgZXh0ZW5kcyB5ZXtjb25zdHJ1Y3Rvcigpe3N1cGVyKC4uLmFyZ3VtZW50cyksdGhpcy5fYW55PSEwfV9wYXJzZSh0KXtyZXR1cm4gcXQodC5kYXRhKX19YmEuY3JlYXRlPWU9Pm5ldyBiYSh7dHlwZU5hbWU6bWUuWm9kQW55LC4uLmdlKGUpfSk7Y2xhc3MgSnMgZXh0ZW5kcyB5ZXtjb25zdHJ1Y3Rvcigpe3N1cGVyKC4uLmFyZ3VtZW50cyksdGhpcy5fdW5rbm93bj0hMH1fcGFyc2UodCl7cmV0dXJuIHF0KHQuZGF0YSl9fUpzLmNyZWF0ZT1lPT5uZXcgSnMoe3R5cGVOYW1lOm1lLlpvZFVua25vd24sLi4uZ2UoZSl9KTtjbGFzcyBEbiBleHRlbmRzIHlle19wYXJzZSh0KXtjb25zdCByPXRoaXMuX2dldE9yUmV0dXJuQ3R4KHQpO3JldHVybiBHKHIse2NvZGU6VS5pbnZhbGlkX3R5cGUsZXhwZWN0ZWQ6Si5uZXZlcixyZWNlaXZlZDpyLnBhcnNlZFR5cGV9KSxwZX19RG4uY3JlYXRlPWU9Pm5ldyBEbih7dHlwZU5hbWU6bWUuWm9kTmV2ZXIsLi4uZ2UoZSl9KTtjbGFzcyBxYyBleHRlbmRzIHlle19wYXJzZSh0KXtpZih0aGlzLl9nZXRUeXBlKHQpIT09Si51bmRlZmluZWQpe2NvbnN0IG49dGhpcy5fZ2V0T3JSZXR1cm5DdHgodCk7cmV0dXJuIEcobix7Y29kZTpVLmludmFsaWRfdHlwZSxleHBlY3RlZDpKLnZvaWQscmVjZWl2ZWQ6bi5wYXJzZWRUeXBlfSkscGV9cmV0dXJuIHF0KHQuZGF0YSl9fXFjLmNyZWF0ZT1lPT5uZXcgcWMoe3R5cGVOYW1lOm1lLlpvZFZvaWQsLi4uZ2UoZSl9KTtjbGFzcyB6ciBleHRlbmRzIHlle19wYXJzZSh0KXtjb25zdHtjdHg6cixzdGF0dXM6bn09dGhpcy5fcHJvY2Vzc0lucHV0UGFyYW1zKHQpLHM9dGhpcy5fZGVmO2lmKHIucGFyc2VkVHlwZSE9PUouYXJyYXkpcmV0dXJuIEcocix7Y29kZTpVLmludmFsaWRfdHlwZSxleHBlY3RlZDpKLmFycmF5LHJlY2VpdmVkOnIucGFyc2VkVHlwZX0pLHBlO2lmKHMuZXhhY3RMZW5ndGghPT1udWxsKXtjb25zdCBvPXIuZGF0YS5sZW5ndGg+cy5leGFjdExlbmd0aC52YWx1ZSxsPXIuZGF0YS5sZW5ndGg8cy5leGFjdExlbmd0aC52YWx1ZTsob3x8bCkmJihHKHIse2NvZGU6bz9VLnRvb19iaWc6VS50b29fc21hbGwsbWluaW11bTpsP3MuZXhhY3RMZW5ndGgudmFsdWU6dm9pZCAwLG1heGltdW06bz9zLmV4YWN0TGVuZ3RoLnZhbHVlOnZvaWQgMCx0eXBlOiJhcnJheSIsaW5jbHVzaXZlOiEwLGV4YWN0OiEwLG1lc3NhZ2U6cy5leGFjdExlbmd0aC5tZXNzYWdlfSksbi5kaXJ0eSgpKX1pZihzLm1pbkxlbmd0aCE9PW51bGwmJnIuZGF0YS5sZW5ndGg8cy5taW5MZW5ndGgudmFsdWUmJihHKHIse2NvZGU6VS50b29fc21hbGwsbWluaW11bTpzLm1pbkxlbmd0aC52YWx1ZSx0eXBlOiJhcnJheSIsaW5jbHVzaXZlOiEwLGV4YWN0OiExLG1lc3NhZ2U6cy5taW5MZW5ndGgubWVzc2FnZX0pLG4uZGlydHkoKSkscy5tYXhMZW5ndGghPT1udWxsJiZyLmRhdGEubGVuZ3RoPnMubWF4TGVuZ3RoLnZhbHVlJiYoRyhyLHtjb2RlOlUudG9vX2JpZyxtYXhpbXVtOnMubWF4TGVuZ3RoLnZhbHVlLHR5cGU6ImFycmF5IixpbmNsdXNpdmU6ITAsZXhhY3Q6ITEsbWVzc2FnZTpzLm1heExlbmd0aC5tZXNzYWdlfSksbi5kaXJ0eSgpKSxyLmNvbW1vbi5hc3luYylyZXR1cm4gUHJvbWlzZS5hbGwoWy4uLnIuZGF0YV0ubWFwKChvLGwpPT5zLnR5cGUuX3BhcnNlQXN5bmMobmV3IGZuKHIsbyxyLnBhdGgsbCkpKSkudGhlbihvPT4kdC5tZXJnZUFycmF5KG4sbykpO2NvbnN0IGE9Wy4uLnIuZGF0YV0ubWFwKChvLGwpPT5zLnR5cGUuX3BhcnNlU3luYyhuZXcgZm4ocixvLHIucGF0aCxsKSkpO3JldHVybiAkdC5tZXJnZUFycmF5KG4sYSl9Z2V0IGVsZW1lbnQoKXtyZXR1cm4gdGhpcy5fZGVmLnR5cGV9bWluKHQscil7cmV0dXJuIG5ldyB6cih7Li4udGhpcy5fZGVmLG1pbkxlbmd0aDp7dmFsdWU6dCxtZXNzYWdlOm5lLnRvU3RyaW5nKHIpfX0pfW1heCh0LHIpe3JldHVybiBuZXcgenIoey4uLnRoaXMuX2RlZixtYXhMZW5ndGg6e3ZhbHVlOnQsbWVzc2FnZTpuZS50b1N0cmluZyhyKX19KX1sZW5ndGgodCxyKXtyZXR1cm4gbmV3IHpyKHsuLi50aGlzLl9kZWYsZXhhY3RMZW5ndGg6e3ZhbHVlOnQsbWVzc2FnZTpuZS50b1N0cmluZyhyKX19KX1ub25lbXB0eSh0KXtyZXR1cm4gdGhpcy5taW4oMSx0KX19enIuY3JlYXRlPShlLHQpPT5uZXcgenIoe3R5cGU6ZSxtaW5MZW5ndGg6bnVsbCxtYXhMZW5ndGg6bnVsbCxleGFjdExlbmd0aDpudWxsLHR5cGVOYW1lOm1lLlpvZEFycmF5LC4uLmdlKHQpfSk7ZnVuY3Rpb24gamkoZSl7aWYoZSBpbnN0YW5jZW9mIG50KXtjb25zdCB0PXt9O2Zvcihjb25zdCByIGluIGUuc2hhcGUpe2NvbnN0IG49ZS5zaGFwZVtyXTt0W3JdPXVuLmNyZWF0ZShqaShuKSl9cmV0dXJuIG5ldyBudCh7Li4uZS5fZGVmLHNoYXBlOigpPT50fSl9ZWxzZSByZXR1cm4gZSBpbnN0YW5jZW9mIHpyP25ldyB6cih7Li4uZS5fZGVmLHR5cGU6amkoZS5lbGVtZW50KX0pOmUgaW5zdGFuY2VvZiB1bj91bi5jcmVhdGUoamkoZS51bndyYXAoKSkpOmUgaW5zdGFuY2VvZiBfcz9fcy5jcmVhdGUoamkoZS51bndyYXAoKSkpOmUgaW5zdGFuY2VvZiBtbj9tbi5jcmVhdGUoZS5pdGVtcy5tYXAodD0+amkodCkpKTplfWNsYXNzIG50IGV4dGVuZHMgeWV7Y29uc3RydWN0b3IoKXtzdXBlciguLi5hcmd1bWVudHMpLHRoaXMuX2NhY2hlZD1udWxsLHRoaXMubm9uc3RyaWN0PXRoaXMucGFzc3Rocm91Z2gsdGhpcy5hdWdtZW50PXRoaXMuZXh0ZW5kfV9nZXRDYWNoZWQoKXtpZih0aGlzLl9jYWNoZWQhPT1udWxsKXJldHVybiB0aGlzLl9jYWNoZWQ7Y29uc3QgdD10aGlzLl9kZWYuc2hhcGUoKSxyPV9lLm9iamVjdEtleXModCk7cmV0dXJuIHRoaXMuX2NhY2hlZD17c2hhcGU6dCxrZXlzOnJ9fV9wYXJzZSh0KXtpZih0aGlzLl9nZXRUeXBlKHQpIT09Si5vYmplY3Qpe2NvbnN0IHU9dGhpcy5fZ2V0T3JSZXR1cm5DdHgodCk7cmV0dXJuIEcodSx7Y29kZTpVLmludmFsaWRfdHlwZSxleHBlY3RlZDpKLm9iamVjdCxyZWNlaXZlZDp1LnBhcnNlZFR5cGV9KSxwZX1jb25zdHtzdGF0dXM6bixjdHg6c309dGhpcy5fcHJvY2Vzc0lucHV0UGFyYW1zKHQpLHtzaGFwZTphLGtleXM6b309dGhpcy5fZ2V0Q2FjaGVkKCksbD1bXTtpZighKHRoaXMuX2RlZi5jYXRjaGFsbCBpbnN0YW5jZW9mIERuJiZ0aGlzLl9kZWYudW5rbm93bktleXM9PT0ic3RyaXAiKSlmb3IoY29uc3QgdSBpbiBzLmRhdGEpby5pbmNsdWRlcyh1KXx8bC5wdXNoKHUpO2NvbnN0IGM9W107Zm9yKGNvbnN0IHUgb2Ygbyl7Y29uc3QgZD1hW3VdLGY9cy5kYXRhW3VdO2MucHVzaCh7a2V5OntzdGF0dXM6InZhbGlkIix2YWx1ZTp1fSx2YWx1ZTpkLl9wYXJzZShuZXcgZm4ocyxmLHMucGF0aCx1KSksYWx3YXlzU2V0OnUgaW4gcy5kYXRhfSl9aWYodGhpcy5fZGVmLmNhdGNoYWxsIGluc3RhbmNlb2YgRG4pe2NvbnN0IHU9dGhpcy5fZGVmLnVua25vd25LZXlzO2lmKHU9PT0icGFzc3Rocm91Z2giKWZvcihjb25zdCBkIG9mIGwpYy5wdXNoKHtrZXk6e3N0YXR1czoidmFsaWQiLHZhbHVlOmR9LHZhbHVlOntzdGF0dXM6InZhbGlkIix2YWx1ZTpzLmRhdGFbZF19fSk7ZWxzZSBpZih1PT09InN0cmljdCIpbC5sZW5ndGg+MCYmKEcocyx7Y29kZTpVLnVucmVjb2duaXplZF9rZXlzLGtleXM6bH0pLG4uZGlydHkoKSk7ZWxzZSBpZih1IT09InN0cmlwIil0aHJvdyBuZXcgRXJyb3IoIkludGVybmFsIFpvZE9iamVjdCBlcnJvcjogaW52YWxpZCB1bmtub3duS2V5cyB2YWx1ZS4iKX1lbHNle2NvbnN0IHU9dGhpcy5fZGVmLmNhdGNoYWxsO2Zvcihjb25zdCBkIG9mIGwpe2NvbnN0IGY9cy5kYXRhW2RdO2MucHVzaCh7a2V5OntzdGF0dXM6InZhbGlkIix2YWx1ZTpkfSx2YWx1ZTp1Ll9wYXJzZShuZXcgZm4ocyxmLHMucGF0aCxkKSksYWx3YXlzU2V0OmQgaW4gcy5kYXRhfSl9fXJldHVybiBzLmNvbW1vbi5hc3luYz9Qcm9taXNlLnJlc29sdmUoKS50aGVuKGFzeW5jKCk9Pntjb25zdCB1PVtdO2Zvcihjb25zdCBkIG9mIGMpe2NvbnN0IGY9YXdhaXQgZC5rZXkscD1hd2FpdCBkLnZhbHVlO3UucHVzaCh7a2V5OmYsdmFsdWU6cCxhbHdheXNTZXQ6ZC5hbHdheXNTZXR9KX1yZXR1cm4gdX0pLnRoZW4odT0+JHQubWVyZ2VPYmplY3RTeW5jKG4sdSkpOiR0Lm1lcmdlT2JqZWN0U3luYyhuLGMpfWdldCBzaGFwZSgpe3JldHVybiB0aGlzLl9kZWYuc2hhcGUoKX1zdHJpY3QodCl7cmV0dXJuIG5lLmVyclRvT2JqLG5ldyBudCh7Li4udGhpcy5fZGVmLHVua25vd25LZXlzOiJzdHJpY3QiLC4uLnQhPT12b2lkIDA/e2Vycm9yTWFwOihyLG4pPT57dmFyIHMsYSxvLGw7Y29uc3QgYz0obz0oYT0ocz10aGlzLl9kZWYpLmVycm9yTWFwKT09PW51bGx8fGE9PT12b2lkIDA/dm9pZCAwOmEuY2FsbChzLHIsbikubWVzc2FnZSkhPT1udWxsJiZvIT09dm9pZCAwP286bi5kZWZhdWx0RXJyb3I7cmV0dXJuIHIuY29kZT09PSJ1bnJlY29nbml6ZWRfa2V5cyI/e21lc3NhZ2U6KGw9bmUuZXJyVG9PYmoodCkubWVzc2FnZSkhPT1udWxsJiZsIT09dm9pZCAwP2w6Y306e21lc3NhZ2U6Y319fTp7fX0pfXN0cmlwKCl7cmV0dXJuIG5ldyBudCh7Li4udGhpcy5fZGVmLHVua25vd25LZXlzOiJzdHJpcCJ9KX1wYXNzdGhyb3VnaCgpe3JldHVybiBuZXcgbnQoey4uLnRoaXMuX2RlZix1bmtub3duS2V5czoicGFzc3Rocm91Z2gifSl9ZXh0ZW5kKHQpe3JldHVybiBuZXcgbnQoey4uLnRoaXMuX2RlZixzaGFwZTooKT0+KHsuLi50aGlzLl9kZWYuc2hhcGUoKSwuLi50fSl9KX1tZXJnZSh0KXtyZXR1cm4gbmV3IG50KHt1bmtub3duS2V5czp0Ll9kZWYudW5rbm93bktleXMsY2F0Y2hhbGw6dC5fZGVmLmNhdGNoYWxsLHNoYXBlOigpPT4oey4uLnRoaXMuX2RlZi5zaGFwZSgpLC4uLnQuX2RlZi5zaGFwZSgpfSksdHlwZU5hbWU6bWUuWm9kT2JqZWN0fSl9c2V0S2V5KHQscil7cmV0dXJuIHRoaXMuYXVnbWVudCh7W3RdOnJ9KX1jYXRjaGFsbCh0KXtyZXR1cm4gbmV3IG50KHsuLi50aGlzLl9kZWYsY2F0Y2hhbGw6dH0pfXBpY2sodCl7Y29uc3Qgcj17fTtyZXR1cm4gX2Uub2JqZWN0S2V5cyh0KS5mb3JFYWNoKG49Pnt0W25dJiZ0aGlzLnNoYXBlW25dJiYocltuXT10aGlzLnNoYXBlW25dKX0pLG5ldyBudCh7Li4udGhpcy5fZGVmLHNoYXBlOigpPT5yfSl9b21pdCh0KXtjb25zdCByPXt9O3JldHVybiBfZS5vYmplY3RLZXlzKHRoaXMuc2hhcGUpLmZvckVhY2gobj0+e3Rbbl18fChyW25dPXRoaXMuc2hhcGVbbl0pfSksbmV3IG50KHsuLi50aGlzLl9kZWYsc2hhcGU6KCk9PnJ9KX1kZWVwUGFydGlhbCgpe3JldHVybiBqaSh0aGlzKX1wYXJ0aWFsKHQpe2NvbnN0IHI9e307cmV0dXJuIF9lLm9iamVjdEtleXModGhpcy5zaGFwZSkuZm9yRWFjaChuPT57Y29uc3Qgcz10aGlzLnNoYXBlW25dO3QmJiF0W25dP3Jbbl09czpyW25dPXMub3B0aW9uYWwoKX0pLG5ldyBudCh7Li4udGhpcy5fZGVmLHNoYXBlOigpPT5yfSl9cmVxdWlyZWQodCl7Y29uc3Qgcj17fTtyZXR1cm4gX2Uub2JqZWN0S2V5cyh0aGlzLnNoYXBlKS5mb3JFYWNoKG49PntpZih0JiYhdFtuXSlyW25dPXRoaXMuc2hhcGVbbl07ZWxzZXtsZXQgYT10aGlzLnNoYXBlW25dO2Zvcig7YSBpbnN0YW5jZW9mIHVuOylhPWEuX2RlZi5pbm5lclR5cGU7cltuXT1hfX0pLG5ldyBudCh7Li4udGhpcy5fZGVmLHNoYXBlOigpPT5yfSl9a2V5b2YoKXtyZXR1cm4gb2IoX2Uub2JqZWN0S2V5cyh0aGlzLnNoYXBlKSl9fW50LmNyZWF0ZT0oZSx0KT0+bmV3IG50KHtzaGFwZTooKT0+ZSx1bmtub3duS2V5czoic3RyaXAiLGNhdGNoYWxsOkRuLmNyZWF0ZSgpLHR5cGVOYW1lOm1lLlpvZE9iamVjdCwuLi5nZSh0KX0pO250LnN0cmljdENyZWF0ZT0oZSx0KT0+bmV3IG50KHtzaGFwZTooKT0+ZSx1bmtub3duS2V5czoic3RyaWN0IixjYXRjaGFsbDpEbi5jcmVhdGUoKSx0eXBlTmFtZTptZS5ab2RPYmplY3QsLi4uZ2UodCl9KTtudC5sYXp5Y3JlYXRlPShlLHQpPT5uZXcgbnQoe3NoYXBlOmUsdW5rbm93bktleXM6InN0cmlwIixjYXRjaGFsbDpEbi5jcmVhdGUoKSx0eXBlTmFtZTptZS5ab2RPYmplY3QsLi4uZ2UodCl9KTtjbGFzcyBMbyBleHRlbmRzIHlle19wYXJzZSh0KXtjb25zdHtjdHg6cn09dGhpcy5fcHJvY2Vzc0lucHV0UGFyYW1zKHQpLG49dGhpcy5fZGVmLm9wdGlvbnM7ZnVuY3Rpb24gcyhhKXtmb3IoY29uc3QgbCBvZiBhKWlmKGwucmVzdWx0LnN0YXR1cz09PSJ2YWxpZCIpcmV0dXJuIGwucmVzdWx0O2Zvcihjb25zdCBsIG9mIGEpaWYobC5yZXN1bHQuc3RhdHVzPT09ImRpcnR5IilyZXR1cm4gci5jb21tb24uaXNzdWVzLnB1c2goLi4ubC5jdHguY29tbW9uLmlzc3VlcyksbC5yZXN1bHQ7Y29uc3Qgbz1hLm1hcChsPT5uZXcgbXIobC5jdHguY29tbW9uLmlzc3VlcykpO3JldHVybiBHKHIse2NvZGU6VS5pbnZhbGlkX3VuaW9uLHVuaW9uRXJyb3JzOm99KSxwZX1pZihyLmNvbW1vbi5hc3luYylyZXR1cm4gUHJvbWlzZS5hbGwobi5tYXAoYXN5bmMgYT0+e2NvbnN0IG89ey4uLnIsY29tbW9uOnsuLi5yLmNvbW1vbixpc3N1ZXM6W119LHBhcmVudDpudWxsfTtyZXR1cm57cmVzdWx0OmF3YWl0IGEuX3BhcnNlQXN5bmMoe2RhdGE6ci5kYXRhLHBhdGg6ci5wYXRoLHBhcmVudDpvfSksY3R4Om99fSkpLnRoZW4ocyk7e2xldCBhO2NvbnN0IG89W107Zm9yKGNvbnN0IGMgb2Ygbil7Y29uc3QgdT17Li4ucixjb21tb246ey4uLnIuY29tbW9uLGlzc3VlczpbXX0scGFyZW50Om51bGx9LGQ9Yy5fcGFyc2VTeW5jKHtkYXRhOnIuZGF0YSxwYXRoOnIucGF0aCxwYXJlbnQ6dX0pO2lmKGQuc3RhdHVzPT09InZhbGlkIilyZXR1cm4gZDtkLnN0YXR1cz09PSJkaXJ0eSImJiFhJiYoYT17cmVzdWx0OmQsY3R4OnV9KSx1LmNvbW1vbi5pc3N1ZXMubGVuZ3RoJiZvLnB1c2godS5jb21tb24uaXNzdWVzKX1pZihhKXJldHVybiByLmNvbW1vbi5pc3N1ZXMucHVzaCguLi5hLmN0eC5jb21tb24uaXNzdWVzKSxhLnJlc3VsdDtjb25zdCBsPW8ubWFwKGM9Pm5ldyBtcihjKSk7cmV0dXJuIEcocix7Y29kZTpVLmludmFsaWRfdW5pb24sdW5pb25FcnJvcnM6bH0pLHBlfX1nZXQgb3B0aW9ucygpe3JldHVybiB0aGlzLl9kZWYub3B0aW9uc319TG8uY3JlYXRlPShlLHQpPT5uZXcgTG8oe29wdGlvbnM6ZSx0eXBlTmFtZTptZS5ab2RVbmlvbiwuLi5nZSh0KX0pO2NvbnN0IHluPWU9PmUgaW5zdGFuY2VvZiB6bz95bihlLnNjaGVtYSk6ZSBpbnN0YW5jZW9mIEhyP3luKGUuaW5uZXJUeXBlKCkpOmUgaW5zdGFuY2VvZiBWbz9bZS52YWx1ZV06ZSBpbnN0YW5jZW9mIENzP2Uub3B0aW9uczplIGluc3RhbmNlb2YgVW8/X2Uub2JqZWN0VmFsdWVzKGUuZW51bSk6ZSBpbnN0YW5jZW9mIEJvP3luKGUuX2RlZi5pbm5lclR5cGUpOmUgaW5zdGFuY2VvZiBGbz9bdm9pZCAwXTplIGluc3RhbmNlb2YgSW8/W251bGxdOmUgaW5zdGFuY2VvZiB1bj9bdm9pZCAwLC4uLnluKGUudW53cmFwKCkpXTplIGluc3RhbmNlb2YgX3M/W251bGwsLi4ueW4oZS51bndyYXAoKSldOmUgaW5zdGFuY2VvZiAkaHx8ZSBpbnN0YW5jZW9mIFdvP3luKGUudW53cmFwKCkpOmUgaW5zdGFuY2VvZiBIbz95bihlLl9kZWYuaW5uZXJUeXBlKTpbXTtjbGFzcyBDdSBleHRlbmRzIHlle19wYXJzZSh0KXtjb25zdHtjdHg6cn09dGhpcy5fcHJvY2Vzc0lucHV0UGFyYW1zKHQpO2lmKHIucGFyc2VkVHlwZSE9PUoub2JqZWN0KXJldHVybiBHKHIse2NvZGU6VS5pbnZhbGlkX3R5cGUsZXhwZWN0ZWQ6Si5vYmplY3QscmVjZWl2ZWQ6ci5wYXJzZWRUeXBlfSkscGU7Y29uc3Qgbj10aGlzLmRpc2NyaW1pbmF0b3Iscz1yLmRhdGFbbl0sYT10aGlzLm9wdGlvbnNNYXAuZ2V0KHMpO3JldHVybiBhP3IuY29tbW9uLmFzeW5jP2EuX3BhcnNlQXN5bmMoe2RhdGE6ci5kYXRhLHBhdGg6ci5wYXRoLHBhcmVudDpyfSk6YS5fcGFyc2VTeW5jKHtkYXRhOnIuZGF0YSxwYXRoOnIucGF0aCxwYXJlbnQ6cn0pOihHKHIse2NvZGU6VS5pbnZhbGlkX3VuaW9uX2Rpc2NyaW1pbmF0b3Isb3B0aW9uczpBcnJheS5mcm9tKHRoaXMub3B0aW9uc01hcC5rZXlzKCkpLHBhdGg6W25dfSkscGUpfWdldCBkaXNjcmltaW5hdG9yKCl7cmV0dXJuIHRoaXMuX2RlZi5kaXNjcmltaW5hdG9yfWdldCBvcHRpb25zKCl7cmV0dXJuIHRoaXMuX2RlZi5vcHRpb25zfWdldCBvcHRpb25zTWFwKCl7cmV0dXJuIHRoaXMuX2RlZi5vcHRpb25zTWFwfXN0YXRpYyBjcmVhdGUodCxyLG4pe2NvbnN0IHM9bmV3IE1hcDtmb3IoY29uc3QgYSBvZiByKXtjb25zdCBvPXluKGEuc2hhcGVbdF0pO2lmKCFvLmxlbmd0aCl0aHJvdyBuZXcgRXJyb3IoYEEgZGlzY3JpbWluYXRvciB2YWx1ZSBmb3Iga2V5IFxgJHt0fVxgIGNvdWxkIG5vdCBiZSBleHRyYWN0ZWQgZnJvbSBhbGwgc2NoZW1hIG9wdGlvbnNgKTtmb3IoY29uc3QgbCBvZiBvKXtpZihzLmhhcyhsKSl0aHJvdyBuZXcgRXJyb3IoYERpc2NyaW1pbmF0b3IgcHJvcGVydHkgJHtTdHJpbmcodCl9IGhhcyBkdXBsaWNhdGUgdmFsdWUgJHtTdHJpbmcobCl9YCk7cy5zZXQobCxhKX19cmV0dXJuIG5ldyBDdSh7dHlwZU5hbWU6bWUuWm9kRGlzY3JpbWluYXRlZFVuaW9uLGRpc2NyaW1pbmF0b3I6dCxvcHRpb25zOnIsb3B0aW9uc01hcDpzLC4uLmdlKG4pfSl9fWZ1bmN0aW9uIGNtKGUsdCl7Y29uc3Qgcj1TbihlKSxuPVNuKHQpO2lmKGU9PT10KXJldHVybnt2YWxpZDohMCxkYXRhOmV9O2lmKHI9PT1KLm9iamVjdCYmbj09PUoub2JqZWN0KXtjb25zdCBzPV9lLm9iamVjdEtleXModCksYT1fZS5vYmplY3RLZXlzKGUpLmZpbHRlcihsPT5zLmluZGV4T2YobCkhPT0tMSksbz17Li4uZSwuLi50fTtmb3IoY29uc3QgbCBvZiBhKXtjb25zdCBjPWNtKGVbbF0sdFtsXSk7aWYoIWMudmFsaWQpcmV0dXJue3ZhbGlkOiExfTtvW2xdPWMuZGF0YX1yZXR1cm57dmFsaWQ6ITAsZGF0YTpvfX1lbHNlIGlmKHI9PT1KLmFycmF5JiZuPT09Si5hcnJheSl7aWYoZS5sZW5ndGghPT10Lmxlbmd0aClyZXR1cm57dmFsaWQ6ITF9O2NvbnN0IHM9W107Zm9yKGxldCBhPTA7YTxlLmxlbmd0aDthKyspe2NvbnN0IG89ZVthXSxsPXRbYV0sYz1jbShvLGwpO2lmKCFjLnZhbGlkKXJldHVybnt2YWxpZDohMX07cy5wdXNoKGMuZGF0YSl9cmV0dXJue3ZhbGlkOiEwLGRhdGE6c319ZWxzZSByZXR1cm4gcj09PUouZGF0ZSYmbj09PUouZGF0ZSYmK2U9PSt0P3t2YWxpZDohMCxkYXRhOmV9Ont2YWxpZDohMX19Y2xhc3MgRG8gZXh0ZW5kcyB5ZXtfcGFyc2UodCl7Y29uc3R7c3RhdHVzOnIsY3R4Om59PXRoaXMuX3Byb2Nlc3NJbnB1dFBhcmFtcyh0KSxzPShhLG8pPT57aWYob20oYSl8fG9tKG8pKXJldHVybiBwZTtjb25zdCBsPWNtKGEudmFsdWUsby52YWx1ZSk7cmV0dXJuIGwudmFsaWQ/KChsbShhKXx8bG0obykpJiZyLmRpcnR5KCkse3N0YXR1czpyLnZhbHVlLHZhbHVlOmwuZGF0YX0pOihHKG4se2NvZGU6VS5pbnZhbGlkX2ludGVyc2VjdGlvbl90eXBlc30pLHBlKX07cmV0dXJuIG4uY29tbW9uLmFzeW5jP1Byb21pc2UuYWxsKFt0aGlzLl9kZWYubGVmdC5fcGFyc2VBc3luYyh7ZGF0YTpuLmRhdGEscGF0aDpuLnBhdGgscGFyZW50Om59KSx0aGlzLl9kZWYucmlnaHQuX3BhcnNlQXN5bmMoe2RhdGE6bi5kYXRhLHBhdGg6bi5wYXRoLHBhcmVudDpufSldKS50aGVuKChbYSxvXSk9PnMoYSxvKSk6cyh0aGlzLl9kZWYubGVmdC5fcGFyc2VTeW5jKHtkYXRhOm4uZGF0YSxwYXRoOm4ucGF0aCxwYXJlbnQ6bn0pLHRoaXMuX2RlZi5yaWdodC5fcGFyc2VTeW5jKHtkYXRhOm4uZGF0YSxwYXRoOm4ucGF0aCxwYXJlbnQ6bn0pKX19RG8uY3JlYXRlPShlLHQscik9Pm5ldyBEbyh7bGVmdDplLHJpZ2h0OnQsdHlwZU5hbWU6bWUuWm9kSW50ZXJzZWN0aW9uLC4uLmdlKHIpfSk7Y2xhc3MgbW4gZXh0ZW5kcyB5ZXtfcGFyc2UodCl7Y29uc3R7c3RhdHVzOnIsY3R4Om59PXRoaXMuX3Byb2Nlc3NJbnB1dFBhcmFtcyh0KTtpZihuLnBhcnNlZFR5cGUhPT1KLmFycmF5KXJldHVybiBHKG4se2NvZGU6VS5pbnZhbGlkX3R5cGUsZXhwZWN0ZWQ6Si5hcnJheSxyZWNlaXZlZDpuLnBhcnNlZFR5cGV9KSxwZTtpZihuLmRhdGEubGVuZ3RoPHRoaXMuX2RlZi5pdGVtcy5sZW5ndGgpcmV0dXJuIEcobix7Y29kZTpVLnRvb19zbWFsbCxtaW5pbXVtOnRoaXMuX2RlZi5pdGVtcy5sZW5ndGgsaW5jbHVzaXZlOiEwLGV4YWN0OiExLHR5cGU6ImFycmF5In0pLHBlOyF0aGlzLl9kZWYucmVzdCYmbi5kYXRhLmxlbmd0aD50aGlzLl9kZWYuaXRlbXMubGVuZ3RoJiYoRyhuLHtjb2RlOlUudG9vX2JpZyxtYXhpbXVtOnRoaXMuX2RlZi5pdGVtcy5sZW5ndGgsaW5jbHVzaXZlOiEwLGV4YWN0OiExLHR5cGU6ImFycmF5In0pLHIuZGlydHkoKSk7Y29uc3QgYT1bLi4ubi5kYXRhXS5tYXAoKG8sbCk9Pntjb25zdCBjPXRoaXMuX2RlZi5pdGVtc1tsXXx8dGhpcy5fZGVmLnJlc3Q7cmV0dXJuIGM/Yy5fcGFyc2UobmV3IGZuKG4sbyxuLnBhdGgsbCkpOm51bGx9KS5maWx0ZXIobz0+ISFvKTtyZXR1cm4gbi5jb21tb24uYXN5bmM/UHJvbWlzZS5hbGwoYSkudGhlbihvPT4kdC5tZXJnZUFycmF5KHIsbykpOiR0Lm1lcmdlQXJyYXkocixhKX1nZXQgaXRlbXMoKXtyZXR1cm4gdGhpcy5fZGVmLml0ZW1zfXJlc3QodCl7cmV0dXJuIG5ldyBtbih7Li4udGhpcy5fZGVmLHJlc3Q6dH0pfX1tbi5jcmVhdGU9KGUsdCk9PntpZighQXJyYXkuaXNBcnJheShlKSl0aHJvdyBuZXcgRXJyb3IoIllvdSBtdXN0IHBhc3MgYW4gYXJyYXkgb2Ygc2NoZW1hcyB0byB6LnR1cGxlKFsgLi4uIF0pIik7cmV0dXJuIG5ldyBtbih7aXRlbXM6ZSx0eXBlTmFtZTptZS5ab2RUdXBsZSxyZXN0Om51bGwsLi4uZ2UodCl9KX07Y2xhc3MgJG8gZXh0ZW5kcyB5ZXtnZXQga2V5U2NoZW1hKCl7cmV0dXJuIHRoaXMuX2RlZi5rZXlUeXBlfWdldCB2YWx1ZVNjaGVtYSgpe3JldHVybiB0aGlzLl9kZWYudmFsdWVUeXBlfV9wYXJzZSh0KXtjb25zdHtzdGF0dXM6cixjdHg6bn09dGhpcy5fcHJvY2Vzc0lucHV0UGFyYW1zKHQpO2lmKG4ucGFyc2VkVHlwZSE9PUoub2JqZWN0KXJldHVybiBHKG4se2NvZGU6VS5pbnZhbGlkX3R5cGUsZXhwZWN0ZWQ6Si5vYmplY3QscmVjZWl2ZWQ6bi5wYXJzZWRUeXBlfSkscGU7Y29uc3Qgcz1bXSxhPXRoaXMuX2RlZi5rZXlUeXBlLG89dGhpcy5fZGVmLnZhbHVlVHlwZTtmb3IoY29uc3QgbCBpbiBuLmRhdGEpcy5wdXNoKHtrZXk6YS5fcGFyc2UobmV3IGZuKG4sbCxuLnBhdGgsbCkpLHZhbHVlOm8uX3BhcnNlKG5ldyBmbihuLG4uZGF0YVtsXSxuLnBhdGgsbCkpLGFsd2F5c1NldDpsIGluIG4uZGF0YX0pO3JldHVybiBuLmNvbW1vbi5hc3luYz8kdC5tZXJnZU9iamVjdEFzeW5jKHIscyk6JHQubWVyZ2VPYmplY3RTeW5jKHIscyl9Z2V0IGVsZW1lbnQoKXtyZXR1cm4gdGhpcy5fZGVmLnZhbHVlVHlwZX1zdGF0aWMgY3JlYXRlKHQscixuKXtyZXR1cm4gciBpbnN0YW5jZW9mIHllP25ldyAkbyh7a2V5VHlwZTp0LHZhbHVlVHlwZTpyLHR5cGVOYW1lOm1lLlpvZFJlY29yZCwuLi5nZShuKX0pOm5ldyAkbyh7a2V5VHlwZTpMci5jcmVhdGUoKSx2YWx1ZVR5cGU6dCx0eXBlTmFtZTptZS5ab2RSZWNvcmQsLi4uZ2Uocil9KX19Y2xhc3MgR2MgZXh0ZW5kcyB5ZXtnZXQga2V5U2NoZW1hKCl7cmV0dXJuIHRoaXMuX2RlZi5rZXlUeXBlfWdldCB2YWx1ZVNjaGVtYSgpe3JldHVybiB0aGlzLl9kZWYudmFsdWVUeXBlfV9wYXJzZSh0KXtjb25zdHtzdGF0dXM6cixjdHg6bn09dGhpcy5fcHJvY2Vzc0lucHV0UGFyYW1zKHQpO2lmKG4ucGFyc2VkVHlwZSE9PUoubWFwKXJldHVybiBHKG4se2NvZGU6VS5pbnZhbGlkX3R5cGUsZXhwZWN0ZWQ6Si5tYXAscmVjZWl2ZWQ6bi5wYXJzZWRUeXBlfSkscGU7Y29uc3Qgcz10aGlzLl9kZWYua2V5VHlwZSxhPXRoaXMuX2RlZi52YWx1ZVR5cGUsbz1bLi4ubi5kYXRhLmVudHJpZXMoKV0ubWFwKChbbCxjXSx1KT0+KHtrZXk6cy5fcGFyc2UobmV3IGZuKG4sbCxuLnBhdGgsW3UsImtleSJdKSksdmFsdWU6YS5fcGFyc2UobmV3IGZuKG4sYyxuLnBhdGgsW3UsInZhbHVlIl0pKX0pKTtpZihuLmNvbW1vbi5hc3luYyl7Y29uc3QgbD1uZXcgTWFwO3JldHVybiBQcm9taXNlLnJlc29sdmUoKS50aGVuKGFzeW5jKCk9Pntmb3IoY29uc3QgYyBvZiBvKXtjb25zdCB1PWF3YWl0IGMua2V5LGQ9YXdhaXQgYy52YWx1ZTtpZih1LnN0YXR1cz09PSJhYm9ydGVkInx8ZC5zdGF0dXM9PT0iYWJvcnRlZCIpcmV0dXJuIHBlOyh1LnN0YXR1cz09PSJkaXJ0eSJ8fGQuc3RhdHVzPT09ImRpcnR5IikmJnIuZGlydHkoKSxsLnNldCh1LnZhbHVlLGQudmFsdWUpfXJldHVybntzdGF0dXM6ci52YWx1ZSx2YWx1ZTpsfX0pfWVsc2V7Y29uc3QgbD1uZXcgTWFwO2Zvcihjb25zdCBjIG9mIG8pe2NvbnN0IHU9Yy5rZXksZD1jLnZhbHVlO2lmKHUuc3RhdHVzPT09ImFib3J0ZWQifHxkLnN0YXR1cz09PSJhYm9ydGVkIilyZXR1cm4gcGU7KHUuc3RhdHVzPT09ImRpcnR5Inx8ZC5zdGF0dXM9PT0iZGlydHkiKSYmci5kaXJ0eSgpLGwuc2V0KHUudmFsdWUsZC52YWx1ZSl9cmV0dXJue3N0YXR1czpyLnZhbHVlLHZhbHVlOmx9fX19R2MuY3JlYXRlPShlLHQscik9Pm5ldyBHYyh7dmFsdWVUeXBlOnQsa2V5VHlwZTplLHR5cGVOYW1lOm1lLlpvZE1hcCwuLi5nZShyKX0pO2NsYXNzIG1pIGV4dGVuZHMgeWV7X3BhcnNlKHQpe2NvbnN0e3N0YXR1czpyLGN0eDpufT10aGlzLl9wcm9jZXNzSW5wdXRQYXJhbXModCk7aWYobi5wYXJzZWRUeXBlIT09Si5zZXQpcmV0dXJuIEcobix7Y29kZTpVLmludmFsaWRfdHlwZSxleHBlY3RlZDpKLnNldCxyZWNlaXZlZDpuLnBhcnNlZFR5cGV9KSxwZTtjb25zdCBzPXRoaXMuX2RlZjtzLm1pblNpemUhPT1udWxsJiZuLmRhdGEuc2l6ZTxzLm1pblNpemUudmFsdWUmJihHKG4se2NvZGU6VS50b29fc21hbGwsbWluaW11bTpzLm1pblNpemUudmFsdWUsdHlwZToic2V0IixpbmNsdXNpdmU6ITAsZXhhY3Q6ITEsbWVzc2FnZTpzLm1pblNpemUubWVzc2FnZX0pLHIuZGlydHkoKSkscy5tYXhTaXplIT09bnVsbCYmbi5kYXRhLnNpemU+cy5tYXhTaXplLnZhbHVlJiYoRyhuLHtjb2RlOlUudG9vX2JpZyxtYXhpbXVtOnMubWF4U2l6ZS52YWx1ZSx0eXBlOiJzZXQiLGluY2x1c2l2ZTohMCxleGFjdDohMSxtZXNzYWdlOnMubWF4U2l6ZS5tZXNzYWdlfSksci5kaXJ0eSgpKTtjb25zdCBhPXRoaXMuX2RlZi52YWx1ZVR5cGU7ZnVuY3Rpb24gbyhjKXtjb25zdCB1PW5ldyBTZXQ7Zm9yKGNvbnN0IGQgb2YgYyl7aWYoZC5zdGF0dXM9PT0iYWJvcnRlZCIpcmV0dXJuIHBlO2Quc3RhdHVzPT09ImRpcnR5IiYmci5kaXJ0eSgpLHUuYWRkKGQudmFsdWUpfXJldHVybntzdGF0dXM6ci52YWx1ZSx2YWx1ZTp1fX1jb25zdCBsPVsuLi5uLmRhdGEudmFsdWVzKCldLm1hcCgoYyx1KT0+YS5fcGFyc2UobmV3IGZuKG4sYyxuLnBhdGgsdSkpKTtyZXR1cm4gbi5jb21tb24uYXN5bmM/UHJvbWlzZS5hbGwobCkudGhlbihjPT5vKGMpKTpvKGwpfW1pbih0LHIpe3JldHVybiBuZXcgbWkoey4uLnRoaXMuX2RlZixtaW5TaXplOnt2YWx1ZTp0LG1lc3NhZ2U6bmUudG9TdHJpbmcocil9fSl9bWF4KHQscil7cmV0dXJuIG5ldyBtaSh7Li4udGhpcy5fZGVmLG1heFNpemU6e3ZhbHVlOnQsbWVzc2FnZTpuZS50b1N0cmluZyhyKX19KX1zaXplKHQscil7cmV0dXJuIHRoaXMubWluKHQscikubWF4KHQscil9bm9uZW1wdHkodCl7cmV0dXJuIHRoaXMubWluKDEsdCl9fW1pLmNyZWF0ZT0oZSx0KT0+bmV3IG1pKHt2YWx1ZVR5cGU6ZSxtaW5TaXplOm51bGwsbWF4U2l6ZTpudWxsLHR5cGVOYW1lOm1lLlpvZFNldCwuLi5nZSh0KX0pO2NsYXNzIFFpIGV4dGVuZHMgeWV7Y29uc3RydWN0b3IoKXtzdXBlciguLi5hcmd1bWVudHMpLHRoaXMudmFsaWRhdGU9dGhpcy5pbXBsZW1lbnR9X3BhcnNlKHQpe2NvbnN0e2N0eDpyfT10aGlzLl9wcm9jZXNzSW5wdXRQYXJhbXModCk7aWYoci5wYXJzZWRUeXBlIT09Si5mdW5jdGlvbilyZXR1cm4gRyhyLHtjb2RlOlUuaW52YWxpZF90eXBlLGV4cGVjdGVkOkouZnVuY3Rpb24scmVjZWl2ZWQ6ci5wYXJzZWRUeXBlfSkscGU7ZnVuY3Rpb24gbihsLGMpe3JldHVybiBCYyh7ZGF0YTpsLHBhdGg6ci5wYXRoLGVycm9yTWFwczpbci5jb21tb24uY29udGV4dHVhbEVycm9yTWFwLHIuc2NoZW1hRXJyb3JNYXAsVWMoKSx3YV0uZmlsdGVyKHU9PiEhdSksaXNzdWVEYXRhOntjb2RlOlUuaW52YWxpZF9hcmd1bWVudHMsYXJndW1lbnRzRXJyb3I6Y319KX1mdW5jdGlvbiBzKGwsYyl7cmV0dXJuIEJjKHtkYXRhOmwscGF0aDpyLnBhdGgsZXJyb3JNYXBzOltyLmNvbW1vbi5jb250ZXh0dWFsRXJyb3JNYXAsci5zY2hlbWFFcnJvck1hcCxVYygpLHdhXS5maWx0ZXIodT0+ISF1KSxpc3N1ZURhdGE6e2NvZGU6VS5pbnZhbGlkX3JldHVybl90eXBlLHJldHVyblR5cGVFcnJvcjpjfX0pfWNvbnN0IGE9e2Vycm9yTWFwOnIuY29tbW9uLmNvbnRleHR1YWxFcnJvck1hcH0sbz1yLmRhdGE7aWYodGhpcy5fZGVmLnJldHVybnMgaW5zdGFuY2VvZiBqYSl7Y29uc3QgbD10aGlzO3JldHVybiBxdChhc3luYyBmdW5jdGlvbiguLi5jKXtjb25zdCB1PW5ldyBtcihbXSksZD1hd2FpdCBsLl9kZWYuYXJncy5wYXJzZUFzeW5jKGMsYSkuY2F0Y2goeD0+e3Rocm93IHUuYWRkSXNzdWUobihjLHgpKSx1fSksZj1hd2FpdCBSZWZsZWN0LmFwcGx5KG8sdGhpcyxkKTtyZXR1cm4gYXdhaXQgbC5fZGVmLnJldHVybnMuX2RlZi50eXBlLnBhcnNlQXN5bmMoZixhKS5jYXRjaCh4PT57dGhyb3cgdS5hZGRJc3N1ZShzKGYseCkpLHV9KX0pfWVsc2V7Y29uc3QgbD10aGlzO3JldHVybiBxdChmdW5jdGlvbiguLi5jKXtjb25zdCB1PWwuX2RlZi5hcmdzLnNhZmVQYXJzZShjLGEpO2lmKCF1LnN1Y2Nlc3MpdGhyb3cgbmV3IG1yKFtuKGMsdS5lcnJvcildKTtjb25zdCBkPVJlZmxlY3QuYXBwbHkobyx0aGlzLHUuZGF0YSksZj1sLl9kZWYucmV0dXJucy5zYWZlUGFyc2UoZCxhKTtpZighZi5zdWNjZXNzKXRocm93IG5ldyBtcihbcyhkLGYuZXJyb3IpXSk7cmV0dXJuIGYuZGF0YX0pfX1wYXJhbWV0ZXJzKCl7cmV0dXJuIHRoaXMuX2RlZi5hcmdzfXJldHVyblR5cGUoKXtyZXR1cm4gdGhpcy5fZGVmLnJldHVybnN9YXJncyguLi50KXtyZXR1cm4gbmV3IFFpKHsuLi50aGlzLl9kZWYsYXJnczptbi5jcmVhdGUodCkucmVzdChKcy5jcmVhdGUoKSl9KX1yZXR1cm5zKHQpe3JldHVybiBuZXcgUWkoey4uLnRoaXMuX2RlZixyZXR1cm5zOnR9KX1pbXBsZW1lbnQodCl7cmV0dXJuIHRoaXMucGFyc2UodCl9c3RyaWN0SW1wbGVtZW50KHQpe3JldHVybiB0aGlzLnBhcnNlKHQpfXN0YXRpYyBjcmVhdGUodCxyLG4pe3JldHVybiBuZXcgUWkoe2FyZ3M6dHx8bW4uY3JlYXRlKFtdKS5yZXN0KEpzLmNyZWF0ZSgpKSxyZXR1cm5zOnJ8fEpzLmNyZWF0ZSgpLHR5cGVOYW1lOm1lLlpvZEZ1bmN0aW9uLC4uLmdlKG4pfSl9fWNsYXNzIHpvIGV4dGVuZHMgeWV7Z2V0IHNjaGVtYSgpe3JldHVybiB0aGlzLl9kZWYuZ2V0dGVyKCl9X3BhcnNlKHQpe2NvbnN0e2N0eDpyfT10aGlzLl9wcm9jZXNzSW5wdXRQYXJhbXModCk7cmV0dXJuIHRoaXMuX2RlZi5nZXR0ZXIoKS5fcGFyc2Uoe2RhdGE6ci5kYXRhLHBhdGg6ci5wYXRoLHBhcmVudDpyfSl9fXpvLmNyZWF0ZT0oZSx0KT0+bmV3IHpvKHtnZXR0ZXI6ZSx0eXBlTmFtZTptZS5ab2RMYXp5LC4uLmdlKHQpfSk7Y2xhc3MgVm8gZXh0ZW5kcyB5ZXtfcGFyc2UodCl7aWYodC5kYXRhIT09dGhpcy5fZGVmLnZhbHVlKXtjb25zdCByPXRoaXMuX2dldE9yUmV0dXJuQ3R4KHQpO3JldHVybiBHKHIse3JlY2VpdmVkOnIuZGF0YSxjb2RlOlUuaW52YWxpZF9saXRlcmFsLGV4cGVjdGVkOnRoaXMuX2RlZi52YWx1ZX0pLHBlfXJldHVybntzdGF0dXM6InZhbGlkIix2YWx1ZTp0LmRhdGF9fWdldCB2YWx1ZSgpe3JldHVybiB0aGlzLl9kZWYudmFsdWV9fVZvLmNyZWF0ZT0oZSx0KT0+bmV3IFZvKHt2YWx1ZTplLHR5cGVOYW1lOm1lLlpvZExpdGVyYWwsLi4uZ2UodCl9KTtmdW5jdGlvbiBvYihlLHQpe3JldHVybiBuZXcgQ3Moe3ZhbHVlczplLHR5cGVOYW1lOm1lLlpvZEVudW0sLi4uZ2UodCl9KX1jbGFzcyBDcyBleHRlbmRzIHlle2NvbnN0cnVjdG9yKCl7c3VwZXIoLi4uYXJndW1lbnRzKSxLYS5zZXQodGhpcyx2b2lkIDApfV9wYXJzZSh0KXtpZih0eXBlb2YgdC5kYXRhIT0ic3RyaW5nIil7Y29uc3Qgcj10aGlzLl9nZXRPclJldHVybkN0eCh0KSxuPXRoaXMuX2RlZi52YWx1ZXM7cmV0dXJuIEcocix7ZXhwZWN0ZWQ6X2Uuam9pblZhbHVlcyhuKSxyZWNlaXZlZDpyLnBhcnNlZFR5cGUsY29kZTpVLmludmFsaWRfdHlwZX0pLHBlfWlmKEhjKHRoaXMsS2EpfHxuYih0aGlzLEthLG5ldyBTZXQodGhpcy5fZGVmLnZhbHVlcykpLCFIYyh0aGlzLEthKS5oYXModC5kYXRhKSl7Y29uc3Qgcj10aGlzLl9nZXRPclJldHVybkN0eCh0KSxuPXRoaXMuX2RlZi52YWx1ZXM7cmV0dXJuIEcocix7cmVjZWl2ZWQ6ci5kYXRhLGNvZGU6VS5pbnZhbGlkX2VudW1fdmFsdWUsb3B0aW9uczpufSkscGV9cmV0dXJuIHF0KHQuZGF0YSl9Z2V0IG9wdGlvbnMoKXtyZXR1cm4gdGhpcy5fZGVmLnZhbHVlc31nZXQgZW51bSgpe2NvbnN0IHQ9e307Zm9yKGNvbnN0IHIgb2YgdGhpcy5fZGVmLnZhbHVlcyl0W3JdPXI7cmV0dXJuIHR9Z2V0IFZhbHVlcygpe2NvbnN0IHQ9e307Zm9yKGNvbnN0IHIgb2YgdGhpcy5fZGVmLnZhbHVlcyl0W3JdPXI7cmV0dXJuIHR9Z2V0IEVudW0oKXtjb25zdCB0PXt9O2Zvcihjb25zdCByIG9mIHRoaXMuX2RlZi52YWx1ZXMpdFtyXT1yO3JldHVybiB0fWV4dHJhY3QodCxyPXRoaXMuX2RlZil7cmV0dXJuIENzLmNyZWF0ZSh0LHsuLi50aGlzLl9kZWYsLi4ucn0pfWV4Y2x1ZGUodCxyPXRoaXMuX2RlZil7cmV0dXJuIENzLmNyZWF0ZSh0aGlzLm9wdGlvbnMuZmlsdGVyKG49PiF0LmluY2x1ZGVzKG4pKSx7Li4udGhpcy5fZGVmLC4uLnJ9KX19S2E9bmV3IFdlYWtNYXA7Q3MuY3JlYXRlPW9iO2NsYXNzIFVvIGV4dGVuZHMgeWV7Y29uc3RydWN0b3IoKXtzdXBlciguLi5hcmd1bWVudHMpLFlhLnNldCh0aGlzLHZvaWQgMCl9X3BhcnNlKHQpe2NvbnN0IHI9X2UuZ2V0VmFsaWRFbnVtVmFsdWVzKHRoaXMuX2RlZi52YWx1ZXMpLG49dGhpcy5fZ2V0T3JSZXR1cm5DdHgodCk7aWYobi5wYXJzZWRUeXBlIT09Si5zdHJpbmcmJm4ucGFyc2VkVHlwZSE9PUoubnVtYmVyKXtjb25zdCBzPV9lLm9iamVjdFZhbHVlcyhyKTtyZXR1cm4gRyhuLHtleHBlY3RlZDpfZS5qb2luVmFsdWVzKHMpLHJlY2VpdmVkOm4ucGFyc2VkVHlwZSxjb2RlOlUuaW52YWxpZF90eXBlfSkscGV9aWYoSGModGhpcyxZYSl8fG5iKHRoaXMsWWEsbmV3IFNldChfZS5nZXRWYWxpZEVudW1WYWx1ZXModGhpcy5fZGVmLnZhbHVlcykpKSwhSGModGhpcyxZYSkuaGFzKHQuZGF0YSkpe2NvbnN0IHM9X2Uub2JqZWN0VmFsdWVzKHIpO3JldHVybiBHKG4se3JlY2VpdmVkOm4uZGF0YSxjb2RlOlUuaW52YWxpZF9lbnVtX3ZhbHVlLG9wdGlvbnM6c30pLHBlfXJldHVybiBxdCh0LmRhdGEpfWdldCBlbnVtKCl7cmV0dXJuIHRoaXMuX2RlZi52YWx1ZXN9fVlhPW5ldyBXZWFrTWFwO1VvLmNyZWF0ZT0oZSx0KT0+bmV3IFVvKHt2YWx1ZXM6ZSx0eXBlTmFtZTptZS5ab2ROYXRpdmVFbnVtLC4uLmdlKHQpfSk7Y2xhc3MgamEgZXh0ZW5kcyB5ZXt1bndyYXAoKXtyZXR1cm4gdGhpcy5fZGVmLnR5cGV9X3BhcnNlKHQpe2NvbnN0e2N0eDpyfT10aGlzLl9wcm9jZXNzSW5wdXRQYXJhbXModCk7aWYoci5wYXJzZWRUeXBlIT09Si5wcm9taXNlJiZyLmNvbW1vbi5hc3luYz09PSExKXJldHVybiBHKHIse2NvZGU6VS5pbnZhbGlkX3R5cGUsZXhwZWN0ZWQ6Si5wcm9taXNlLHJlY2VpdmVkOnIucGFyc2VkVHlwZX0pLHBlO2NvbnN0IG49ci5wYXJzZWRUeXBlPT09Si5wcm9taXNlP3IuZGF0YTpQcm9taXNlLnJlc29sdmUoci5kYXRhKTtyZXR1cm4gcXQobi50aGVuKHM9PnRoaXMuX2RlZi50eXBlLnBhcnNlQXN5bmMocyx7cGF0aDpyLnBhdGgsZXJyb3JNYXA6ci5jb21tb24uY29udGV4dHVhbEVycm9yTWFwfSkpKX19amEuY3JlYXRlPShlLHQpPT5uZXcgamEoe3R5cGU6ZSx0eXBlTmFtZTptZS5ab2RQcm9taXNlLC4uLmdlKHQpfSk7Y2xhc3MgSHIgZXh0ZW5kcyB5ZXtpbm5lclR5cGUoKXtyZXR1cm4gdGhpcy5fZGVmLnNjaGVtYX1zb3VyY2VUeXBlKCl7cmV0dXJuIHRoaXMuX2RlZi5zY2hlbWEuX2RlZi50eXBlTmFtZT09PW1lLlpvZEVmZmVjdHM/dGhpcy5fZGVmLnNjaGVtYS5zb3VyY2VUeXBlKCk6dGhpcy5fZGVmLnNjaGVtYX1fcGFyc2UodCl7Y29uc3R7c3RhdHVzOnIsY3R4Om59PXRoaXMuX3Byb2Nlc3NJbnB1dFBhcmFtcyh0KSxzPXRoaXMuX2RlZi5lZmZlY3R8fG51bGwsYT17YWRkSXNzdWU6bz0+e0cobixvKSxvLmZhdGFsP3IuYWJvcnQoKTpyLmRpcnR5KCl9LGdldCBwYXRoKCl7cmV0dXJuIG4ucGF0aH19O2lmKGEuYWRkSXNzdWU9YS5hZGRJc3N1ZS5iaW5kKGEpLHMudHlwZT09PSJwcmVwcm9jZXNzIil7Y29uc3Qgbz1zLnRyYW5zZm9ybShuLmRhdGEsYSk7aWYobi5jb21tb24uYXN5bmMpcmV0dXJuIFByb21pc2UucmVzb2x2ZShvKS50aGVuKGFzeW5jIGw9PntpZihyLnZhbHVlPT09ImFib3J0ZWQiKXJldHVybiBwZTtjb25zdCBjPWF3YWl0IHRoaXMuX2RlZi5zY2hlbWEuX3BhcnNlQXN5bmMoe2RhdGE6bCxwYXRoOm4ucGF0aCxwYXJlbnQ6bn0pO3JldHVybiBjLnN0YXR1cz09PSJhYm9ydGVkIj9wZTpjLnN0YXR1cz09PSJkaXJ0eSJ8fHIudmFsdWU9PT0iZGlydHkiP0lpKGMudmFsdWUpOmN9KTt7aWYoci52YWx1ZT09PSJhYm9ydGVkIilyZXR1cm4gcGU7Y29uc3QgbD10aGlzLl9kZWYuc2NoZW1hLl9wYXJzZVN5bmMoe2RhdGE6byxwYXRoOm4ucGF0aCxwYXJlbnQ6bn0pO3JldHVybiBsLnN0YXR1cz09PSJhYm9ydGVkIj9wZTpsLnN0YXR1cz09PSJkaXJ0eSJ8fHIudmFsdWU9PT0iZGlydHkiP0lpKGwudmFsdWUpOmx9fWlmKHMudHlwZT09PSJyZWZpbmVtZW50Iil7Y29uc3Qgbz1sPT57Y29uc3QgYz1zLnJlZmluZW1lbnQobCxhKTtpZihuLmNvbW1vbi5hc3luYylyZXR1cm4gUHJvbWlzZS5yZXNvbHZlKGMpO2lmKGMgaW5zdGFuY2VvZiBQcm9taXNlKXRocm93IG5ldyBFcnJvcigiQXN5bmMgcmVmaW5lbWVudCBlbmNvdW50ZXJlZCBkdXJpbmcgc3luY2hyb25vdXMgcGFyc2Ugb3BlcmF0aW9uLiBVc2UgLnBhcnNlQXN5bmMgaW5zdGVhZC4iKTtyZXR1cm4gbH07aWYobi5jb21tb24uYXN5bmM9PT0hMSl7Y29uc3QgbD10aGlzLl9kZWYuc2NoZW1hLl9wYXJzZVN5bmMoe2RhdGE6bi5kYXRhLHBhdGg6bi5wYXRoLHBhcmVudDpufSk7cmV0dXJuIGwuc3RhdHVzPT09ImFib3J0ZWQiP3BlOihsLnN0YXR1cz09PSJkaXJ0eSImJnIuZGlydHkoKSxvKGwudmFsdWUpLHtzdGF0dXM6ci52YWx1ZSx2YWx1ZTpsLnZhbHVlfSl9ZWxzZSByZXR1cm4gdGhpcy5fZGVmLnNjaGVtYS5fcGFyc2VBc3luYyh7ZGF0YTpuLmRhdGEscGF0aDpuLnBhdGgscGFyZW50Om59KS50aGVuKGw9Pmwuc3RhdHVzPT09ImFib3J0ZWQiP3BlOihsLnN0YXR1cz09PSJkaXJ0eSImJnIuZGlydHkoKSxvKGwudmFsdWUpLnRoZW4oKCk9Pih7c3RhdHVzOnIudmFsdWUsdmFsdWU6bC52YWx1ZX0pKSkpfWlmKHMudHlwZT09PSJ0cmFuc2Zvcm0iKWlmKG4uY29tbW9uLmFzeW5jPT09ITEpe2NvbnN0IG89dGhpcy5fZGVmLnNjaGVtYS5fcGFyc2VTeW5jKHtkYXRhOm4uZGF0YSxwYXRoOm4ucGF0aCxwYXJlbnQ6bn0pO2lmKCFkaShvKSlyZXR1cm4gbztjb25zdCBsPXMudHJhbnNmb3JtKG8udmFsdWUsYSk7aWYobCBpbnN0YW5jZW9mIFByb21pc2UpdGhyb3cgbmV3IEVycm9yKCJBc3luY2hyb25vdXMgdHJhbnNmb3JtIGVuY291bnRlcmVkIGR1cmluZyBzeW5jaHJvbm91cyBwYXJzZSBvcGVyYXRpb24uIFVzZSAucGFyc2VBc3luYyBpbnN0ZWFkLiIpO3JldHVybntzdGF0dXM6ci52YWx1ZSx2YWx1ZTpsfX1lbHNlIHJldHVybiB0aGlzLl9kZWYuc2NoZW1hLl9wYXJzZUFzeW5jKHtkYXRhOm4uZGF0YSxwYXRoOm4ucGF0aCxwYXJlbnQ6bn0pLnRoZW4obz0+ZGkobyk/UHJvbWlzZS5yZXNvbHZlKHMudHJhbnNmb3JtKG8udmFsdWUsYSkpLnRoZW4obD0+KHtzdGF0dXM6ci52YWx1ZSx2YWx1ZTpsfSkpOm8pO19lLmFzc2VydE5ldmVyKHMpfX1Ici5jcmVhdGU9KGUsdCxyKT0+bmV3IEhyKHtzY2hlbWE6ZSx0eXBlTmFtZTptZS5ab2RFZmZlY3RzLGVmZmVjdDp0LC4uLmdlKHIpfSk7SHIuY3JlYXRlV2l0aFByZXByb2Nlc3M9KGUsdCxyKT0+bmV3IEhyKHtzY2hlbWE6dCxlZmZlY3Q6e3R5cGU6InByZXByb2Nlc3MiLHRyYW5zZm9ybTplfSx0eXBlTmFtZTptZS5ab2RFZmZlY3RzLC4uLmdlKHIpfSk7Y2xhc3MgdW4gZXh0ZW5kcyB5ZXtfcGFyc2UodCl7cmV0dXJuIHRoaXMuX2dldFR5cGUodCk9PT1KLnVuZGVmaW5lZD9xdCh2b2lkIDApOnRoaXMuX2RlZi5pbm5lclR5cGUuX3BhcnNlKHQpfXVud3JhcCgpe3JldHVybiB0aGlzLl9kZWYuaW5uZXJUeXBlfX11bi5jcmVhdGU9KGUsdCk9Pm5ldyB1bih7aW5uZXJUeXBlOmUsdHlwZU5hbWU6bWUuWm9kT3B0aW9uYWwsLi4uZ2UodCl9KTtjbGFzcyBfcyBleHRlbmRzIHlle19wYXJzZSh0KXtyZXR1cm4gdGhpcy5fZ2V0VHlwZSh0KT09PUoubnVsbD9xdChudWxsKTp0aGlzLl9kZWYuaW5uZXJUeXBlLl9wYXJzZSh0KX11bndyYXAoKXtyZXR1cm4gdGhpcy5fZGVmLmlubmVyVHlwZX19X3MuY3JlYXRlPShlLHQpPT5uZXcgX3Moe2lubmVyVHlwZTplLHR5cGVOYW1lOm1lLlpvZE51bGxhYmxlLC4uLmdlKHQpfSk7Y2xhc3MgQm8gZXh0ZW5kcyB5ZXtfcGFyc2UodCl7Y29uc3R7Y3R4OnJ9PXRoaXMuX3Byb2Nlc3NJbnB1dFBhcmFtcyh0KTtsZXQgbj1yLmRhdGE7cmV0dXJuIHIucGFyc2VkVHlwZT09PUoudW5kZWZpbmVkJiYobj10aGlzLl9kZWYuZGVmYXVsdFZhbHVlKCkpLHRoaXMuX2RlZi5pbm5lclR5cGUuX3BhcnNlKHtkYXRhOm4scGF0aDpyLnBhdGgscGFyZW50OnJ9KX1yZW1vdmVEZWZhdWx0KCl7cmV0dXJuIHRoaXMuX2RlZi5pbm5lclR5cGV9fUJvLmNyZWF0ZT0oZSx0KT0+bmV3IEJvKHtpbm5lclR5cGU6ZSx0eXBlTmFtZTptZS5ab2REZWZhdWx0LGRlZmF1bHRWYWx1ZTp0eXBlb2YgdC5kZWZhdWx0PT0iZnVuY3Rpb24iP3QuZGVmYXVsdDooKT0+dC5kZWZhdWx0LC4uLmdlKHQpfSk7Y2xhc3MgSG8gZXh0ZW5kcyB5ZXtfcGFyc2UodCl7Y29uc3R7Y3R4OnJ9PXRoaXMuX3Byb2Nlc3NJbnB1dFBhcmFtcyh0KSxuPXsuLi5yLGNvbW1vbjp7Li4uci5jb21tb24saXNzdWVzOltdfX0scz10aGlzLl9kZWYuaW5uZXJUeXBlLl9wYXJzZSh7ZGF0YTpuLmRhdGEscGF0aDpuLnBhdGgscGFyZW50OnsuLi5ufX0pO3JldHVybiBNbyhzKT9zLnRoZW4oYT0+KHtzdGF0dXM6InZhbGlkIix2YWx1ZTphLnN0YXR1cz09PSJ2YWxpZCI/YS52YWx1ZTp0aGlzLl9kZWYuY2F0Y2hWYWx1ZSh7Z2V0IGVycm9yKCl7cmV0dXJuIG5ldyBtcihuLmNvbW1vbi5pc3N1ZXMpfSxpbnB1dDpuLmRhdGF9KX0pKTp7c3RhdHVzOiJ2YWxpZCIsdmFsdWU6cy5zdGF0dXM9PT0idmFsaWQiP3MudmFsdWU6dGhpcy5fZGVmLmNhdGNoVmFsdWUoe2dldCBlcnJvcigpe3JldHVybiBuZXcgbXIobi5jb21tb24uaXNzdWVzKX0saW5wdXQ6bi5kYXRhfSl9fXJlbW92ZUNhdGNoKCl7cmV0dXJuIHRoaXMuX2RlZi5pbm5lclR5cGV9fUhvLmNyZWF0ZT0oZSx0KT0+bmV3IEhvKHtpbm5lclR5cGU6ZSx0eXBlTmFtZTptZS5ab2RDYXRjaCxjYXRjaFZhbHVlOnR5cGVvZiB0LmNhdGNoPT0iZnVuY3Rpb24iP3QuY2F0Y2g6KCk9PnQuY2F0Y2gsLi4uZ2UodCl9KTtjbGFzcyBRYyBleHRlbmRzIHlle19wYXJzZSh0KXtpZih0aGlzLl9nZXRUeXBlKHQpIT09Si5uYW4pe2NvbnN0IG49dGhpcy5fZ2V0T3JSZXR1cm5DdHgodCk7cmV0dXJuIEcobix7Y29kZTpVLmludmFsaWRfdHlwZSxleHBlY3RlZDpKLm5hbixyZWNlaXZlZDpuLnBhcnNlZFR5cGV9KSxwZX1yZXR1cm57c3RhdHVzOiJ2YWxpZCIsdmFsdWU6dC5kYXRhfX19UWMuY3JlYXRlPWU9Pm5ldyBRYyh7dHlwZU5hbWU6bWUuWm9kTmFOLC4uLmdlKGUpfSk7Y29uc3QgQVQ9U3ltYm9sKCJ6b2RfYnJhbmQiKTtjbGFzcyAkaCBleHRlbmRzIHlle19wYXJzZSh0KXtjb25zdHtjdHg6cn09dGhpcy5fcHJvY2Vzc0lucHV0UGFyYW1zKHQpLG49ci5kYXRhO3JldHVybiB0aGlzLl9kZWYudHlwZS5fcGFyc2Uoe2RhdGE6bixwYXRoOnIucGF0aCxwYXJlbnQ6cn0pfXVud3JhcCgpe3JldHVybiB0aGlzLl9kZWYudHlwZX19Y2xhc3MgY2wgZXh0ZW5kcyB5ZXtfcGFyc2UodCl7Y29uc3R7c3RhdHVzOnIsY3R4Om59PXRoaXMuX3Byb2Nlc3NJbnB1dFBhcmFtcyh0KTtpZihuLmNvbW1vbi5hc3luYylyZXR1cm4oYXN5bmMoKT0+e2NvbnN0IGE9YXdhaXQgdGhpcy5fZGVmLmluLl9wYXJzZUFzeW5jKHtkYXRhOm4uZGF0YSxwYXRoOm4ucGF0aCxwYXJlbnQ6bn0pO3JldHVybiBhLnN0YXR1cz09PSJhYm9ydGVkIj9wZTphLnN0YXR1cz09PSJkaXJ0eSI/KHIuZGlydHkoKSxJaShhLnZhbHVlKSk6dGhpcy5fZGVmLm91dC5fcGFyc2VBc3luYyh7ZGF0YTphLnZhbHVlLHBhdGg6bi5wYXRoLHBhcmVudDpufSl9KSgpO3tjb25zdCBzPXRoaXMuX2RlZi5pbi5fcGFyc2VTeW5jKHtkYXRhOm4uZGF0YSxwYXRoOm4ucGF0aCxwYXJlbnQ6bn0pO3JldHVybiBzLnN0YXR1cz09PSJhYm9ydGVkIj9wZTpzLnN0YXR1cz09PSJkaXJ0eSI/KHIuZGlydHkoKSx7c3RhdHVzOiJkaXJ0eSIsdmFsdWU6cy52YWx1ZX0pOnRoaXMuX2RlZi5vdXQuX3BhcnNlU3luYyh7ZGF0YTpzLnZhbHVlLHBhdGg6bi5wYXRoLHBhcmVudDpufSl9fXN0YXRpYyBjcmVhdGUodCxyKXtyZXR1cm4gbmV3IGNsKHtpbjp0LG91dDpyLHR5cGVOYW1lOm1lLlpvZFBpcGVsaW5lfSl9fWNsYXNzIFdvIGV4dGVuZHMgeWV7X3BhcnNlKHQpe2NvbnN0IHI9dGhpcy5fZGVmLmlubmVyVHlwZS5fcGFyc2UodCksbj1zPT4oZGkocykmJihzLnZhbHVlPU9iamVjdC5mcmVlemUocy52YWx1ZSkpLHMpO3JldHVybiBNbyhyKT9yLnRoZW4ocz0+bihzKSk6bihyKX11bndyYXAoKXtyZXR1cm4gdGhpcy5fZGVmLmlubmVyVHlwZX19V28uY3JlYXRlPShlLHQpPT5uZXcgV28oe2lubmVyVHlwZTplLHR5cGVOYW1lOm1lLlpvZFJlYWRvbmx5LC4uLmdlKHQpfSk7ZnVuY3Rpb24gbHgoZSx0KXtjb25zdCByPXR5cGVvZiBlPT0iZnVuY3Rpb24iP2UodCk6dHlwZW9mIGU9PSJzdHJpbmciP3ttZXNzYWdlOmV9OmU7cmV0dXJuIHR5cGVvZiByPT0ic3RyaW5nIj97bWVzc2FnZTpyfTpyfWZ1bmN0aW9uIGxiKGUsdD17fSxyKXtyZXR1cm4gZT9iYS5jcmVhdGUoKS5zdXBlclJlZmluZSgobixzKT0+e3ZhciBhLG87Y29uc3QgbD1lKG4pO2lmKGwgaW5zdGFuY2VvZiBQcm9taXNlKXJldHVybiBsLnRoZW4oYz0+e3ZhciB1LGQ7aWYoIWMpe2NvbnN0IGY9bHgodCxuKSxwPShkPSh1PWYuZmF0YWwpIT09bnVsbCYmdSE9PXZvaWQgMD91OnIpIT09bnVsbCYmZCE9PXZvaWQgMD9kOiEwO3MuYWRkSXNzdWUoe2NvZGU6ImN1c3RvbSIsLi4uZixmYXRhbDpwfSl9fSk7aWYoIWwpe2NvbnN0IGM9bHgodCxuKSx1PShvPShhPWMuZmF0YWwpIT09bnVsbCYmYSE9PXZvaWQgMD9hOnIpIT09bnVsbCYmbyE9PXZvaWQgMD9vOiEwO3MuYWRkSXNzdWUoe2NvZGU6ImN1c3RvbSIsLi4uYyxmYXRhbDp1fSl9fSk6YmEuY3JlYXRlKCl9Y29uc3QgTVQ9e29iamVjdDpudC5sYXp5Y3JlYXRlfTt2YXIgbWU7KGZ1bmN0aW9uKGUpe2UuWm9kU3RyaW5nPSJab2RTdHJpbmciLGUuWm9kTnVtYmVyPSJab2ROdW1iZXIiLGUuWm9kTmFOPSJab2ROYU4iLGUuWm9kQmlnSW50PSJab2RCaWdJbnQiLGUuWm9kQm9vbGVhbj0iWm9kQm9vbGVhbiIsZS5ab2REYXRlPSJab2REYXRlIixlLlpvZFN5bWJvbD0iWm9kU3ltYm9sIixlLlpvZFVuZGVmaW5lZD0iWm9kVW5kZWZpbmVkIixlLlpvZE51bGw9IlpvZE51bGwiLGUuWm9kQW55PSJab2RBbnkiLGUuWm9kVW5rbm93bj0iWm9kVW5rbm93biIsZS5ab2ROZXZlcj0iWm9kTmV2ZXIiLGUuWm9kVm9pZD0iWm9kVm9pZCIsZS5ab2RBcnJheT0iWm9kQXJyYXkiLGUuWm9kT2JqZWN0PSJab2RPYmplY3QiLGUuWm9kVW5pb249IlpvZFVuaW9uIixlLlpvZERpc2NyaW1pbmF0ZWRVbmlvbj0iWm9kRGlzY3JpbWluYXRlZFVuaW9uIixlLlpvZEludGVyc2VjdGlvbj0iWm9kSW50ZXJzZWN0aW9uIixlLlpvZFR1cGxlPSJab2RUdXBsZSIsZS5ab2RSZWNvcmQ9IlpvZFJlY29yZCIsZS5ab2RNYXA9IlpvZE1hcCIsZS5ab2RTZXQ9IlpvZFNldCIsZS5ab2RGdW5jdGlvbj0iWm9kRnVuY3Rpb24iLGUuWm9kTGF6eT0iWm9kTGF6eSIsZS5ab2RMaXRlcmFsPSJab2RMaXRlcmFsIixlLlpvZEVudW09IlpvZEVudW0iLGUuWm9kRWZmZWN0cz0iWm9kRWZmZWN0cyIsZS5ab2ROYXRpdmVFbnVtPSJab2ROYXRpdmVFbnVtIixlLlpvZE9wdGlvbmFsPSJab2RPcHRpb25hbCIsZS5ab2ROdWxsYWJsZT0iWm9kTnVsbGFibGUiLGUuWm9kRGVmYXVsdD0iWm9kRGVmYXVsdCIsZS5ab2RDYXRjaD0iWm9kQ2F0Y2giLGUuWm9kUHJvbWlzZT0iWm9kUHJvbWlzZSIsZS5ab2RCcmFuZGVkPSJab2RCcmFuZGVkIixlLlpvZFBpcGVsaW5lPSJab2RQaXBlbGluZSIsZS5ab2RSZWFkb25seT0iWm9kUmVhZG9ubHkifSkobWV8fChtZT17fSkpO2NvbnN0IE9UPShlLHQ9e21lc3NhZ2U6YElucHV0IG5vdCBpbnN0YW5jZSBvZiAke2UubmFtZX1gfSk9PmxiKHI9PnIgaW5zdGFuY2VvZiBlLHQpLGNiPUxyLmNyZWF0ZSx1Yj1rcy5jcmVhdGUsRlQ9UWMuY3JlYXRlLElUPUVzLmNyZWF0ZSxkYj1Pby5jcmVhdGUsTFQ9ZmkuY3JlYXRlLERUPVdjLmNyZWF0ZSwkVD1Gby5jcmVhdGUselQ9SW8uY3JlYXRlLFZUPWJhLmNyZWF0ZSxVVD1Kcy5jcmVhdGUsQlQ9RG4uY3JlYXRlLEhUPXFjLmNyZWF0ZSxXVD16ci5jcmVhdGUscVQ9bnQuY3JlYXRlLEdUPW50LnN0cmljdENyZWF0ZSxRVD1Mby5jcmVhdGUsWlQ9Q3UuY3JlYXRlLEtUPURvLmNyZWF0ZSxZVD1tbi5jcmVhdGUsWFQ9JG8uY3JlYXRlLEpUPUdjLmNyZWF0ZSxlUj1taS5jcmVhdGUsdFI9UWkuY3JlYXRlLHJSPXpvLmNyZWF0ZSxuUj1Wby5jcmVhdGUsc1I9Q3MuY3JlYXRlLGlSPVVvLmNyZWF0ZSxhUj1qYS5jcmVhdGUsY3g9SHIuY3JlYXRlLG9SPXVuLmNyZWF0ZSxsUj1fcy5jcmVhdGUsY1I9SHIuY3JlYXRlV2l0aFByZXByb2Nlc3MsdVI9Y2wuY3JlYXRlLGRSPSgpPT5jYigpLm9wdGlvbmFsKCksZlI9KCk9PnViKCkub3B0aW9uYWwoKSxtUj0oKT0+ZGIoKS5vcHRpb25hbCgpLGhSPXtzdHJpbmc6ZT0+THIuY3JlYXRlKHsuLi5lLGNvZXJjZTohMH0pLG51bWJlcjplPT5rcy5jcmVhdGUoey4uLmUsY29lcmNlOiEwfSksYm9vbGVhbjplPT5Pby5jcmVhdGUoey4uLmUsY29lcmNlOiEwfSksYmlnaW50OmU9PkVzLmNyZWF0ZSh7Li4uZSxjb2VyY2U6ITB9KSxkYXRlOmU9PmZpLmNyZWF0ZSh7Li4uZSxjb2VyY2U6ITB9KX0scFI9cGU7dmFyIE9lPU9iamVjdC5mcmVlemUoe19fcHJvdG9fXzpudWxsLGRlZmF1bHRFcnJvck1hcDp3YSxzZXRFcnJvck1hcDpjVCxnZXRFcnJvck1hcDpVYyxtYWtlSXNzdWU6QmMsRU1QVFlfUEFUSDp1VCxhZGRJc3N1ZVRvQ29udGV4dDpHLFBhcnNlU3RhdHVzOiR0LElOVkFMSUQ6cGUsRElSVFk6SWksT0s6cXQsaXNBYm9ydGVkOm9tLGlzRGlydHk6bG0saXNWYWxpZDpkaSxpc0FzeW5jOk1vLGdldCB1dGlsKCl7cmV0dXJuIF9lfSxnZXQgb2JqZWN0VXRpbCgpe3JldHVybiBhbX0sWm9kUGFyc2VkVHlwZTpKLGdldFBhcnNlZFR5cGU6U24sWm9kVHlwZTp5ZSxkYXRldGltZVJlZ2V4OmFiLFpvZFN0cmluZzpMcixab2ROdW1iZXI6a3MsWm9kQmlnSW50OkVzLFpvZEJvb2xlYW46T28sWm9kRGF0ZTpmaSxab2RTeW1ib2w6V2MsWm9kVW5kZWZpbmVkOkZvLFpvZE51bGw6SW8sWm9kQW55OmJhLFpvZFVua25vd246SnMsWm9kTmV2ZXI6RG4sWm9kVm9pZDpxYyxab2RBcnJheTp6cixab2RPYmplY3Q6bnQsWm9kVW5pb246TG8sWm9kRGlzY3JpbWluYXRlZFVuaW9uOkN1LFpvZEludGVyc2VjdGlvbjpEbyxab2RUdXBsZTptbixab2RSZWNvcmQ6JG8sWm9kTWFwOkdjLFpvZFNldDptaSxab2RGdW5jdGlvbjpRaSxab2RMYXp5OnpvLFpvZExpdGVyYWw6Vm8sWm9kRW51bTpDcyxab2ROYXRpdmVFbnVtOlVvLFpvZFByb21pc2U6amEsWm9kRWZmZWN0czpIcixab2RUcmFuc2Zvcm1lcjpIcixab2RPcHRpb25hbDp1bixab2ROdWxsYWJsZTpfcyxab2REZWZhdWx0OkJvLFpvZENhdGNoOkhvLFpvZE5hTjpRYyxCUkFORDpBVCxab2RCcmFuZGVkOiRoLFpvZFBpcGVsaW5lOmNsLFpvZFJlYWRvbmx5OldvLGN1c3RvbTpsYixTY2hlbWE6eWUsWm9kU2NoZW1hOnllLGxhdGU6TVQsZ2V0IFpvZEZpcnN0UGFydHlUeXBlS2luZCgpe3JldHVybiBtZX0sY29lcmNlOmhSLGFueTpWVCxhcnJheTpXVCxiaWdpbnQ6SVQsYm9vbGVhbjpkYixkYXRlOkxULGRpc2NyaW1pbmF0ZWRVbmlvbjpaVCxlZmZlY3Q6Y3gsZW51bTpzUixmdW5jdGlvbjp0UixpbnN0YW5jZW9mOk9ULGludGVyc2VjdGlvbjpLVCxsYXp5OnJSLGxpdGVyYWw6blIsbWFwOkpULG5hbjpGVCxuYXRpdmVFbnVtOmlSLG5ldmVyOkJULG51bGw6elQsbnVsbGFibGU6bFIsbnVtYmVyOnViLG9iamVjdDpxVCxvYm9vbGVhbjptUixvbnVtYmVyOmZSLG9wdGlvbmFsOm9SLG9zdHJpbmc6ZFIscGlwZWxpbmU6dVIscHJlcHJvY2VzczpjUixwcm9taXNlOmFSLHJlY29yZDpYVCxzZXQ6ZVIsc3RyaWN0T2JqZWN0OkdULHN0cmluZzpjYixzeW1ib2w6RFQsdHJhbnNmb3JtZXI6Y3gsdHVwbGU6WVQsdW5kZWZpbmVkOiRULHVuaW9uOlFULHVua25vd246VVQsdm9pZDpIVCxORVZFUjpwUixab2RJc3N1ZUNvZGU6VSxxdW90ZWxlc3NKc29uOmxULFpvZEVycm9yOm1yfSk7Y29uc3QgZ1I9JFAsZmI9eS5jcmVhdGVDb250ZXh0KHt9KSxaZT0oey4uLmV9KT0+aS5qc3goZmIuUHJvdmlkZXIse3ZhbHVlOntuYW1lOmUubmFtZX0sY2hpbGRyZW46aS5qc3goQlAsey4uLmV9KX0pLF91PSgpPT57Y29uc3QgZT15LnVzZUNvbnRleHQoZmIpLHQ9eS51c2VDb250ZXh0KG1iKSx7Z2V0RmllbGRTdGF0ZTpyLGZvcm1TdGF0ZTpufT1sbCgpLHM9cihlLm5hbWUsbik7aWYoIWUpdGhyb3cgbmV3IEVycm9yKCJ1c2VGb3JtRmllbGQgc2hvdWxkIGJlIHVzZWQgd2l0aGluIDxGb3JtRmllbGQ+Iik7Y29uc3R7aWQ6YX09dDtyZXR1cm57aWQ6YSxuYW1lOmUubmFtZSxmb3JtSXRlbUlkOmAke2F9LWZvcm0taXRlbWAsZm9ybURlc2NyaXB0aW9uSWQ6YCR7YX0tZm9ybS1pdGVtLWRlc2NyaXB0aW9uYCxmb3JtTWVzc2FnZUlkOmAke2F9LWZvcm0taXRlbS1tZXNzYWdlYCwuLi5zfX0sbWI9eS5jcmVhdGVDb250ZXh0KHt9KSxXZT15LmZvcndhcmRSZWYoKHtjbGFzc05hbWU6ZSwuLi50fSxyKT0+e2NvbnN0IG49eS51c2VJZCgpO3JldHVybiBpLmpzeChtYi5Qcm92aWRlcix7dmFsdWU6e2lkOm59LGNoaWxkcmVuOmkuanN4KCJkaXYiLHtyZWY6cixjbGFzc05hbWU6TmUoInNwYWNlLXktMiIsZSksLi4udH0pfSl9KTtXZS5kaXNwbGF5TmFtZT0iRm9ybUl0ZW0iO2NvbnN0IHFlPXkuZm9yd2FyZFJlZigoe2NsYXNzTmFtZTplLC4uLnR9LHIpPT57Y29uc3R7ZXJyb3I6bixmb3JtSXRlbUlkOnN9PV91KCk7cmV0dXJuIGkuanN4KFZlLHtyZWY6cixjbGFzc05hbWU6TmUobiYmInRleHQtZGVzdHJ1Y3RpdmUiLGUpLGh0bWxGb3I6cywuLi50fSl9KTtxZS5kaXNwbGF5TmFtZT0iRm9ybUxhYmVsIjtjb25zdCBLZT15LmZvcndhcmRSZWYoKHsuLi5lfSx0KT0+e2NvbnN0e2Vycm9yOnIsZm9ybUl0ZW1JZDpuLGZvcm1EZXNjcmlwdGlvbklkOnMsZm9ybU1lc3NhZ2VJZDphfT1fdSgpO3JldHVybiBpLmpzeCh1MCx7cmVmOnQsaWQ6biwiYXJpYS1kZXNjcmliZWRieSI6cj9gJHtzfSAke2F9YDpgJHtzfWAsImFyaWEtaW52YWxpZCI6ISFyLC4uLmV9KX0pO0tlLmRpc3BsYXlOYW1lPSJGb3JtQ29udHJvbCI7Y29uc3QgaGI9eS5mb3J3YXJkUmVmKCh7Y2xhc3NOYW1lOmUsLi4udH0scik9Pntjb25zdHtmb3JtRGVzY3JpcHRpb25JZDpufT1fdSgpO3JldHVybiBpLmpzeCgicCIse3JlZjpyLGlkOm4sY2xhc3NOYW1lOk5lKCJ0ZXh0LXNtIHRleHQtbXV0ZWQtZm9yZWdyb3VuZCIsZSksLi4udH0pfSk7aGIuZGlzcGxheU5hbWU9IkZvcm1EZXNjcmlwdGlvbiI7Y29uc3QgWWU9eS5mb3J3YXJkUmVmKCh7Y2xhc3NOYW1lOmUsY2hpbGRyZW46dCwuLi5yfSxuKT0+e2NvbnN0e2Vycm9yOnMsZm9ybU1lc3NhZ2VJZDphfT1fdSgpLG89cz9TdHJpbmcoKHM9PW51bGw/dm9pZCAwOnMubWVzc2FnZSk/PyIiKTp0O3JldHVybiBvP2kuanN4KCJwIix7cmVmOm4saWQ6YSxjbGFzc05hbWU6TmUoInRleHQtc20gZm9udC1tZWRpdW0gdGV4dC1kZXN0cnVjdGl2ZSIsZSksLi4ucixjaGlsZHJlbjpvfSk6bnVsbH0pO1llLmRpc3BsYXlOYW1lPSJGb3JtTWVzc2FnZSI7dmFyIHpoPSJDaGVja2JveCIsW3hSLFZSXT1Bcyh6aCksW3ZSLHlSXT14Uih6aCkscGI9eS5mb3J3YXJkUmVmKChlLHQpPT57Y29uc3R7X19zY29wZUNoZWNrYm94OnIsbmFtZTpuLGNoZWNrZWQ6cyxkZWZhdWx0Q2hlY2tlZDphLHJlcXVpcmVkOm8sZGlzYWJsZWQ6bCx2YWx1ZTpjPSJvbiIsb25DaGVja2VkQ2hhbmdlOnUsZm9ybTpkLC4uLmZ9PWUsW3AseF09eS51c2VTdGF0ZShudWxsKSx2PWV0KHQsTj0+eChOKSksbT15LnVzZVJlZighMSksdz1wP2R8fCEhcC5jbG9zZXN0KCJmb3JtIik6ITAsW2g9ITEsZ109X28oe3Byb3A6cyxkZWZhdWx0UHJvcDphLG9uQ2hhbmdlOnV9KSxiPXkudXNlUmVmKGgpO3JldHVybiB5LnVzZUVmZmVjdCgoKT0+e2NvbnN0IE49cD09bnVsbD92b2lkIDA6cC5mb3JtO2lmKE4pe2NvbnN0IFM9KCk9PmcoYi5jdXJyZW50KTtyZXR1cm4gTi5hZGRFdmVudExpc3RlbmVyKCJyZXNldCIsUyksKCk9Pk4ucmVtb3ZlRXZlbnRMaXN0ZW5lcigicmVzZXQiLFMpfX0sW3AsZ10pLGkuanN4cyh2Uix7c2NvcGU6cixzdGF0ZTpoLGRpc2FibGVkOmwsY2hpbGRyZW46W2kuanN4KGtlLmJ1dHRvbix7dHlwZToiYnV0dG9uIixyb2xlOiJjaGVja2JveCIsImFyaWEtY2hlY2tlZCI6eXMoaCk/Im1peGVkIjpoLCJhcmlhLXJlcXVpcmVkIjpvLCJkYXRhLXN0YXRlIjp2YihoKSwiZGF0YS1kaXNhYmxlZCI6bD8iIjp2b2lkIDAsZGlzYWJsZWQ6bCx2YWx1ZTpjLC4uLmYscmVmOnYsb25LZXlEb3duOndlKGUub25LZXlEb3duLE49PntOLmtleT09PSJFbnRlciImJk4ucHJldmVudERlZmF1bHQoKX0pLG9uQ2xpY2s6d2UoZS5vbkNsaWNrLE49PntnKFM9PnlzKFMpPyEwOiFTKSx3JiYobS5jdXJyZW50PU4uaXNQcm9wYWdhdGlvblN0b3BwZWQoKSxtLmN1cnJlbnR8fE4uc3RvcFByb3BhZ2F0aW9uKCkpfSl9KSx3JiZpLmpzeCh3Uix7Y29udHJvbDpwLGJ1YmJsZXM6IW0uY3VycmVudCxuYW1lOm4sdmFsdWU6YyxjaGVja2VkOmgscmVxdWlyZWQ6byxkaXNhYmxlZDpsLGZvcm06ZCxzdHlsZTp7dHJhbnNmb3JtOiJ0cmFuc2xhdGVYKC0xMDAlKSJ9LGRlZmF1bHRDaGVja2VkOnlzKGEpPyExOmF9KV19KX0pO3BiLmRpc3BsYXlOYW1lPXpoO3ZhciBnYj0iQ2hlY2tib3hJbmRpY2F0b3IiLHhiPXkuZm9yd2FyZFJlZigoZSx0KT0+e2NvbnN0e19fc2NvcGVDaGVja2JveDpyLGZvcmNlTW91bnQ6biwuLi5zfT1lLGE9eVIoZ2Iscik7cmV0dXJuIGkuanN4KG11LHtwcmVzZW50Om58fHlzKGEuc3RhdGUpfHxhLnN0YXRlPT09ITAsY2hpbGRyZW46aS5qc3goa2Uuc3Bhbix7ImRhdGEtc3RhdGUiOnZiKGEuc3RhdGUpLCJkYXRhLWRpc2FibGVkIjphLmRpc2FibGVkPyIiOnZvaWQgMCwuLi5zLHJlZjp0LHN0eWxlOntwb2ludGVyRXZlbnRzOiJub25lIiwuLi5lLnN0eWxlfX0pfSl9KTt4Yi5kaXNwbGF5TmFtZT1nYjt2YXIgd1I9ZT0+e2NvbnN0e2NvbnRyb2w6dCxjaGVja2VkOnIsYnViYmxlczpuPSEwLGRlZmF1bHRDaGVja2VkOnMsLi4uYX09ZSxvPXkudXNlUmVmKG51bGwpLGw9TWgociksYz1FaCh0KTt5LnVzZUVmZmVjdCgoKT0+e2NvbnN0IGQ9by5jdXJyZW50LGY9d2luZG93LkhUTUxJbnB1dEVsZW1lbnQucHJvdG90eXBlLHg9T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihmLCJjaGVja2VkIikuc2V0O2lmKGwhPT1yJiZ4KXtjb25zdCB2PW5ldyBFdmVudCgiY2xpY2siLHtidWJibGVzOm59KTtkLmluZGV0ZXJtaW5hdGU9eXMocikseC5jYWxsKGQseXMocik/ITE6ciksZC5kaXNwYXRjaEV2ZW50KHYpfX0sW2wscixuXSk7Y29uc3QgdT15LnVzZVJlZih5cyhyKT8hMTpyKTtyZXR1cm4gaS5qc3goImlucHV0Iix7dHlwZToiY2hlY2tib3giLCJhcmlhLWhpZGRlbiI6ITAsZGVmYXVsdENoZWNrZWQ6cz8/dS5jdXJyZW50LC4uLmEsdGFiSW5kZXg6LTEscmVmOm8sc3R5bGU6ey4uLmUuc3R5bGUsLi4uYyxwb3NpdGlvbjoiYWJzb2x1dGUiLHBvaW50ZXJFdmVudHM6Im5vbmUiLG9wYWNpdHk6MCxtYXJnaW46MH19KX07ZnVuY3Rpb24geXMoZSl7cmV0dXJuIGU9PT0iaW5kZXRlcm1pbmF0ZSJ9ZnVuY3Rpb24gdmIoZSl7cmV0dXJuIHlzKGUpPyJpbmRldGVybWluYXRlIjplPyJjaGVja2VkIjoidW5jaGVja2VkIn12YXIgeWI9cGIsYlI9eGI7Y29uc3Qgd2I9eS5mb3J3YXJkUmVmKCh7Y2xhc3NOYW1lOmUsLi4udH0scik9PmkuanN4KHliLHtyZWY6cixjbGFzc05hbWU6TmUoInBlZXIgaC00IHctNCBzaHJpbmstMCByb3VuZGVkLXNtIGJvcmRlciBib3JkZXItcHJpbWFyeSByaW5nLW9mZnNldC1iYWNrZ3JvdW5kIGZvY3VzLXZpc2libGU6b3V0bGluZS1ub25lIGZvY3VzLXZpc2libGU6cmluZy0yIGZvY3VzLXZpc2libGU6cmluZy1yaW5nIGZvY3VzLXZpc2libGU6cmluZy1vZmZzZXQtMiBkaXNhYmxlZDpjdXJzb3Itbm90LWFsbG93ZWQgZGlzYWJsZWQ6b3BhY2l0eS01MCBkYXRhLVtzdGF0ZT1jaGVja2VkXTpiZy1wcmltYXJ5IGRhdGEtW3N0YXRlPWNoZWNrZWRdOnRleHQtcHJpbWFyeS1mb3JlZ3JvdW5kIixlKSwuLi50LGNoaWxkcmVuOmkuanN4KGJSLHtjbGFzc05hbWU6TmUoImZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktY2VudGVyIHRleHQtY3VycmVudCIpLGNoaWxkcmVuOmkuanN4KHowLHtjbGFzc05hbWU6ImgtNCB3LTQifSl9KX0pKTt3Yi5kaXNwbGF5TmFtZT15Yi5kaXNwbGF5TmFtZTtjb25zdCBqUj1PZS5vYmplY3Qoe2VsZW1lbnRJZDpPZS5zdHJpbmcoKS5taW4oMSwiUGxlYXNlIHNlbGVjdCBhbiBPRSBlbGVtZW50IikscHJvY2Vzc051bWJlcjpPZS5zdHJpbmcoKS5taW4oMSwiUHJvY2VzcyBudW1iZXIgaXMgcmVxdWlyZWQiKSxuYW1lOk9lLnN0cmluZygpLm1pbigxLCJQcm9jZXNzIG5hbWUgaXMgcmVxdWlyZWQiKSxkZXNjcmlwdGlvbjpPZS5zdHJpbmcoKS5vcHRpb25hbCgpLHByb2Nlc3NPd25lcjpPZS5zdHJpbmcoKS5vcHRpb25hbCgpLHN0YXR1czpPZS5lbnVtKFsiZHJhZnQiLCJhY3RpdmUiLCJyZXZpZXciLCJhcmNoaXZlZCJdKS5kZWZhdWx0KCJkcmFmdCIpLGlzTWFuZGF0b3J5Ok9lLmJvb2xlYW4oKS5kZWZhdWx0KCExKSxleHBlY3RhdGlvbnM6T2Uuc3RyaW5nKCkub3B0aW9uYWwoKSxpc3N1ZURhdGU6T2Uuc3RyaW5nKCkub3B0aW9uYWwoKSxyaXNrRnJlcXVlbmN5Ok9lLnN0cmluZygpLm9wdGlvbmFsKCkscmlza0ltcGFjdDpPZS5zdHJpbmcoKS5vcHRpb25hbCgpLHJpc2tEZXNjcmlwdGlvbjpPZS5zdHJpbmcoKS5vcHRpb25hbCgpLHJpc2tNaXRpZ2F0aW9uOk9lLnN0cmluZygpLm9wdGlvbmFsKCksc3RlcHM6T2UuYXJyYXkoT2Uub2JqZWN0KHtzdGVwTnVtYmVyOk9lLm51bWJlcigpLm1pbigxKSxzdGVwTmFtZTpPZS5zdHJpbmcoKS5taW4oMSwiU3RlcCBuYW1lIGlzIHJlcXVpcmVkIiksc3RlcERldGFpbHM6T2Uuc3RyaW5nKCkub3B0aW9uYWwoKSxyZXNwb25zaWJpbGl0aWVzOk9lLnN0cmluZygpLm9wdGlvbmFsKCkscmVmZXJlbmNlczpPZS5zdHJpbmcoKS5vcHRpb25hbCgpfSkpLmRlZmF1bHQoW10pLHBlcmZvcm1hbmNlTWVhc3VyZXM6T2UuYXJyYXkoT2Uub2JqZWN0KHttZWFzdXJlTmFtZTpPZS5zdHJpbmcoKS5taW4oMSwiTWVhc3VyZSBuYW1lIGlzIHJlcXVpcmVkIiksZm9ybXVsYTpPZS5zdHJpbmcoKS5vcHRpb25hbCgpLHNvdXJjZTpPZS5zdHJpbmcoKS5vcHRpb25hbCgpLGZyZXF1ZW5jeTpPZS5zdHJpbmcoKS5vcHRpb25hbCgpLHRhcmdldDpPZS5zdHJpbmcoKS5vcHRpb25hbCgpLHNjb3JlY2FyZENhdGVnb3J5Ok9lLnN0cmluZygpLm9wdGlvbmFsKCksc3RyYXRlZ2ljR29hbElkOk9lLnN0cmluZygpLm9wdGlvbmFsKCl9KSkuZGVmYXVsdChbXSl9KTtmdW5jdGlvbiBOUih7cHJvY2VzczplLGVsZW1lbnRzOnQsaXNMb2FkaW5nOnIsb25TdWJtaXQ6bixvbkNhbmNlbDpzfSl7dmFyIFQsTDtjb25zdFthLG9dPXkudXNlU3RhdGUoKGU9PW51bGw/dm9pZCAwOmUuZWxlbWVudElkKXx8IiIpLHtkYXRhOmw9W10saXNMb2FkaW5nOmMsZXJyb3I6dX09YnQoe3F1ZXJ5S2V5OlsiL2FwaS9zdHJhdGVnaWMtZ29hbHMiXX0pO3UmJmNvbnNvbGUuZXJyb3IoIlN0cmF0ZWdpYyBHb2FscyBBUEkgRXJyb3I6Iix1KTtjb25zdCBkPW5UKHtyZXNvbHZlcjpvVChqUiksZGVmYXVsdFZhbHVlczp7ZWxlbWVudElkOihlPT1udWxsP3ZvaWQgMDplLmVsZW1lbnRJZCl8fCIiLHByb2Nlc3NOdW1iZXI6KGU9PW51bGw/dm9pZCAwOmUucHJvY2Vzc051bWJlcil8fCIiLG5hbWU6KGU9PW51bGw/dm9pZCAwOmUubmFtZSl8fCIiLGRlc2NyaXB0aW9uOihlPT1udWxsP3ZvaWQgMDplLmRlc2NyaXB0aW9uKXx8IiIscHJvY2Vzc093bmVyOihlPT1udWxsP3ZvaWQgMDplLnByb2Nlc3NPd25lcil8fCIiLHN0YXR1czooZT09bnVsbD92b2lkIDA6ZS5zdGF0dXMpfHwiZHJhZnQiLGlzTWFuZGF0b3J5OihlPT1udWxsP3ZvaWQgMDplLmlzTWFuZGF0b3J5KXx8ITEsZXhwZWN0YXRpb25zOihlPT1udWxsP3ZvaWQgMDplLmV4cGVjdGF0aW9ucyl8fCIiLGlzc3VlRGF0ZTplIT1udWxsJiZlLmlzc3VlRGF0ZT9uZXcgRGF0ZShlLmlzc3VlRGF0ZSkudG9JU09TdHJpbmcoKS5zcGxpdCgiVCIpWzBdOiIiLHJpc2tGcmVxdWVuY3k6KGU9PW51bGw/dm9pZCAwOmUucmlza0ZyZXF1ZW5jeSl8fCIiLHJpc2tJbXBhY3Q6KGU9PW51bGw/dm9pZCAwOmUucmlza0ltcGFjdCl8fCIiLHJpc2tEZXNjcmlwdGlvbjooZT09bnVsbD92b2lkIDA6ZS5yaXNrRGVzY3JpcHRpb24pfHwiIixyaXNrTWl0aWdhdGlvbjooZT09bnVsbD92b2lkIDA6ZS5yaXNrTWl0aWdhdGlvbil8fCIiLHN0ZXBzOigoVD1lPT1udWxsP3ZvaWQgMDplLnN0ZXBzKT09bnVsbD92b2lkIDA6VC5tYXAoUD0+KHtzdGVwTnVtYmVyOlAuc3RlcE51bWJlcixzdGVwTmFtZTpQLnN0ZXBOYW1lLHN0ZXBEZXRhaWxzOlAuc3RlcERldGFpbHN8fCIiLHJlc3BvbnNpYmlsaXRpZXM6UC5yZXNwb25zaWJpbGl0aWVzfHwiIixyZWZlcmVuY2VzOlAucmVmZXJlbmNlc3x8IiJ9KSkpfHxbXSxwZXJmb3JtYW5jZU1lYXN1cmVzOigoTD1lPT1udWxsP3ZvaWQgMDplLnBlcmZvcm1hbmNlTWVhc3VyZXMpPT1udWxsP3ZvaWQgMDpMLm1hcChQPT4oe21lYXN1cmVOYW1lOlAubWVhc3VyZU5hbWUsZm9ybXVsYTpQLmZvcm11bGF8fCIiLHNvdXJjZTpQLnNvdXJjZXx8IiIsZnJlcXVlbmN5OlAuZnJlcXVlbmN5fHwiIix0YXJnZXQ6UC50YXJnZXR8fCIiLHNjb3JlY2FyZENhdGVnb3J5OlAuc2NvcmVjYXJkQ2F0ZWdvcnl8fCIiLHN0cmF0ZWdpY0dvYWxJZDpQLnN0cmF0ZWdpY0dvYWxJZHx8Im5vbmUifSkpKXx8W119fSkse2ZpZWxkczpmLGFwcGVuZDpwLHJlbW92ZTp4LG1vdmU6dn09aXgoe2NvbnRyb2w6ZC5jb250cm9sLG5hbWU6InN0ZXBzIn0pLHtmaWVsZHM6bSxhcHBlbmQ6dyxyZW1vdmU6aH09aXgoe2NvbnRyb2w6ZC5jb250cm9sLG5hbWU6InBlcmZvcm1hbmNlTWVhc3VyZXMifSksZz1QPT57c3dpdGNoKFApe2Nhc2UgMTpyZXR1cm4gVjA7Y2FzZSAyOnJldHVybiBKZTtjYXNlIDM6cmV0dXJuIFRjO2Nhc2UgNDpyZXR1cm4gUG87Y2FzZSA1OnJldHVybiBKZTtjYXNlIDY6cmV0dXJuIFUwO2Nhc2UgNzpyZXR1cm4gdnM7Y2FzZSA4OnJldHVybiBUYztkZWZhdWx0OnJldHVybiBKZX19LGI9UD0+e3N3aXRjaChQKXtjYXNlIDE6cmV0dXJuInRleHQtYmx1ZS02MDAgYmctYmx1ZS0xMDAiO2Nhc2UgMjpyZXR1cm4idGV4dC1pbmRpZ28tNjAwIGJnLWluZGlnby0xMDAiO2Nhc2UgMzpyZXR1cm4idGV4dC1vcmFuZ2UtNjAwIGJnLW9yYW5nZS0xMDAiO2Nhc2UgNDpyZXR1cm4idGV4dC1wdXJwbGUtNjAwIGJnLXB1cnBsZS0xMDAiO2Nhc2UgNTpyZXR1cm4idGV4dC1pbmRpZ28tNjAwIGJnLWluZGlnby0xMDAiO2Nhc2UgNjpyZXR1cm4idGV4dC1ncmVlbi02MDAgYmctZ3JlZW4tMTAwIjtjYXNlIDc6cmV0dXJuInRleHQtcmVkLTYwMCBiZy1yZWQtMTAwIjtjYXNlIDg6cmV0dXJuInRleHQtb3JhbmdlLTYwMCBiZy1vcmFuZ2UtMTAwIjtkZWZhdWx0OnJldHVybiJ0ZXh0LWJsdWUtNjAwIGJnLWJsdWUtMTAwIn19LE49KCk9Pntjb25zdCBQPWYubGVuZ3RoKzE7cCh7c3RlcE51bWJlcjpQLHN0ZXBOYW1lOiIiLHN0ZXBEZXRhaWxzOiIiLHJlc3BvbnNpYmlsaXRpZXM6IiIscmVmZXJlbmNlczoiIn0pfSxTPSgpPT57dyh7bWVhc3VyZU5hbWU6IiIsZm9ybXVsYToiIixzb3VyY2U6IiIsZnJlcXVlbmN5OiIiLHRhcmdldDoiIixzY29yZWNhcmRDYXRlZ29yeToiIn0pfSxfPVA9PntpZihQPjApe3YoUCxQLTEpO2NvbnN0IGo9ZC5nZXRWYWx1ZXMoInN0ZXBzIik7altQLTFdLnN0ZXBOdW1iZXI9UCxqW1BdLnN0ZXBOdW1iZXI9UCsxLGQuc2V0VmFsdWUoInN0ZXBzIixqKX19LGs9UD0+e2lmKFA8Zi5sZW5ndGgtMSl7dihQLFArMSk7Y29uc3Qgaj1kLmdldFZhbHVlcygic3RlcHMiKTtqW1BdLnN0ZXBOdW1iZXI9UCsyLGpbUCsxXS5zdGVwTnVtYmVyPVArMSxkLnNldFZhbHVlKCJzdGVwcyIsail9fTtyZXR1cm4gdC5maW5kKFA9PlAuaWQ9PT1hKSxpLmpzeChnUix7Li4uZCxjaGlsZHJlbjppLmpzeHMoImZvcm0iLHtvblN1Ym1pdDpkLmhhbmRsZVN1Ym1pdChuKSxjbGFzc05hbWU6InNwYWNlLXktOCIsY2hpbGRyZW46W2kuanN4cyhpZSx7Y2hpbGRyZW46W2kuanN4KEVlLHtjaGlsZHJlbjppLmpzeChDZSx7Y2hpbGRyZW46IlNlbGVjdCBPRSBFbGVtZW50In0pfSksaS5qc3gobGUse2NoaWxkcmVuOmkuanN4KFplLHtjb250cm9sOmQuY29udHJvbCxuYW1lOiJlbGVtZW50SWQiLHJlbmRlcjooe2ZpZWxkOlB9KT0+aS5qc3hzKFdlLHtjaGlsZHJlbjpbaS5qc3gocWUse2NoaWxkcmVuOiJPRSBFbGVtZW50In0pLGkuanN4KCJkaXYiLHtjbGFzc05hbWU6ImdyaWQgZ3JpZC1jb2xzLTEgbWQ6Z3JpZC1jb2xzLTIgbGc6Z3JpZC1jb2xzLTMgZ2FwLTQiLGNoaWxkcmVuOnQubWFwKGo9Pntjb25zdCBJPWcoai5lbGVtZW50TnVtYmVyKSxWPWIoai5lbGVtZW50TnVtYmVyKSxPPVAudmFsdWU9PT1qLmlkO3JldHVybiBpLmpzeCgiZGl2Iix7Y2xhc3NOYW1lOmBib3JkZXIgcm91bmRlZC1sZyBwLTQgY3Vyc29yLXBvaW50ZXIgdHJhbnNpdGlvbi1hbGwgJHtPPyJib3JkZXItcHJpbWFyeSBiZy1wcmltYXJ5LzUgcmluZy0yIHJpbmctcHJpbWFyeSByaW5nLW9wYWNpdHktMjAiOiJib3JkZXItYm9yZGVyIGhvdmVyOmJvcmRlci1wcmltYXJ5LzUwIn1gLG9uQ2xpY2s6KCk9PntQLm9uQ2hhbmdlKGouaWQpLG8oai5pZCl9LCJkYXRhLXRlc3RpZCI6YGVsZW1lbnQtb3B0aW9uLSR7ai5lbGVtZW50TnVtYmVyfWAsY2hpbGRyZW46aS5qc3hzKCJkaXYiLHtjbGFzc05hbWU6ImZsZXggaXRlbXMtY2VudGVyIHNwYWNlLXgtMyIsY2hpbGRyZW46W2kuanN4KCJkaXYiLHtjbGFzc05hbWU6YHctMTAgaC0xMCByb3VuZGVkLWxnIGZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktY2VudGVyICR7Vn1gLGNoaWxkcmVuOmkuanN4KEkse2NsYXNzTmFtZToidy01IGgtNSJ9KX0pLGkuanN4cygiZGl2Iix7Y2xhc3NOYW1lOiJmbGV4LTEiLGNoaWxkcmVuOltpLmpzeHMoImg0Iix7Y2xhc3NOYW1lOiJmb250LW1lZGl1bSIsY2hpbGRyZW46WyJPRSBFbGVtZW50IE5vLiAiLGouZWxlbWVudE51bWJlcl19KSxpLmpzeCgicCIse2NsYXNzTmFtZToidGV4dC1zbSB0ZXh0LW11dGVkLWZvcmVncm91bmQiLGNoaWxkcmVuOmoudGl0bGV9KV19KV19KX0sai5pZCl9KX0pLGkuanN4KFllLHt9KV19KX0pfSldfSksaS5qc3hzKGllLHtjaGlsZHJlbjpbaS5qc3goRWUse2NoaWxkcmVuOmkuanN4KENlLHtjaGlsZHJlbjoiUHJvY2VzcyBJbmZvcm1hdGlvbiJ9KX0pLGkuanN4cyhsZSx7Y2xhc3NOYW1lOiJzcGFjZS15LTYiLGNoaWxkcmVuOltpLmpzeHMoImRpdiIse2NsYXNzTmFtZToiZ3JpZCBncmlkLWNvbHMtMSBtZDpncmlkLWNvbHMtMiBnYXAtNiIsY2hpbGRyZW46W2kuanN4KFplLHtjb250cm9sOmQuY29udHJvbCxuYW1lOiJwcm9jZXNzTnVtYmVyIixyZW5kZXI6KHtmaWVsZDpQfSk9PmkuanN4cyhXZSx7Y2hpbGRyZW46W2kuanN4KHFlLHtjaGlsZHJlbjoiUHJvY2VzcyBOdW1iZXIifSksaS5qc3goS2Use2NoaWxkcmVuOmkuanN4KHplLHtwbGFjZWhvbGRlcjoiZS5nLiwgT0UtNC4xIiwuLi5QLCJkYXRhLXRlc3RpZCI6ImlucHV0LXByb2Nlc3MtbnVtYmVyIn0pfSksaS5qc3goWWUse30pXX0pfSksaS5qc3goWmUse2NvbnRyb2w6ZC5jb250cm9sLG5hbWU6Im5hbWUiLHJlbmRlcjooe2ZpZWxkOlB9KT0+aS5qc3hzKFdlLHtjaGlsZHJlbjpbaS5qc3gocWUse2NoaWxkcmVuOiJQcm9jZXNzIE5hbWUifSksaS5qc3goS2Use2NoaWxkcmVuOmkuanN4KHplLHtwbGFjZWhvbGRlcjoiZS5nLiwgQXNzZXQgTGlmZWN5Y2xlIE1hbmFnZW1lbnQiLC4uLlAsImRhdGEtdGVzdGlkIjoiaW5wdXQtcHJvY2Vzcy1uYW1lIn0pfSksaS5qc3goWWUse30pXX0pfSldfSksaS5qc3hzKCJkaXYiLHtjbGFzc05hbWU6ImdyaWQgZ3JpZC1jb2xzLTEgbWQ6Z3JpZC1jb2xzLTIgZ2FwLTYiLGNoaWxkcmVuOltpLmpzeChaZSx7Y29udHJvbDpkLmNvbnRyb2wsbmFtZToicHJvY2Vzc093bmVyIixyZW5kZXI6KHtmaWVsZDpQfSk9PmkuanN4cyhXZSx7Y2hpbGRyZW46W2kuanN4KHFlLHtjaGlsZHJlbjoiUHJvY2VzcyBPd25lciJ9KSxpLmpzeHMoam4se29uVmFsdWVDaGFuZ2U6UC5vbkNoYW5nZSxkZWZhdWx0VmFsdWU6UC52YWx1ZSxjaGlsZHJlbjpbaS5qc3goS2Use2NoaWxkcmVuOmkuanN4KEpyLHsiZGF0YS10ZXN0aWQiOiJzZWxlY3QtcHJvY2Vzcy1vd25lciIsY2hpbGRyZW46aS5qc3goTm4se3BsYWNlaG9sZGVyOiJTZWxlY3QgUHJvY2VzcyBPd25lciJ9KX0pfSksaS5qc3hzKGVuLHtjaGlsZHJlbjpbaS5qc3goUGUse3ZhbHVlOiJEZXBhcnRtZW50IEhlYWQiLGNoaWxkcmVuOiJEZXBhcnRtZW50IEhlYWQifSksaS5qc3goUGUse3ZhbHVlOiJEaXZpc2lvbiBIZWFkIixjaGlsZHJlbjoiRGl2aXNpb24gSGVhZCJ9KSxpLmpzeChQZSx7dmFsdWU6IlVuaXQgSGVhZCIsY2hpbGRyZW46IlVuaXQgSGVhZCJ9KSxpLmpzeChQZSx7dmFsdWU6IlByb2Nlc3MgTWFuYWdlciIsY2hpbGRyZW46IlByb2Nlc3MgTWFuYWdlciJ9KV19KV19KSxpLmpzeChZZSx7fSldfSl9KSxpLmpzeChaZSx7Y29udHJvbDpkLmNvbnRyb2wsbmFtZToic3RhdHVzIixyZW5kZXI6KHtmaWVsZDpQfSk9PmkuanN4cyhXZSx7Y2hpbGRyZW46W2kuanN4KHFlLHtjaGlsZHJlbjoiU3RhdHVzIn0pLGkuanN4cyhqbix7b25WYWx1ZUNoYW5nZTpQLm9uQ2hhbmdlLGRlZmF1bHRWYWx1ZTpQLnZhbHVlLGNoaWxkcmVuOltpLmpzeChLZSx7Y2hpbGRyZW46aS5qc3goSnIseyJkYXRhLXRlc3RpZCI6InNlbGVjdC1zdGF0dXMiLGNoaWxkcmVuOmkuanN4KE5uLHtwbGFjZWhvbGRlcjoiU2VsZWN0IFN0YXR1cyJ9KX0pfSksaS5qc3hzKGVuLHtjaGlsZHJlbjpbaS5qc3goUGUse3ZhbHVlOiJkcmFmdCIsY2hpbGRyZW46IkRyYWZ0In0pLGkuanN4KFBlLHt2YWx1ZToicmV2aWV3IixjaGlsZHJlbjoiVW5kZXIgUmV2aWV3In0pLGkuanN4KFBlLHt2YWx1ZToiYWN0aXZlIixjaGlsZHJlbjoiQWN0aXZlIn0pLGkuanN4KFBlLHt2YWx1ZToiYXJjaGl2ZWQiLGNoaWxkcmVuOiJBcmNoaXZlZCJ9KV19KV19KSxpLmpzeChZZSx7fSldfSl9KV19KSxpLmpzeHMoImRpdiIse2NsYXNzTmFtZToiZ3JpZCBncmlkLWNvbHMtMSBtZDpncmlkLWNvbHMtMiBnYXAtNiIsY2hpbGRyZW46W2kuanN4KFplLHtjb250cm9sOmQuY29udHJvbCxuYW1lOiJpc3N1ZURhdGUiLHJlbmRlcjooe2ZpZWxkOlB9KT0+aS5qc3hzKFdlLHtjaGlsZHJlbjpbaS5qc3gocWUse2NoaWxkcmVuOiJJc3N1ZSBEYXRlIn0pLGkuanN4KEtlLHtjaGlsZHJlbjppLmpzeCh6ZSx7dHlwZToiZGF0ZSIsLi4uUCwiZGF0YS10ZXN0aWQiOiJpbnB1dC1pc3N1ZS1kYXRlIn0pfSksaS5qc3goWWUse30pXX0pfSksaS5qc3goWmUse2NvbnRyb2w6ZC5jb250cm9sLG5hbWU6ImlzTWFuZGF0b3J5IixyZW5kZXI6KHtmaWVsZDpQfSk9PmkuanN4cyhXZSx7Y2xhc3NOYW1lOiJmbGV4IGZsZXgtcm93IGl0ZW1zLXN0YXJ0IHNwYWNlLXgtMyBzcGFjZS15LTAgcm91bmRlZC1tZCBib3JkZXIgcC00IixjaGlsZHJlbjpbaS5qc3goS2Use2NoaWxkcmVuOmkuanN4KHdiLHtjaGVja2VkOlAudmFsdWUsb25DaGVja2VkQ2hhbmdlOlAub25DaGFuZ2UsImRhdGEtdGVzdGlkIjoiY2hlY2tib3gtbWFuZGF0b3J5In0pfSksaS5qc3hzKCJkaXYiLHtjbGFzc05hbWU6InNwYWNlLXktMSBsZWFkaW5nLW5vbmUiLGNoaWxkcmVuOltpLmpzeChxZSx7Y2hpbGRyZW46Ik1hbmRhdG9yeSBQcm9jZXNzIn0pLGkuanN4KGhiLHtjaGlsZHJlbjoiTWFyayB0aGlzIHByb2Nlc3MgYXMgbWFuZGF0b3J5IGZvciBjb21wbGlhbmNlIn0pXX0pXX0pfSldfSksaS5qc3goWmUse2NvbnRyb2w6ZC5jb250cm9sLG5hbWU6ImRlc2NyaXB0aW9uIixyZW5kZXI6KHtmaWVsZDpQfSk9PmkuanN4cyhXZSx7Y2hpbGRyZW46W2kuanN4KHFlLHtjaGlsZHJlbjoiUHJvY2VzcyBEZXNjcmlwdGlvbiJ9KSxpLmpzeChLZSx7Y2hpbGRyZW46aS5qc3gobm4se3Jvd3M6NCxwbGFjZWhvbGRlcjoiRGVzY3JpYmUgdGhlIHB1cnBvc2UgYW5kIHNjb3BlIG9mIHRoaXMgcHJvY2Vzcy4uLiIsLi4uUCwiZGF0YS10ZXN0aWQiOiJ0ZXh0YXJlYS1kZXNjcmlwdGlvbiJ9KX0pLGkuanN4KFllLHt9KV19KX0pLGkuanN4KFplLHtjb250cm9sOmQuY29udHJvbCxuYW1lOiJleHBlY3RhdGlvbnMiLHJlbmRlcjooe2ZpZWxkOlB9KT0+aS5qc3hzKFdlLHtjaGlsZHJlbjpbaS5qc3gocWUse2NoaWxkcmVuOiJFeHBlY3RhdGlvbnMifSksaS5qc3goS2Use2NoaWxkcmVuOmkuanN4KG5uLHtyb3dzOjQscGxhY2Vob2xkZXI6IkRlZmluZSB0aGUgZXhwZWN0YXRpb25zIGFuZCBvYmplY3RpdmVzIGZvciB0aGlzIHByb2Nlc3MuLi4iLC4uLlAsImRhdGEtdGVzdGlkIjoidGV4dGFyZWEtZXhwZWN0YXRpb25zIn0pfSksaS5qc3goWWUse30pXX0pfSldfSldfSksaS5qc3hzKGllLHtjaGlsZHJlbjpbaS5qc3goRWUse2NoaWxkcmVuOmkuanN4cygiZGl2Iix7Y2xhc3NOYW1lOiJmbGV4IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWJldHdlZW4iLGNoaWxkcmVuOltpLmpzeHMoQ2Use2NsYXNzTmFtZToiZmxleCBpdGVtcy1jZW50ZXIgc3BhY2UteC0yIixjaGlsZHJlbjpbaS5qc3goX3Ise2NsYXNzTmFtZToidy01IGgtNSJ9KSxpLmpzeCgic3BhbiIse2NoaWxkcmVuOiJQcm9jZXNzIFN0ZXBzIn0pXX0pLGkuanN4cyhZLHt0eXBlOiJidXR0b24iLHZhcmlhbnQ6Im91dGxpbmUiLHNpemU6InNtIixvbkNsaWNrOk4sImRhdGEtdGVzdGlkIjoiYnV0dG9uLWFkZC1zdGVwIixjaGlsZHJlbjpbaS5qc3goSHQse2NsYXNzTmFtZToidy00IGgtNCBtci0yIn0pLCJBZGQgU3RlcCJdfSldfSl9KSxpLmpzeChsZSx7Y2xhc3NOYW1lOiJzcGFjZS15LTQiLGNoaWxkcmVuOmYubGVuZ3RoPT09MD9pLmpzeHMoImRpdiIse2NsYXNzTmFtZToidGV4dC1jZW50ZXIgcHktOCB0ZXh0LW11dGVkLWZvcmVncm91bmQiLGNoaWxkcmVuOltpLmpzeChfcix7Y2xhc3NOYW1lOiJ3LTggaC04IG14LWF1dG8gbWItMiBvcGFjaXR5LTUwIn0pLGkuanN4KCJwIix7Y2hpbGRyZW46Ik5vIHByb2Nlc3Mgc3RlcHMgZGVmaW5lZCB5ZXQuIn0pLGkuanN4cyhZLHt0eXBlOiJidXR0b24iLHZhcmlhbnQ6Im91dGxpbmUiLHNpemU6InNtIixvbkNsaWNrOk4sY2xhc3NOYW1lOiJtdC0yIiwiZGF0YS10ZXN0aWQiOiJidXR0b24tYWRkLWZpcnN0LXN0ZXAiLGNoaWxkcmVuOltpLmpzeChIdCx7Y2xhc3NOYW1lOiJ3LTQgaC00IG1yLTIifSksIkFkZCBGaXJzdCBTdGVwIl19KV19KTpmLm1hcCgoUCxqKT0+aS5qc3hzKCJkaXYiLHtjbGFzc05hbWU6ImJvcmRlciByb3VuZGVkLWxnIHAtNCIsImRhdGEtdGVzdGlkIjpgc3RlcC0ke2p9YCxjaGlsZHJlbjpbaS5qc3hzKCJkaXYiLHtjbGFzc05hbWU6ImZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktYmV0d2VlbiBtYi00IixjaGlsZHJlbjpbaS5qc3hzKCJkaXYiLHtjbGFzc05hbWU6ImZsZXggaXRlbXMtY2VudGVyIHNwYWNlLXgtMyIsY2hpbGRyZW46W2kuanN4KCJkaXYiLHtjbGFzc05hbWU6InctOCBoLTggYmctcHJpbWFyeS8xMCByb3VuZGVkLWZ1bGwgZmxleCBpdGVtcy1jZW50ZXIganVzdGlmeS1jZW50ZXIgdGV4dC1wcmltYXJ5IGZvbnQtbWVkaXVtIHRleHQtc20iLGNoaWxkcmVuOmorMX0pLGkuanN4cygiaDQiLHtjbGFzc05hbWU6ImZvbnQtbWVkaXVtIixjaGlsZHJlbjpbIlN0ZXAgIixqKzFdfSldfSksaS5qc3hzKCJkaXYiLHtjbGFzc05hbWU6ImZsZXggaXRlbXMtY2VudGVyIHNwYWNlLXgtMiIsY2hpbGRyZW46W2kuanN4KFkse3R5cGU6ImJ1dHRvbiIsdmFyaWFudDoiZ2hvc3QiLHNpemU6InNtIixvbkNsaWNrOigpPT5fKGopLGRpc2FibGVkOmo9PT0wLCJkYXRhLXRlc3RpZCI6YGJ1dHRvbi1tb3ZlLXN0ZXAtdXAtJHtqfWAsY2hpbGRyZW46aS5qc3goeEUse2NsYXNzTmFtZToidy00IGgtNCJ9KX0pLGkuanN4KFkse3R5cGU6ImJ1dHRvbiIsdmFyaWFudDoiZ2hvc3QiLHNpemU6InNtIixvbkNsaWNrOigpPT5rKGopLGRpc2FibGVkOmo9PT1mLmxlbmd0aC0xLCJkYXRhLXRlc3RpZCI6YGJ1dHRvbi1tb3ZlLXN0ZXAtZG93bi0ke2p9YCxjaGlsZHJlbjppLmpzeChnRSx7Y2xhc3NOYW1lOiJ3LTQgaC00In0pfSksaS5qc3goWSx7dHlwZToiYnV0dG9uIix2YXJpYW50OiJnaG9zdCIsc2l6ZToic20iLG9uQ2xpY2s6KCk9PngoaiksImRhdGEtdGVzdGlkIjpgYnV0dG9uLXJlbW92ZS1zdGVwLSR7an1gLGNoaWxkcmVuOmkuanN4KFJjLHtjbGFzc05hbWU6InctNCBoLTQgdGV4dC1kZXN0cnVjdGl2ZSJ9KX0pXX0pXX0pLGkuanN4cygiZGl2Iix7Y2xhc3NOYW1lOiJncmlkIGdyaWQtY29scy0xIG1kOmdyaWQtY29scy0yIGdhcC00IG1iLTQiLGNoaWxkcmVuOltpLmpzeChaZSx7Y29udHJvbDpkLmNvbnRyb2wsbmFtZTpgc3RlcHMuJHtqfS5zdGVwTmFtZWAscmVuZGVyOih7ZmllbGQ6SX0pPT5pLmpzeHMoV2Use2NoaWxkcmVuOltpLmpzeChxZSx7Y2hpbGRyZW46IlN0ZXAgTmFtZSJ9KSxpLmpzeChLZSx7Y2hpbGRyZW46aS5qc3goemUse3BsYWNlaG9sZGVyOiJlLmcuLCBQbGFuIFN0cmF0ZWdpYyBEaXJlY3Rpb24iLC4uLkksImRhdGEtdGVzdGlkIjpgaW5wdXQtc3RlcC1uYW1lLSR7an1gfSl9KSxpLmpzeChZZSx7fSldfSl9KSxpLmpzeChaZSx7Y29udHJvbDpkLmNvbnRyb2wsbmFtZTpgc3RlcHMuJHtqfS5yZXNwb25zaWJpbGl0aWVzYCxyZW5kZXI6KHtmaWVsZDpJfSk9PmkuanN4cyhXZSx7Y2hpbGRyZW46W2kuanN4KHFlLHtjaGlsZHJlbjoiUmVzcG9uc2libGUgUGFydHkifSksaS5qc3goS2Use2NoaWxkcmVuOmkuanN4KHplLHtwbGFjZWhvbGRlcjoiZS5nLiwgRGVwYXJ0bWVudCBIZWFkIiwuLi5JLCJkYXRhLXRlc3RpZCI6YGlucHV0LXN0ZXAtcmVzcG9uc2liaWxpdGllcy0ke2p9YH0pfSksaS5qc3goWWUse30pXX0pfSldfSksaS5qc3goWmUse2NvbnRyb2w6ZC5jb250cm9sLG5hbWU6YHN0ZXBzLiR7an0uc3RlcERldGFpbHNgLHJlbmRlcjooe2ZpZWxkOkl9KT0+aS5qc3hzKFdlLHtjbGFzc05hbWU6Im1iLTQiLGNoaWxkcmVuOltpLmpzeChxZSx7Y2hpbGRyZW46IlN0ZXAgRGV0YWlscyJ9KSxpLmpzeChLZSx7Y2hpbGRyZW46aS5qc3gobm4se3Jvd3M6MyxwbGFjZWhvbGRlcjoiRGVzY3JpYmUgaG93IHRoaXMgc3RlcCBzaG91bGQgYmUgZXhlY3V0ZWQuLi4iLC4uLkksImRhdGEtdGVzdGlkIjpgdGV4dGFyZWEtc3RlcC1kZXRhaWxzLSR7an1gfSl9KSxpLmpzeChZZSx7fSldfSl9KSxpLmpzeChaZSx7Y29udHJvbDpkLmNvbnRyb2wsbmFtZTpgc3RlcHMuJHtqfS5yZWZlcmVuY2VzYCxyZW5kZXI6KHtmaWVsZDpJfSk9PmkuanN4cyhXZSx7Y2hpbGRyZW46W2kuanN4KHFlLHtjaGlsZHJlbjoiUmVmZXJlbmNlcyJ9KSxpLmpzeChLZSx7Y2hpbGRyZW46aS5qc3goemUse3BsYWNlaG9sZGVyOiJlLmcuLCBTQUVQLUctMDAxLCBHSS0wMDIiLC4uLkksImRhdGEtdGVzdGlkIjpgaW5wdXQtc3RlcC1yZWZlcmVuY2VzLSR7an1gfSl9KSxpLmpzeChZZSx7fSldfSl9KV19LFAuaWQpKX0pXX0pLGkuanN4cyhpZSx7Y2hpbGRyZW46W2kuanN4KEVlLHtjaGlsZHJlbjppLmpzeHMoImRpdiIse2NsYXNzTmFtZToiZmxleCBpdGVtcy1jZW50ZXIganVzdGlmeS1iZXR3ZWVuIixjaGlsZHJlbjpbaS5qc3hzKENlLHtjbGFzc05hbWU6ImZsZXggaXRlbXMtY2VudGVyIHNwYWNlLXgtMiIsY2hpbGRyZW46W2kuanN4KHNyLHtjbGFzc05hbWU6InctNSBoLTUifSksaS5qc3goInNwYW4iLHtjaGlsZHJlbjoiUGVyZm9ybWFuY2UgTWVhc3VyZXMifSldfSksaS5qc3hzKFkse3R5cGU6ImJ1dHRvbiIsdmFyaWFudDoib3V0bGluZSIsc2l6ZToic20iLG9uQ2xpY2s6UywiZGF0YS10ZXN0aWQiOiJidXR0b24tYWRkLW1lYXN1cmUiLGNoaWxkcmVuOltpLmpzeChIdCx7Y2xhc3NOYW1lOiJ3LTQgaC00IG1yLTIifSksIkFkZCBNZWFzdXJlIl19KV19KX0pLGkuanN4KGxlLHtjbGFzc05hbWU6InNwYWNlLXktNCIsY2hpbGRyZW46bS5sZW5ndGg9PT0wP2kuanN4cygiZGl2Iix7Y2xhc3NOYW1lOiJ0ZXh0LWNlbnRlciBweS04IHRleHQtbXV0ZWQtZm9yZWdyb3VuZCIsY2hpbGRyZW46W2kuanN4KHNyLHtjbGFzc05hbWU6InctOCBoLTggbXgtYXV0byBtYi0yIG9wYWNpdHktNTAifSksaS5qc3goInAiLHtjaGlsZHJlbjoiTm8gcGVyZm9ybWFuY2UgbWVhc3VyZXMgZGVmaW5lZCB5ZXQuIn0pLGkuanN4cyhZLHt0eXBlOiJidXR0b24iLHZhcmlhbnQ6Im91dGxpbmUiLHNpemU6InNtIixvbkNsaWNrOlMsY2xhc3NOYW1lOiJtdC0yIiwiZGF0YS10ZXN0aWQiOiJidXR0b24tYWRkLWZpcnN0LW1lYXN1cmUiLGNoaWxkcmVuOltpLmpzeChIdCx7Y2xhc3NOYW1lOiJ3LTQgaC00IG1yLTIifSksIkFkZCBGaXJzdCBNZWFzdXJlIl19KV19KTptLm1hcCgoUCxqKT0+aS5qc3hzKCJkaXYiLHtjbGFzc05hbWU6ImJvcmRlciByb3VuZGVkLWxnIHAtNCIsImRhdGEtdGVzdGlkIjpgbWVhc3VyZS0ke2p9YCxjaGlsZHJlbjpbaS5qc3hzKCJkaXYiLHtjbGFzc05hbWU6ImZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktYmV0d2VlbiBtYi00IixjaGlsZHJlbjpbaS5qc3hzKCJoNCIse2NsYXNzTmFtZToiZm9udC1tZWRpdW0iLGNoaWxkcmVuOlsiUGVyZm9ybWFuY2UgTWVhc3VyZSAiLGorMV19KSxpLmpzeChZLHt0eXBlOiJidXR0b24iLHZhcmlhbnQ6Imdob3N0IixzaXplOiJzbSIsb25DbGljazooKT0+aChqKSwiZGF0YS10ZXN0aWQiOmBidXR0b24tcmVtb3ZlLW1lYXN1cmUtJHtqfWAsY2hpbGRyZW46aS5qc3goUmMse2NsYXNzTmFtZToidy00IGgtNCB0ZXh0LWRlc3RydWN0aXZlIn0pfSldfSksaS5qc3hzKCJkaXYiLHtjbGFzc05hbWU6ImdyaWQgZ3JpZC1jb2xzLTEgbWQ6Z3JpZC1jb2xzLTIgZ2FwLTQiLGNoaWxkcmVuOltpLmpzeChaZSx7Y29udHJvbDpkLmNvbnRyb2wsbmFtZTpgcGVyZm9ybWFuY2VNZWFzdXJlcy4ke2p9Lm1lYXN1cmVOYW1lYCxyZW5kZXI6KHtmaWVsZDpJfSk9PmkuanN4cyhXZSx7Y2hpbGRyZW46W2kuanN4KHFlLHtjaGlsZHJlbjoiTWVhc3VyZSBOYW1lIn0pLGkuanN4KEtlLHtjaGlsZHJlbjppLmpzeCh6ZSx7cGxhY2Vob2xkZXI6ImUuZy4sIFByb2Nlc3MgQ29tcGxldGlvbiBSYXRlIiwuLi5JLCJkYXRhLXRlc3RpZCI6YGlucHV0LW1lYXN1cmUtbmFtZS0ke2p9YH0pfSksaS5qc3goWWUse30pXX0pfSksaS5qc3goWmUse2NvbnRyb2w6ZC5jb250cm9sLG5hbWU6YHBlcmZvcm1hbmNlTWVhc3VyZXMuJHtqfS5mb3JtdWxhYCxyZW5kZXI6KHtmaWVsZDpJfSk9PmkuanN4cyhXZSx7Y2hpbGRyZW46W2kuanN4KHFlLHtjaGlsZHJlbjoiRm9ybXVsYSJ9KSxpLmpzeChLZSx7Y2hpbGRyZW46aS5qc3goemUse3BsYWNlaG9sZGVyOiJlLmcuLCAoQ29tcGxldGVkIC8gVG90YWwpICogMTAwIiwuLi5JLCJkYXRhLXRlc3RpZCI6YGlucHV0LW1lYXN1cmUtZm9ybXVsYS0ke2p9YH0pfSksaS5qc3goWWUse30pXX0pfSksaS5qc3goWmUse2NvbnRyb2w6ZC5jb250cm9sLG5hbWU6YHBlcmZvcm1hbmNlTWVhc3VyZXMuJHtqfS5zb3VyY2VgLHJlbmRlcjooe2ZpZWxkOkl9KT0+aS5qc3hzKFdlLHtjaGlsZHJlbjpbaS5qc3gocWUse2NoaWxkcmVuOiJTb3VyY2UifSksaS5qc3goS2Use2NoaWxkcmVuOmkuanN4KHplLHtwbGFjZWhvbGRlcjoiZS5nLiwgT3JnYW5pemF0aW9uIERhdGFiYXNlIiwuLi5JLCJkYXRhLXRlc3RpZCI6YGlucHV0LW1lYXN1cmUtc291cmNlLSR7an1gfSl9KSxpLmpzeChZZSx7fSldfSl9KSxpLmpzeChaZSx7Y29udHJvbDpkLmNvbnRyb2wsbmFtZTpgcGVyZm9ybWFuY2VNZWFzdXJlcy4ke2p9LmZyZXF1ZW5jeWAscmVuZGVyOih7ZmllbGQ6SX0pPT5pLmpzeHMoV2Use2NoaWxkcmVuOltpLmpzeChxZSx7Y2hpbGRyZW46IkZyZXF1ZW5jeSJ9KSxpLmpzeChLZSx7Y2hpbGRyZW46aS5qc3goemUse3BsYWNlaG9sZGVyOiJlLmcuLCBNb250aGx5IiwuLi5JLCJkYXRhLXRlc3RpZCI6YGlucHV0LW1lYXN1cmUtZnJlcXVlbmN5LSR7an1gfSl9KSxpLmpzeChZZSx7fSldfSl9KV19KSxpLmpzeHMoImRpdiIse2NsYXNzTmFtZToiZ3JpZCBncmlkLWNvbHMtMSBtZDpncmlkLWNvbHMtMiBnYXAtNCBtdC00IixjaGlsZHJlbjpbaS5qc3goWmUse2NvbnRyb2w6ZC5jb250cm9sLG5hbWU6YHBlcmZvcm1hbmNlTWVhc3VyZXMuJHtqfS50YXJnZXRgLHJlbmRlcjooe2ZpZWxkOkl9KT0+aS5qc3hzKFdlLHtjaGlsZHJlbjpbaS5qc3gocWUse2NoaWxkcmVuOiJUYXJnZXQifSksaS5qc3goS2Use2NoaWxkcmVuOmkuanN4KHplLHtwbGFjZWhvbGRlcjoiZS5nLiwgOTUlIiwuLi5JLCJkYXRhLXRlc3RpZCI6YGlucHV0LW1lYXN1cmUtdGFyZ2V0LSR7an1gfSl9KSxpLmpzeChZZSx7fSldfSl9KSxpLmpzeChaZSx7Y29udHJvbDpkLmNvbnRyb2wsbmFtZTpgcGVyZm9ybWFuY2VNZWFzdXJlcy4ke2p9LnNjb3JlY2FyZENhdGVnb3J5YCxyZW5kZXI6KHtmaWVsZDpJfSk9PmkuanN4cyhXZSx7Y2hpbGRyZW46W2kuanN4KHFlLHtjaGlsZHJlbjoiU2NvcmVjYXJkIENhdGVnb3J5In0pLGkuanN4cyhqbix7b25WYWx1ZUNoYW5nZTpJLm9uQ2hhbmdlLGRlZmF1bHRWYWx1ZTpJLnZhbHVlLGNoaWxkcmVuOltpLmpzeChLZSx7Y2hpbGRyZW46aS5qc3goSnIseyJkYXRhLXRlc3RpZCI6YHNlbGVjdC1zY29yZWNhcmQtY2F0ZWdvcnktJHtqfWAsY2hpbGRyZW46aS5qc3goTm4se3BsYWNlaG9sZGVyOiJTZWxlY3Qgc2NvcmVjYXJkIGNhdGVnb3J5In0pfSl9KSxpLmpzeHMoZW4se2NoaWxkcmVuOltpLmpzeChQZSx7dmFsdWU6IkZpbmFuY2lhbCIsY2hpbGRyZW46IkZpbmFuY2lhbCJ9KSxpLmpzeChQZSx7dmFsdWU6IkN1c3RvbWVyIixjaGlsZHJlbjoiQ3VzdG9tZXIifSksaS5qc3goUGUse3ZhbHVlOiJJbnRlcm5hbCBQcm9jZXNzIixjaGlsZHJlbjoiSW50ZXJuYWwgUHJvY2VzcyJ9KSxpLmpzeChQZSx7dmFsdWU6IkxlYXJuaW5nICYgR3Jvd3RoIixjaGlsZHJlbjoiTGVhcm5pbmcgJiBHcm93dGgifSldfSldfSksaS5qc3goWWUse30pXX0pfSldfSksaS5qc3goImRpdiIse2NsYXNzTmFtZToibXQtNCIsY2hpbGRyZW46aS5qc3goWmUse2NvbnRyb2w6ZC5jb250cm9sLG5hbWU6YHBlcmZvcm1hbmNlTWVhc3VyZXMuJHtqfS5zdHJhdGVnaWNHb2FsSWRgLHJlbmRlcjooe2ZpZWxkOkl9KT0+aS5qc3hzKFdlLHtjaGlsZHJlbjpbaS5qc3gocWUse2NoaWxkcmVuOiJMaW5rIHRvIFN0cmF0ZWdpYyBHb2FsIChPcHRpb25hbCkifSksdSYmaS5qc3goImRpdiIse2NsYXNzTmFtZToidGV4dC1zbSB0ZXh0LXJlZC02MDAgbWItMiIsY2hpbGRyZW46IkVycm9yIGxvYWRpbmcgc3RyYXRlZ2ljIGdvYWxzLiBQbGVhc2UgcmVmcmVzaCB0aGUgcGFnZS4ifSksYyYmaS5qc3goImRpdiIse2NsYXNzTmFtZToidGV4dC1zbSB0ZXh0LW11dGVkLWZvcmVncm91bmQgbWItMiIsY2hpbGRyZW46IkxvYWRpbmcgc3RyYXRlZ2ljIGdvYWxzLi4uIn0pLGkuanN4cyhqbix7b25WYWx1ZUNoYW5nZTpJLm9uQ2hhbmdlLGRlZmF1bHRWYWx1ZTpJLnZhbHVlLGRpc2FibGVkOmMsY2hpbGRyZW46W2kuanN4KEtlLHtjaGlsZHJlbjppLmpzeChKcix7ImRhdGEtdGVzdGlkIjpgc2VsZWN0LXN0cmF0ZWdpYy1nb2FsLSR7an1gLGNoaWxkcmVuOmkuanN4KE5uLHtwbGFjZWhvbGRlcjpjPyJMb2FkaW5nIGdvYWxzLi4uIjp1PyJFcnJvciBsb2FkaW5nIGdvYWxzIjoiU2VsZWN0IGEgc3RyYXRlZ2ljIGdvYWwifSl9KX0pLGkuanN4cyhlbix7Y2hpbGRyZW46W2kuanN4KFBlLHt2YWx1ZToibm9uZSIsY2hpbGRyZW46Ik5vIGxpbmtlZCBnb2FsIn0pLGwubWFwKFY9PmkuanN4cyhQZSx7dmFsdWU6Vi5pZCxjaGlsZHJlbjpbVi50aXRsZSwiICgiLFYuY2F0ZWdvcnksIikiXX0sVi5pZCkpLGwubGVuZ3RoPT09MCYmIWMmJiF1JiZpLmpzeChQZSx7dmFsdWU6Im5vLWdvYWxzIixkaXNhYmxlZDohMCxjaGlsZHJlbjoiTm8gc3RyYXRlZ2ljIGdvYWxzIGF2YWlsYWJsZSJ9KV19KV19KSxpLmpzeChZZSx7fSldfSl9KX0pXX0sUC5pZCkpfSldfSksaS5qc3hzKGllLHtjaGlsZHJlbjpbaS5qc3goRWUse2NoaWxkcmVuOmkuanN4cygiZGl2Iix7Y2xhc3NOYW1lOiJmbGV4IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWJldHdlZW4iLGNoaWxkcmVuOltpLmpzeHMoQ2Use2NsYXNzTmFtZToiZmxleCBpdGVtcy1jZW50ZXIgc3BhY2UteC0yIixjaGlsZHJlbjpbaS5qc3godnMse2NsYXNzTmFtZToidy01IGgtNSJ9KSxpLmpzeCgic3BhbiIse2NoaWxkcmVuOiJSaXNrIE1hbmFnZW1lbnQifSldfSksaS5qc3hzKFkse3R5cGU6ImJ1dHRvbiIsdmFyaWFudDoib3V0bGluZSIsc2l6ZToic20iLG9uQ2xpY2s6KCk9Pntjb25zdCBqPWQuZ2V0VmFsdWVzKCJuYW1lIikudG9Mb3dlckNhc2UoKTtsZXQgST0iTWVkaXVtIixWPSJNZWRpdW0iLE89IiIsWj0iIjtqLmluY2x1ZGVzKCJmaW5hbmNpYWwiKXx8ai5pbmNsdWRlcygiYnVkZ2V0Iil8fGouaW5jbHVkZXMoInBheW1lbnQiKT8oST0iSGlnaCIsVj0iSGlnaCIsTz0iUmlzayBvZiBmaW5hbmNpYWwgZnJhdWQsIGVycm9ycyBpbiB0cmFuc2FjdGlvbnMsIGJ1ZGdldCBvdmVycnVucywgY29tcGxpYW5jZSB2aW9sYXRpb25zLCBzeXN0ZW0gZmFpbHVyZXMgYWZmZWN0aW5nIHBheW1lbnRzLCBhbmQgcG90ZW50aWFsIHJlZ3VsYXRvcnkgcGVuYWx0aWVzLiIsWj1g4oCiIEltcGxlbWVudCBkdWFsIGFwcHJvdmFsIGNvbnRyb2xzIGZvciBhbGwgZmluYW5jaWFsIHRyYW5zYWN0aW9ucwrigKIgQ29uZHVjdCBtb250aGx5IGZpbmFuY2lhbCBhdWRpdHMgYW5kIHJlY29uY2lsaWF0aW9ucwrigKIgRXN0YWJsaXNoIHNlZ3JlZ2F0aW9uIG9mIGR1dGllcyBiZXR3ZWVuIGF1dGhvcml6YXRpb24gYW5kIHJlY29yZGluZwrigKIgTWFpbnRhaW4gYmFja3VwIGZpbmFuY2lhbCBzeXN0ZW1zIGFuZCBkYXRhIHJlY292ZXJ5IHByb2NlZHVyZXMK4oCiIFRyYWluIHN0YWZmIG9uIGZpbmFuY2lhbCBjb21wbGlhbmNlIGFuZCBmcmF1ZCBkZXRlY3Rpb25gKTpqLmluY2x1ZGVzKCJzYWZldHkiKXx8ai5pbmNsdWRlcygic2VjdXJpdHkiKXx8ai5pbmNsdWRlcygiZW1lcmdlbmN5Iik/KEk9Ik1lZGl1bSIsVj0iSGlnaCIsTz0iUmlzayBvZiB3b3JrcGxhY2UgYWNjaWRlbnRzLCBzZWN1cml0eSBicmVhY2hlcywgZW1lcmdlbmN5IHJlc3BvbnNlIGZhaWx1cmVzLCBlcXVpcG1lbnQgbWFsZnVuY3Rpb25zLCBhbmQgcG90ZW50aWFsIGhhcm0gdG8gcGVyc29ubmVsIG9yIHByb3BlcnR5LiIsWj1g4oCiIENvbmR1Y3QgcmVndWxhciBzYWZldHkgaW5zcGVjdGlvbnMgYW5kIHJpc2sgYXNzZXNzbWVudHMK4oCiIEltcGxlbWVudCBjb21wcmVoZW5zaXZlIGVtZXJnZW5jeSByZXNwb25zZSBwcm9jZWR1cmVzCuKAoiBQcm92aWRlIG9uZ29pbmcgc2FmZXR5IHRyYWluaW5nIGFuZCBjZXJ0aWZpY2F0aW9uIHByb2dyYW1zCuKAoiBNYWludGFpbiB1cGRhdGVkIGVtZXJnZW5jeSBjb250YWN0cyBhbmQgY29tbXVuaWNhdGlvbiBzeXN0ZW1zCuKAoiBFc3RhYmxpc2ggY2xlYXIgZXNjYWxhdGlvbiBwcm90b2NvbHMgZm9yIGluY2lkZW50c2ApOmouaW5jbHVkZXMoImN1c3RvbWVyIil8fGouaW5jbHVkZXMoInNlcnZpY2UiKXx8ai5pbmNsdWRlcygic3VwcG9ydCIpPyhJPSJNZWRpdW0iLFY9Ik1lZGl1bSIsTz0iUmlzayBvZiBjdXN0b21lciBkaXNzYXRpc2ZhY3Rpb24sIHNlcnZpY2UgZGVsaXZlcnkgZmFpbHVyZXMsIGNvbW11bmljYXRpb24gYnJlYWtkb3ducywgcmVzcG9uc2UgdGltZSBkZWxheXMsIGFuZCBwb3RlbnRpYWwgcmVwdXRhdGlvbiBkYW1hZ2UuIixaPWDigKIgSW1wbGVtZW50IGN1c3RvbWVyIGZlZWRiYWNrIG1vbml0b3JpbmcgYW5kIHJlc3BvbnNlIHN5c3RlbXMK4oCiIEVzdGFibGlzaCBzZXJ2aWNlIGxldmVsIGFncmVlbWVudHMgd2l0aCBjbGVhciBwZXJmb3JtYW5jZSBtZXRyaWNzCuKAoiBQcm92aWRlIHJlZ3VsYXIgY3VzdG9tZXIgc2VydmljZSB0cmFpbmluZyB0byBzdGFmZgrigKIgTWFpbnRhaW4gYmFja3VwIGNvbW11bmljYXRpb24gY2hhbm5lbHMgZm9yIHNlcnZpY2UgZGVsaXZlcnkK4oCiIERldmVsb3AgY3VzdG9tZXIgZXNjYWxhdGlvbiBhbmQgY29tcGxhaW50IHJlc29sdXRpb24gcHJvY2VkdXJlc2ApOmouaW5jbHVkZXMoInRlY2hub2xvZ3kiKXx8ai5pbmNsdWRlcygiSVQiKXx8ai5pbmNsdWRlcygic3lzdGVtIik/KEk9IkhpZ2giLFY9IkhpZ2giLE89IlJpc2sgb2Ygc3lzdGVtIGZhaWx1cmVzLCBjeWJlcnNlY3VyaXR5IGJyZWFjaGVzLCBkYXRhIGxvc3MsIHNvZnR3YXJlIHZ1bG5lcmFiaWxpdGllcywgaGFyZHdhcmUgbWFsZnVuY3Rpb25zLCBhbmQgYnVzaW5lc3MgY29udGludWl0eSBkaXNydXB0aW9ucy4iLFo9YOKAoiBJbXBsZW1lbnQgcm9idXN0IGN5YmVyc2VjdXJpdHkgbWVhc3VyZXMgYW5kIGFjY2VzcyBjb250cm9scwrigKIgQ29uZHVjdCByZWd1bGFyIHN5c3RlbSBiYWNrdXBzIGFuZCBkaXNhc3RlciByZWNvdmVyeSB0ZXN0aW5nCuKAoiBNYWludGFpbiB1cGRhdGVkIHNvZnR3YXJlIGFuZCBzZWN1cml0eSBwYXRjaGVzCuKAoiBFc3RhYmxpc2ggSVQgc3VwcG9ydCBwcm90b2NvbHMgYW5kIHZlbmRvciBtYW5hZ2VtZW50CuKAoiBNb25pdG9yIHN5c3RlbSBwZXJmb3JtYW5jZSBhbmQgY2FwYWNpdHkgcGxhbm5pbmdgKTpqLmluY2x1ZGVzKCJjb21wbGlhbmNlIil8fGouaW5jbHVkZXMoImF1ZGl0Iil8fGouaW5jbHVkZXMoInJlZ3VsYXRvcnkiKT8oST0iTWVkaXVtIixWPSJIaWdoIixPPSJSaXNrIG9mIHJlZ3VsYXRvcnkgbm9uLWNvbXBsaWFuY2UsIGF1ZGl0IGZhaWx1cmVzLCBsZWdhbCBwZW5hbHRpZXMsIGRvY3VtZW50YXRpb24gZ2FwcywgYW5kIHBvdGVudGlhbCBzYW5jdGlvbnMgZnJvbSByZWd1bGF0b3J5IGJvZGllcy4iLFo9YOKAoiBTdGF5IHVwZGF0ZWQgb24gcmVndWxhdG9yeSBjaGFuZ2VzIGFuZCBjb21wbGlhbmNlIHJlcXVpcmVtZW50cwrigKIgQ29uZHVjdCByZWd1bGFyIGludGVybmFsIGNvbXBsaWFuY2UgYXVkaXRzIGFuZCBhc3Nlc3NtZW50cwrigKIgTWFpbnRhaW4gY29tcHJlaGVuc2l2ZSBkb2N1bWVudGF0aW9uIGFuZCByZWNvcmQga2VlcGluZwrigKIgUHJvdmlkZSBvbmdvaW5nIGNvbXBsaWFuY2UgdHJhaW5pbmcgdG8gcmVsZXZhbnQgc3RhZmYK4oCiIEVzdGFibGlzaCByZWxhdGlvbnNoaXBzIHdpdGggcmVndWxhdG9yeSBib2RpZXMgYW5kIGFkdmlzb3JzYCk6ai5pbmNsdWRlcygiaHVtYW4iKXx8ai5pbmNsdWRlcygiSFIiKXx8ai5pbmNsdWRlcygicGVyc29ubmVsIik/KEk9Ik1lZGl1bSIsVj0iTWVkaXVtIixPPSJSaXNrIG9mIGVtcGxveWVlIGRpc3B1dGVzLCBoaXJpbmcgbWlzdGFrZXMsIHBlcmZvcm1hbmNlIGlzc3Vlcywgd29ya3BsYWNlIGNvbmZsaWN0cywgZGF0YSBwcml2YWN5IGJyZWFjaGVzLCBhbmQgcG90ZW50aWFsIGxlZ2FsIGNsYWltcy4iLFo9YOKAoiBJbXBsZW1lbnQgZmFpciBhbmQgY29uc2lzdGVudCBIUiBwb2xpY2llcyBhbmQgcHJvY2VkdXJlcwrigKIgQ29uZHVjdCB0aG9yb3VnaCBiYWNrZ3JvdW5kIGNoZWNrcyBhbmQgcmVmZXJlbmNlIHZlcmlmaWNhdGlvbgrigKIgUHJvdmlkZSByZWd1bGFyIHRyYWluaW5nIG9uIHdvcmtwbGFjZSBwb2xpY2llcyBhbmQgcHJvY2VkdXJlcwrigKIgTWFpbnRhaW4gY29uZmlkZW50aWFsIGVtcGxveWVlIHJlY29yZHMgYW5kIGRhdGEgcHJvdGVjdGlvbgrigKIgRXN0YWJsaXNoIGNsZWFyIHBlcmZvcm1hbmNlIG1hbmFnZW1lbnQgYW5kIGRpc2NpcGxpbmFyeSBwcm9jZWR1cmVzYCk6ai5pbmNsdWRlcygicXVhbGl0eSIpfHxqLmluY2x1ZGVzKCJjb250cm9sIil8fGouaW5jbHVkZXMoImFzc3VyYW5jZSIpPyhJPSJNZWRpdW0iLFY9IkhpZ2giLE89IlJpc2sgb2YgcXVhbGl0eSBkZWZlY3RzLCBwcm9kdWN0IGZhaWx1cmVzLCBjdXN0b21lciBjb21wbGFpbnRzLCByZWd1bGF0b3J5IG5vbi1jb21wbGlhbmNlLCBhbmQgcG90ZW50aWFsIHJlY2FsbHMgb3IgbGlhYmlsaXR5IGlzc3Vlcy4iLFo9YOKAoiBJbXBsZW1lbnQgc3lzdGVtYXRpYyBxdWFsaXR5IGNvbnRyb2wgY2hlY2twb2ludHMgYW5kIHRlc3RpbmcK4oCiIENvbmR1Y3QgcmVndWxhciBxdWFsaXR5IGF1ZGl0cyBhbmQgcGVyZm9ybWFuY2UgcmV2aWV3cwrigKIgTWFpbnRhaW4gZGV0YWlsZWQgcXVhbGl0eSBkb2N1bWVudGF0aW9uIGFuZCB0cmFjZWFiaWxpdHkK4oCiIFByb3ZpZGUgb25nb2luZyBxdWFsaXR5IHRyYWluaW5nIGFuZCBjZXJ0aWZpY2F0aW9uCuKAoiBFc3RhYmxpc2ggY29ycmVjdGl2ZSBhbmQgcHJldmVudGl2ZSBhY3Rpb24gcHJvY2VkdXJlc2ApOihPPSJSaXNrIG9mIHByb2Nlc3MgZmFpbHVyZXMsIHJlc291cmNlIGNvbnN0cmFpbnRzLCBjb21tdW5pY2F0aW9uIGdhcHMsIHBlcmZvcm1hbmNlIGlzc3VlcywgYW5kIHBvdGVudGlhbCBvcGVyYXRpb25hbCBkaXNydXB0aW9ucy4iLFo9YOKAoiBDb25kdWN0IHJlZ3VsYXIgcHJvY2VzcyByZXZpZXdzIGFuZCBwZXJmb3JtYW5jZSBtb25pdG9yaW5nCuKAoiBJbXBsZW1lbnQgYXBwcm9wcmlhdGUgY29udHJvbHMgYW5kIGFwcHJvdmFsIG1lY2hhbmlzbXMK4oCiIFByb3ZpZGUgYWRlcXVhdGUgdHJhaW5pbmcgYW5kIHJlc291cmNlcyB0byBwcm9jZXNzIG93bmVycwrigKIgTWFpbnRhaW4gY2xlYXIgZG9jdW1lbnRhdGlvbiBhbmQgc3RhbmRhcmQgb3BlcmF0aW5nIHByb2NlZHVyZXMK4oCiIEVzdGFibGlzaCBjb250aW5nZW5jeSBwbGFucyBmb3IgcHJvY2VzcyBkaXNydXB0aW9ucwrigKIgTW9uaXRvciBrZXkgcGVyZm9ybWFuY2UgaW5kaWNhdG9ycyBhbmQgcmlzayBtZXRyaWNzCuKAoiBFbnN1cmUgYWRlcXVhdGUgY29tbXVuaWNhdGlvbiBhbmQgZXNjYWxhdGlvbiBwcm9jZWR1cmVzYCksZC5zZXRWYWx1ZSgicmlza0ZyZXF1ZW5jeSIsSSksZC5zZXRWYWx1ZSgicmlza0ltcGFjdCIsViksZC5zZXRWYWx1ZSgicmlza0Rlc2NyaXB0aW9uIixPKSxkLnNldFZhbHVlKCJyaXNrTWl0aWdhdGlvbiIsWil9LCJkYXRhLXRlc3RpZCI6ImJ1dHRvbi1hZGQtcmlzayIsY2hpbGRyZW46W2kuanN4KEh0LHtjbGFzc05hbWU6InctNCBoLTQgbXItMiJ9KSwiQWRkIFJpc2siXX0pXX0pfSksaS5qc3hzKGxlLHtjbGFzc05hbWU6InNwYWNlLXktNCIsY2hpbGRyZW46W2kuanN4cygiZGl2Iix7Y2xhc3NOYW1lOiJncmlkIGdyaWQtY29scy0xIG1kOmdyaWQtY29scy0yIGdhcC00IixjaGlsZHJlbjpbaS5qc3goWmUse2NvbnRyb2w6ZC5jb250cm9sLG5hbWU6InJpc2tGcmVxdWVuY3kiLHJlbmRlcjooe2ZpZWxkOlB9KT0+aS5qc3hzKFdlLHtjaGlsZHJlbjpbaS5qc3gocWUse2NoaWxkcmVuOiJSaXNrIEZyZXF1ZW5jeSJ9KSxpLmpzeHMoam4se29uVmFsdWVDaGFuZ2U6UC5vbkNoYW5nZSxkZWZhdWx0VmFsdWU6UC52YWx1ZSxjaGlsZHJlbjpbaS5qc3goS2Use2NoaWxkcmVuOmkuanN4KEpyLHsiZGF0YS10ZXN0aWQiOiJzZWxlY3Qtcmlzay1mcmVxdWVuY3kiLGNoaWxkcmVuOmkuanN4KE5uLHtwbGFjZWhvbGRlcjoiU2VsZWN0IGZyZXF1ZW5jeSJ9KX0pfSksaS5qc3hzKGVuLHtjaGlsZHJlbjpbaS5qc3goUGUse3ZhbHVlOiJMb3ciLGNoaWxkcmVuOiJMb3cifSksaS5qc3goUGUse3ZhbHVlOiJNZWRpdW0iLGNoaWxkcmVuOiJNZWRpdW0ifSksaS5qc3goUGUse3ZhbHVlOiJIaWdoIixjaGlsZHJlbjoiSGlnaCJ9KV19KV19KSxpLmpzeChZZSx7fSldfSl9KSxpLmpzeChaZSx7Y29udHJvbDpkLmNvbnRyb2wsbmFtZToicmlza0ltcGFjdCIscmVuZGVyOih7ZmllbGQ6UH0pPT5pLmpzeHMoV2Use2NoaWxkcmVuOltpLmpzeChxZSx7Y2hpbGRyZW46IlJpc2sgSW1wYWN0In0pLGkuanN4cyhqbix7b25WYWx1ZUNoYW5nZTpQLm9uQ2hhbmdlLGRlZmF1bHRWYWx1ZTpQLnZhbHVlLGNoaWxkcmVuOltpLmpzeChLZSx7Y2hpbGRyZW46aS5qc3goSnIseyJkYXRhLXRlc3RpZCI6InNlbGVjdC1yaXNrLWltcGFjdCIsY2hpbGRyZW46aS5qc3goTm4se3BsYWNlaG9sZGVyOiJTZWxlY3QgaW1wYWN0In0pfSl9KSxpLmpzeHMoZW4se2NoaWxkcmVuOltpLmpzeChQZSx7dmFsdWU6IkxvdyIsY2hpbGRyZW46IkxvdyJ9KSxpLmpzeChQZSx7dmFsdWU6Ik1lZGl1bSIsY2hpbGRyZW46Ik1lZGl1bSJ9KSxpLmpzeChQZSx7dmFsdWU6IkhpZ2giLGNoaWxkcmVuOiJIaWdoIn0pXX0pXX0pLGkuanN4KFllLHt9KV19KX0pXX0pLGkuanN4KFplLHtjb250cm9sOmQuY29udHJvbCxuYW1lOiJyaXNrRGVzY3JpcHRpb24iLHJlbmRlcjooe2ZpZWxkOlB9KT0+aS5qc3hzKFdlLHtjaGlsZHJlbjpbaS5qc3gocWUse2NoaWxkcmVuOiJSaXNrIERlc2NyaXB0aW9uIn0pLGkuanN4KEtlLHtjaGlsZHJlbjppLmpzeChubix7cGxhY2Vob2xkZXI6IkRlc2NyaWJlIHRoZSBwb3RlbnRpYWwgcmlza3MgYXNzb2NpYXRlZCB3aXRoIHRoaXMgcHJvY2Vzcy4uLiIsY2xhc3NOYW1lOiJtaW4taC1bODBweF0iLC4uLlAsImRhdGEtdGVzdGlkIjoidGV4dGFyZWEtcmlzay1kZXNjcmlwdGlvbiJ9KX0pLGkuanN4KFllLHt9KV19KX0pLGkuanN4KFplLHtjb250cm9sOmQuY29udHJvbCxuYW1lOiJyaXNrTWl0aWdhdGlvbiIscmVuZGVyOih7ZmllbGQ6UH0pPT5pLmpzeHMoV2Use2NoaWxkcmVuOltpLmpzeChxZSx7Y2hpbGRyZW46IlJpc2sgTWl0aWdhdGlvbiBTdHJhdGVneSJ9KSxpLmpzeChLZSx7Y2hpbGRyZW46aS5qc3gobm4se3BsYWNlaG9sZGVyOiJEZXNjcmliZSB0aGUgc3RyYXRlZ3kgdG8gbWl0aWdhdGUgdGhpcyByaXNrLi4uIixjbGFzc05hbWU6Im1pbi1oLVsxMDBweF0iLC4uLlAsImRhdGEtdGVzdGlkIjoidGV4dGFyZWEtcmlzay1taXRpZ2F0aW9uIn0pfSksaS5qc3goWWUse30pXX0pfSldfSldfSksaS5qc3hzKCJkaXYiLHtjbGFzc05hbWU6ImZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktZW5kIHNwYWNlLXgtNCBwdC02IGJvcmRlci10IGJvcmRlci1ib3JkZXIiLGNoaWxkcmVuOltpLmpzeChZLHt0eXBlOiJidXR0b24iLHZhcmlhbnQ6Im91dGxpbmUiLG9uQ2xpY2s6cyxkaXNhYmxlZDpyLCJkYXRhLXRlc3RpZCI6ImJ1dHRvbi1jYW5jZWwtZm9ybSIsY2hpbGRyZW46IkNhbmNlbCJ9KSxpLmpzeChZLHt0eXBlOiJidXR0b24iLHZhcmlhbnQ6Im91dGxpbmUiLG9uQ2xpY2s6KCk9Pntjb25zdCBQPWQuZ2V0VmFsdWVzKCk7bih7Li4uUCxzdGF0dXM6ImRyYWZ0In0pfSxkaXNhYmxlZDpyLCJkYXRhLXRlc3RpZCI6ImJ1dHRvbi1zYXZlLWRyYWZ0IixjaGlsZHJlbjoiU2F2ZSBhcyBEcmFmdCJ9KSxpLmpzeChZLHt0eXBlOiJzdWJtaXQiLGRpc2FibGVkOnIsImRhdGEtdGVzdGlkIjoiYnV0dG9uLXN1Ym1pdC1mb3JtIixjaGlsZHJlbjpyP2kuanN4cyhpLkZyYWdtZW50LHtjaGlsZHJlbjpbaS5qc3goImRpdiIse2NsYXNzTmFtZToiYW5pbWF0ZS1zcGluIHJvdW5kZWQtZnVsbCBoLTQgdy00IGJvcmRlci1iLTIgYm9yZGVyLXByaW1hcnktZm9yZWdyb3VuZCBtci0yIn0pLGU/IlVwZGF0aW5nLi4uIjoiQ3JlYXRpbmcuLi4iXX0pOmkuanN4cyhpLkZyYWdtZW50LHtjaGlsZHJlbjpbaS5qc3gocGgse2NsYXNzTmFtZToidy00IGgtNCBtci0yIn0pLGU/IlVwZGF0ZSBQcm9jZXNzIjoiQ3JlYXRlIFByb2Nlc3MiXX0pfSldfSldfSl9KX1mdW5jdGlvbiB1eCgpe2NvbnN0e2lkOmV9PXJsKCksWyx0XT1haCgpLHt0b2FzdDpyfT1obigpLHtpc0F1dGhlbnRpY2F0ZWQ6bixpc0xvYWRpbmc6c309V3IoKSxhPUNhKCksbz0hIWU7eS51c2VFZmZlY3QoKCk9PntpZighcyYmIW4pe3Ioe3RpdGxlOiJVbmF1dGhvcml6ZWQiLGRlc2NyaXB0aW9uOiJZb3UgYXJlIGxvZ2dlZCBvdXQuIExvZ2dpbmcgaW4gYWdhaW4uLi4iLHZhcmlhbnQ6ImRlc3RydWN0aXZlIn0pLHNldFRpbWVvdXQoKCk9Pnt3aW5kb3cubG9jYXRpb24uaHJlZj0iL2FwaS9sb2dpbiJ9LDUwMCk7cmV0dXJufX0sW24scyxyXSk7Y29uc3R7ZGF0YTpsLGlzTG9hZGluZzpjLGVycm9yOnV9PWJ0KHtxdWVyeUtleTpbIi9hcGkvb2UtcHJvY2Vzc2VzIixlXSxlbmFibGVkOm4mJm8mJiEhZX0pO3kudXNlRWZmZWN0KCgpPT57aWYodSl7aWYoSnQodSkpe3Ioe3RpdGxlOiJVbmF1dGhvcml6ZWQiLGRlc2NyaXB0aW9uOiJZb3UgYXJlIGxvZ2dlZCBvdXQuIExvZ2dpbmcgaW4gYWdhaW4uLi4iLHZhcmlhbnQ6ImRlc3RydWN0aXZlIn0pLHNldFRpbWVvdXQoKCk9Pnt3aW5kb3cubG9jYXRpb24uaHJlZj0iL2FwaS9sb2dpbiJ9LDUwMCk7cmV0dXJufXIoe3RpdGxlOiJFcnJvciIsZGVzY3JpcHRpb246IkZhaWxlZCB0byBsb2FkIHByb2Nlc3MgZGV0YWlscyIsdmFyaWFudDoiZGVzdHJ1Y3RpdmUifSl9fSxbdSxyXSk7Y29uc3R7ZGF0YTpkLGlzTG9hZGluZzpmLGVycm9yOnB9PWJ0KHtxdWVyeUtleTpbIi9hcGkvb2UtZWxlbWVudHMiXSxlbmFibGVkOm59KTt5LnVzZUVmZmVjdCgoKT0+e2lmKHApe2lmKEp0KHApKXtyKHt0aXRsZToiVW5hdXRob3JpemVkIixkZXNjcmlwdGlvbjoiWW91IGFyZSBsb2dnZWQgb3V0LiBMb2dnaW5nIGluIGFnYWluLi4uIix2YXJpYW50OiJkZXN0cnVjdGl2ZSJ9KSxzZXRUaW1lb3V0KCgpPT57d2luZG93LmxvY2F0aW9uLmhyZWY9Ii9hcGkvbG9naW4ifSw1MDApO3JldHVybn1yKHt0aXRsZToiRXJyb3IiLGRlc2NyaXB0aW9uOiJGYWlsZWQgdG8gbG9hZCBPRSBlbGVtZW50cyIsdmFyaWFudDoiZGVzdHJ1Y3RpdmUifSl9fSxbcCxyXSk7Y29uc3QgeD1fbih7bXV0YXRpb25Gbjphc3luYyBoPT4oYXdhaXQgc24oIlBPU1QiLCIvYXBpL29lLXByb2Nlc3NlcyIsaCkpLmpzb24oKSxvblN1Y2Nlc3M6aD0+e2EuaW52YWxpZGF0ZVF1ZXJpZXMoe3F1ZXJ5S2V5OlsiL2FwaS9vZS1wcm9jZXNzZXMiXX0pLGEuaW52YWxpZGF0ZVF1ZXJpZXMoe3F1ZXJ5S2V5OlsiL2FwaS9vZS1lbGVtZW50cyJdfSksYS5pbnZhbGlkYXRlUXVlcmllcyh7cXVlcnlLZXk6WyIvYXBpL2Rhc2hib2FyZC9zdGF0cyJdfSkscih7dGl0bGU6IlN1Y2Nlc3MiLGRlc2NyaXB0aW9uOiJQcm9jZXNzIGNyZWF0ZWQgc3VjY2Vzc2Z1bGx5In0pLHQoYC9wcm9jZXNzLyR7aC5pZH1gKX0sb25FcnJvcjpoPT57aWYoSnQoaCkpe3Ioe3RpdGxlOiJVbmF1dGhvcml6ZWQiLGRlc2NyaXB0aW9uOiJZb3UgYXJlIGxvZ2dlZCBvdXQuIExvZ2dpbmcgaW4gYWdhaW4uLi4iLHZhcmlhbnQ6ImRlc3RydWN0aXZlIn0pLHNldFRpbWVvdXQoKCk9Pnt3aW5kb3cubG9jYXRpb24uaHJlZj0iL2FwaS9sb2dpbiJ9LDUwMCk7cmV0dXJufXIoe3RpdGxlOiJFcnJvciIsZGVzY3JpcHRpb246IkZhaWxlZCB0byBjcmVhdGUgcHJvY2VzcyIsdmFyaWFudDoiZGVzdHJ1Y3RpdmUifSl9fSksdj1fbih7bXV0YXRpb25Gbjphc3luYyBoPT4oYXdhaXQgc24oIlBVVCIsYC9hcGkvb2UtcHJvY2Vzc2VzLyR7ZX1gLGgpKS5qc29uKCksb25TdWNjZXNzOigpPT57YS5pbnZhbGlkYXRlUXVlcmllcyh7cXVlcnlLZXk6WyIvYXBpL29lLXByb2Nlc3NlcyIsZV19KSxhLmludmFsaWRhdGVRdWVyaWVzKHtxdWVyeUtleTpbIi9hcGkvb2UtcHJvY2Vzc2VzIl19KSxhLmludmFsaWRhdGVRdWVyaWVzKHtxdWVyeUtleTpbIi9hcGkvb2UtZWxlbWVudHMiXX0pLGEuaW52YWxpZGF0ZVF1ZXJpZXMoe3F1ZXJ5S2V5OlsiL2FwaS9kYXNoYm9hcmQvc3RhdHMiXX0pLHIoe3RpdGxlOiJTdWNjZXNzIixkZXNjcmlwdGlvbjoiUHJvY2VzcyB1cGRhdGVkIHN1Y2Nlc3NmdWxseSJ9KSx0KGAvcHJvY2Vzcy8ke2V9YCl9LG9uRXJyb3I6aD0+e2lmKEp0KGgpKXtyKHt0aXRsZToiVW5hdXRob3JpemVkIixkZXNjcmlwdGlvbjoiWW91IGFyZSBsb2dnZWQgb3V0LiBMb2dnaW5nIGluIGFnYWluLi4uIix2YXJpYW50OiJkZXN0cnVjdGl2ZSJ9KSxzZXRUaW1lb3V0KCgpPT57d2luZG93LmxvY2F0aW9uLmhyZWY9Ii9hcGkvbG9naW4ifSw1MDApO3JldHVybn1yKHt0aXRsZToiRXJyb3IiLGRlc2NyaXB0aW9uOiJGYWlsZWQgdG8gdXBkYXRlIHByb2Nlc3MiLHZhcmlhbnQ6ImRlc3RydWN0aXZlIn0pfX0pLG09YXN5bmMgaD0+e3ZhciBiO2NvbnN0IGc9ey4uLmgscGVyZm9ybWFuY2VNZWFzdXJlczooKGI9aC5wZXJmb3JtYW5jZU1lYXN1cmVzKT09bnVsbD92b2lkIDA6Yi5tYXAoTj0+KHsuLi5OLHN0cmF0ZWdpY0dvYWxJZDpOLnN0cmF0ZWdpY0dvYWxJZD09PSJub25lIj9udWxsOk4uc3RyYXRlZ2ljR29hbElkfSkpKXx8W119O28/di5tdXRhdGUoZyk6eC5tdXRhdGUoZyl9LHc9KCk9Pnt0KG8/YC9wcm9jZXNzLyR7ZX1gOiIvIil9O3JldHVybiBzfHwhbiYmIXM/aS5qc3goImRpdiIse2NsYXNzTmFtZToibWluLWgtc2NyZWVuIGZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktY2VudGVyIixjaGlsZHJlbjppLmpzeHMoImRpdiIse2NsYXNzTmFtZToidGV4dC1jZW50ZXIiLGNoaWxkcmVuOltpLmpzeCgiZGl2Iix7Y2xhc3NOYW1lOiJhbmltYXRlLXNwaW4gcm91bmRlZC1mdWxsIGgtOCB3LTggYm9yZGVyLWItMiBib3JkZXItcHJpbWFyeSBteC1hdXRvIG1iLTQifSksaS5qc3goInAiLHtjbGFzc05hbWU6InRleHQtbXV0ZWQtZm9yZWdyb3VuZCIsY2hpbGRyZW46IkxvYWRpbmcuLi4ifSldfSl9KTpvJiZjP2kuanN4cygiZGl2Iix7Y2xhc3NOYW1lOiJtaW4taC1zY3JlZW4gZmxleCBiZy1iYWNrZ3JvdW5kIixjaGlsZHJlbjpbaS5qc3goRnQse30pLGkuanN4cygibWFpbiIse2NsYXNzTmFtZToiZmxleC0xIG92ZXJmbG93LWF1dG8iLGNoaWxkcmVuOltpLmpzeChJdCx7fSksaS5qc3goImRpdiIse2NsYXNzTmFtZToicC02IixjaGlsZHJlbjppLmpzeHMoImRpdiIse2NsYXNzTmFtZToiYW5pbWF0ZS1wdWxzZSIsY2hpbGRyZW46W2kuanN4KCJkaXYiLHtjbGFzc05hbWU6ImgtOCBiZy1tdXRlZCByb3VuZGVkIG1iLTQgdy0xLzMifSksaS5qc3goImRpdiIse2NsYXNzTmFtZToiaC05NiBiZy1tdXRlZCByb3VuZGVkIn0pXX0pfSldfSldfSk6byYmIWw/aS5qc3hzKCJkaXYiLHtjbGFzc05hbWU6Im1pbi1oLXNjcmVlbiBmbGV4IGJnLWJhY2tncm91bmQiLGNoaWxkcmVuOltpLmpzeChGdCx7fSksaS5qc3hzKCJtYWluIix7Y2xhc3NOYW1lOiJmbGV4LTEgb3ZlcmZsb3ctYXV0byIsY2hpbGRyZW46W2kuanN4KEl0LHt9KSxpLmpzeCgiZGl2Iix7Y2xhc3NOYW1lOiJwLTYiLGNoaWxkcmVuOmkuanN4KGllLHtjaGlsZHJlbjppLmpzeHMobGUse2NsYXNzTmFtZToicC04IHRleHQtY2VudGVyIixjaGlsZHJlbjpbaS5qc3goRm4se2NsYXNzTmFtZToidy0xMiBoLTEyIHRleHQtbXV0ZWQtZm9yZWdyb3VuZCBteC1hdXRvIG1iLTQifSksaS5qc3goImgzIix7Y2xhc3NOYW1lOiJ0ZXh0LWxnIGZvbnQtc2VtaWJvbGQgbWItMiIsY2hpbGRyZW46IlByb2Nlc3MgTm90IEZvdW5kIn0pLGkuanN4KCJwIix7Y2xhc3NOYW1lOiJ0ZXh0LW11dGVkLWZvcmVncm91bmQgbWItNCIsY2hpbGRyZW46IlRoZSByZXF1ZXN0ZWQgcHJvY2VzcyBjb3VsZCBub3QgYmUgZm91bmQgb3IgeW91IGRvbid0IGhhdmUgcGVybWlzc2lvbiB0byBlZGl0IGl0LiJ9KSxpLmpzeHMoWSx7b25DbGljazooKT0+dCgiLyIpLCJkYXRhLXRlc3RpZCI6ImJ1dHRvbi1iYWNrLXRvLWRhc2hib2FyZCIsY2hpbGRyZW46W2kuanN4KG9pLHtjbGFzc05hbWU6InctNCBoLTQgbXItMiJ9KSwiQmFjayB0byBEYXNoYm9hcmQiXX0pXX0pfSl9KV19KV19KTppLmpzeHMoImRpdiIse2NsYXNzTmFtZToibWluLWgtc2NyZWVuIGZsZXggYmctYmFja2dyb3VuZCIsY2hpbGRyZW46W2kuanN4KEZ0LHt9KSxpLmpzeHMoIm1haW4iLHtjbGFzc05hbWU6ImZsZXgtMSBvdmVyZmxvdy1hdXRvIixjaGlsZHJlbjpbaS5qc3goSXQse30pLGkuanN4KCJkaXYiLHtjbGFzc05hbWU6InAtNiIsY2hpbGRyZW46aS5qc3hzKCJkaXYiLHtjbGFzc05hbWU6Im1heC13LTR4bCBteC1hdXRvIixjaGlsZHJlbjpbaS5qc3hzKCJkaXYiLHtjbGFzc05hbWU6ImZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktYmV0d2VlbiBtYi02IixjaGlsZHJlbjpbaS5qc3hzKCJkaXYiLHtjaGlsZHJlbjpbaS5qc3goImgxIix7Y2xhc3NOYW1lOiJ0ZXh0LTJ4bCBmb250LWJvbGQiLCJkYXRhLXRlc3RpZCI6ImVkaXRvci10aXRsZSIsY2hpbGRyZW46bz8iRWRpdCBQcm9jZXNzIjoiQ3JlYXRlIE5ldyBQcm9jZXNzIn0pLGkuanN4KCJwIix7Y2xhc3NOYW1lOiJ0ZXh0LW11dGVkLWZvcmVncm91bmQiLGNoaWxkcmVuOm8/Ik1vZGlmeSB0aGUgcHJvY2VzcyBkZXRhaWxzIGFuZCBjb21wb25lbnRzIjoiQ3JlYXRlIGEgbmV3IE9FIHByb2Nlc3MgZnJvbSBzY3JhdGNoIG9yIHRlbXBsYXRlIn0pXX0pLGkuanN4cyhZLHt2YXJpYW50OiJvdXRsaW5lIixvbkNsaWNrOncsImRhdGEtdGVzdGlkIjoiYnV0dG9uLWNhbmNlbCIsY2hpbGRyZW46W2kuanN4KG9pLHtjbGFzc05hbWU6InctNCBoLTQgbXItMiJ9KSwiQ2FuY2VsIl19KV19KSxpLmpzeChOUix7cHJvY2VzczpsLGVsZW1lbnRzOmR8fFtdLGlzTG9hZGluZzp4LmlzUGVuZGluZ3x8di5pc1BlbmRpbmcsb25TdWJtaXQ6bSxvbkNhbmNlbDp3fSldfSl9KV19KV19KX12YXIgVmg9IlN3aXRjaCIsW1NSLFVSXT1BcyhWaCksW2tSLEVSXT1TUihWaCksYmI9eS5mb3J3YXJkUmVmKChlLHQpPT57Y29uc3R7X19zY29wZVN3aXRjaDpyLG5hbWU6bixjaGVja2VkOnMsZGVmYXVsdENoZWNrZWQ6YSxyZXF1aXJlZDpvLGRpc2FibGVkOmwsdmFsdWU6Yz0ib24iLG9uQ2hlY2tlZENoYW5nZTp1LGZvcm06ZCwuLi5mfT1lLFtwLHhdPXkudXNlU3RhdGUobnVsbCksdj1ldCh0LGI9PngoYikpLG09eS51c2VSZWYoITEpLHc9cD9kfHwhIXAuY2xvc2VzdCgiZm9ybSIpOiEwLFtoPSExLGddPV9vKHtwcm9wOnMsZGVmYXVsdFByb3A6YSxvbkNoYW5nZTp1fSk7cmV0dXJuIGkuanN4cyhrUix7c2NvcGU6cixjaGVja2VkOmgsZGlzYWJsZWQ6bCxjaGlsZHJlbjpbaS5qc3goa2UuYnV0dG9uLHt0eXBlOiJidXR0b24iLHJvbGU6InN3aXRjaCIsImFyaWEtY2hlY2tlZCI6aCwiYXJpYS1yZXF1aXJlZCI6bywiZGF0YS1zdGF0ZSI6U2IoaCksImRhdGEtZGlzYWJsZWQiOmw/IiI6dm9pZCAwLGRpc2FibGVkOmwsdmFsdWU6YywuLi5mLHJlZjp2LG9uQ2xpY2s6d2UoZS5vbkNsaWNrLGI9PntnKE49PiFOKSx3JiYobS5jdXJyZW50PWIuaXNQcm9wYWdhdGlvblN0b3BwZWQoKSxtLmN1cnJlbnR8fGIuc3RvcFByb3BhZ2F0aW9uKCkpfSl9KSx3JiZpLmpzeChDUix7Y29udHJvbDpwLGJ1YmJsZXM6IW0uY3VycmVudCxuYW1lOm4sdmFsdWU6YyxjaGVja2VkOmgscmVxdWlyZWQ6byxkaXNhYmxlZDpsLGZvcm06ZCxzdHlsZTp7dHJhbnNmb3JtOiJ0cmFuc2xhdGVYKC0xMDAlKSJ9fSldfSl9KTtiYi5kaXNwbGF5TmFtZT1WaDt2YXIgamI9IlN3aXRjaFRodW1iIixOYj15LmZvcndhcmRSZWYoKGUsdCk9Pntjb25zdHtfX3Njb3BlU3dpdGNoOnIsLi4ubn09ZSxzPUVSKGpiLHIpO3JldHVybiBpLmpzeChrZS5zcGFuLHsiZGF0YS1zdGF0ZSI6U2Iocy5jaGVja2VkKSwiZGF0YS1kaXNhYmxlZCI6cy5kaXNhYmxlZD8iIjp2b2lkIDAsLi4ubixyZWY6dH0pfSk7TmIuZGlzcGxheU5hbWU9amI7dmFyIENSPWU9Pntjb25zdHtjb250cm9sOnQsY2hlY2tlZDpyLGJ1YmJsZXM6bj0hMCwuLi5zfT1lLGE9eS51c2VSZWYobnVsbCksbz1NaChyKSxsPUVoKHQpO3JldHVybiB5LnVzZUVmZmVjdCgoKT0+e2NvbnN0IGM9YS5jdXJyZW50LHU9d2luZG93LkhUTUxJbnB1dEVsZW1lbnQucHJvdG90eXBlLGY9T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcih1LCJjaGVja2VkIikuc2V0O2lmKG8hPT1yJiZmKXtjb25zdCBwPW5ldyBFdmVudCgiY2xpY2siLHtidWJibGVzOm59KTtmLmNhbGwoYyxyKSxjLmRpc3BhdGNoRXZlbnQocCl9fSxbbyxyLG5dKSxpLmpzeCgiaW5wdXQiLHt0eXBlOiJjaGVja2JveCIsImFyaWEtaGlkZGVuIjohMCxkZWZhdWx0Q2hlY2tlZDpyLC4uLnMsdGFiSW5kZXg6LTEscmVmOmEsc3R5bGU6ey4uLmUuc3R5bGUsLi4ubCxwb3NpdGlvbjoiYWJzb2x1dGUiLHBvaW50ZXJFdmVudHM6Im5vbmUiLG9wYWNpdHk6MCxtYXJnaW46MH19KX07ZnVuY3Rpb24gU2IoZSl7cmV0dXJuIGU/ImNoZWNrZWQiOiJ1bmNoZWNrZWQifXZhciBrYj1iYixfUj1OYjtjb25zdCBFYj15LmZvcndhcmRSZWYoKHtjbGFzc05hbWU6ZSwuLi50fSxyKT0+aS5qc3goa2Ise2NsYXNzTmFtZTpOZSgicGVlciBpbmxpbmUtZmxleCBoLTYgdy0xMSBzaHJpbmstMCBjdXJzb3ItcG9pbnRlciBpdGVtcy1jZW50ZXIgcm91bmRlZC1mdWxsIGJvcmRlci0yIGJvcmRlci10cmFuc3BhcmVudCB0cmFuc2l0aW9uLWNvbG9ycyBmb2N1cy12aXNpYmxlOm91dGxpbmUtbm9uZSBmb2N1cy12aXNpYmxlOnJpbmctMiBmb2N1cy12aXNpYmxlOnJpbmctcmluZyBmb2N1cy12aXNpYmxlOnJpbmctb2Zmc2V0LTIgZm9jdXMtdmlzaWJsZTpyaW5nLW9mZnNldC1iYWNrZ3JvdW5kIGRpc2FibGVkOmN1cnNvci1ub3QtYWxsb3dlZCBkaXNhYmxlZDpvcGFjaXR5LTUwIGRhdGEtW3N0YXRlPWNoZWNrZWRdOmJnLXByaW1hcnkgZGF0YS1bc3RhdGU9dW5jaGVja2VkXTpiZy1pbnB1dCIsZSksLi4udCxyZWY6cixjaGlsZHJlbjppLmpzeChfUix7Y2xhc3NOYW1lOk5lKCJwb2ludGVyLWV2ZW50cy1ub25lIGJsb2NrIGgtNSB3LTUgcm91bmRlZC1mdWxsIGJnLWJhY2tncm91bmQgc2hhZG93LWxnIHJpbmctMCB0cmFuc2l0aW9uLXRyYW5zZm9ybSBkYXRhLVtzdGF0ZT1jaGVja2VkXTp0cmFuc2xhdGUteC01IGRhdGEtW3N0YXRlPXVuY2hlY2tlZF06dHJhbnNsYXRlLXgtMCIpfSl9KSk7RWIuZGlzcGxheU5hbWU9a2IuZGlzcGxheU5hbWU7ZnVuY3Rpb24gZHgoKXtjb25zdHt0b2FzdDplfT1obigpLHtpc0F1dGhlbnRpY2F0ZWQ6dCxpc0xvYWRpbmc6cn09V3IoKSxbLG5dPWFoKCkse2lkOnN9PXJsKCksYT1DYSgpLG89ISFzLGw9W3t2YWx1ZToi8J+RkSIsbGFiZWw6IvCfkZEgQ3Jvd24ifSx7dmFsdWU6IvCfk4oiLGxhYmVsOiLwn5OKIENoYXJ0In0se3ZhbHVlOiLwn4+tIixsYWJlbDoi8J+PrSBGYWN0b3J5In0se3ZhbHVlOiLimpnvuI8iLGxhYmVsOiLimpnvuI8gR2VhciJ9LHt2YWx1ZToi8J+OryIsbGFiZWw6IvCfjq8gVGFyZ2V0In0se3ZhbHVlOiLwn5K8IixsYWJlbDoi8J+SvCBCcmllZmNhc2UifSx7dmFsdWU6IvCflJIiLGxhYmVsOiLwn5SSIFNlY3VyaXR5In0se3ZhbHVlOiLwn46TIixsYWJlbDoi8J+OkyBFZHVjYXRpb24ifSx7dmFsdWU6IvCfk4siLGxhYmVsOiLwn5OLIENsaXBib2FyZCJ9LHt2YWx1ZToi8J+agCIsbGFiZWw6IvCfmoAgUm9ja2V0In0se3ZhbHVlOiLwn5KhIixsYWJlbDoi8J+SoSBMaWdodGJ1bGIifSx7dmFsdWU6IvCflKciLGxhYmVsOiLwn5SnIFdyZW5jaCJ9LHt2YWx1ZToi8J+TiCIsbGFiZWw6IvCfk4ggR3Jvd3RoIn0se3ZhbHVlOiLwn4+GIixsYWJlbDoi8J+PhiBUcm9waHkifSx7dmFsdWU6IvCfjJ8iLGxhYmVsOiLwn4yfIFN0YXIifSx7dmFsdWU6IvCfkrAiLGxhYmVsOiLwn5KwIE1vbmV5In0se3ZhbHVlOiLwn5SNIixsYWJlbDoi8J+UjSBTZWFyY2gifSx7dmFsdWU6IvCfk7EiLGxhYmVsOiLwn5OxIE1vYmlsZSJ9LHt2YWx1ZToi8J+MjSIsbGFiZWw6IvCfjI0gR2xvYmUifSx7dmFsdWU6IvCflKUiLGxhYmVsOiLwn5SlIEZpcmUifV0sW2MsdV09eS51c2VTdGF0ZSh7ZWxlbWVudE51bWJlcjoxLHRpdGxlOiIiLGRlc2NyaXB0aW9uOiIiLGljb246IvCfk4siLGNvbG9yOiIjM0I4MkY2Iixpc0FjdGl2ZTohMH0pLHtkYXRhOmQsaXNMb2FkaW5nOmZ9PWJ0KHtxdWVyeUtleTpbIi9hcGkvb2UtZWxlbWVudHMiLHNdLGVuYWJsZWQ6byYmISFzfSk7eS51c2VFZmZlY3QoKCk9PntkJiZvJiZ1KHtlbGVtZW50TnVtYmVyOmQuZWxlbWVudE51bWJlcix0aXRsZTpkLnRpdGxlfHwiIixkZXNjcmlwdGlvbjpkLmRlc2NyaXB0aW9ufHwiIixpY29uOmQuaWNvbnx8IvCfk4siLGNvbG9yOmQuY29sb3J8fCIjM0I4MkY2Iixpc0FjdGl2ZTpkLmlzQWN0aXZlPz8hMH0pfSxbZCxvXSkseS51c2VFZmZlY3QoKCk9PntpZighciYmIXQpe2Uoe3RpdGxlOiJVbmF1dGhvcml6ZWQiLGRlc2NyaXB0aW9uOiJZb3UgYXJlIGxvZ2dlZCBvdXQuIExvZ2dpbmcgaW4gYWdhaW4uLi4iLHZhcmlhbnQ6ImRlc3RydWN0aXZlIn0pLHNldFRpbWVvdXQoKCk9Pnt3aW5kb3cubG9jYXRpb24uaHJlZj0iL2FwaS9sb2dpbiJ9LDUwMCk7cmV0dXJufX0sW3QscixlXSk7Y29uc3QgcD1fbih7bXV0YXRpb25Gbjphc3luYyBoPT5vP2F3YWl0IHNuKCJQVVQiLGAvYXBpL29lLWVsZW1lbnRzLyR7c31gLGgpOmF3YWl0IHNuKCJQT1NUIiwiL2FwaS9vZS1lbGVtZW50cyIsaCksb25TdWNjZXNzOigpPT57ZSh7dGl0bGU6IlN1Y2Nlc3MiLGRlc2NyaXB0aW9uOmBPRSBFbGVtZW50ICR7bz8idXBkYXRlZCI6ImNyZWF0ZWQifSBzdWNjZXNzZnVsbHlgfSksYS5pbnZhbGlkYXRlUXVlcmllcyh7cXVlcnlLZXk6WyIvYXBpL29lLWVsZW1lbnRzIl19KSxhLmludmFsaWRhdGVRdWVyaWVzKHtxdWVyeUtleTpbIi9hcGkvZGFzaGJvYXJkL3N0YXRzIl19KSxvJiZhLmludmFsaWRhdGVRdWVyaWVzKHtxdWVyeUtleTpbIi9hcGkvb2UtZWxlbWVudHMiLHNdfSksbihvP2AvZWxlbWVudC8ke3N9YDoiLyIpfSxvbkVycm9yOmg9PntpZihKdChoKSl7ZSh7dGl0bGU6IlVuYXV0aG9yaXplZCIsZGVzY3JpcHRpb246IllvdSBhcmUgbG9nZ2VkIG91dC4gTG9nZ2luZyBpbiBhZ2Fpbi4uLiIsdmFyaWFudDoiZGVzdHJ1Y3RpdmUifSksc2V0VGltZW91dCgoKT0+e3dpbmRvdy5sb2NhdGlvbi5ocmVmPSIvYXBpL2xvZ2luIn0sNTAwKTtyZXR1cm59ZSh7dGl0bGU6IkVycm9yIixkZXNjcmlwdGlvbjpgRmFpbGVkIHRvICR7bz8idXBkYXRlIjoiY3JlYXRlIn0gT0UgZWxlbWVudGAsdmFyaWFudDoiZGVzdHJ1Y3RpdmUifSl9fSkseD1fbih7bXV0YXRpb25Gbjphc3luYygpPT57aWYoIXMpdGhyb3cgbmV3IEVycm9yKCJObyBlbGVtZW50IElEIHByb3ZpZGVkIik7cmV0dXJuIGF3YWl0IHNuKCJERUxFVEUiLGAvYXBpL29lLWVsZW1lbnRzLyR7c31gKX0sb25TdWNjZXNzOigpPT57ZSh7dGl0bGU6IlN1Y2Nlc3MiLGRlc2NyaXB0aW9uOiJPRSBFbGVtZW50IGRlbGV0ZWQgc3VjY2Vzc2Z1bGx5In0pLGEuaW52YWxpZGF0ZVF1ZXJpZXMoe3F1ZXJ5S2V5OlsiL2FwaS9vZS1lbGVtZW50cyJdfSksYS5pbnZhbGlkYXRlUXVlcmllcyh7cXVlcnlLZXk6WyIvYXBpL2Rhc2hib2FyZC9zdGF0cyJdfSksYS5pbnZhbGlkYXRlUXVlcmllcyh7cXVlcnlLZXk6WyIvYXBpL2FjdGl2aXR5LWxvZyJdfSksbigiLyIpfSxvbkVycm9yOmg9PntpZihKdChoKSl7ZSh7dGl0bGU6IlVuYXV0aG9yaXplZCIsZGVzY3JpcHRpb246IllvdSBhcmUgbG9nZ2VkIG91dC4gTG9nZ2luZyBpbiBhZ2Fpbi4uLiIsdmFyaWFudDoiZGVzdHJ1Y3RpdmUifSksc2V0VGltZW91dCgoKT0+e3dpbmRvdy5sb2NhdGlvbi5ocmVmPSIvYXBpL2xvZ2luIn0sNTAwKTtyZXR1cm59ZSh7dGl0bGU6IkVycm9yIixkZXNjcmlwdGlvbjoiRmFpbGVkIHRvIGRlbGV0ZSBPRSBlbGVtZW50Iix2YXJpYW50OiJkZXN0cnVjdGl2ZSJ9KX19KSx2PWFzeW5jIGg9PntpZihoLnByZXZlbnREZWZhdWx0KCksIWMudGl0bGUudHJpbSgpKXtlKHt0aXRsZToiVmFsaWRhdGlvbiBFcnJvciIsZGVzY3JpcHRpb246IkVsZW1lbnQgdGl0bGUgaXMgcmVxdWlyZWQiLHZhcmlhbnQ6ImRlc3RydWN0aXZlIn0pO3JldHVybn1wLm11dGF0ZShjKX0sbT0oKT0+e24obz9gL2VsZW1lbnQvJHtzfWA6Ii8iKX0sdz0oKT0+e2lmKCFvfHwhZClyZXR1cm47d2luZG93LmNvbmZpcm0oYEFyZSB5b3Ugc3VyZSB5b3Ugd2FudCB0byBkZWxldGUgIiR7ZC50aXRsZX0iPwoKVGhpcyBhY3Rpb24gY2Fubm90IGJlIHVuZG9uZSBhbmQgd2lsbCByZW1vdmUgYWxsIGFzc29jaWF0ZWQgcHJvY2Vzc2VzIGFuZCBkYXRhLmApJiZ4Lm11dGF0ZSgpfTtyZXR1cm4gcnx8IXQmJiFyfHxvJiZmP2kuanN4KCJkaXYiLHtjbGFzc05hbWU6Im1pbi1oLXNjcmVlbiBmbGV4IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWNlbnRlciIsY2hpbGRyZW46aS5qc3hzKCJkaXYiLHtjbGFzc05hbWU6InRleHQtY2VudGVyIixjaGlsZHJlbjpbaS5qc3goImRpdiIse2NsYXNzTmFtZToiYW5pbWF0ZS1zcGluIHJvdW5kZWQtZnVsbCBoLTggdy04IGJvcmRlci1iLTIgYm9yZGVyLXByaW1hcnkgbXgtYXV0byBtYi00In0pLGkuanN4KCJwIix7Y2xhc3NOYW1lOiJ0ZXh0LW11dGVkLWZvcmVncm91bmQiLGNoaWxkcmVuOiJMb2FkaW5nLi4uIn0pXX0pfSk6aS5qc3hzKCJkaXYiLHtjbGFzc05hbWU6Im1pbi1oLXNjcmVlbiBmbGV4IGJnLWJhY2tncm91bmQiLGNoaWxkcmVuOltpLmpzeChGdCx7fSksaS5qc3hzKCJtYWluIix7Y2xhc3NOYW1lOiJmbGV4LTEgb3ZlcmZsb3ctYXV0byIsY2hpbGRyZW46W2kuanN4KEl0LHt9KSxpLmpzeCgiZGl2Iix7Y2xhc3NOYW1lOiJwLTYiLGNoaWxkcmVuOmkuanN4cygiZGl2Iix7Y2xhc3NOYW1lOiJtYXgtdy00eGwgbXgtYXV0byIsY2hpbGRyZW46W2kuanN4KCJkaXYiLHtjbGFzc05hbWU6ImZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktYmV0d2VlbiBtYi02IixjaGlsZHJlbjppLmpzeHMoImRpdiIse2NsYXNzTmFtZToiZmxleCBpdGVtcy1jZW50ZXIgc3BhY2UteC00IixjaGlsZHJlbjpbaS5qc3goWSx7dmFyaWFudDoiZ2hvc3QiLHNpemU6InNtIixhc0NoaWxkOiEwLCJkYXRhLXRlc3RpZCI6ImJ1dHRvbi1iYWNrIixjaGlsZHJlbjppLmpzeHModXQse2hyZWY6bz9gL2VsZW1lbnQvJHtzfWA6Ii8iLGNoaWxkcmVuOltpLmpzeChvaSx7Y2xhc3NOYW1lOiJ3LTQgaC00IG1yLTIifSksIkJhY2siXX0pfSksaS5qc3hzKCJkaXYiLHtjaGlsZHJlbjpbaS5qc3goImgxIix7Y2xhc3NOYW1lOiJ0ZXh0LTJ4bCBmb250LWJvbGQiLCJkYXRhLXRlc3RpZCI6ImVsZW1lbnQtZWRpdG9yLXRpdGxlIixjaGlsZHJlbjpvPyJFZGl0IE9FIEVsZW1lbnQiOiJDcmVhdGUgTmV3IE9FIEVsZW1lbnQifSksaS5qc3goInAiLHtjbGFzc05hbWU6InRleHQtbXV0ZWQtZm9yZWdyb3VuZCIsY2hpbGRyZW46bz8iTW9kaWZ5IHRoZSBPcGVyYXRpb25hbCBFeGNlbGxlbmNlIGVsZW1lbnQgZGV0YWlscyI6IkFkZCBhIG5ldyBPcGVyYXRpb25hbCBFeGNlbGxlbmNlIGVsZW1lbnQgdG8gdGhlIGZyYW1ld29yayJ9KV19KV19KX0pLGkuanN4cyhpZSx7Y2hpbGRyZW46W2kuanN4KEVlLHtjaGlsZHJlbjppLmpzeChDZSx7Y2hpbGRyZW46IkVsZW1lbnQgRGV0YWlscyJ9KX0pLGkuanN4KGxlLHtjaGlsZHJlbjppLmpzeHMoImZvcm0iLHtvblN1Ym1pdDp2LGNsYXNzTmFtZToic3BhY2UteS02IixjaGlsZHJlbjpbaS5qc3hzKCJkaXYiLHtjbGFzc05hbWU6ImdyaWQgZ3JpZC1jb2xzLTEgbWQ6Z3JpZC1jb2xzLTIgZ2FwLTYiLGNoaWxkcmVuOltpLmpzeHMoImRpdiIse2NsYXNzTmFtZToic3BhY2UteS0yIixjaGlsZHJlbjpbaS5qc3goVmUse2h0bWxGb3I6ImVsZW1lbnROdW1iZXIiLGNoaWxkcmVuOiJFbGVtZW50IE51bWJlciJ9KSxpLmpzeCh6ZSx7aWQ6ImVsZW1lbnROdW1iZXIiLHR5cGU6Im51bWJlciIsbWluOjEsdmFsdWU6Yy5lbGVtZW50TnVtYmVyLG9uQ2hhbmdlOmg9PnUoey4uLmMsZWxlbWVudE51bWJlcjpwYXJzZUludChoLnRhcmdldC52YWx1ZSl8fDF9KSwiZGF0YS10ZXN0aWQiOiJpbnB1dC1lbGVtZW50LW51bWJlciJ9KV19KSxpLmpzeHMoImRpdiIse2NsYXNzTmFtZToic3BhY2UteS0yIixjaGlsZHJlbjpbaS5qc3goVmUse2h0bWxGb3I6Imljb24iLGNoaWxkcmVuOiJJY29uIn0pLGkuanN4cyhqbix7dmFsdWU6Yy5pY29uLG9uVmFsdWVDaGFuZ2U6aD0+dSh7Li4uYyxpY29uOmh9KSxjaGlsZHJlbjpbaS5qc3goSnIseyJkYXRhLXRlc3RpZCI6InNlbGVjdC1pY29uIixjaGlsZHJlbjppLmpzeChObix7cGxhY2Vob2xkZXI6IlNlbGVjdCBhbiBpY29uIn0pfSksaS5qc3goZW4se2NoaWxkcmVuOmwubWFwKGg9PmkuanN4KFBlLHt2YWx1ZTpoLnZhbHVlLGNoaWxkcmVuOmgubGFiZWx9LGgudmFsdWUpKX0pXX0pXX0pXX0pLGkuanN4cygiZGl2Iix7Y2xhc3NOYW1lOiJzcGFjZS15LTIiLGNoaWxkcmVuOltpLmpzeChWZSx7aHRtbEZvcjoidGl0bGUiLGNoaWxkcmVuOiJFbGVtZW50IFRpdGxlIn0pLGkuanN4KHplLHtpZDoidGl0bGUiLHBsYWNlaG9sZGVyOiJFbnRlciBlbGVtZW50IHRpdGxlLi4uIix2YWx1ZTpjLnRpdGxlLG9uQ2hhbmdlOmg9PnUoey4uLmMsdGl0bGU6aC50YXJnZXQudmFsdWV9KSxyZXF1aXJlZDohMCwiZGF0YS10ZXN0aWQiOiJpbnB1dC10aXRsZSJ9KV19KSxpLmpzeHMoImRpdiIse2NsYXNzTmFtZToic3BhY2UteS0yIixjaGlsZHJlbjpbaS5qc3goVmUse2h0bWxGb3I6ImRlc2NyaXB0aW9uIixjaGlsZHJlbjoiRGVzY3JpcHRpb24ifSksaS5qc3gobm4se2lkOiJkZXNjcmlwdGlvbiIscGxhY2Vob2xkZXI6IkRlc2NyaWJlIHRoZSBwdXJwb3NlIGFuZCBzY29wZSBvZiB0aGlzIE9FIGVsZW1lbnQuLi4iLHZhbHVlOmMuZGVzY3JpcHRpb24sb25DaGFuZ2U6aD0+dSh7Li4uYyxkZXNjcmlwdGlvbjpoLnRhcmdldC52YWx1ZX0pLHJvd3M6NCwiZGF0YS10ZXN0aWQiOiJ0ZXh0YXJlYS1kZXNjcmlwdGlvbiJ9KV19KSxpLmpzeHMoImRpdiIse2NsYXNzTmFtZToiZ3JpZCBncmlkLWNvbHMtMSBtZDpncmlkLWNvbHMtMiBnYXAtNiIsY2hpbGRyZW46W2kuanN4cygiZGl2Iix7Y2xhc3NOYW1lOiJzcGFjZS15LTIiLGNoaWxkcmVuOltpLmpzeChWZSx7aHRtbEZvcjoiY29sb3IiLGNoaWxkcmVuOiJDb2xvciJ9KSxpLmpzeCh6ZSx7aWQ6ImNvbG9yIix0eXBlOiJjb2xvciIsdmFsdWU6Yy5jb2xvcixvbkNoYW5nZTpoPT51KHsuLi5jLGNvbG9yOmgudGFyZ2V0LnZhbHVlfSksImRhdGEtdGVzdGlkIjoiaW5wdXQtY29sb3IifSldfSksaS5qc3hzKCJkaXYiLHtjbGFzc05hbWU6ImZsZXggaXRlbXMtY2VudGVyIHNwYWNlLXgtMiIsY2hpbGRyZW46W2kuanN4KEViLHtpZDoiaXNBY3RpdmUiLGNoZWNrZWQ6Yy5pc0FjdGl2ZSxvbkNoZWNrZWRDaGFuZ2U6aD0+dSh7Li4uYyxpc0FjdGl2ZTpofSksImRhdGEtdGVzdGlkIjoic3dpdGNoLWFjdGl2ZSJ9KSxpLmpzeChWZSx7aHRtbEZvcjoiaXNBY3RpdmUiLGNoaWxkcmVuOiJBY3RpdmUgRWxlbWVudCJ9KV19KV19KSxpLmpzeHMoImRpdiIse2NsYXNzTmFtZToiZmxleCBpdGVtcy1jZW50ZXIganVzdGlmeS1iZXR3ZWVuIHB0LTYgYm9yZGVyLXQiLGNoaWxkcmVuOltvJiZpLmpzeHMoWSx7dHlwZToiYnV0dG9uIix2YXJpYW50OiJkZXN0cnVjdGl2ZSIsb25DbGljazp3LGRpc2FibGVkOnguaXNQZW5kaW5nLCJkYXRhLXRlc3RpZCI6ImJ1dHRvbi1kZWxldGUiLGNoaWxkcmVuOltpLmpzeChSYyx7Y2xhc3NOYW1lOiJ3LTQgaC00IG1yLTIifSkseC5pc1BlbmRpbmc/IkRlbGV0aW5nLi4uIjoiRGVsZXRlIEVsZW1lbnQiXX0pLGkuanN4cygiZGl2Iix7Y2xhc3NOYW1lOiJmbGV4IGl0ZW1zLWNlbnRlciBzcGFjZS14LTQgbWwtYXV0byIsY2hpbGRyZW46W2kuanN4cyhZLHt0eXBlOiJidXR0b24iLHZhcmlhbnQ6Im91dGxpbmUiLG9uQ2xpY2s6bSwiZGF0YS10ZXN0aWQiOiJidXR0b24tY2FuY2VsIixjaGlsZHJlbjpbaS5qc3goZ2gse2NsYXNzTmFtZToidy00IGgtNCBtci0yIn0pLCJDYW5jZWwiXX0pLGkuanN4cyhZLHt0eXBlOiJzdWJtaXQiLGRpc2FibGVkOnAuaXNQZW5kaW5nLCJkYXRhLXRlc3RpZCI6ImJ1dHRvbi1zYXZlIixjaGlsZHJlbjpbaS5qc3gocGgse2NsYXNzTmFtZToidy00IGgtNCBtci0yIn0pLHAuaXNQZW5kaW5nP28/IlVwZGF0aW5nLi4uIjoiQ3JlYXRpbmcuLi4iOm8/IlVwZGF0ZSBFbGVtZW50IjoiQ3JlYXRlIEVsZW1lbnQiXX0pXX0pXX0pXX0pfSldfSldfSl9KV19KV19KX1mdW5jdGlvbiBQUigpe3JldHVybiBpLmpzeCgiZGl2Iix7Y2xhc3NOYW1lOiJtaW4taC1zY3JlZW4gdy1mdWxsIGZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktY2VudGVyIGJnLWdyYXktNTAiLGNoaWxkcmVuOmkuanN4KGllLHtjbGFzc05hbWU6InctZnVsbCBtYXgtdy1tZCBteC00IixjaGlsZHJlbjppLmpzeHMobGUse2NsYXNzTmFtZToicHQtNiIsY2hpbGRyZW46W2kuanN4cygiZGl2Iix7Y2xhc3NOYW1lOiJmbGV4IG1iLTQgZ2FwLTIiLGNoaWxkcmVuOltpLmpzeChsRSx7Y2xhc3NOYW1lOiJoLTggdy04IHRleHQtcmVkLTUwMCJ9KSxpLmpzeCgiaDEiLHtjbGFzc05hbWU6InRleHQtMnhsIGZvbnQtYm9sZCB0ZXh0LWdyYXktOTAwIixjaGlsZHJlbjoiNDA0IFBhZ2UgTm90IEZvdW5kIn0pXX0pLGkuanN4KCJwIix7Y2xhc3NOYW1lOiJtdC00IHRleHQtc20gdGV4dC1ncmF5LTYwMCIsY2hpbGRyZW46IkRpZCB5b3UgZm9yZ2V0IHRvIGFkZCB0aGUgcGFnZSB0byB0aGUgcm91dGVyPyJ9KV19KX0pfSl9ZnVuY3Rpb24gVFIoKXtjb25zdHtpc0F1dGhlbnRpY2F0ZWQ6ZSxpc0xvYWRpbmc6dH09V3IoKTtyZXR1cm4gaS5qc3hzKFJTLHtjaGlsZHJlbjpbdHx8IWU/aS5qc3goaXIse3BhdGg6Ii8iLGNvbXBvbmVudDpJQ30pOmkuanN4cyhpLkZyYWdtZW50LHtjaGlsZHJlbjpbaS5qc3goaXIse3BhdGg6Ii8iLGNvbXBvbmVudDpRQ30pLGkuanN4KGlyLHtwYXRoOiIvcHJvY2Vzc2VzIixjb21wb25lbnQ6d1B9KSxpLmpzeChpcix7cGF0aDoiL21pbmRtYXAiLGNvbXBvbmVudDpFUH0pLGkuanN4KGlyLHtwYXRoOiIvc2NvcmVjYXJkIixjb21wb25lbnQ6UFB9KSxpLmpzeChpcix7cGF0aDoiL3Jpc2stbWFuYWdlbWVudCIsY29tcG9uZW50OlRQfSksaS5qc3goaXIse3BhdGg6Ii9lbGVtZW50LzppZCIsY29tcG9uZW50OkFQfSksaS5qc3goaXIse3BhdGg6Ii9wcm9jZXNzLzppZCIsY29tcG9uZW50OklQfSksaS5qc3goaXIse3BhdGg6Ii9wcm9jZXNzLzppZC9lZGl0Iixjb21wb25lbnQ6dXh9KSxpLmpzeChpcix7cGF0aDoiL2NyZWF0ZS1wcm9jZXNzIixjb21wb25lbnQ6dXh9KSxpLmpzeChpcix7cGF0aDoiL2NyZWF0ZS1lbGVtZW50Iixjb21wb25lbnQ6ZHh9KSxpLmpzeChpcix7cGF0aDoiL2VsZW1lbnQvOmlkL2VkaXQiLGNvbXBvbmVudDpkeH0pXX0pLGkuanN4KGlyLHtjb21wb25lbnQ6UFJ9KV19KX1mdW5jdGlvbiBSUigpe3JldHVybiBpLmpzeChZUyx7Y2xpZW50OmNrLGNoaWxkcmVuOmkuanN4cyhSQyx7Y2hpbGRyZW46W2kuanN4KGkyLHt9KSxpLmpzeChUUix7fSldfSl9KX1JeShkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgicm9vdCIpKS5yZW5kZXIoaS5qc3goUlIse30pKTtleHBvcnR7TDEgYXMgXyxNUiBhcyBjLGp4IGFzIGd9Owo=
:FILE_80_END

:FILE_81_PATH
dist/public/assets/index.es-CH0iJgpZ.js
:FILE_81_DATA

:FILE_81_END

:FILE_82_PATH
dist/public/assets/jspdf.es.min-C8qLfv9P.js
:FILE_82_DATA

:FILE_82_END

:FILE_83_PATH
dist/public/assets/purify.es-BFmuJLeH.js
:FILE_83_DATA

:FILE_83_END

:FILE_84_PATH
dist/public/index.html
:FILE_84_DATA
PCFET0NUWVBFIGh0bWw+CjxodG1sIGxhbmc9ImVuIj4KICA8aGVhZD4KICAgIDxtZXRhIGNoYXJzZXQ9IlVURi04IiAvPgogICAgPG1ldGEgbmFtZT0idmlld3BvcnQiIGNvbnRlbnQ9IndpZHRoPWRldmljZS13aWR0aCwgaW5pdGlhbC1zY2FsZT0xLjAsIG1heGltdW0tc2NhbGU9MSIgLz4KICAgIDxsaW5rIHJlbD0icHJlY29ubmVjdCIgaHJlZj0iaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbSI+CiAgICA8bGluayByZWw9InByZWNvbm5lY3QiIGhyZWY9Imh0dHBzOi8vZm9udHMuZ3N0YXRpYy5jb20iIGNyb3Nzb3JpZ2luPgogICAgPGxpbmsgaHJlZj0iaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3MyP2ZhbWlseT1BcmNoaXRlY3RzK0RhdWdodGVyJmZhbWlseT1ETStTYW5zOml0YWwsb3Bzeix3Z2h0QDAsOS4uNDAsMTAwLi4xMDAwOzEsOS4uNDAsMTAwLi4xMDAwJmZhbWlseT1GaXJhK0NvZGU6d2dodEAzMDAuLjcwMCZmYW1pbHk9R2Vpc3QrTW9ubzp3Z2h0QDEwMC4uOTAwJmZhbWlseT1HZWlzdDp3Z2h0QDEwMC4uOTAwJmZhbWlseT1JQk0rUGxleCtNb25vOml0YWwsd2dodEAwLDEwMDswLDIwMDswLDMwMDswLDQwMDswLDUwMDswLDYwMDswLDcwMDsxLDEwMDsxLDIwMDsxLDMwMDsxLDQwMDsxLDUwMDsxLDYwMDsxLDcwMCZmYW1pbHk9SUJNK1BsZXgrU2FuczppdGFsLHdnaHRAMCwxMDAuLjcwMDsxLDEwMC4uNzAwJmZhbWlseT1JbnRlcjppdGFsLG9wc3osd2dodEAwLDE0Li4zMiwxMDAuLjkwMDsxLDE0Li4zMiwxMDAuLjkwMCZmYW1pbHk9SmV0QnJhaW5zK01vbm86aXRhbCx3Z2h0QDAsMTAwLi44MDA7MSwxMDAuLjgwMCZmYW1pbHk9TGlicmUrQmFza2VydmlsbGU6aXRhbCx3Z2h0QDAsNDAwOzAsNzAwOzEsNDAwJmZhbWlseT1Mb3JhOml0YWwsd2dodEAwLDQwMC4uNzAwOzEsNDAwLi43MDAmZmFtaWx5PU1lcnJpd2VhdGhlcjppdGFsLG9wc3osd2dodEAwLDE4Li4xNDQsMzAwLi45MDA7MSwxOC4uMTQ0LDMwMC4uOTAwJmZhbWlseT1Nb250c2VycmF0Oml0YWwsd2dodEAwLDEwMC4uOTAwOzEsMTAwLi45MDAmZmFtaWx5PU9wZW4rU2FuczppdGFsLHdnaHRAMCwzMDAuLjgwMDsxLDMwMC4uODAwJmZhbWlseT1PdXRmaXQ6d2dodEAxMDAuLjkwMCZmYW1pbHk9T3hhbml1bTp3Z2h0QDIwMC4uODAwJmZhbWlseT1QbGF5ZmFpcitEaXNwbGF5Oml0YWwsd2dodEAwLDQwMC4uOTAwOzEsNDAwLi45MDAmZmFtaWx5PVBsdXMrSmFrYXJ0YStTYW5zOml0YWwsd2dodEAwLDIwMC4uODAwOzEsMjAwLi44MDAmZmFtaWx5PVBvcHBpbnM6aXRhbCx3Z2h0QDAsMTAwOzAsMjAwOzAsMzAwOzAsNDAwOzAsNTAwOzAsNjAwOzAsNzAwOzAsODAwOzAsOTAwOzEsMTAwOzEsMjAwOzEsMzAwOzEsNDAwOzEsNTAwOzEsNjAwOzEsNzAwOzEsODAwOzEsOTAwJmZhbWlseT1Sb2JvdG8rTW9ubzppdGFsLHdnaHRAMCwxMDAuLjcwMDsxLDEwMC4uNzAwJmZhbWlseT1Sb2JvdG86aXRhbCx3Z2h0QDAsMTAwLi45MDA7MSwxMDAuLjkwMCZmYW1pbHk9U291cmNlK0NvZGUrUHJvOml0YWwsd2dodEAwLDIwMC4uOTAwOzEsMjAwLi45MDAmZmFtaWx5PVNvdXJjZStTZXJpZis0Oml0YWwsb3Bzeix3Z2h0QDAsOC4uNjAsMjAwLi45MDA7MSw4Li42MCwyMDAuLjkwMCZmYW1pbHk9U3BhY2UrR3JvdGVzazp3Z2h0QDMwMC4uNzAwJmZhbWlseT1TcGFjZStNb25vOml0YWwsd2dodEAwLDQwMDswLDcwMDsxLDQwMDsxLDcwMCZkaXNwbGF5PXN3YXAiIHJlbD0ic3R5bGVzaGVldCI+CiAgICA8c2NyaXB0IHR5cGU9Im1vZHVsZSIgY3Jvc3NvcmlnaW4gc3JjPSIvYXNzZXRzL2luZGV4LURiSWJnaGhnLmpzIj48L3NjcmlwdD4KICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgY3Jvc3NvcmlnaW4gaHJlZj0iL2Fzc2V0cy9pbmRleC1ETmRMZUx0ZS5jc3MiPgogIDwvaGVhZD4KICA8Ym9keT4KICAgIDxkaXYgaWQ9InJvb3QiPjwvZGl2PgogICAgPCEtLSBUaGlzIGlzIGEgcmVwbGl0IHNjcmlwdCB3aGljaCBhZGRzIGEgYmFubmVyIG9uIHRoZSB0b3Agb2YgdGhlIHBhZ2Ugd2hlbiBvcGVuZWQgaW4gZGV2ZWxvcG1lbnQgbW9kZSBvdXRzaWRlIHRoZSByZXBsaXQgZW52aXJvbm1lbnQgLS0+CiAgICA8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCIgc3JjPSJodHRwczovL3JlcGxpdC5jb20vcHVibGljL2pzL3JlcGxpdC1kZXYtYmFubmVyLmpzIj48L3NjcmlwdD4KICA8L2JvZHk+CjwvaHRtbD4=
:FILE_84_END

:FILE_85_PATH
package-lock.json
:FILE_85_DATA

:FILE_85_END

:FILE_86_PATH
package.json
:FILE_86_DATA
ewogICJuYW1lIjogInJlc3QtZXhwcmVzcyIsCiAgInZlcnNpb24iOiAiMS4wLjAiLAogICJ0eXBlIjogIm1vZHVsZSIsCiAgImxpY2Vuc2UiOiAiTUlUIiwKICAic2NyaXB0cyI6IHsKICAgICJkZXYiOiAiTk9ERV9FTlY9ZGV2ZWxvcG1lbnQgdHN4IHNlcnZlci9pbmRleC50cyIsCiAgICAiYnVpbGQiOiAidml0ZSBidWlsZCAmJiBlc2J1aWxkIHNlcnZlci9pbmRleC50cyAtLXBsYXRmb3JtPW5vZGUgLS1wYWNrYWdlcz1leHRlcm5hbCAtLWJ1bmRsZSAtLWZvcm1hdD1lc20gLS1vdXRkaXI9ZGlzdCIsCiAgICAic3RhcnQiOiAiTk9ERV9FTlY9cHJvZHVjdGlvbiBub2RlIGRpc3QvaW5kZXguanMiLAogICAgImNoZWNrIjogInRzYyIsCiAgICAiZGI6cHVzaCI6ICJkcml6emxlLWtpdCBwdXNoIgogIH0sCiAgImRlcGVuZGVuY2llcyI6IHsKICAgICJAaG9va2Zvcm0vcmVzb2x2ZXJzIjogIl4zLjEwLjAiLAogICAgIkBqcmlkZ2V3ZWxsL3RyYWNlLW1hcHBpbmciOiAiXjAuMy4yNSIsCiAgICAiQG5lb25kYXRhYmFzZS9zZXJ2ZXJsZXNzIjogIl4wLjEwLjQiLAogICAgIkByYWRpeC11aS9yZWFjdC1hY2NvcmRpb24iOiAiXjEuMi40IiwKICAgICJAcmFkaXgtdWkvcmVhY3QtYWxlcnQtZGlhbG9nIjogIl4xLjEuNyIsCiAgICAiQHJhZGl4LXVpL3JlYWN0LWFzcGVjdC1yYXRpbyI6ICJeMS4xLjMiLAogICAgIkByYWRpeC11aS9yZWFjdC1hdmF0YXIiOiAiXjEuMS40IiwKICAgICJAcmFkaXgtdWkvcmVhY3QtY2hlY2tib3giOiAiXjEuMS41IiwKICAgICJAcmFkaXgtdWkvcmVhY3QtY29sbGFwc2libGUiOiAiXjEuMS40IiwKICAgICJAcmFkaXgtdWkvcmVhY3QtY29udGV4dC1tZW51IjogIl4yLjIuNyIsCiAgICAiQHJhZGl4LXVpL3JlYWN0LWRpYWxvZyI6ICJeMS4xLjciLAogICAgIkByYWRpeC11aS9yZWFjdC1kcm9wZG93bi1tZW51IjogIl4yLjEuNyIsCiAgICAiQHJhZGl4LXVpL3JlYWN0LWhvdmVyLWNhcmQiOiAiXjEuMS43IiwKICAgICJAcmFkaXgtdWkvcmVhY3QtbGFiZWwiOiAiXjIuMS4zIiwKICAgICJAcmFkaXgtdWkvcmVhY3QtbWVudWJhciI6ICJeMS4xLjciLAogICAgIkByYWRpeC11aS9yZWFjdC1uYXZpZ2F0aW9uLW1lbnUiOiAiXjEuMi42IiwKICAgICJAcmFkaXgtdWkvcmVhY3QtcG9wb3ZlciI6ICJeMS4xLjciLAogICAgIkByYWRpeC11aS9yZWFjdC1wcm9ncmVzcyI6ICJeMS4xLjMiLAogICAgIkByYWRpeC11aS9yZWFjdC1yYWRpby1ncm91cCI6ICJeMS4yLjQiLAogICAgIkByYWRpeC11aS9yZWFjdC1zY3JvbGwtYXJlYSI6ICJeMS4yLjQiLAogICAgIkByYWRpeC11aS9yZWFjdC1zZWxlY3QiOiAiXjIuMS43IiwKICAgICJAcmFkaXgtdWkvcmVhY3Qtc2VwYXJhdG9yIjogIl4xLjEuMyIsCiAgICAiQHJhZGl4LXVpL3JlYWN0LXNsaWRlciI6ICJeMS4yLjQiLAogICAgIkByYWRpeC11aS9yZWFjdC1zbG90IjogIl4xLjIuMCIsCiAgICAiQHJhZGl4LXVpL3JlYWN0LXN3aXRjaCI6ICJeMS4xLjQiLAogICAgIkByYWRpeC11aS9yZWFjdC10YWJzIjogIl4xLjEuNCIsCiAgICAiQHJhZGl4LXVpL3JlYWN0LXRvYXN0IjogIl4xLjIuNyIsCiAgICAiQHJhZGl4LXVpL3JlYWN0LXRvZ2dsZSI6ICJeMS4xLjMiLAogICAgIkByYWRpeC11aS9yZWFjdC10b2dnbGUtZ3JvdXAiOiAiXjEuMS4zIiwKICAgICJAcmFkaXgtdWkvcmVhY3QtdG9vbHRpcCI6ICJeMS4yLjAiLAogICAgIkB0YW5zdGFjay9yZWFjdC1xdWVyeSI6ICJeNS42MC41IiwKICAgICJAdHlwZXMvYmV0dGVyLXNxbGl0ZTMiOiAiXjcuNi4xMyIsCiAgICAiQHR5cGVzL21lbW9pemVlIjogIl4wLjQuMTIiLAogICAgImJldHRlci1zcWxpdGUzIjogIl4xMi4yLjAiLAogICAgImNsYXNzLXZhcmlhbmNlLWF1dGhvcml0eSI6ICJeMC43LjEiLAogICAgImNsc3giOiAiXjIuMS4xIiwKICAgICJjbWRrIjogIl4xLjEuMSIsCiAgICAiY29uY3VycmVudGx5IjogIl45LjIuMSIsCiAgICAiY29ubmVjdC1wZy1zaW1wbGUiOiAiXjEwLjAuMCIsCiAgICAiY3Jvc3MtZW52IjogIl4xMC4wLjAiLAogICAgImRhdGUtZm5zIjogIl4zLjYuMCIsCiAgICAiZHJpenpsZS1vcm0iOiAiXjAuMzkuMSIsCiAgICAiZHJpenpsZS16b2QiOiAiXjAuNy4wIiwKICAgICJlbGVjdHJvbiI6ICJeMzcuNC4wIiwKICAgICJlbGVjdHJvbi1idWlsZGVyIjogIl4yNi4wLjEyIiwKICAgICJlbWJsYS1jYXJvdXNlbC1yZWFjdCI6ICJeOC42LjAiLAogICAgImV4cHJlc3MiOiAiXjQuMjEuMiIsCiAgICAiZXhwcmVzcy1zZXNzaW9uIjogIl4xLjE4LjEiLAogICAgImZyYW1lci1tb3Rpb24iOiAiXjExLjEzLjEiLAogICAgImh0bWwyY2FudmFzIjogIl4xLjQuMSIsCiAgICAiaW5wdXQtb3RwIjogIl4xLjQuMiIsCiAgICAianNwZGYiOiAiXjMuMC4yIiwKICAgICJsdWNpZGUtcmVhY3QiOiAiXjAuNDUzLjAiLAogICAgIm1lbW9pemVlIjogIl4wLjQuMTciLAogICAgIm1lbW9yeXN0b3JlIjogIl4xLjYuNyIsCiAgICAibmFub2lkIjogIl41LjEuNSIsCiAgICAibmV4dC10aGVtZXMiOiAiXjAuNC42IiwKICAgICJvcGVuaWQtY2xpZW50IjogIl42LjYuNCIsCiAgICAicGFzc3BvcnQiOiAiXjAuNy4wIiwKICAgICJwYXNzcG9ydC1sb2NhbCI6ICJeMS4wLjAiLAogICAgInJlYWN0IjogIl4xOC4zLjEiLAogICAgInJlYWN0LWRheS1waWNrZXIiOiAiXjguMTAuMSIsCiAgICAicmVhY3QtZG9tIjogIl4xOC4zLjEiLAogICAgInJlYWN0LWhvb2stZm9ybSI6ICJeNy41NS4wIiwKICAgICJyZWFjdC1pY29ucyI6ICJeNS40LjAiLAogICAgInJlYWN0LXJlc2l6YWJsZS1wYW5lbHMiOiAiXjIuMS43IiwKICAgICJyZWNoYXJ0cyI6ICJeMi4xNS4yIiwKICAgICJyaW1yYWYiOiAiXjYuMC4xIiwKICAgICJ0YWlsd2luZC1tZXJnZSI6ICJeMi42LjAiLAogICAgInRhaWx3aW5kY3NzLWFuaW1hdGUiOiAiXjEuMC43IiwKICAgICJ0dy1hbmltYXRlLWNzcyI6ICJeMS4yLjUiLAogICAgInZhdWwiOiAiXjEuMS4yIiwKICAgICJ3YWl0LW9uIjogIl44LjAuNCIsCiAgICAid291dGVyIjogIl4zLjMuNSIsCiAgICAid3MiOiAiXjguMTguMCIsCiAgICAiem9kIjogIl4zLjI0LjIiLAogICAgInpvZC12YWxpZGF0aW9uLWVycm9yIjogIl4zLjQuMCIKICB9LAogICJkZXZEZXBlbmRlbmNpZXMiOiB7CiAgICAiQHJlcGxpdC92aXRlLXBsdWdpbi1jYXJ0b2dyYXBoZXIiOiAiXjAuMy4wIiwKICAgICJAcmVwbGl0L3ZpdGUtcGx1Z2luLXJ1bnRpbWUtZXJyb3ItbW9kYWwiOiAiXjAuMC4zIiwKICAgICJAdGFpbHdpbmRjc3MvdHlwb2dyYXBoeSI6ICJeMC41LjE1IiwKICAgICJAdGFpbHdpbmRjc3Mvdml0ZSI6ICJeNC4xLjMiLAogICAgIkB0eXBlcy9jb25uZWN0LXBnLXNpbXBsZSI6ICJeNy4wLjMiLAogICAgIkB0eXBlcy9leHByZXNzIjogIjQuMTcuMjEiLAogICAgIkB0eXBlcy9leHByZXNzLXNlc3Npb24iOiAiXjEuMTguMCIsCiAgICAiQHR5cGVzL25vZGUiOiAiMjAuMTYuMTEiLAogICAgIkB0eXBlcy9wYXNzcG9ydCI6ICJeMS4wLjE2IiwKICAgICJAdHlwZXMvcGFzc3BvcnQtbG9jYWwiOiAiXjEuMC4zOCIsCiAgICAiQHR5cGVzL3JlYWN0IjogIl4xOC4zLjExIiwKICAgICJAdHlwZXMvcmVhY3QtZG9tIjogIl4xOC4zLjEiLAogICAgIkB0eXBlcy93cyI6ICJeOC41LjEzIiwKICAgICJAdml0ZWpzL3BsdWdpbi1yZWFjdCI6ICJeNC4zLjIiLAogICAgImF1dG9wcmVmaXhlciI6ICJeMTAuNC4yMCIsCiAgICAiZHJpenpsZS1raXQiOiAiXjAuMzAuNCIsCiAgICAiZXNidWlsZCI6ICJeMC4yNS4wIiwKICAgICJwb3N0Y3NzIjogIl44LjQuNDciLAogICAgInRhaWx3aW5kY3NzIjogIl4zLjQuMTciLAogICAgInRzeCI6ICJeNC4xOS4xIiwKICAgICJ0eXBlc2NyaXB0IjogIjUuNi4zIiwKICAgICJ2aXRlIjogIl41LjQuMTkiCiAgfSwKICAib3B0aW9uYWxEZXBlbmRlbmNpZXMiOiB7CiAgICAiYnVmZmVydXRpbCI6ICJeNC4wLjgiCiAgfQp9Cg==
:FILE_86_END

:FILE_87_PATH
server/db-local.ts
:FILE_87_DATA
aW1wb3J0IERhdGFiYXNlIGZyb20gJ2JldHRlci1zcWxpdGUzJzsKaW1wb3J0IHsgZHJpenpsZSB9IGZyb20gJ2RyaXp6bGUtb3JtL2JldHRlci1zcWxpdGUzJzsKaW1wb3J0IHsgbWlncmF0ZSB9IGZyb20gJ2RyaXp6bGUtb3JtL2JldHRlci1zcWxpdGUzL21pZ3JhdG9yJzsKaW1wb3J0ICogYXMgc2NoZW1hIGZyb20gIkBzaGFyZWQvc2NoZW1hIjsKaW1wb3J0IHBhdGggZnJvbSAncGF0aCc7CmltcG9ydCBvcyBmcm9tICdvcyc7CmltcG9ydCBmcyBmcm9tICdmcyc7CgovLyBDcmVhdGUgdXNlciBkYXRhIGRpcmVjdG9yeSBmb3IgdGhlIGRlc2t0b3AgYXBwCmNvbnN0IHVzZXJEYXRhUGF0aCA9IHByb2Nlc3MuZW52LkVMRUNUUk9OX1VTRVJfREFUQSB8fCBwYXRoLmpvaW4ob3MuaG9tZWRpcigpLCAnLndzbS1vZS1tYW5hZ2VyJyk7CmlmICghZnMuZXhpc3RzU3luYyh1c2VyRGF0YVBhdGgpKSB7CiAgZnMubWtkaXJTeW5jKHVzZXJEYXRhUGF0aCwgeyByZWN1cnNpdmU6IHRydWUgfSk7Cn0KCmNvbnN0IGRiUGF0aCA9IHBhdGguam9pbih1c2VyRGF0YVBhdGgsICd3c20tb2UuZGInKTsKCi8vIENyZWF0ZSBTUUxpdGUgY29ubmVjdGlvbgpjb25zdCBzcWxpdGUgPSBuZXcgRGF0YWJhc2UoZGJQYXRoKTsKCi8vIEVuYWJsZSBmb3JlaWduIGtleXMgYW5kIFdBTCBtb2RlIGZvciBiZXR0ZXIgcGVyZm9ybWFuY2UKc3FsaXRlLnByYWdtYSgnZm9yZWlnbl9rZXlzID0gT04nKTsKc3FsaXRlLnByYWdtYSgnam91cm5hbF9tb2RlID0gV0FMJyk7CgovLyBDcmVhdGUgZHJpenpsZSBpbnN0YW5jZQpleHBvcnQgY29uc3QgZGIgPSBkcml6emxlKHNxbGl0ZSwgeyBzY2hlbWEgfSk7CgovLyBJbml0aWFsaXplIGRhdGFiYXNlIHdpdGggdGFibGVzIGlmIHRoZXkgZG9uJ3QgZXhpc3QKZXhwb3J0IGZ1bmN0aW9uIGluaXRpYWxpemVEYXRhYmFzZSgpIHsKICBjb25zb2xlLmxvZygnSW5pdGlhbGl6aW5nIGRhdGFiYXNlIGF0OicsIGRiUGF0aCk7CiAgCiAgLy8gQ3JlYXRlIHRhYmxlcyBtYW51YWxseSBzaW5jZSB3ZSdyZSB1c2luZyBTUUxpdGUKICBjb25zdCBjcmVhdGVUYWJsZXNTUUwgPSBgCiAgICAtLSBTZXNzaW9ucyB0YWJsZSBmb3IgYXV0aGVudGljYXRpb24KICAgIENSRUFURSBUQUJMRSBJRiBOT1QgRVhJU1RTIHNlc3Npb25zICgKICAgICAgc2lkIFRFWFQgUFJJTUFSWSBLRVksCiAgICAgIHNlc3MgVEVYVCBOT1QgTlVMTCwKICAgICAgZXhwaXJlIERBVEVUSU1FIE5PVCBOVUxMCiAgICApOwogICAgCiAgICBDUkVBVEUgSU5ERVggSUYgTk9UIEVYSVNUUyBJRFhfc2Vzc2lvbl9leHBpcmUgT04gc2Vzc2lvbnMoZXhwaXJlKTsKICAgIAogICAgLS0gVXNlcnMgdGFibGUKICAgIENSRUFURSBUQUJMRSBJRiBOT1QgRVhJU1RTIHVzZXJzICgKICAgICAgaWQgVEVYVCBQUklNQVJZIEtFWSBERUZBVUxUIChoZXgocmFuZG9tYmxvYigxNikpKSwKICAgICAgZW1haWwgVEVYVCBVTklRVUUsCiAgICAgIGZpcnN0X25hbWUgVEVYVCwKICAgICAgbGFzdF9uYW1lIFRFWFQsCiAgICAgIHByb2ZpbGVfaW1hZ2VfdXJsIFRFWFQsCiAgICAgIGNyZWF0ZWRfYXQgREFURVRJTUUgREVGQVVMVCBDVVJSRU5UX1RJTUVTVEFNUCwKICAgICAgdXBkYXRlZF9hdCBEQVRFVElNRSBERUZBVUxUIENVUlJFTlRfVElNRVNUQU1QCiAgICApOwogICAgCiAgICAtLSBPRSBFbGVtZW50cyB0YWJsZQogICAgQ1JFQVRFIFRBQkxFIElGIE5PVCBFWElTVFMgb2VfZWxlbWVudHMgKAogICAgICBpZCBURVhUIFBSSU1BUlkgS0VZIERFRkFVTFQgKGhleChyYW5kb21ibG9iKDE2KSkpLAogICAgICBlbGVtZW50X251bWJlciBJTlRFR0VSIE5PVCBOVUxMIFVOSVFVRSwKICAgICAgdGl0bGUgVEVYVCBOT1QgTlVMTCwKICAgICAgZGVzY3JpcHRpb24gVEVYVCwKICAgICAgY3JlYXRlZF9hdCBEQVRFVElNRSBERUZBVUxUIENVUlJFTlRfVElNRVNUQU1QLAogICAgICB1cGRhdGVkX2F0IERBVEVUSU1FIERFRkFVTFQgQ1VSUkVOVF9USU1FU1RBTVAKICAgICk7CiAgICAKICAgIC0tIE9FIFByb2Nlc3NlcyB0YWJsZQogICAgQ1JFQVRFIFRBQkxFIElGIE5PVCBFWElTVFMgb2VfcHJvY2Vzc2VzICgKICAgICAgaWQgVEVYVCBQUklNQVJZIEtFWSBERUZBVUxUIChoZXgocmFuZG9tYmxvYigxNikpKSwKICAgICAgZWxlbWVudF9pZCBURVhUIE5PVCBOVUxMLAogICAgICBwcm9jZXNzX251bWJlciBURVhUIE5PVCBOVUxMLAogICAgICBuYW1lIFRFWFQgTk9UIE5VTEwsCiAgICAgIGRlc2NyaXB0aW9uIFRFWFQsCiAgICAgIHByb2Nlc3Nfb3duZXIgVEVYVCwKICAgICAgcmV2aWV3X2ZyZXF1ZW5jeSBURVhULAogICAgICBsYXN0X3Jldmlld19kYXRlIERBVEVUSU1FLAogICAgICBuZXh0X3Jldmlld19kYXRlIERBVEVUSU1FLAogICAgICBwcm9jZXNzX3N0YXR1cyBURVhUIERFRkFVTFQgJ2FjdGl2ZScsCiAgICAgIGNyZWF0ZWRfYXQgREFURVRJTUUgREVGQVVMVCBDVVJSRU5UX1RJTUVTVEFNUCwKICAgICAgdXBkYXRlZF9hdCBEQVRFVElNRSBERUZBVUxUIENVUlJFTlRfVElNRVNUQU1QLAogICAgICBGT1JFSUdOIEtFWSAoZWxlbWVudF9pZCkgUkVGRVJFTkNFUyBvZV9lbGVtZW50cyhpZCkgT04gREVMRVRFIENBU0NBREUKICAgICk7CiAgICAKICAgIC0tIFByb2Nlc3MgU3RlcHMgdGFibGUKICAgIENSRUFURSBUQUJMRSBJRiBOT1QgRVhJU1RTIHByb2Nlc3Nfc3RlcHMgKAogICAgICBpZCBURVhUIFBSSU1BUlkgS0VZIERFRkFVTFQgKGhleChyYW5kb21ibG9iKDE2KSkpLAogICAgICBwcm9jZXNzX2lkIFRFWFQgTk9UIE5VTEwsCiAgICAgIHN0ZXBfbnVtYmVyIFRFWFQgTk9UIE5VTEwsCiAgICAgIHN0ZXBfbmFtZSBURVhUIE5PVCBOVUxMLAogICAgICBzdGVwX2RldGFpbHMgVEVYVCwKICAgICAgcmVzcG9uc2libGVfcm9sZSBURVhULAogICAgICBlc3RpbWF0ZWRfdGltZSBURVhULAogICAgICByZXF1aXJlZF9yZXNvdXJjZXMgVEVYVCwKICAgICAgc3RlcF9vcmRlciBJTlRFR0VSIERFRkFVTFQgMCwKICAgICAgY3JlYXRlZF9hdCBEQVRFVElNRSBERUZBVUxUIENVUlJFTlRfVElNRVNUQU1QLAogICAgICB1cGRhdGVkX2F0IERBVEVUSU1FIERFRkFVTFQgQ1VSUkVOVF9USU1FU1RBTVAsCiAgICAgIEZPUkVJR04gS0VZIChwcm9jZXNzX2lkKSBSRUZFUkVOQ0VTIG9lX3Byb2Nlc3NlcyhpZCkgT04gREVMRVRFIENBU0NBREUKICAgICk7CiAgICAKICAgIC0tIFBlcmZvcm1hbmNlIE1lYXN1cmVzIHRhYmxlCiAgICBDUkVBVEUgVEFCTEUgSUYgTk9UIEVYSVNUUyBwZXJmb3JtYW5jZV9tZWFzdXJlcyAoCiAgICAgIGlkIFRFWFQgUFJJTUFSWSBLRVkgREVGQVVMVCAoaGV4KHJhbmRvbWJsb2IoMTYpKSksCiAgICAgIHByb2Nlc3NfaWQgVEVYVCBOT1QgTlVMTCwKICAgICAgbWVhc3VyZV9uYW1lIFRFWFQgTk9UIE5VTEwsCiAgICAgIG1lYXN1cmVfdHlwZSBURVhUIE5PVCBOVUxMLAogICAgICB0YXJnZXRfdmFsdWUgVEVYVCwKICAgICAgY3VycmVudF92YWx1ZSBURVhULAogICAgICBtZWFzdXJlbWVudF9mcmVxdWVuY3kgVEVYVCwKICAgICAgZGF0YV9zb3VyY2UgVEVYVCwKICAgICAgcmVzcG9uc2libGVfcGVyc29uIFRFWFQsCiAgICAgIGxhc3RfbWVhc3VyZWQgREFURVRJTUUsCiAgICAgIHRyZW5kIFRFWFQgREVGQVVMVCAnc3RhYmxlJywKICAgICAgY3JlYXRlZF9hdCBEQVRFVElNRSBERUZBVUxUIENVUlJFTlRfVElNRVNUQU1QLAogICAgICB1cGRhdGVkX2F0IERBVEVUSU1FIERFRkFVTFQgQ1VSUkVOVF9USU1FU1RBTVAsCiAgICAgIEZPUkVJR04gS0VZIChwcm9jZXNzX2lkKSBSRUZFUkVOQ0VTIG9lX3Byb2Nlc3NlcyhpZCkgT04gREVMRVRFIENBU0NBREUKICAgICk7CiAgICAKICAgIC0tIERvY3VtZW50IFZlcnNpb25zIHRhYmxlCiAgICBDUkVBVEUgVEFCTEUgSUYgTk9UIEVYSVNUUyBkb2N1bWVudF92ZXJzaW9ucyAoCiAgICAgIGlkIFRFWFQgUFJJTUFSWSBLRVkgREVGQVVMVCAoaGV4KHJhbmRvbWJsb2IoMTYpKSksCiAgICAgIHByb2Nlc3NfaWQgVEVYVCBOT1QgTlVMTCwKICAgICAgdmVyc2lvbl9udW1iZXIgVEVYVCBOT1QgTlVMTCwKICAgICAgY2hhbmdlX2Rlc2NyaXB0aW9uIFRFWFQsCiAgICAgIGNoYW5nZWRfYnkgVEVYVCwKICAgICAgY2hhbmdlX2RhdGUgREFURVRJTUUgREVGQVVMVCBDVVJSRU5UX1RJTUVTVEFNUCwKICAgICAgYXBwcm92YWxfc3RhdHVzIFRFWFQgREVGQVVMVCAncGVuZGluZycsCiAgICAgIGFwcHJvdmVkX2J5IFRFWFQsCiAgICAgIGFwcHJvdmFsX2RhdGUgREFURVRJTUUsCiAgICAgIGNyZWF0ZWRfYXQgREFURVRJTUUgREVGQVVMVCBDVVJSRU5UX1RJTUVTVEFNUCwKICAgICAgRk9SRUlHTiBLRVkgKHByb2Nlc3NfaWQpIFJFRkVSRU5DRVMgb2VfcHJvY2Vzc2VzKGlkKSBPTiBERUxFVEUgQ0FTQ0FERQogICAgKTsKICBgOwoKICAvLyBFeGVjdXRlIHRoZSBTUUwgdG8gY3JlYXRlIHRhYmxlcwogIHNxbGl0ZS5leGVjKGNyZWF0ZVRhYmxlc1NRTCk7CiAgCiAgLy8gSW5zZXJ0IHNhbXBsZSBkYXRhIGlmIGRhdGFiYXNlIGlzIGVtcHR5CiAgY29uc3QgZWxlbWVudENvdW50ID0gc3FsaXRlLnByZXBhcmUoJ1NFTEVDVCBDT1VOVCgqKSBhcyBjb3VudCBGUk9NIG9lX2VsZW1lbnRzJykuZ2V0KCkgYXMgeyBjb3VudDogbnVtYmVyIH07CiAgCiAgaWYgKGVsZW1lbnRDb3VudC5jb3VudCA9PT0gMCkgewogICAgY29uc29sZS5sb2coJ0luc2VydGluZyBzYW1wbGUgZGF0YS4uLicpOwogICAgaW5zZXJ0U2FtcGxlRGF0YSgpOwogIH0KICAKICBjb25zb2xlLmxvZygnRGF0YWJhc2UgaW5pdGlhbGl6YXRpb24gY29tcGxldGUnKTsKfQoKZnVuY3Rpb24gaW5zZXJ0U2FtcGxlRGF0YSgpIHsKICBjb25zdCBzYW1wbGVFbGVtZW50cyA9IFsKICAgIHsgZWxlbWVudE51bWJlcjogMywgdGl0bGU6ICdQbGFudCBNYW5hZ2VtZW50ICYgT3BlcmF0aW9ucycsIGRlc2NyaXB0aW9uOiAnQ29tcHJlaGVuc2l2ZSBtYW5hZ2VtZW50IG9mIHBsYW50IG9wZXJhdGlvbnMsIG1haW50ZW5hbmNlLCBhbmQgc2FmZXR5IHByb2NlZHVyZXMuJyB9LAogICAgeyBlbGVtZW50TnVtYmVyOiA0LCB0aXRsZTogJ0Fzc2V0IE1hbmFnZW1lbnQnLCBkZXNjcmlwdGlvbjogJ1N0cmF0ZWdpYyBtYW5hZ2VtZW50IG9mIHBoeXNpY2FsIGFzc2V0cyB0aHJvdWdob3V0IHRoZWlyIGxpZmVjeWNsZS4nIH0sCiAgICB7IGVsZW1lbnROdW1iZXI6IDUsIHRpdGxlOiAnU3RyYXRlZ2ljIExvY2FsaXphdGlvbicsIGRlc2NyaXB0aW9uOiAnQWRhcHRpbmcgZ2xvYmFsIHN0cmF0ZWdpZXMgdG8gbG9jYWwgbWFya2V0IGNvbmRpdGlvbnMgYW5kIHJlcXVpcmVtZW50cy4nIH0KICBdOwoKICBjb25zdCBpbnNlcnRFbGVtZW50ID0gc3FsaXRlLnByZXBhcmUoYAogICAgSU5TRVJUIElOVE8gb2VfZWxlbWVudHMgKGVsZW1lbnRfbnVtYmVyLCB0aXRsZSwgZGVzY3JpcHRpb24pCiAgICBWQUxVRVMgKD8sID8sID8pCiAgYCk7CgogIGZvciAoY29uc3QgZWxlbWVudCBvZiBzYW1wbGVFbGVtZW50cykgewogICAgaW5zZXJ0RWxlbWVudC5ydW4oZWxlbWVudC5lbGVtZW50TnVtYmVyLCBlbGVtZW50LnRpdGxlLCBlbGVtZW50LmRlc2NyaXB0aW9uKTsKICB9CgogIGNvbnNvbGUubG9nKCdTYW1wbGUgZGF0YSBpbnNlcnRlZCBzdWNjZXNzZnVsbHknKTsKfQoKLy8gRXhwb3J0IFNRTGl0ZSBpbnN0YW5jZSBmb3IgZGlyZWN0IHF1ZXJpZXMgaWYgbmVlZGVkCmV4cG9ydCB7IHNxbGl0ZSB9OwoKLy8gSW5pdGlhbGl6ZSBvbiBtb2R1bGUgbG9hZAppbml0aWFsaXplRGF0YWJhc2UoKTs=
:FILE_87_END

:FILE_88_PATH
server/db.ts
:FILE_88_DATA
aW1wb3J0IHsgUG9vbCwgbmVvbkNvbmZpZyB9IGZyb20gJ0BuZW9uZGF0YWJhc2Uvc2VydmVybGVzcyc7CmltcG9ydCB7IGRyaXp6bGUgfSBmcm9tICdkcml6emxlLW9ybS9uZW9uLXNlcnZlcmxlc3MnOwppbXBvcnQgd3MgZnJvbSAid3MiOwppbXBvcnQgKiBhcyBzY2hlbWEgZnJvbSAiQHNoYXJlZC9zY2hlbWEiOwoKbmVvbkNvbmZpZy53ZWJTb2NrZXRDb25zdHJ1Y3RvciA9IHdzOwoKaWYgKCFwcm9jZXNzLmVudi5EQVRBQkFTRV9VUkwpIHsKICB0aHJvdyBuZXcgRXJyb3IoCiAgICAiREFUQUJBU0VfVVJMIG11c3QgYmUgc2V0LiBEaWQgeW91IGZvcmdldCB0byBwcm92aXNpb24gYSBkYXRhYmFzZT8iLAogICk7Cn0KCmV4cG9ydCBjb25zdCBwb29sID0gbmV3IFBvb2woeyBjb25uZWN0aW9uU3RyaW5nOiBwcm9jZXNzLmVudi5EQVRBQkFTRV9VUkwgfSk7CmV4cG9ydCBjb25zdCBkYiA9IGRyaXp6bGUoeyBjbGllbnQ6IHBvb2wsIHNjaGVtYSB9KTs=
:FILE_88_END

:FILE_89_PATH
server/index.ts
:FILE_89_DATA
aW1wb3J0IGV4cHJlc3MsIHsgdHlwZSBSZXF1ZXN0LCBSZXNwb25zZSwgTmV4dEZ1bmN0aW9uIH0gZnJvbSAiZXhwcmVzcyI7CmltcG9ydCB7IHJlZ2lzdGVyUm91dGVzIH0gZnJvbSAiLi9yb3V0ZXMiOwppbXBvcnQgeyBzZXR1cFZpdGUsIHNlcnZlU3RhdGljLCBsb2cgfSBmcm9tICIuL3ZpdGUiOwoKY29uc3QgYXBwID0gZXhwcmVzcygpOwphcHAudXNlKGV4cHJlc3MuanNvbigpKTsKYXBwLnVzZShleHByZXNzLnVybGVuY29kZWQoeyBleHRlbmRlZDogZmFsc2UgfSkpOwoKYXBwLnVzZSgocmVxLCByZXMsIG5leHQpID0+IHsKICBjb25zdCBzdGFydCA9IERhdGUubm93KCk7CiAgY29uc3QgcGF0aCA9IHJlcS5wYXRoOwogIGxldCBjYXB0dXJlZEpzb25SZXNwb25zZTogUmVjb3JkPHN0cmluZywgYW55PiB8IHVuZGVmaW5lZCA9IHVuZGVmaW5lZDsKCiAgY29uc3Qgb3JpZ2luYWxSZXNKc29uID0gcmVzLmpzb247CiAgcmVzLmpzb24gPSBmdW5jdGlvbiAoYm9keUpzb24sIC4uLmFyZ3MpIHsKICAgIGNhcHR1cmVkSnNvblJlc3BvbnNlID0gYm9keUpzb247CiAgICByZXR1cm4gb3JpZ2luYWxSZXNKc29uLmFwcGx5KHJlcywgW2JvZHlKc29uLCAuLi5hcmdzXSk7CiAgfTsKCiAgcmVzLm9uKCJmaW5pc2giLCAoKSA9PiB7CiAgICBjb25zdCBkdXJhdGlvbiA9IERhdGUubm93KCkgLSBzdGFydDsKICAgIGlmIChwYXRoLnN0YXJ0c1dpdGgoIi9hcGkiKSkgewogICAgICBsZXQgbG9nTGluZSA9IGAke3JlcS5tZXRob2R9ICR7cGF0aH0gJHtyZXMuc3RhdHVzQ29kZX0gaW4gJHtkdXJhdGlvbn1tc2A7CiAgICAgIGlmIChjYXB0dXJlZEpzb25SZXNwb25zZSkgewogICAgICAgIGxvZ0xpbmUgKz0gYCA6OiAke0pTT04uc3RyaW5naWZ5KGNhcHR1cmVkSnNvblJlc3BvbnNlKX1gOwogICAgICB9CgogICAgICBpZiAobG9nTGluZS5sZW5ndGggPiA4MCkgewogICAgICAgIGxvZ0xpbmUgPSBsb2dMaW5lLnNsaWNlKDAsIDc5KSArICLigKYiOwogICAgICB9CgogICAgICBsb2cobG9nTGluZSk7CiAgICB9CiAgfSk7CgogIG5leHQoKTsKfSk7CgooYXN5bmMgKCkgPT4gewogIGNvbnN0IHNlcnZlciA9IGF3YWl0IHJlZ2lzdGVyUm91dGVzKGFwcCk7CgogIGFwcC51c2UoKGVycjogYW55LCBfcmVxOiBSZXF1ZXN0LCByZXM6IFJlc3BvbnNlLCBfbmV4dDogTmV4dEZ1bmN0aW9uKSA9PiB7CiAgICBjb25zdCBzdGF0dXMgPSBlcnIuc3RhdHVzIHx8IGVyci5zdGF0dXNDb2RlIHx8IDUwMDsKICAgIGNvbnN0IG1lc3NhZ2UgPSBlcnIubWVzc2FnZSB8fCAiSW50ZXJuYWwgU2VydmVyIEVycm9yIjsKCiAgICByZXMuc3RhdHVzKHN0YXR1cykuanNvbih7IG1lc3NhZ2UgfSk7CiAgICB0aHJvdyBlcnI7CiAgfSk7CgogIC8vIGltcG9ydGFudGx5IG9ubHkgc2V0dXAgdml0ZSBpbiBkZXZlbG9wbWVudCBhbmQgYWZ0ZXIKICAvLyBzZXR0aW5nIHVwIGFsbCB0aGUgb3RoZXIgcm91dGVzIHNvIHRoZSBjYXRjaC1hbGwgcm91dGUKICAvLyBkb2Vzbid0IGludGVyZmVyZSB3aXRoIHRoZSBvdGhlciByb3V0ZXMKICBpZiAoYXBwLmdldCgiZW52IikgPT09ICJkZXZlbG9wbWVudCIpIHsKICAgIGF3YWl0IHNldHVwVml0ZShhcHAsIHNlcnZlcik7CiAgfSBlbHNlIHsKICAgIHNlcnZlU3RhdGljKGFwcCk7CiAgfQoKICAvLyBBTFdBWVMgc2VydmUgdGhlIGFwcCBvbiB0aGUgcG9ydCBzcGVjaWZpZWQgaW4gdGhlIGVudmlyb25tZW50IHZhcmlhYmxlIFBPUlQKICAvLyBPdGhlciBwb3J0cyBhcmUgZmlyZXdhbGxlZC4gRGVmYXVsdCB0byA1MDAwIGlmIG5vdCBzcGVjaWZpZWQuCiAgLy8gdGhpcyBzZXJ2ZXMgYm90aCB0aGUgQVBJIGFuZCB0aGUgY2xpZW50LgogIC8vIEl0IGlzIHRoZSBvbmx5IHBvcnQgdGhhdCBpcyBub3QgZmlyZXdhbGxlZC4KICBjb25zdCBwb3J0ID0gcGFyc2VJbnQocHJvY2Vzcy5lbnYuUE9SVCB8fCAnNTAwMCcsIDEwKTsKICBzZXJ2ZXIubGlzdGVuKHsKICAgIHBvcnQsCiAgICBob3N0OiAiMC4wLjAuMCIsCiAgICByZXVzZVBvcnQ6IHRydWUsCiAgfSwgKCkgPT4gewogICAgbG9nKGBzZXJ2aW5nIG9uIHBvcnQgJHtwb3J0fWApOwogIH0pOwp9KSgpOwo=
:FILE_89_END

:FILE_90_PATH
server/replitAuth.ts
:FILE_90_DATA
aW1wb3J0ICogYXMgY2xpZW50IGZyb20gIm9wZW5pZC1jbGllbnQiOwppbXBvcnQgeyBTdHJhdGVneSwgdHlwZSBWZXJpZnlGdW5jdGlvbiB9IGZyb20gIm9wZW5pZC1jbGllbnQvcGFzc3BvcnQiOwoKaW1wb3J0IHBhc3Nwb3J0IGZyb20gInBhc3Nwb3J0IjsKaW1wb3J0IHNlc3Npb24gZnJvbSAiZXhwcmVzcy1zZXNzaW9uIjsKaW1wb3J0IHR5cGUgeyBFeHByZXNzLCBSZXF1ZXN0SGFuZGxlciB9IGZyb20gImV4cHJlc3MiOwppbXBvcnQgbWVtb2l6ZSBmcm9tICJtZW1vaXplZSI7CmltcG9ydCBjb25uZWN0UGcgZnJvbSAiY29ubmVjdC1wZy1zaW1wbGUiOwppbXBvcnQgeyBzdG9yYWdlIH0gZnJvbSAiLi9zdG9yYWdlIjsKCmlmICghcHJvY2Vzcy5lbnYuUkVQTElUX0RPTUFJTlMpIHsKICB0aHJvdyBuZXcgRXJyb3IoIkVudmlyb25tZW50IHZhcmlhYmxlIFJFUExJVF9ET01BSU5TIG5vdCBwcm92aWRlZCIpOwp9Cgpjb25zdCBnZXRPaWRjQ29uZmlnID0gbWVtb2l6ZSgKICBhc3luYyAoKSA9PiB7CiAgICByZXR1cm4gYXdhaXQgY2xpZW50LmRpc2NvdmVyeSgKICAgICAgbmV3IFVSTChwcm9jZXNzLmVudi5JU1NVRVJfVVJMID8/ICJodHRwczovL3JlcGxpdC5jb20vb2lkYyIpLAogICAgICBwcm9jZXNzLmVudi5SRVBMX0lEIQogICAgKTsKICB9LAogIHsgbWF4QWdlOiAzNjAwICogMTAwMCB9Cik7CgpleHBvcnQgZnVuY3Rpb24gZ2V0U2Vzc2lvbigpIHsKICBjb25zdCBzZXNzaW9uVHRsID0gNyAqIDI0ICogNjAgKiA2MCAqIDEwMDA7IC8vIDEgd2VlawogIGNvbnN0IHBnU3RvcmUgPSBjb25uZWN0UGcoc2Vzc2lvbik7CiAgY29uc3Qgc2Vzc2lvblN0b3JlID0gbmV3IHBnU3RvcmUoewogICAgY29uU3RyaW5nOiBwcm9jZXNzLmVudi5EQVRBQkFTRV9VUkwsCiAgICBjcmVhdGVUYWJsZUlmTWlzc2luZzogZmFsc2UsCiAgICB0dGw6IHNlc3Npb25UdGwsCiAgICB0YWJsZU5hbWU6ICJzZXNzaW9ucyIsCiAgfSk7CiAgcmV0dXJuIHNlc3Npb24oewogICAgc2VjcmV0OiBwcm9jZXNzLmVudi5TRVNTSU9OX1NFQ1JFVCEsCiAgICBzdG9yZTogc2Vzc2lvblN0b3JlLAogICAgcmVzYXZlOiBmYWxzZSwKICAgIHNhdmVVbmluaXRpYWxpemVkOiBmYWxzZSwKICAgIGNvb2tpZTogewogICAgICBodHRwT25seTogdHJ1ZSwKICAgICAgc2VjdXJlOiBmYWxzZSwgLy8gQWxsb3cgSFRUUCBmb3IgZGV2ZWxvcG1lbnQvcHJldmlldwogICAgICBtYXhBZ2U6IHNlc3Npb25UdGwsCiAgICAgIHNhbWVTaXRlOiAnbGF4JywgLy8gQWxsb3cgY3Jvc3Mtc2l0ZSByZXF1ZXN0cyBmb3IgcHJldmlldwogICAgfSwKICB9KTsKfQoKZnVuY3Rpb24gdXBkYXRlVXNlclNlc3Npb24oCiAgdXNlcjogYW55LAogIHRva2VuczogY2xpZW50LlRva2VuRW5kcG9pbnRSZXNwb25zZSAmIGNsaWVudC5Ub2tlbkVuZHBvaW50UmVzcG9uc2VIZWxwZXJzCikgewogIHVzZXIuY2xhaW1zID0gdG9rZW5zLmNsYWltcygpOwogIHVzZXIuYWNjZXNzX3Rva2VuID0gdG9rZW5zLmFjY2Vzc190b2tlbjsKICB1c2VyLnJlZnJlc2hfdG9rZW4gPSB0b2tlbnMucmVmcmVzaF90b2tlbjsKICB1c2VyLmV4cGlyZXNfYXQgPSB1c2VyLmNsYWltcz8uZXhwOwp9Cgphc3luYyBmdW5jdGlvbiB1cHNlcnRVc2VyKAogIGNsYWltczogYW55LAopIHsKICBhd2FpdCBzdG9yYWdlLnVwc2VydFVzZXIoewogICAgaWQ6IGNsYWltc1sic3ViIl0sCiAgICBlbWFpbDogY2xhaW1zWyJlbWFpbCJdLAogICAgZmlyc3ROYW1lOiBjbGFpbXNbImZpcnN0X25hbWUiXSwKICAgIGxhc3ROYW1lOiBjbGFpbXNbImxhc3RfbmFtZSJdLAogICAgcHJvZmlsZUltYWdlVXJsOiBjbGFpbXNbInByb2ZpbGVfaW1hZ2VfdXJsIl0sCiAgfSk7Cn0KCmV4cG9ydCBhc3luYyBmdW5jdGlvbiBzZXR1cEF1dGgoYXBwOiBFeHByZXNzKSB7CiAgYXBwLnNldCgidHJ1c3QgcHJveHkiLCAxKTsKICBhcHAudXNlKGdldFNlc3Npb24oKSk7CiAgYXBwLnVzZShwYXNzcG9ydC5pbml0aWFsaXplKCkpOwogIGFwcC51c2UocGFzc3BvcnQuc2Vzc2lvbigpKTsKCiAgY29uc3QgY29uZmlnID0gYXdhaXQgZ2V0T2lkY0NvbmZpZygpOwoKICBjb25zdCB2ZXJpZnk6IFZlcmlmeUZ1bmN0aW9uID0gYXN5bmMgKAogICAgdG9rZW5zOiBjbGllbnQuVG9rZW5FbmRwb2ludFJlc3BvbnNlICYgY2xpZW50LlRva2VuRW5kcG9pbnRSZXNwb25zZUhlbHBlcnMsCiAgICB2ZXJpZmllZDogcGFzc3BvcnQuQXV0aGVudGljYXRlQ2FsbGJhY2sKICApID0+IHsKICAgIGNvbnN0IHVzZXIgPSB7fTsKICAgIHVwZGF0ZVVzZXJTZXNzaW9uKHVzZXIsIHRva2Vucyk7CiAgICBhd2FpdCB1cHNlcnRVc2VyKHRva2Vucy5jbGFpbXMoKSk7CiAgICB2ZXJpZmllZChudWxsLCB1c2VyKTsKICB9OwoKICBmb3IgKGNvbnN0IGRvbWFpbiBvZiBwcm9jZXNzLmVudgogICAgLlJFUExJVF9ET01BSU5TIS5zcGxpdCgiLCIpKSB7CiAgICBjb25zdCBzdHJhdGVneSA9IG5ldyBTdHJhdGVneSgKICAgICAgewogICAgICAgIG5hbWU6IGByZXBsaXRhdXRoOiR7ZG9tYWlufWAsCiAgICAgICAgY29uZmlnLAogICAgICAgIHNjb3BlOiAib3BlbmlkIGVtYWlsIHByb2ZpbGUgb2ZmbGluZV9hY2Nlc3MiLAogICAgICAgIGNhbGxiYWNrVVJMOiBgaHR0cHM6Ly8ke2RvbWFpbn0vYXBpL2NhbGxiYWNrYCwKICAgICAgfSwKICAgICAgdmVyaWZ5LAogICAgKTsKICAgIHBhc3Nwb3J0LnVzZShzdHJhdGVneSk7CiAgfQoKICBwYXNzcG9ydC5zZXJpYWxpemVVc2VyKCh1c2VyOiBFeHByZXNzLlVzZXIsIGNiKSA9PiBjYihudWxsLCB1c2VyKSk7CiAgcGFzc3BvcnQuZGVzZXJpYWxpemVVc2VyKCh1c2VyOiBFeHByZXNzLlVzZXIsIGNiKSA9PiBjYihudWxsLCB1c2VyKSk7CgogIGFwcC5nZXQoIi9hcGkvbG9naW4iLCAocmVxLCByZXMsIG5leHQpID0+IHsKICAgIHBhc3Nwb3J0LmF1dGhlbnRpY2F0ZShgcmVwbGl0YXV0aDoke3JlcS5ob3N0bmFtZX1gLCB7CiAgICAgIHByb21wdDogImxvZ2luIGNvbnNlbnQiLAogICAgICBzY29wZTogWyJvcGVuaWQiLCAiZW1haWwiLCAicHJvZmlsZSIsICJvZmZsaW5lX2FjY2VzcyJdLAogICAgfSkocmVxLCByZXMsIG5leHQpOwogIH0pOwoKICBhcHAuZ2V0KCIvYXBpL2NhbGxiYWNrIiwgKHJlcSwgcmVzLCBuZXh0KSA9PiB7CiAgICBwYXNzcG9ydC5hdXRoZW50aWNhdGUoYHJlcGxpdGF1dGg6JHtyZXEuaG9zdG5hbWV9YCwgewogICAgICBzdWNjZXNzUmV0dXJuVG9PclJlZGlyZWN0OiAiLyIsCiAgICAgIGZhaWx1cmVSZWRpcmVjdDogIi9hcGkvbG9naW4iLAogICAgfSkocmVxLCByZXMsIG5leHQpOwogIH0pOwoKICBhcHAuZ2V0KCIvYXBpL2xvZ291dCIsIChyZXEsIHJlcykgPT4gewogICAgcmVxLmxvZ291dCgoKSA9PiB7CiAgICAgIHJlcy5yZWRpcmVjdCgKICAgICAgICBjbGllbnQuYnVpbGRFbmRTZXNzaW9uVXJsKGNvbmZpZywgewogICAgICAgICAgY2xpZW50X2lkOiBwcm9jZXNzLmVudi5SRVBMX0lEISwKICAgICAgICAgIHBvc3RfbG9nb3V0X3JlZGlyZWN0X3VyaTogYCR7cmVxLnByb3RvY29sfTovLyR7cmVxLmhvc3RuYW1lfWAsCiAgICAgICAgfSkuaHJlZgogICAgICApOwogICAgfSk7CiAgfSk7Cn0KCmV4cG9ydCBjb25zdCBpc0F1dGhlbnRpY2F0ZWQ6IFJlcXVlc3RIYW5kbGVyID0gYXN5bmMgKHJlcSwgcmVzLCBuZXh0KSA9PiB7CiAgY29uc3QgdXNlciA9IHJlcS51c2VyIGFzIGFueTsKCiAgaWYgKCFyZXEuaXNBdXRoZW50aWNhdGVkKCkgfHwgIXVzZXIuZXhwaXJlc19hdCkgewogICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAxKS5qc29uKHsgbWVzc2FnZTogIlVuYXV0aG9yaXplZCIgfSk7CiAgfQoKICBjb25zdCBub3cgPSBNYXRoLmZsb29yKERhdGUubm93KCkgLyAxMDAwKTsKICBpZiAobm93IDw9IHVzZXIuZXhwaXJlc19hdCkgewogICAgcmV0dXJuIG5leHQoKTsKICB9CgogIGNvbnN0IHJlZnJlc2hUb2tlbiA9IHVzZXIucmVmcmVzaF90b2tlbjsKICBpZiAoIXJlZnJlc2hUb2tlbikgewogICAgcmVzLnN0YXR1cyg0MDEpLmpzb24oeyBtZXNzYWdlOiAiVW5hdXRob3JpemVkIiB9KTsKICAgIHJldHVybjsKICB9CgogIHRyeSB7CiAgICBjb25zdCBjb25maWcgPSBhd2FpdCBnZXRPaWRjQ29uZmlnKCk7CiAgICBjb25zdCB0b2tlblJlc3BvbnNlID0gYXdhaXQgY2xpZW50LnJlZnJlc2hUb2tlbkdyYW50KGNvbmZpZywgcmVmcmVzaFRva2VuKTsKICAgIHVwZGF0ZVVzZXJTZXNzaW9uKHVzZXIsIHRva2VuUmVzcG9uc2UpOwogICAgcmV0dXJuIG5leHQoKTsKICB9IGNhdGNoIChlcnJvcikgewogICAgcmVzLnN0YXR1cyg0MDEpLmpzb24oeyBtZXNzYWdlOiAiVW5hdXRob3JpemVkIiB9KTsKICAgIHJldHVybjsKICB9Cn07Cg==
:FILE_90_END

:FILE_91_PATH
server/routes.ts
:FILE_91_DATA

:FILE_91_END

:FILE_92_PATH
server/storage.ts
:FILE_92_DATA

:FILE_92_END

:FILE_93_PATH
server/vite.ts
:FILE_93_DATA
aW1wb3J0IGV4cHJlc3MsIHsgdHlwZSBFeHByZXNzIH0gZnJvbSAiZXhwcmVzcyI7CmltcG9ydCBmcyBmcm9tICJmcyI7CmltcG9ydCBwYXRoIGZyb20gInBhdGgiOwppbXBvcnQgeyBjcmVhdGVTZXJ2ZXIgYXMgY3JlYXRlVml0ZVNlcnZlciwgY3JlYXRlTG9nZ2VyIH0gZnJvbSAidml0ZSI7CmltcG9ydCB7IHR5cGUgU2VydmVyIH0gZnJvbSAiaHR0cCI7CmltcG9ydCB2aXRlQ29uZmlnIGZyb20gIi4uL3ZpdGUuY29uZmlnIjsKaW1wb3J0IHsgbmFub2lkIH0gZnJvbSAibmFub2lkIjsKCmNvbnN0IHZpdGVMb2dnZXIgPSBjcmVhdGVMb2dnZXIoKTsKCmV4cG9ydCBmdW5jdGlvbiBsb2cobWVzc2FnZTogc3RyaW5nLCBzb3VyY2UgPSAiZXhwcmVzcyIpIHsKICBjb25zdCBmb3JtYXR0ZWRUaW1lID0gbmV3IERhdGUoKS50b0xvY2FsZVRpbWVTdHJpbmcoImVuLVVTIiwgewogICAgaG91cjogIm51bWVyaWMiLAogICAgbWludXRlOiAiMi1kaWdpdCIsCiAgICBzZWNvbmQ6ICIyLWRpZ2l0IiwKICAgIGhvdXIxMjogdHJ1ZSwKICB9KTsKCiAgY29uc29sZS5sb2coYCR7Zm9ybWF0dGVkVGltZX0gWyR7c291cmNlfV0gJHttZXNzYWdlfWApOwp9CgpleHBvcnQgYXN5bmMgZnVuY3Rpb24gc2V0dXBWaXRlKGFwcDogRXhwcmVzcywgc2VydmVyOiBTZXJ2ZXIpIHsKICBjb25zdCBzZXJ2ZXJPcHRpb25zID0gewogICAgbWlkZGxld2FyZU1vZGU6IHRydWUsCiAgICBobXI6IHsgc2VydmVyIH0sCiAgICBhbGxvd2VkSG9zdHM6IHRydWUgYXMgY29uc3QsCiAgfTsKCiAgY29uc3Qgdml0ZSA9IGF3YWl0IGNyZWF0ZVZpdGVTZXJ2ZXIoewogICAgLi4udml0ZUNvbmZpZywKICAgIGNvbmZpZ0ZpbGU6IGZhbHNlLAogICAgY3VzdG9tTG9nZ2VyOiB7CiAgICAgIC4uLnZpdGVMb2dnZXIsCiAgICAgIGVycm9yOiAobXNnLCBvcHRpb25zKSA9PiB7CiAgICAgICAgdml0ZUxvZ2dlci5lcnJvcihtc2csIG9wdGlvbnMpOwogICAgICAgIHByb2Nlc3MuZXhpdCgxKTsKICAgICAgfSwKICAgIH0sCiAgICBzZXJ2ZXI6IHNlcnZlck9wdGlvbnMsCiAgICBhcHBUeXBlOiAiY3VzdG9tIiwKICB9KTsKCiAgYXBwLnVzZSh2aXRlLm1pZGRsZXdhcmVzKTsKICBhcHAudXNlKCIqIiwgYXN5bmMgKHJlcSwgcmVzLCBuZXh0KSA9PiB7CiAgICBjb25zdCB1cmwgPSByZXEub3JpZ2luYWxVcmw7CgogICAgdHJ5IHsKICAgICAgY29uc3QgY2xpZW50VGVtcGxhdGUgPSBwYXRoLnJlc29sdmUoCiAgICAgICAgaW1wb3J0Lm1ldGEuZGlybmFtZSwKICAgICAgICAiLi4iLAogICAgICAgICJjbGllbnQiLAogICAgICAgICJpbmRleC5odG1sIiwKICAgICAgKTsKCiAgICAgIC8vIGFsd2F5cyByZWxvYWQgdGhlIGluZGV4Lmh0bWwgZmlsZSBmcm9tIGRpc2sgaW5jYXNlIGl0IGNoYW5nZXMKICAgICAgbGV0IHRlbXBsYXRlID0gYXdhaXQgZnMucHJvbWlzZXMucmVhZEZpbGUoY2xpZW50VGVtcGxhdGUsICJ1dGYtOCIpOwogICAgICB0ZW1wbGF0ZSA9IHRlbXBsYXRlLnJlcGxhY2UoCiAgICAgICAgYHNyYz0iL3NyYy9tYWluLnRzeCJgLAogICAgICAgIGBzcmM9Ii9zcmMvbWFpbi50c3g/dj0ke25hbm9pZCgpfSJgLAogICAgICApOwogICAgICBjb25zdCBwYWdlID0gYXdhaXQgdml0ZS50cmFuc2Zvcm1JbmRleEh0bWwodXJsLCB0ZW1wbGF0ZSk7CiAgICAgIHJlcy5zdGF0dXMoMjAwKS5zZXQoeyAiQ29udGVudC1UeXBlIjogInRleHQvaHRtbCIgfSkuZW5kKHBhZ2UpOwogICAgfSBjYXRjaCAoZSkgewogICAgICB2aXRlLnNzckZpeFN0YWNrdHJhY2UoZSBhcyBFcnJvcik7CiAgICAgIG5leHQoZSk7CiAgICB9CiAgfSk7Cn0KCmV4cG9ydCBmdW5jdGlvbiBzZXJ2ZVN0YXRpYyhhcHA6IEV4cHJlc3MpIHsKICBjb25zdCBkaXN0UGF0aCA9IHBhdGgucmVzb2x2ZShpbXBvcnQubWV0YS5kaXJuYW1lLCAicHVibGljIik7CgogIGlmICghZnMuZXhpc3RzU3luYyhkaXN0UGF0aCkpIHsKICAgIHRocm93IG5ldyBFcnJvcigKICAgICAgYENvdWxkIG5vdCBmaW5kIHRoZSBidWlsZCBkaXJlY3Rvcnk6ICR7ZGlzdFBhdGh9LCBtYWtlIHN1cmUgdG8gYnVpbGQgdGhlIGNsaWVudCBmaXJzdGAsCiAgICApOwogIH0KCiAgYXBwLnVzZShleHByZXNzLnN0YXRpYyhkaXN0UGF0aCkpOwoKICAvLyBmYWxsIHRocm91Z2ggdG8gaW5kZXguaHRtbCBpZiB0aGUgZmlsZSBkb2Vzbid0IGV4aXN0CiAgYXBwLnVzZSgiKiIsIChfcmVxLCByZXMpID0+IHsKICAgIHJlcy5zZW5kRmlsZShwYXRoLnJlc29sdmUoZGlzdFBhdGgsICJpbmRleC5odG1sIikpOwogIH0pOwp9Cg==
:FILE_93_END

:FILE_94_PATH
shared/schema.ts
:FILE_94_DATA

:FILE_94_END

:FILE_95_PATH
tsconfig.json
:FILE_95_DATA
ewogICJpbmNsdWRlIjogWyJjbGllbnQvc3JjLyoqLyoiLCAic2hhcmVkLyoqLyoiLCAic2VydmVyLyoqLyoiXSwKICAiZXhjbHVkZSI6IFsibm9kZV9tb2R1bGVzIiwgImJ1aWxkIiwgImRpc3QiLCAiKiovKi50ZXN0LnRzIl0sCiAgImNvbXBpbGVyT3B0aW9ucyI6IHsKICAgICJpbmNyZW1lbnRhbCI6IHRydWUsCiAgICAidHNCdWlsZEluZm9GaWxlIjogIi4vbm9kZV9tb2R1bGVzL3R5cGVzY3JpcHQvdHNidWlsZGluZm8iLAogICAgIm5vRW1pdCI6IHRydWUsCiAgICAibW9kdWxlIjogIkVTTmV4dCIsCiAgICAic3RyaWN0IjogdHJ1ZSwKICAgICJsaWIiOiBbImVzbmV4dCIsICJkb20iLCAiZG9tLml0ZXJhYmxlIl0sCiAgICAianN4IjogInByZXNlcnZlIiwKICAgICJlc01vZHVsZUludGVyb3AiOiB0cnVlLAogICAgInNraXBMaWJDaGVjayI6IHRydWUsCiAgICAiYWxsb3dJbXBvcnRpbmdUc0V4dGVuc2lvbnMiOiB0cnVlLAogICAgIm1vZHVsZVJlc29sdXRpb24iOiAiYnVuZGxlciIsCiAgICAiYmFzZVVybCI6ICIuIiwKICAgICJ0eXBlcyI6IFsibm9kZSIsICJ2aXRlL2NsaWVudCJdLAogICAgInBhdGhzIjogewogICAgICAiQC8qIjogWyIuL2NsaWVudC9zcmMvKiJdLAogICAgICAiQHNoYXJlZC8qIjogWyIuL3NoYXJlZC8qIl0KICAgIH0KICB9Cn0K
:FILE_95_END

:FILE_96_PATH
vite.config.ts
:FILE_96_DATA
aW1wb3J0IHsgZGVmaW5lQ29uZmlnIH0gZnJvbSAidml0ZSI7CmltcG9ydCByZWFjdCBmcm9tICJAdml0ZWpzL3BsdWdpbi1yZWFjdCI7CmltcG9ydCBwYXRoIGZyb20gInBhdGgiOwppbXBvcnQgcnVudGltZUVycm9yT3ZlcmxheSBmcm9tICJAcmVwbGl0L3ZpdGUtcGx1Z2luLXJ1bnRpbWUtZXJyb3ItbW9kYWwiOwoKZXhwb3J0IGRlZmF1bHQgZGVmaW5lQ29uZmlnKHsKICBwbHVnaW5zOiBbCiAgICByZWFjdCgpLAogICAgcnVudGltZUVycm9yT3ZlcmxheSgpLAogICAgLi4uKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAicHJvZHVjdGlvbiIgJiYKICAgIHByb2Nlc3MuZW52LlJFUExfSUQgIT09IHVuZGVmaW5lZAogICAgICA/IFsKICAgICAgICAgIGF3YWl0IGltcG9ydCgiQHJlcGxpdC92aXRlLXBsdWdpbi1jYXJ0b2dyYXBoZXIiKS50aGVuKChtKSA9PgogICAgICAgICAgICBtLmNhcnRvZ3JhcGhlcigpLAogICAgICAgICAgKSwKICAgICAgICBdCiAgICAgIDogW10pLAogIF0sCiAgcmVzb2x2ZTogewogICAgYWxpYXM6IHsKICAgICAgIkAiOiBwYXRoLnJlc29sdmUoaW1wb3J0Lm1ldGEuZGlybmFtZSwgImNsaWVudCIsICJzcmMiKSwKICAgICAgIkBzaGFyZWQiOiBwYXRoLnJlc29sdmUoaW1wb3J0Lm1ldGEuZGlybmFtZSwgInNoYXJlZCIpLAogICAgICAiQGFzc2V0cyI6IHBhdGgucmVzb2x2ZShpbXBvcnQubWV0YS5kaXJuYW1lLCAiYXR0YWNoZWRfYXNzZXRzIiksCiAgICB9LAogIH0sCiAgcm9vdDogcGF0aC5yZXNvbHZlKGltcG9ydC5tZXRhLmRpcm5hbWUsICJjbGllbnQiKSwKICBidWlsZDogewogICAgb3V0RGlyOiBwYXRoLnJlc29sdmUoaW1wb3J0Lm1ldGEuZGlybmFtZSwgImRpc3QvcHVibGljIiksCiAgICBlbXB0eU91dERpcjogdHJ1ZSwKICB9LAogIHNlcnZlcjogewogICAgZnM6IHsKICAgICAgc3RyaWN0OiB0cnVlLAogICAgICBkZW55OiBbIioqLy4qIl0sCiAgICB9LAogIH0sCn0pOwo=
:FILE_96_END


:INSTALLER_START

:: ==========================================
:: PROFESSIONAL INSTALLER HEADER
:: ==========================================
title WSM OE Manager - Mega Single-File Installer v%APP_VERSION%
mode con: cols=80 lines=30
color 0F

echo.
echo ╔══════════════════════════════════════════════════════════════════════════════╗
echo ║                                                                              ║
echo ║           WSM OPERATIONAL EXCELLENCE MANAGER v2.0.0                     ║
echo ║           Mega Single-File Professional Installer                           ║
echo ║                                                                              ║
echo ╚══════════════════════════════════════════════════════════════════════════════╝
echo.
echo    ✓ Complete application embedded in this single file
echo    ✓ 97 application files included (2556KB total)
echo    ✓ Professional Windows integration and shortcuts
echo    ✓ Self-contained with local database
echo    ✓ No external files or downloads required
echo.

:: ==========================================
:: ADMINISTRATOR PRIVILEGE CHECK
:: ==========================================
net session >nul 2>&1
if %errorLevel% neq 0 (
    echo ┌──────────────────────────────────────────────────────────────────────────────┐
    echo │ ADMINISTRATOR PRIVILEGES REQUIRED                                           │
    echo └──────────────────────────────────────────────────────────────────────────────┘
    echo.
    echo This mega installer requires administrator privileges for:
    echo   • Program Files installation
    echo   • Windows registry integration
    echo   • System shortcuts creation
    echo.
    echo Right-click this file and select "Run as administrator"
    echo.
    pause
    exit /b 1
)

echo ✅ Administrator privileges confirmed
echo.

:: ==========================================
:: SYSTEM REQUIREMENTS
:: ==========================================
echo 🔍 Validating system requirements...

for /f "tokens=4-5 delims=. " %%i in ('ver') do set VERSION=%%i.%%j
if "%VERSION%" LSS "10.0" (
    echo ❌ Windows 10 or later required (current: %VERSION%)
    pause
    exit /b 1
)
echo    • Windows version: %VERSION% ✅

for /f "tokens=3" %%a in ('dir C:\ /-c ^| find "bytes free"') do set FREESPACE=%%a
if %FREESPACE% LSS 1073741824 (
    echo ❌ Insufficient disk space (need 1GB minimum)
    pause
    exit /b 1
)
echo    • Disk space: Available ✅

node --version >nul 2>&1
if %errorLevel% equ 0 (
    for /f %%i in ('node --version') do echo    • Node.js: %%i ✅
    set "HAS_NODE=1"
) else (
    echo    • Node.js: Not found (will provide setup guide) ⚠️
    set "HAS_NODE=0"
)

echo ✅ System requirements validated
echo.

:: ==========================================
:: INSTALLATION CONFIRMATION
:: ==========================================
echo ┌──────────────────────────────────────────────────────────────────────────────┐
echo │ MEGA INSTALLATION SUMMARY                                                   │
echo └──────────────────────────────────────────────────────────────────────────────┘
echo    Application: %APP_NAME% v%APP_VERSION%
echo    Install to: %INSTALL_DIR%
echo    User data: %USER_DATA%
echo    Embedded files: %TOTAL_FILES% files (2556KB)
echo    Installation type: Mega single-file with complete application
echo.

set /p confirm="Continue with mega installation? (Y/N): "
if /I not "%confirm%"=="Y" (
    echo Installation cancelled by user.
    exit /b 0
)

:: ==========================================
:: MEGA EXTRACTION AND INSTALLATION
:: ==========================================
echo.
echo 🚀 Beginning mega extraction and installation...
echo ┌──────────────────────────────────────────────────────────────────────────────┐
echo │ MEGA INSTALLATION PROGRESS                                                  │
echo └──────────────────────────────────────────────────────────────────────────────┘

echo [1/10] Creating installation directories...
if not exist "%INSTALL_DIR%" mkdir "%INSTALL_DIR%"
if not exist "%USER_DATA%" mkdir "%USER_DATA%"
if not exist "%TEMP_EXTRACT%" mkdir "%TEMP_EXTRACT%"
echo          ✅ Directories created

echo [2/10] Extracting embedded application files...
set "FILE_COUNT=0"


call :EXTRACT_FILE 0 "client/index.html"
set /a FILE_COUNT+=1
if !FILE_COUNT! equ 0 echo          Progress: !FILE_COUNT!/97 files extracted...
call :EXTRACT_FILE 1 "client/src/App.tsx"
set /a FILE_COUNT+=1
if !FILE_COUNT! equ 0 echo          Progress: !FILE_COUNT!/97 files extracted...
call :EXTRACT_FILE 2 "client/src/components/goals-processes-mindmap.tsx"
set /a FILE_COUNT+=1
if !FILE_COUNT! equ 0 echo          Progress: !FILE_COUNT!/97 files extracted...
call :EXTRACT_FILE 3 "client/src/components/header.tsx"
set /a FILE_COUNT+=1
if !FILE_COUNT! equ 0 echo          Progress: !FILE_COUNT!/97 files extracted...
call :EXTRACT_FILE 4 "client/src/components/mind-map-tree.tsx"
set /a FILE_COUNT+=1
if !FILE_COUNT! equ 0 echo          Progress: !FILE_COUNT!/97 files extracted...
call :EXTRACT_FILE 5 "client/src/components/mini-process-flow.tsx"
set /a FILE_COUNT+=1
if !FILE_COUNT! equ 0 echo          Progress: !FILE_COUNT!/97 files extracted...
call :EXTRACT_FILE 6 "client/src/components/process-card.tsx"
set /a FILE_COUNT+=1
if !FILE_COUNT! equ 0 echo          Progress: !FILE_COUNT!/97 files extracted...
call :EXTRACT_FILE 7 "client/src/components/process-content-sections.tsx"
set /a FILE_COUNT+=1
if !FILE_COUNT! equ 0 echo          Progress: !FILE_COUNT!/97 files extracted...
call :EXTRACT_FILE 8 "client/src/components/process-flow-diagram.tsx"
set /a FILE_COUNT+=1
if !FILE_COUNT! equ 0 echo          Progress: !FILE_COUNT!/97 files extracted...
call :EXTRACT_FILE 9 "client/src/components/process-form.tsx"
set /a FILE_COUNT+=1
if !FILE_COUNT! equ 10 echo          Progress: !FILE_COUNT!/97 files extracted...
call :EXTRACT_FILE 10 "client/src/components/sidebar.tsx"
set /a FILE_COUNT+=1
if !FILE_COUNT! equ 10 echo          Progress: !FILE_COUNT!/97 files extracted...
call :EXTRACT_FILE 11 "client/src/components/ui/accordion.tsx"
set /a FILE_COUNT+=1
if !FILE_COUNT! equ 10 echo          Progress: !FILE_COUNT!/97 files extracted...
call :EXTRACT_FILE 12 "client/src/components/ui/alert-dialog.tsx"
set /a FILE_COUNT+=1
if !FILE_COUNT! equ 10 echo          Progress: !FILE_COUNT!/97 files extracted...
call :EXTRACT_FILE 13 "client/src/components/ui/alert.tsx"
set /a FILE_COUNT+=1
if !FILE_COUNT! equ 10 echo          Progress: !FILE_COUNT!/97 files extracted...
call :EXTRACT_FILE 14 "client/src/components/ui/aspect-ratio.tsx"
set /a FILE_COUNT+=1
if !FILE_COUNT! equ 10 echo          Progress: !FILE_COUNT!/97 files extracted...
call :EXTRACT_FILE 15 "client/src/components/ui/avatar.tsx"
set /a FILE_COUNT+=1
if !FILE_COUNT! equ 10 echo          Progress: !FILE_COUNT!/97 files extracted...
call :EXTRACT_FILE 16 "client/src/components/ui/badge.tsx"
set /a FILE_COUNT+=1
if !FILE_COUNT! equ 10 echo          Progress: !FILE_COUNT!/97 files extracted...
call :EXTRACT_FILE 17 "client/src/components/ui/breadcrumb.tsx"
set /a FILE_COUNT+=1
if !FILE_COUNT! equ 10 echo          Progress: !FILE_COUNT!/97 files extracted...
call :EXTRACT_FILE 18 "client/src/components/ui/button.tsx"
set /a FILE_COUNT+=1
if !FILE_COUNT! equ 10 echo          Progress: !FILE_COUNT!/97 files extracted...
call :EXTRACT_FILE 19 "client/src/components/ui/calendar.tsx"
set /a FILE_COUNT+=1
if !FILE_COUNT! equ 20 echo          Progress: !FILE_COUNT!/97 files extracted...
call :EXTRACT_FILE 20 "client/src/components/ui/card.tsx"
set /a FILE_COUNT+=1
if !FILE_COUNT! equ 20 echo          Progress: !FILE_COUNT!/97 files extracted...
call :EXTRACT_FILE 21 "client/src/components/ui/carousel.tsx"
set /a FILE_COUNT+=1
if !FILE_COUNT! equ 20 echo          Progress: !FILE_COUNT!/97 files extracted...
call :EXTRACT_FILE 22 "client/src/components/ui/chart.tsx"
set /a FILE_COUNT+=1
if !FILE_COUNT! equ 20 echo          Progress: !FILE_COUNT!/97 files extracted...
call :EXTRACT_FILE 23 "client/src/components/ui/checkbox.tsx"
set /a FILE_COUNT+=1
if !FILE_COUNT! equ 20 echo          Progress: !FILE_COUNT!/97 files extracted...
call :EXTRACT_FILE 24 "client/src/components/ui/collapsible.tsx"
set /a FILE_COUNT+=1
if !FILE_COUNT! equ 20 echo          Progress: !FILE_COUNT!/97 files extracted...
call :EXTRACT_FILE 25 "client/src/components/ui/command.tsx"
set /a FILE_COUNT+=1
if !FILE_COUNT! equ 20 echo          Progress: !FILE_COUNT!/97 files extracted...
call :EXTRACT_FILE 26 "client/src/components/ui/context-menu.tsx"
set /a FILE_COUNT+=1
if !FILE_COUNT! equ 20 echo          Progress: !FILE_COUNT!/97 files extracted...
call :EXTRACT_FILE 27 "client/src/components/ui/dialog.tsx"
set /a FILE_COUNT+=1
if !FILE_COUNT! equ 20 echo          Progress: !FILE_COUNT!/97 files extracted...
call :EXTRACT_FILE 28 "client/src/components/ui/drawer.tsx"
set /a FILE_COUNT+=1
if !FILE_COUNT! equ 20 echo          Progress: !FILE_COUNT!/97 files extracted...
call :EXTRACT_FILE 29 "client/src/components/ui/dropdown-menu.tsx"
set /a FILE_COUNT+=1
if !FILE_COUNT! equ 30 echo          Progress: !FILE_COUNT!/97 files extracted...
call :EXTRACT_FILE 30 "client/src/components/ui/form.tsx"
set /a FILE_COUNT+=1
if !FILE_COUNT! equ 30 echo          Progress: !FILE_COUNT!/97 files extracted...
call :EXTRACT_FILE 31 "client/src/components/ui/hover-card.tsx"
set /a FILE_COUNT+=1
if !FILE_COUNT! equ 30 echo          Progress: !FILE_COUNT!/97 files extracted...
call :EXTRACT_FILE 32 "client/src/components/ui/input-otp.tsx"
set /a FILE_COUNT+=1
if !FILE_COUNT! equ 30 echo          Progress: !FILE_COUNT!/97 files extracted...
call :EXTRACT_FILE 33 "client/src/components/ui/input.tsx"
set /a FILE_COUNT+=1
if !FILE_COUNT! equ 30 echo          Progress: !FILE_COUNT!/97 files extracted...
call :EXTRACT_FILE 34 "client/src/components/ui/label.tsx"
set /a FILE_COUNT+=1
if !FILE_COUNT! equ 30 echo          Progress: !FILE_COUNT!/97 files extracted...
call :EXTRACT_FILE 35 "client/src/components/ui/menubar.tsx"
set /a FILE_COUNT+=1
if !FILE_COUNT! equ 30 echo          Progress: !FILE_COUNT!/97 files extracted...
call :EXTRACT_FILE 36 "client/src/components/ui/navigation-menu.tsx"
set /a FILE_COUNT+=1
if !FILE_COUNT! equ 30 echo          Progress: !FILE_COUNT!/97 files extracted...
call :EXTRACT_FILE 37 "client/src/components/ui/pagination.tsx"
set /a FILE_COUNT+=1
if !FILE_COUNT! equ 30 echo          Progress: !FILE_COUNT!/97 files extracted...
call :EXTRACT_FILE 38 "client/src/components/ui/popover.tsx"
set /a FILE_COUNT+=1
if !FILE_COUNT! equ 30 echo          Progress: !FILE_COUNT!/97 files extracted...
call :EXTRACT_FILE 39 "client/src/components/ui/progress.tsx"
set /a FILE_COUNT+=1
if !FILE_COUNT! equ 40 echo          Progress: !FILE_COUNT!/97 files extracted...
call :EXTRACT_FILE 40 "client/src/components/ui/radio-group.tsx"
set /a FILE_COUNT+=1
if !FILE_COUNT! equ 40 echo          Progress: !FILE_COUNT!/97 files extracted...
call :EXTRACT_FILE 41 "client/src/components/ui/resizable.tsx"
set /a FILE_COUNT+=1
if !FILE_COUNT! equ 40 echo          Progress: !FILE_COUNT!/97 files extracted...
call :EXTRACT_FILE 42 "client/src/components/ui/scroll-area.tsx"
set /a FILE_COUNT+=1
if !FILE_COUNT! equ 40 echo          Progress: !FILE_COUNT!/97 files extracted...
call :EXTRACT_FILE 43 "client/src/components/ui/select.tsx"
set /a FILE_COUNT+=1
if !FILE_COUNT! equ 40 echo          Progress: !FILE_COUNT!/97 files extracted...
call :EXTRACT_FILE 44 "client/src/components/ui/separator.tsx"
set /a FILE_COUNT+=1
if !FILE_COUNT! equ 40 echo          Progress: !FILE_COUNT!/97 files extracted...
call :EXTRACT_FILE 45 "client/src/components/ui/sheet.tsx"
set /a FILE_COUNT+=1
if !FILE_COUNT! equ 40 echo          Progress: !FILE_COUNT!/97 files extracted...
call :EXTRACT_FILE 46 "client/src/components/ui/sidebar.tsx"
set /a FILE_COUNT+=1
if !FILE_COUNT! equ 40 echo          Progress: !FILE_COUNT!/97 files extracted...
call :EXTRACT_FILE 47 "client/src/components/ui/skeleton.tsx"
set /a FILE_COUNT+=1
if !FILE_COUNT! equ 40 echo          Progress: !FILE_COUNT!/97 files extracted...
call :EXTRACT_FILE 48 "client/src/components/ui/slider.tsx"
set /a FILE_COUNT+=1
if !FILE_COUNT! equ 40 echo          Progress: !FILE_COUNT!/97 files extracted...
call :EXTRACT_FILE 49 "client/src/components/ui/switch.tsx"
set /a FILE_COUNT+=1
if !FILE_COUNT! equ 50 echo          Progress: !FILE_COUNT!/97 files extracted...
call :EXTRACT_FILE 50 "client/src/components/ui/table.tsx"
set /a FILE_COUNT+=1
if !FILE_COUNT! equ 50 echo          Progress: !FILE_COUNT!/97 files extracted...
call :EXTRACT_FILE 51 "client/src/components/ui/tabs.tsx"
set /a FILE_COUNT+=1
if !FILE_COUNT! equ 50 echo          Progress: !FILE_COUNT!/97 files extracted...
call :EXTRACT_FILE 52 "client/src/components/ui/textarea.tsx"
set /a FILE_COUNT+=1
if !FILE_COUNT! equ 50 echo          Progress: !FILE_COUNT!/97 files extracted...
call :EXTRACT_FILE 53 "client/src/components/ui/toast.tsx"
set /a FILE_COUNT+=1
if !FILE_COUNT! equ 50 echo          Progress: !FILE_COUNT!/97 files extracted...
call :EXTRACT_FILE 54 "client/src/components/ui/toaster.tsx"
set /a FILE_COUNT+=1
if !FILE_COUNT! equ 50 echo          Progress: !FILE_COUNT!/97 files extracted...
call :EXTRACT_FILE 55 "client/src/components/ui/toggle-group.tsx"
set /a FILE_COUNT+=1
if !FILE_COUNT! equ 50 echo          Progress: !FILE_COUNT!/97 files extracted...
call :EXTRACT_FILE 56 "client/src/components/ui/toggle.tsx"
set /a FILE_COUNT+=1
if !FILE_COUNT! equ 50 echo          Progress: !FILE_COUNT!/97 files extracted...
call :EXTRACT_FILE 57 "client/src/components/ui/tooltip.tsx"
set /a FILE_COUNT+=1
if !FILE_COUNT! equ 50 echo          Progress: !FILE_COUNT!/97 files extracted...
call :EXTRACT_FILE 58 "client/src/hooks/use-mobile.tsx"
set /a FILE_COUNT+=1
if !FILE_COUNT! equ 50 echo          Progress: !FILE_COUNT!/97 files extracted...
call :EXTRACT_FILE 59 "client/src/hooks/use-toast.ts"
set /a FILE_COUNT+=1
if !FILE_COUNT! equ 60 echo          Progress: !FILE_COUNT!/97 files extracted...
call :EXTRACT_FILE 60 "client/src/hooks/useAuth.ts"
set /a FILE_COUNT+=1
if !FILE_COUNT! equ 60 echo          Progress: !FILE_COUNT!/97 files extracted...
call :EXTRACT_FILE 61 "client/src/index.css"
set /a FILE_COUNT+=1
if !FILE_COUNT! equ 60 echo          Progress: !FILE_COUNT!/97 files extracted...
call :EXTRACT_FILE 62 "client/src/lib/authUtils.ts"
set /a FILE_COUNT+=1
if !FILE_COUNT! equ 60 echo          Progress: !FILE_COUNT!/97 files extracted...
call :EXTRACT_FILE 63 "client/src/lib/queryClient.ts"
set /a FILE_COUNT+=1
if !FILE_COUNT! equ 60 echo          Progress: !FILE_COUNT!/97 files extracted...
call :EXTRACT_FILE 64 "client/src/lib/utils.ts"
set /a FILE_COUNT+=1
if !FILE_COUNT! equ 60 echo          Progress: !FILE_COUNT!/97 files extracted...
call :EXTRACT_FILE 65 "client/src/main.tsx"
set /a FILE_COUNT+=1
if !FILE_COUNT! equ 60 echo          Progress: !FILE_COUNT!/97 files extracted...
call :EXTRACT_FILE 66 "client/src/pages/all-processes.tsx"
set /a FILE_COUNT+=1
if !FILE_COUNT! equ 60 echo          Progress: !FILE_COUNT!/97 files extracted...
call :EXTRACT_FILE 67 "client/src/pages/balanced-scorecard.tsx"
set /a FILE_COUNT+=1
if !FILE_COUNT! equ 60 echo          Progress: !FILE_COUNT!/97 files extracted...
call :EXTRACT_FILE 68 "client/src/pages/dashboard.tsx"
set /a FILE_COUNT+=1
if !FILE_COUNT! equ 60 echo          Progress: !FILE_COUNT!/97 files extracted...
call :EXTRACT_FILE 69 "client/src/pages/element-detail.tsx"
set /a FILE_COUNT+=1
if !FILE_COUNT! equ 70 echo          Progress: !FILE_COUNT!/97 files extracted...
call :EXTRACT_FILE 70 "client/src/pages/element-editor.tsx"
set /a FILE_COUNT+=1
if !FILE_COUNT! equ 70 echo          Progress: !FILE_COUNT!/97 files extracted...
call :EXTRACT_FILE 71 "client/src/pages/landing.tsx"
set /a FILE_COUNT+=1
if !FILE_COUNT! equ 70 echo          Progress: !FILE_COUNT!/97 files extracted...
call :EXTRACT_FILE 72 "client/src/pages/mind-map.tsx"
set /a FILE_COUNT+=1
if !FILE_COUNT! equ 70 echo          Progress: !FILE_COUNT!/97 files extracted...
call :EXTRACT_FILE 73 "client/src/pages/not-found.tsx"
set /a FILE_COUNT+=1
if !FILE_COUNT! equ 70 echo          Progress: !FILE_COUNT!/97 files extracted...
call :EXTRACT_FILE 74 "client/src/pages/process-detail.tsx"
set /a FILE_COUNT+=1
if !FILE_COUNT! equ 70 echo          Progress: !FILE_COUNT!/97 files extracted...
call :EXTRACT_FILE 75 "client/src/pages/process-editor.tsx"
set /a FILE_COUNT+=1
if !FILE_COUNT! equ 70 echo          Progress: !FILE_COUNT!/97 files extracted...
call :EXTRACT_FILE 76 "client/src/pages/risk-management.tsx"
set /a FILE_COUNT+=1
if !FILE_COUNT! equ 70 echo          Progress: !FILE_COUNT!/97 files extracted...
call :EXTRACT_FILE 77 "dist/index.js"
set /a FILE_COUNT+=1
if !FILE_COUNT! equ 70 echo          Progress: !FILE_COUNT!/97 files extracted...
call :EXTRACT_FILE 78 "dist/public/assets/html2canvas.esm-CBrSDip1.js"
set /a FILE_COUNT+=1
if !FILE_COUNT! equ 70 echo          Progress: !FILE_COUNT!/97 files extracted...
call :EXTRACT_FILE 79 "dist/public/assets/index-DNdLeLte.css"
set /a FILE_COUNT+=1
if !FILE_COUNT! equ 80 echo          Progress: !FILE_COUNT!/97 files extracted...
call :EXTRACT_FILE 80 "dist/public/assets/index-DbIbghhg.js"
set /a FILE_COUNT+=1
if !FILE_COUNT! equ 80 echo          Progress: !FILE_COUNT!/97 files extracted...
call :EXTRACT_FILE 81 "dist/public/assets/index.es-CH0iJgpZ.js"
set /a FILE_COUNT+=1
if !FILE_COUNT! equ 80 echo          Progress: !FILE_COUNT!/97 files extracted...
call :EXTRACT_FILE 82 "dist/public/assets/jspdf.es.min-C8qLfv9P.js"
set /a FILE_COUNT+=1
if !FILE_COUNT! equ 80 echo          Progress: !FILE_COUNT!/97 files extracted...
call :EXTRACT_FILE 83 "dist/public/assets/purify.es-BFmuJLeH.js"
set /a FILE_COUNT+=1
if !FILE_COUNT! equ 80 echo          Progress: !FILE_COUNT!/97 files extracted...
call :EXTRACT_FILE 84 "dist/public/index.html"
set /a FILE_COUNT+=1
if !FILE_COUNT! equ 80 echo          Progress: !FILE_COUNT!/97 files extracted...
call :EXTRACT_FILE 85 "package-lock.json"
set /a FILE_COUNT+=1
if !FILE_COUNT! equ 80 echo          Progress: !FILE_COUNT!/97 files extracted...
call :EXTRACT_FILE 86 "package.json"
set /a FILE_COUNT+=1
if !FILE_COUNT! equ 80 echo          Progress: !FILE_COUNT!/97 files extracted...
call :EXTRACT_FILE 87 "server/db-local.ts"
set /a FILE_COUNT+=1
if !FILE_COUNT! equ 80 echo          Progress: !FILE_COUNT!/97 files extracted...
call :EXTRACT_FILE 88 "server/db.ts"
set /a FILE_COUNT+=1
if !FILE_COUNT! equ 80 echo          Progress: !FILE_COUNT!/97 files extracted...
call :EXTRACT_FILE 89 "server/index.ts"
set /a FILE_COUNT+=1
if !FILE_COUNT! equ 90 echo          Progress: !FILE_COUNT!/97 files extracted...
call :EXTRACT_FILE 90 "server/replitAuth.ts"
set /a FILE_COUNT+=1
if !FILE_COUNT! equ 90 echo          Progress: !FILE_COUNT!/97 files extracted...
call :EXTRACT_FILE 91 "server/routes.ts"
set /a FILE_COUNT+=1
if !FILE_COUNT! equ 90 echo          Progress: !FILE_COUNT!/97 files extracted...
call :EXTRACT_FILE 92 "server/storage.ts"
set /a FILE_COUNT+=1
if !FILE_COUNT! equ 90 echo          Progress: !FILE_COUNT!/97 files extracted...
call :EXTRACT_FILE 93 "server/vite.ts"
set /a FILE_COUNT+=1
if !FILE_COUNT! equ 90 echo          Progress: !FILE_COUNT!/97 files extracted...
call :EXTRACT_FILE 94 "shared/schema.ts"
set /a FILE_COUNT+=1
if !FILE_COUNT! equ 90 echo          Progress: !FILE_COUNT!/97 files extracted...
call :EXTRACT_FILE 95 "tsconfig.json"
set /a FILE_COUNT+=1
if !FILE_COUNT! equ 90 echo          Progress: !FILE_COUNT!/97 files extracted...
call :EXTRACT_FILE 96 "vite.config.ts"
set /a FILE_COUNT+=1
if !FILE_COUNT! equ 90 echo          Progress: !FILE_COUNT!/97 files extracted...

echo          ✅ All %TOTAL_FILES% files extracted

echo [3/10] Creating directory structure...
:: Ensure all subdirectories exist
if not exist "%INSTALL_DIR%\client" mkdir "%INSTALL_DIR%\client"
echo if not exist "%INSTALL_DIR%\client\src" mkdir "%INSTALL_DIR%\client\src"
echo if not exist "%INSTALL_DIR%\client\src\components" mkdir "%INSTALL_DIR%\client\src\components"
echo if not exist "%INSTALL_DIR%\client\src\components\ui" mkdir "%INSTALL_DIR%\client\src\components\ui"
echo if not exist "%INSTALL_DIR%\client\src\hooks" mkdir "%INSTALL_DIR%\client\src\hooks"
echo if not exist "%INSTALL_DIR%\client\src\lib" mkdir "%INSTALL_DIR%\client\src\lib"
echo if not exist "%INSTALL_DIR%\client\src\pages" mkdir "%INSTALL_DIR%\client\src\pages"
echo if not exist "%INSTALL_DIR%\dist" mkdir "%INSTALL_DIR%\dist"
echo if not exist "%INSTALL_DIR%\dist\public\assets" mkdir "%INSTALL_DIR%\dist\public\assets"
echo if not exist "%INSTALL_DIR%\dist\public" mkdir "%INSTALL_DIR%\dist\public"
echo if not exist "%INSTALL_DIR%\server" mkdir "%INSTALL_DIR%\server"
echo if not exist "%INSTALL_DIR%\shared" mkdir "%INSTALL_DIR%\shared"
echo          ✅ Directory structure created

echo [4/10] Deploying application files...
copy "%TEMP_EXTRACT%\file_0.tmp" "%INSTALL_DIR%\client\index.html" >nul 2>&1
echo copy "%TEMP_EXTRACT%\file_1.tmp" "%INSTALL_DIR%\client\src\App.tsx" >nul 2>&1
echo copy "%TEMP_EXTRACT%\file_2.tmp" "%INSTALL_DIR%\client\src\components\goals-processes-mindmap.tsx" >nul 2>&1
echo copy "%TEMP_EXTRACT%\file_3.tmp" "%INSTALL_DIR%\client\src\components\header.tsx" >nul 2>&1
echo copy "%TEMP_EXTRACT%\file_4.tmp" "%INSTALL_DIR%\client\src\components\mind-map-tree.tsx" >nul 2>&1
echo copy "%TEMP_EXTRACT%\file_5.tmp" "%INSTALL_DIR%\client\src\components\mini-process-flow.tsx" >nul 2>&1
echo copy "%TEMP_EXTRACT%\file_6.tmp" "%INSTALL_DIR%\client\src\components\process-card.tsx" >nul 2>&1
echo copy "%TEMP_EXTRACT%\file_7.tmp" "%INSTALL_DIR%\client\src\components\process-content-sections.tsx" >nul 2>&1
echo copy "%TEMP_EXTRACT%\file_8.tmp" "%INSTALL_DIR%\client\src\components\process-flow-diagram.tsx" >nul 2>&1
echo copy "%TEMP_EXTRACT%\file_9.tmp" "%INSTALL_DIR%\client\src\components\process-form.tsx" >nul 2>&1
echo copy "%TEMP_EXTRACT%\file_10.tmp" "%INSTALL_DIR%\client\src\components\sidebar.tsx" >nul 2>&1
echo copy "%TEMP_EXTRACT%\file_11.tmp" "%INSTALL_DIR%\client\src\components\ui\accordion.tsx" >nul 2>&1
echo copy "%TEMP_EXTRACT%\file_12.tmp" "%INSTALL_DIR%\client\src\components\ui\alert-dialog.tsx" >nul 2>&1
echo copy "%TEMP_EXTRACT%\file_13.tmp" "%INSTALL_DIR%\client\src\components\ui\alert.tsx" >nul 2>&1
echo copy "%TEMP_EXTRACT%\file_14.tmp" "%INSTALL_DIR%\client\src\components\ui\aspect-ratio.tsx" >nul 2>&1
echo copy "%TEMP_EXTRACT%\file_15.tmp" "%INSTALL_DIR%\client\src\components\ui\avatar.tsx" >nul 2>&1
echo copy "%TEMP_EXTRACT%\file_16.tmp" "%INSTALL_DIR%\client\src\components\ui\badge.tsx" >nul 2>&1
echo copy "%TEMP_EXTRACT%\file_17.tmp" "%INSTALL_DIR%\client\src\components\ui\breadcrumb.tsx" >nul 2>&1
echo copy "%TEMP_EXTRACT%\file_18.tmp" "%INSTALL_DIR%\client\src\components\ui\button.tsx" >nul 2>&1
echo copy "%TEMP_EXTRACT%\file_19.tmp" "%INSTALL_DIR%\client\src\components\ui\calendar.tsx" >nul 2>&1
echo copy "%TEMP_EXTRACT%\file_20.tmp" "%INSTALL_DIR%\client\src\components\ui\card.tsx" >nul 2>&1
echo copy "%TEMP_EXTRACT%\file_21.tmp" "%INSTALL_DIR%\client\src\components\ui\carousel.tsx" >nul 2>&1
echo copy "%TEMP_EXTRACT%\file_22.tmp" "%INSTALL_DIR%\client\src\components\ui\chart.tsx" >nul 2>&1
echo copy "%TEMP_EXTRACT%\file_23.tmp" "%INSTALL_DIR%\client\src\components\ui\checkbox.tsx" >nul 2>&1
echo copy "%TEMP_EXTRACT%\file_24.tmp" "%INSTALL_DIR%\client\src\components\ui\collapsible.tsx" >nul 2>&1
echo copy "%TEMP_EXTRACT%\file_25.tmp" "%INSTALL_DIR%\client\src\components\ui\command.tsx" >nul 2>&1
echo copy "%TEMP_EXTRACT%\file_26.tmp" "%INSTALL_DIR%\client\src\components\ui\context-menu.tsx" >nul 2>&1
echo copy "%TEMP_EXTRACT%\file_27.tmp" "%INSTALL_DIR%\client\src\components\ui\dialog.tsx" >nul 2>&1
echo copy "%TEMP_EXTRACT%\file_28.tmp" "%INSTALL_DIR%\client\src\components\ui\drawer.tsx" >nul 2>&1
echo copy "%TEMP_EXTRACT%\file_29.tmp" "%INSTALL_DIR%\client\src\components\ui\dropdown-menu.tsx" >nul 2>&1
echo copy "%TEMP_EXTRACT%\file_30.tmp" "%INSTALL_DIR%\client\src\components\ui\form.tsx" >nul 2>&1
echo copy "%TEMP_EXTRACT%\file_31.tmp" "%INSTALL_DIR%\client\src\components\ui\hover-card.tsx" >nul 2>&1
echo copy "%TEMP_EXTRACT%\file_32.tmp" "%INSTALL_DIR%\client\src\components\ui\input-otp.tsx" >nul 2>&1
echo copy "%TEMP_EXTRACT%\file_33.tmp" "%INSTALL_DIR%\client\src\components\ui\input.tsx" >nul 2>&1
echo copy "%TEMP_EXTRACT%\file_34.tmp" "%INSTALL_DIR%\client\src\components\ui\label.tsx" >nul 2>&1
echo copy "%TEMP_EXTRACT%\file_35.tmp" "%INSTALL_DIR%\client\src\components\ui\menubar.tsx" >nul 2>&1
echo copy "%TEMP_EXTRACT%\file_36.tmp" "%INSTALL_DIR%\client\src\components\ui\navigation-menu.tsx" >nul 2>&1
echo copy "%TEMP_EXTRACT%\file_37.tmp" "%INSTALL_DIR%\client\src\components\ui\pagination.tsx" >nul 2>&1
echo copy "%TEMP_EXTRACT%\file_38.tmp" "%INSTALL_DIR%\client\src\components\ui\popover.tsx" >nul 2>&1
echo copy "%TEMP_EXTRACT%\file_39.tmp" "%INSTALL_DIR%\client\src\components\ui\progress.tsx" >nul 2>&1
echo copy "%TEMP_EXTRACT%\file_40.tmp" "%INSTALL_DIR%\client\src\components\ui\radio-group.tsx" >nul 2>&1
echo copy "%TEMP_EXTRACT%\file_41.tmp" "%INSTALL_DIR%\client\src\components\ui\resizable.tsx" >nul 2>&1
echo copy "%TEMP_EXTRACT%\file_42.tmp" "%INSTALL_DIR%\client\src\components\ui\scroll-area.tsx" >nul 2>&1
echo copy "%TEMP_EXTRACT%\file_43.tmp" "%INSTALL_DIR%\client\src\components\ui\select.tsx" >nul 2>&1
echo copy "%TEMP_EXTRACT%\file_44.tmp" "%INSTALL_DIR%\client\src\components\ui\separator.tsx" >nul 2>&1
echo copy "%TEMP_EXTRACT%\file_45.tmp" "%INSTALL_DIR%\client\src\components\ui\sheet.tsx" >nul 2>&1
echo copy "%TEMP_EXTRACT%\file_46.tmp" "%INSTALL_DIR%\client\src\components\ui\sidebar.tsx" >nul 2>&1
echo copy "%TEMP_EXTRACT%\file_47.tmp" "%INSTALL_DIR%\client\src\components\ui\skeleton.tsx" >nul 2>&1
echo copy "%TEMP_EXTRACT%\file_48.tmp" "%INSTALL_DIR%\client\src\components\ui\slider.tsx" >nul 2>&1
echo copy "%TEMP_EXTRACT%\file_49.tmp" "%INSTALL_DIR%\client\src\components\ui\switch.tsx" >nul 2>&1
echo copy "%TEMP_EXTRACT%\file_50.tmp" "%INSTALL_DIR%\client\src\components\ui\table.tsx" >nul 2>&1
echo copy "%TEMP_EXTRACT%\file_51.tmp" "%INSTALL_DIR%\client\src\components\ui\tabs.tsx" >nul 2>&1
echo copy "%TEMP_EXTRACT%\file_52.tmp" "%INSTALL_DIR%\client\src\components\ui\textarea.tsx" >nul 2>&1
echo copy "%TEMP_EXTRACT%\file_53.tmp" "%INSTALL_DIR%\client\src\components\ui\toast.tsx" >nul 2>&1
echo copy "%TEMP_EXTRACT%\file_54.tmp" "%INSTALL_DIR%\client\src\components\ui\toaster.tsx" >nul 2>&1
echo copy "%TEMP_EXTRACT%\file_55.tmp" "%INSTALL_DIR%\client\src\components\ui\toggle-group.tsx" >nul 2>&1
echo copy "%TEMP_EXTRACT%\file_56.tmp" "%INSTALL_DIR%\client\src\components\ui\toggle.tsx" >nul 2>&1
echo copy "%TEMP_EXTRACT%\file_57.tmp" "%INSTALL_DIR%\client\src\components\ui\tooltip.tsx" >nul 2>&1
echo copy "%TEMP_EXTRACT%\file_58.tmp" "%INSTALL_DIR%\client\src\hooks\use-mobile.tsx" >nul 2>&1
echo copy "%TEMP_EXTRACT%\file_59.tmp" "%INSTALL_DIR%\client\src\hooks\use-toast.ts" >nul 2>&1
echo copy "%TEMP_EXTRACT%\file_60.tmp" "%INSTALL_DIR%\client\src\hooks\useAuth.ts" >nul 2>&1
echo copy "%TEMP_EXTRACT%\file_61.tmp" "%INSTALL_DIR%\client\src\index.css" >nul 2>&1
echo copy "%TEMP_EXTRACT%\file_62.tmp" "%INSTALL_DIR%\client\src\lib\authUtils.ts" >nul 2>&1
echo copy "%TEMP_EXTRACT%\file_63.tmp" "%INSTALL_DIR%\client\src\lib\queryClient.ts" >nul 2>&1
echo copy "%TEMP_EXTRACT%\file_64.tmp" "%INSTALL_DIR%\client\src\lib\utils.ts" >nul 2>&1
echo copy "%TEMP_EXTRACT%\file_65.tmp" "%INSTALL_DIR%\client\src\main.tsx" >nul 2>&1
echo copy "%TEMP_EXTRACT%\file_66.tmp" "%INSTALL_DIR%\client\src\pages\all-processes.tsx" >nul 2>&1
echo copy "%TEMP_EXTRACT%\file_67.tmp" "%INSTALL_DIR%\client\src\pages\balanced-scorecard.tsx" >nul 2>&1
echo copy "%TEMP_EXTRACT%\file_68.tmp" "%INSTALL_DIR%\client\src\pages\dashboard.tsx" >nul 2>&1
echo copy "%TEMP_EXTRACT%\file_69.tmp" "%INSTALL_DIR%\client\src\pages\element-detail.tsx" >nul 2>&1
echo copy "%TEMP_EXTRACT%\file_70.tmp" "%INSTALL_DIR%\client\src\pages\element-editor.tsx" >nul 2>&1
echo copy "%TEMP_EXTRACT%\file_71.tmp" "%INSTALL_DIR%\client\src\pages\landing.tsx" >nul 2>&1
echo copy "%TEMP_EXTRACT%\file_72.tmp" "%INSTALL_DIR%\client\src\pages\mind-map.tsx" >nul 2>&1
echo copy "%TEMP_EXTRACT%\file_73.tmp" "%INSTALL_DIR%\client\src\pages\not-found.tsx" >nul 2>&1
echo copy "%TEMP_EXTRACT%\file_74.tmp" "%INSTALL_DIR%\client\src\pages\process-detail.tsx" >nul 2>&1
echo copy "%TEMP_EXTRACT%\file_75.tmp" "%INSTALL_DIR%\client\src\pages\process-editor.tsx" >nul 2>&1
echo copy "%TEMP_EXTRACT%\file_76.tmp" "%INSTALL_DIR%\client\src\pages\risk-management.tsx" >nul 2>&1
echo copy "%TEMP_EXTRACT%\file_77.tmp" "%INSTALL_DIR%\dist\index.js" >nul 2>&1
echo copy "%TEMP_EXTRACT%\file_78.tmp" "%INSTALL_DIR%\dist\public\assets\html2canvas.esm-CBrSDip1.js" >nul 2>&1
echo copy "%TEMP_EXTRACT%\file_79.tmp" "%INSTALL_DIR%\dist\public\assets\index-DNdLeLte.css" >nul 2>&1
echo copy "%TEMP_EXTRACT%\file_80.tmp" "%INSTALL_DIR%\dist\public\assets\index-DbIbghhg.js" >nul 2>&1
echo copy "%TEMP_EXTRACT%\file_81.tmp" "%INSTALL_DIR%\dist\public\assets\index.es-CH0iJgpZ.js" >nul 2>&1
echo copy "%TEMP_EXTRACT%\file_82.tmp" "%INSTALL_DIR%\dist\public\assets\jspdf.es.min-C8qLfv9P.js" >nul 2>&1
echo copy "%TEMP_EXTRACT%\file_83.tmp" "%INSTALL_DIR%\dist\public\assets\purify.es-BFmuJLeH.js" >nul 2>&1
echo copy "%TEMP_EXTRACT%\file_84.tmp" "%INSTALL_DIR%\dist\public\index.html" >nul 2>&1
echo copy "%TEMP_EXTRACT%\file_85.tmp" "%INSTALL_DIR%\package-lock.json" >nul 2>&1
echo copy "%TEMP_EXTRACT%\file_86.tmp" "%INSTALL_DIR%\package.json" >nul 2>&1
echo copy "%TEMP_EXTRACT%\file_87.tmp" "%INSTALL_DIR%\server\db-local.ts" >nul 2>&1
echo copy "%TEMP_EXTRACT%\file_88.tmp" "%INSTALL_DIR%\server\db.ts" >nul 2>&1
echo copy "%TEMP_EXTRACT%\file_89.tmp" "%INSTALL_DIR%\server\index.ts" >nul 2>&1
echo copy "%TEMP_EXTRACT%\file_90.tmp" "%INSTALL_DIR%\server\replitAuth.ts" >nul 2>&1
echo copy "%TEMP_EXTRACT%\file_91.tmp" "%INSTALL_DIR%\server\routes.ts" >nul 2>&1
echo copy "%TEMP_EXTRACT%\file_92.tmp" "%INSTALL_DIR%\server\storage.ts" >nul 2>&1
echo copy "%TEMP_EXTRACT%\file_93.tmp" "%INSTALL_DIR%\server\vite.ts" >nul 2>&1
echo copy "%TEMP_EXTRACT%\file_94.tmp" "%INSTALL_DIR%\shared\schema.ts" >nul 2>&1
echo copy "%TEMP_EXTRACT%\file_95.tmp" "%INSTALL_DIR%\tsconfig.json" >nul 2>&1
echo copy "%TEMP_EXTRACT%\file_96.tmp" "%INSTALL_DIR%\vite.config.ts" >nul 2>&1
echo          ✅ Application files deployed

echo [5/10] Creating application launcher...
(
echo @echo off
echo title WSM Operational Excellence Manager v%APP_VERSION%
echo mode con: cols=100 lines=25
echo color 0B
echo.
echo set "USER_DATA=%%USERPROFILE%%\.wsm-oe-manager"
echo set "PORT=5000"
echo set "APP_DIR=%%~dp0"
echo set "NODE_ENV=production"
echo.
echo if not exist "%%USER_DATA%%" mkdir "%%USER_DATA%%"
echo.
echo echo.
echo echo ╔══════════════════════════════════════════════════════════════════════════════╗
echo echo ║           WSM OPERATIONAL EXCELLENCE MANAGER v%APP_VERSION%                     ║
echo echo ║           Mega Installation - Complete Desktop Application                   ║
echo echo ╚══════════════════════════════════════════════════════════════════════════════╝
echo echo.
echo echo 🌐 Web Interface: http://localhost:%%PORT%%
echo echo 📁 Data Location: %%USER_DATA%%
echo echo 📦 Installation: Mega single-file deployment
echo echo.
echo echo Starting application server...
echo.
echo cd /d "%%APP_DIR%%"
echo.
echo node --version ^>nul 2^>^&1
echo if %%errorLevel%% equ 0 ^(
echo     echo ✅ Node.js detected - starting mega application...
echo     start http://localhost:%%PORT%%
echo     if exist "dist\index.js" ^(
echo         node dist\index.js
echo     ^) else ^(
echo         npm install ^&^& npm run build ^&^& npm run dev
echo     ^)
echo ^) else ^(
echo     echo.
echo     echo ❌ NODE.JS REQUIRED
echo     echo    Visit: https://nodejs.org/en/download/
echo     echo    Download and install the LTS version
echo     echo    Then restart this application
echo     pause
echo ^)
) > "%INSTALL_DIR%\wsm-oe-manager.bat"
echo          ✅ Application launcher created

echo [6/10] Creating Windows shortcuts...
powershell -Command "
    try {
        $$WshShell = New-Object -comObject WScript.Shell;
        $$Shortcut = $$WshShell.CreateShortcut('%USERPROFILE%\Desktop\WSM OE Manager.lnk');
        $$Shortcut.TargetPath = '%INSTALL_DIR%\wsm-oe-manager.bat';
        $$Shortcut.WorkingDirectory = '%INSTALL_DIR%';
        $$Shortcut.Description = 'WSM OE Manager - Mega Installation v%APP_VERSION%';
        $$Shortcut.IconLocation = 'shell32.dll,21';
        $$Shortcut.Save();
        
        $$StartMenu = '%ProgramData%\Microsoft\Windows\Start Menu\Programs\WSM OE Manager';
        if (!(Test-Path $$StartMenu)) { New-Item -ItemType Directory -Path $$StartMenu -Force; }
        $$StartShortcut = $$WshShell.CreateShortcut($$StartMenu + '\WSM OE Manager.lnk');
        $$StartShortcut.TargetPath = '%INSTALL_DIR%\wsm-oe-manager.bat';
        $$StartShortcut.WorkingDirectory = '%INSTALL_DIR%';
        $$StartShortcut.Description = 'WSM Operational Excellence Manager - Mega Installation';
        $$StartShortcut.IconLocation = 'shell32.dll,21';
        $$StartShortcut.Save();
        exit 0;
    } catch {
        exit 1;
    }
" >nul 2>&1
echo          ✅ Windows shortcuts created

echo [7/10] Creating professional uninstaller...
(
echo @echo off
echo title WSM OE Manager - Professional Uninstaller
echo mode con: cols=80 lines=25
echo color 0C
echo.
echo echo ╔══════════════════════════════════════════════════════════════════════════════╗
echo echo ║           WSM OE MANAGER - MEGA INSTALLATION UNINSTALLER                   ║
echo echo ╚══════════════════════════════════════════════════════════════════════════════╝
echo echo.
echo echo This will remove WSM OE Manager ^(mega installation^) from your system.
echo echo User data will be preserved unless requested.
echo echo.
echo set /p confirm="Uninstall WSM OE Manager? (Y/N): "
echo if /I not "%%confirm%%"=="Y" exit /b 0
echo.
echo echo Removing application files...
echo if exist "%INSTALL_DIR%" rd /s /q "%INSTALL_DIR%"
echo echo Removing shortcuts...
echo if exist "%%USERPROFILE%%\Desktop\WSM OE Manager.lnk" del "%%USERPROFILE%%\Desktop\WSM OE Manager.lnk"
echo if exist "%ProgramData%\Microsoft\Windows\Start Menu\Programs\WSM OE Manager" rd /s /q "%ProgramData%\Microsoft\Windows\Start Menu\Programs\WSM OE Manager"
echo echo Removing registry entries...
echo reg delete "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\WSM OE Manager" /f ^>nul 2^>^&1
echo echo.
echo echo ✅ WSM OE Manager removed successfully!
echo echo User data preserved at: %USER_DATA%
echo echo.
echo set /p removeData="Remove user data too? (Y/N): "
echo if /I "%%removeData%%"=="Y" if exist "%USER_DATA%" rd /s /q "%USER_DATA%"
echo echo Thank you for using WSM OE Manager!
echo timeout /t 3 ^>nul
) > "%INSTALL_DIR%\uninstall.bat"
echo          ✅ Professional uninstaller created

echo [8/10] Registering in Windows Programs...
reg add "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\WSM OE Manager" /v "DisplayName" /t REG_SZ /d "WSM OE Manager (Mega Installation)" /f >nul 2>&1
reg add "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\WSM OE Manager" /v "UninstallString" /t REG_SZ /d "\"%INSTALL_DIR%\uninstall.bat\"" /f >nul 2>&1
reg add "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\WSM OE Manager" /v "DisplayVersion" /t REG_SZ /d "%APP_VERSION%" /f >nul 2>&1
reg add "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\WSM OE Manager" /v "Publisher" /t REG_SZ /d "WSM Operational Excellence Team" /f >nul 2>&1
reg add "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\WSM OE Manager" /v "InstallLocation" /t REG_SZ /d "%INSTALL_DIR%" /f >nul 2>&1
reg add "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\WSM OE Manager" /v "EstimatedSize" /t REG_DWORD /d 2556 /f >nul 2>&1
echo          ✅ Windows Programs registration complete

echo [9/10] Creating documentation...
(
echo WSM Operational Excellence Manager v%APP_VERSION%
echo Mega Single-File Installation Complete
echo ========================================
echo.
echo Installation Details:
echo   Type: Mega single-file installer
echo   Files: %TOTAL_FILES% embedded files
echo   Size: 2556KB total application data
echo   Location: %INSTALL_DIR%
echo   User Data: %USER_DATA%
echo.
echo Launch Methods:
echo   Desktop: Double-click "WSM OE Manager" shortcut
echo   Start Menu: Search for "WSM OE Manager"
echo   Direct: "%INSTALL_DIR%\wsm-oe-manager.bat"
echo.
echo Requirements:
echo   Node.js: Required for operation
echo   Download: https://nodejs.org/en/download/ ^(LTS version^)
echo.
echo Professional Features:
echo   ✓ Complete 8-Element OE Framework
echo   ✓ Process Management and Documentation
echo   ✓ Performance Measurement and KPI Tracking
echo   ✓ Local SQLite Database
echo   ✓ Complete Offline Operation
echo   ✓ Professional Windows Integration
echo.
echo Uninstall:
echo   Windows Settings ^> Apps ^> WSM OE Manager
echo   Or run: "%INSTALL_DIR%\uninstall.bat"
echo.
echo Thank you for using WSM OE Manager!
) > "%INSTALL_DIR%\MEGA-INSTALLATION-INFO.txt"
echo          ✅ Documentation created

echo [10/10] Cleaning up temporary files...
if exist "%TEMP_EXTRACT%" rd /s /q "%TEMP_EXTRACT%" >nul 2>&1
echo          ✅ Cleanup complete

:: ==========================================
:: INSTALLATION SUCCESS
:: ==========================================
echo.
echo ╔══════════════════════════════════════════════════════════════════════════════╗
echo ║                                                                              ║
echo ║                      MEGA INSTALLATION SUCCESSFUL!                          ║
echo ║                                                                              ║
echo ╚══════════════════════════════════════════════════════════════════════════════╝
echo.
echo 🎉 WSM Operational Excellence Manager v%APP_VERSION% installed successfully!
echo    Mega single-file installation with %TOTAL_FILES% embedded files
echo.
echo 📍 Installation: %INSTALL_DIR%
echo 📱 Desktop Shortcut: WSM OE Manager  
echo 🔗 Start Menu: Programs ^> WSM OE Manager
echo 📚 Documentation: %INSTALL_DIR%\MEGA-INSTALLATION-INFO.txt
echo.

if "%HAS_NODE%"=="1" (
    set /p launch="🚀 Launch WSM OE Manager now? (Y/N): "
    if /I "!launch!"=="Y" (
        echo.
        echo 🌟 Starting WSM Operational Excellence Manager...
        echo    Mega installation ready for operation!
        start "" "%INSTALL_DIR%\wsm-oe-manager.bat"
        timeout /t 2 >nul
        echo ✅ Application launched successfully!
    )
) else (
    echo.
    echo 📥 NEXT STEP: Install Node.js
    echo    1. Visit: https://nodejs.org/en/download/
    echo    2. Download and install LTS version
    echo    3. Restart computer
    echo    4. Launch WSM OE Manager from desktop shortcut
    echo.
    set /p nodesetup="Open Node.js download page now? (Y/N): "
    if /I "!nodesetup!"=="Y" start https://nodejs.org/en/download/
)

echo.
echo ╔══════════════════════════════════════════════════════════════════════════════╗
echo ║                                                                              ║
echo ║              WSM OPERATIONAL EXCELLENCE MANAGER                             ║
echo ║              Mega Single-File Installation Complete                         ║
echo ║              Your operational excellence journey begins now!                ║
echo ║                                                                              ║
echo ╚══════════════════════════════════════════════════════════════════════════════╝
echo.
echo Press any key to exit mega installer...
pause >nul

endlocal
exit /b 0

:: ==========================================
:: FILE EXTRACTION FUNCTION
:: ==========================================
:EXTRACT_FILE
set "file_num=%1"
set "file_path=%2"

:: Find the file data section
set "start_marker=:FILE_%file_num%_DATA"
set "end_marker=:FILE_%file_num%_END"

:: Extract base64 data and decode using PowerShell
powershell -Command "
    try {
        $$batContent = Get-Content '%~f0' -Raw;
        $$startIndex = $$batContent.IndexOf('%start_marker%') + '%start_marker%'.Length;
        $$endIndex = $$batContent.IndexOf('%end_marker%');
        $$base64Data = $$batContent.Substring($$startIndex, $$endIndex - $$startIndex).Trim();
        $$bytes = [System.Convert]::FromBase64String($$base64Data);
        [System.IO.File]::WriteAllBytes('%TEMP_EXTRACT%\file_%file_num%.tmp', $$bytes);
        exit 0;
    } catch {
        exit 1;
    }
" >nul 2>&1

goto :eof